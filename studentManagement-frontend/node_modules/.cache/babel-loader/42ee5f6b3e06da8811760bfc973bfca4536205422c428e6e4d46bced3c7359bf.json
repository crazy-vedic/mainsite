{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFeed = void 0;\nvar stringify_js_1 = require(\"./stringify.js\");\nvar legacy_js_1 = require(\"./legacy.js\");\n/**\n * Get the feed object from the root of a DOM tree.\n *\n * @category Feeds\n * @param doc - The DOM to to extract the feed from.\n * @returns The feed.\n */\nfunction getFeed(doc) {\n  var feedRoot = getOneElement(isValidFeed, doc);\n  return !feedRoot ? null : feedRoot.name === \"feed\" ? getAtomFeed(feedRoot) : getRssFeed(feedRoot);\n}\nexports.getFeed = getFeed;\n/**\n * Parse an Atom feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getAtomFeed(feedRoot) {\n  var _a;\n  var childs = feedRoot.children;\n  var feed = {\n    type: \"atom\",\n    items: (0, legacy_js_1.getElementsByTagName)(\"entry\", childs).map(function (item) {\n      var _a;\n      var children = item.children;\n      var entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"id\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      var href = (_a = getOneElement(\"link\", children)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n      if (href) {\n        entry.link = href;\n      }\n      var description = fetch(\"summary\", children) || fetch(\"content\", children);\n      if (description) {\n        entry.description = description;\n      }\n      var pubDate = fetch(\"updated\", children);\n      if (pubDate) {\n        entry.pubDate = new Date(pubDate);\n      }\n      return entry;\n    })\n  };\n  addConditionally(feed, \"id\", \"id\", childs);\n  addConditionally(feed, \"title\", \"title\", childs);\n  var href = (_a = getOneElement(\"link\", childs)) === null || _a === void 0 ? void 0 : _a.attribs[\"href\"];\n  if (href) {\n    feed.link = href;\n  }\n  addConditionally(feed, \"description\", \"subtitle\", childs);\n  var updated = fetch(\"updated\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"email\", childs, true);\n  return feed;\n}\n/**\n * Parse a RSS feed.\n *\n * @param feedRoot The root of the feed.\n * @returns The parsed feed.\n */\nfunction getRssFeed(feedRoot) {\n  var _a, _b;\n  var childs = (_b = (_a = getOneElement(\"channel\", feedRoot.children)) === null || _a === void 0 ? void 0 : _a.children) !== null && _b !== void 0 ? _b : [];\n  var feed = {\n    type: feedRoot.name.substr(0, 3),\n    id: \"\",\n    items: (0, legacy_js_1.getElementsByTagName)(\"item\", feedRoot.children).map(function (item) {\n      var children = item.children;\n      var entry = {\n        media: getMediaElements(children)\n      };\n      addConditionally(entry, \"id\", \"guid\", children);\n      addConditionally(entry, \"title\", \"title\", children);\n      addConditionally(entry, \"link\", \"link\", children);\n      addConditionally(entry, \"description\", \"description\", children);\n      var pubDate = fetch(\"pubDate\", children) || fetch(\"dc:date\", children);\n      if (pubDate) entry.pubDate = new Date(pubDate);\n      return entry;\n    })\n  };\n  addConditionally(feed, \"title\", \"title\", childs);\n  addConditionally(feed, \"link\", \"link\", childs);\n  addConditionally(feed, \"description\", \"description\", childs);\n  var updated = fetch(\"lastBuildDate\", childs);\n  if (updated) {\n    feed.updated = new Date(updated);\n  }\n  addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n  return feed;\n}\nvar MEDIA_KEYS_STRING = [\"url\", \"type\", \"lang\"];\nvar MEDIA_KEYS_INT = [\"fileSize\", \"bitrate\", \"framerate\", \"samplingrate\", \"channels\", \"duration\", \"height\", \"width\"];\n/**\n * Get all media elements of a feed item.\n *\n * @param where Nodes to search in.\n * @returns Media elements.\n */\nfunction getMediaElements(where) {\n  return (0, legacy_js_1.getElementsByTagName)(\"media:content\", where).map(function (elem) {\n    var attribs = elem.attribs;\n    var media = {\n      medium: attribs[\"medium\"],\n      isDefault: !!attribs[\"isDefault\"]\n    };\n    for (var _i = 0, MEDIA_KEYS_STRING_1 = MEDIA_KEYS_STRING; _i < MEDIA_KEYS_STRING_1.length; _i++) {\n      var attrib = MEDIA_KEYS_STRING_1[_i];\n      if (attribs[attrib]) {\n        media[attrib] = attribs[attrib];\n      }\n    }\n    for (var _a = 0, MEDIA_KEYS_INT_1 = MEDIA_KEYS_INT; _a < MEDIA_KEYS_INT_1.length; _a++) {\n      var attrib = MEDIA_KEYS_INT_1[_a];\n      if (attribs[attrib]) {\n        media[attrib] = parseInt(attribs[attrib], 10);\n      }\n    }\n    if (attribs[\"expression\"]) {\n      media.expression = attribs[\"expression\"];\n    }\n    return media;\n  });\n}\n/**\n * Get one element by tag name.\n *\n * @param tagName Tag name to look for\n * @param node Node to search in\n * @returns The element or null\n */\nfunction getOneElement(tagName, node) {\n  return (0, legacy_js_1.getElementsByTagName)(tagName, node, true, 1)[0];\n}\n/**\n * Get the text content of an element with a certain tag name.\n *\n * @param tagName Tag name to look for.\n * @param where Node to search in.\n * @param recurse Whether to recurse into child nodes.\n * @returns The text content of the element.\n */\nfunction fetch(tagName, where, recurse) {\n  if (recurse === void 0) {\n    recurse = false;\n  }\n  return (0, stringify_js_1.textContent)((0, legacy_js_1.getElementsByTagName)(tagName, where, recurse, 1)).trim();\n}\n/**\n * Adds a property to an object if it has a value.\n *\n * @param obj Object to be extended\n * @param prop Property name\n * @param tagName Tag name that contains the conditionally added property\n * @param where Element to search for the property\n * @param recurse Whether to recurse into child nodes.\n */\nfunction addConditionally(obj, prop, tagName, where, recurse) {\n  if (recurse === void 0) {\n    recurse = false;\n  }\n  var val = fetch(tagName, where, recurse);\n  if (val) obj[prop] = val;\n}\n/**\n * Checks if an element is a feed root node.\n *\n * @param value The name of the element to check.\n * @returns Whether an element is a feed root node.\n */\nfunction isValidFeed(value) {\n  return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n}","map":{"version":3,"names":["stringify_js_1","require","legacy_js_1","getFeed","doc","feedRoot","getOneElement","isValidFeed","name","getAtomFeed","getRssFeed","exports","childs","children","feed","type","items","getElementsByTagName","map","item","entry","media","getMediaElements","addConditionally","href","_a","attribs","link","description","fetch","pubDate","Date","updated","_b","substr","id","MEDIA_KEYS_STRING","MEDIA_KEYS_INT","where","elem","medium","isDefault","_i","MEDIA_KEYS_STRING_1","length","attrib","MEDIA_KEYS_INT_1","parseInt","expression","tagName","node","recurse","textContent","trim","obj","prop","val","value"],"sources":["https://raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/feeds.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
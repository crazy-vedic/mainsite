{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = void 0;\nconst index_js_1 = require(\"../tokenizer/index.js\");\nconst open_element_stack_js_1 = require(\"./open-element-stack.js\");\nconst formatting_element_list_js_1 = require(\"./formatting-element-list.js\");\nconst default_js_1 = require(\"../tree-adapters/default.js\");\nconst doctype = require(\"../common/doctype.js\");\nconst foreignContent = require(\"../common/foreign-content.js\");\nconst error_codes_js_1 = require(\"../common/error-codes.js\");\nconst unicode = require(\"../common/unicode.js\");\nconst html_js_1 = require(\"../common/html.js\");\nconst token_js_1 = require(\"../common/token.js\");\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n  InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n  InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n  InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n  InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n  InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n  InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n  InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n  InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n  InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n  InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n  InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n  InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n  InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n  InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n  InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n  InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n  InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n  InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n  InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n  startLine: -1,\n  startCol: -1,\n  startOffset: -1,\n  endLine: -1,\n  endCol: -1,\n  endOffset: -1\n};\nconst TABLE_STRUCTURE_TAGS = new Set([html_js_1.TAG_ID.TABLE, html_js_1.TAG_ID.TBODY, html_js_1.TAG_ID.TFOOT, html_js_1.TAG_ID.THEAD, html_js_1.TAG_ID.TR]);\nconst defaultParserOptions = {\n  scriptingEnabled: true,\n  sourceCodeLocationInfo: false,\n  treeAdapter: default_js_1.defaultTreeAdapter,\n  onParseError: null\n};\n//Parser\nclass Parser {\n  constructor(options, document) {\n    let fragmentContext = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let scriptHandler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    this.fragmentContext = fragmentContext;\n    this.scriptHandler = scriptHandler;\n    this.currentToken = null;\n    this.stopped = false;\n    this.insertionMode = InsertionMode.INITIAL;\n    this.originalInsertionMode = InsertionMode.INITIAL;\n    this.headElement = null;\n    this.formElement = null;\n    /** Indicates that the current node is not an element in the HTML namespace */\n    this.currentNotInHTML = false;\n    /**\n     * The template insertion mode stack is maintained from the left.\n     * Ie. the topmost element will always have index 0.\n     */\n    this.tmplInsertionModeStack = [];\n    this.pendingCharacterTokens = [];\n    this.hasNonWhitespacePendingCharacterToken = false;\n    this.framesetOk = true;\n    this.skipNextNewLine = false;\n    this.fosterParentingEnabled = false;\n    this.options = Object.assign(Object.assign({}, defaultParserOptions), options);\n    this.treeAdapter = this.options.treeAdapter;\n    this.onParseError = this.options.onParseError;\n    // Always enable location info if we report parse errors.\n    if (this.onParseError) {\n      this.options.sourceCodeLocationInfo = true;\n    }\n    this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n    this.tokenizer = new index_js_1.Tokenizer(this.options, this);\n    this.activeFormattingElements = new formatting_element_list_js_1.FormattingElementList(this.treeAdapter);\n    this.fragmentContextID = fragmentContext ? (0, html_js_1.getTagID)(this.treeAdapter.getTagName(fragmentContext)) : html_js_1.TAG_ID.UNKNOWN;\n    this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n    this.openElements = new open_element_stack_js_1.OpenElementStack(this.document, this.treeAdapter, this);\n  }\n  // API\n  static parse(html, options) {\n    const parser = new this(options);\n    parser.tokenizer.write(html, true);\n    return parser.document;\n  }\n  static getFragmentParser(fragmentContext, options) {\n    const opts = Object.assign(Object.assign({}, defaultParserOptions), options);\n    //NOTE: use a <template> element as the fragment context if no context element was provided,\n    //so we will parse in a \"forgiving\" manner\n    fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(html_js_1.TAG_NAMES.TEMPLATE, html_js_1.NS.HTML, []);\n    //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n    //This is important for jsdom, where a new `document` cannot be created. This led to\n    //fragment parsing messing with the main `document`.\n    const documentMock = opts.treeAdapter.createElement('documentmock', html_js_1.NS.HTML, []);\n    const parser = new this(opts, documentMock, fragmentContext);\n    if (parser.fragmentContextID === html_js_1.TAG_ID.TEMPLATE) {\n      parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n    }\n    parser._initTokenizerForFragmentParsing();\n    parser._insertFakeRootElement();\n    parser._resetInsertionMode();\n    parser._findFormInFragmentContext();\n    return parser;\n  }\n  getFragment() {\n    const rootElement = this.treeAdapter.getFirstChild(this.document);\n    const fragment = this.treeAdapter.createDocumentFragment();\n    this._adoptNodes(rootElement, fragment);\n    return fragment;\n  }\n  //Errors\n  _err(token, code, beforeToken) {\n    var _a;\n    if (!this.onParseError) return;\n    const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n    const err = {\n      code,\n      startLine: loc.startLine,\n      startCol: loc.startCol,\n      startOffset: loc.startOffset,\n      endLine: beforeToken ? loc.startLine : loc.endLine,\n      endCol: beforeToken ? loc.startCol : loc.endCol,\n      endOffset: beforeToken ? loc.startOffset : loc.endOffset\n    };\n    this.onParseError(err);\n  }\n  //Stack events\n  onItemPush(node, tid, isTop) {\n    var _a, _b;\n    (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n    if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n  }\n  onItemPop(node, isTop) {\n    var _a, _b;\n    if (this.options.sourceCodeLocationInfo) {\n      this._setEndLocation(node, this.currentToken);\n    }\n    (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n    if (isTop) {\n      let current;\n      let currentTagId;\n      if (this.openElements.stackTop === 0 && this.fragmentContext) {\n        current = this.fragmentContext;\n        currentTagId = this.fragmentContextID;\n      } else {\n        ({\n          current,\n          currentTagId\n        } = this.openElements);\n      }\n      this._setContextModes(current, currentTagId);\n    }\n  }\n  _setContextModes(current, tid) {\n    const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === html_js_1.NS.HTML;\n    this.currentNotInHTML = !isHTML;\n    this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n  }\n  _switchToTextParsing(currentToken, nextTokenizerState) {\n    this._insertElement(currentToken, html_js_1.NS.HTML);\n    this.tokenizer.state = nextTokenizerState;\n    this.originalInsertionMode = this.insertionMode;\n    this.insertionMode = InsertionMode.TEXT;\n  }\n  switchToPlaintextParsing() {\n    this.insertionMode = InsertionMode.TEXT;\n    this.originalInsertionMode = InsertionMode.IN_BODY;\n    this.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT;\n  }\n  //Fragment parsing\n  _getAdjustedCurrentElement() {\n    return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n  }\n  _findFormInFragmentContext() {\n    let node = this.fragmentContext;\n    while (node) {\n      if (this.treeAdapter.getTagName(node) === html_js_1.TAG_NAMES.FORM) {\n        this.formElement = node;\n        break;\n      }\n      node = this.treeAdapter.getParentNode(node);\n    }\n  }\n  _initTokenizerForFragmentParsing() {\n    if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== html_js_1.NS.HTML) {\n      return;\n    }\n    switch (this.fragmentContextID) {\n      case html_js_1.TAG_ID.TITLE:\n      case html_js_1.TAG_ID.TEXTAREA:\n        {\n          this.tokenizer.state = index_js_1.TokenizerMode.RCDATA;\n          break;\n        }\n      case html_js_1.TAG_ID.STYLE:\n      case html_js_1.TAG_ID.XMP:\n      case html_js_1.TAG_ID.IFRAME:\n      case html_js_1.TAG_ID.NOEMBED:\n      case html_js_1.TAG_ID.NOFRAMES:\n      case html_js_1.TAG_ID.NOSCRIPT:\n        {\n          this.tokenizer.state = index_js_1.TokenizerMode.RAWTEXT;\n          break;\n        }\n      case html_js_1.TAG_ID.SCRIPT:\n        {\n          this.tokenizer.state = index_js_1.TokenizerMode.SCRIPT_DATA;\n          break;\n        }\n      case html_js_1.TAG_ID.PLAINTEXT:\n        {\n          this.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT;\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n  //Tree mutation\n  _setDocumentType(token) {\n    const name = token.name || '';\n    const publicId = token.publicId || '';\n    const systemId = token.systemId || '';\n    this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n    if (token.location) {\n      const documentChildren = this.treeAdapter.getChildNodes(this.document);\n      const docTypeNode = documentChildren.find(node => this.treeAdapter.isDocumentTypeNode(node));\n      if (docTypeNode) {\n        this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n      }\n    }\n  }\n  _attachElementToTree(element, location) {\n    if (this.options.sourceCodeLocationInfo) {\n      const loc = location && Object.assign(Object.assign({}, location), {\n        startTag: location\n      });\n      this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n    }\n    if (this._shouldFosterParentOnInsertion()) {\n      this._fosterParentElement(element);\n    } else {\n      const parent = this.openElements.currentTmplContentOrNode;\n      this.treeAdapter.appendChild(parent, element);\n    }\n  }\n  _appendElement(token, namespaceURI) {\n    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n    this._attachElementToTree(element, token.location);\n  }\n  _insertElement(token, namespaceURI) {\n    const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n    this._attachElementToTree(element, token.location);\n    this.openElements.push(element, token.tagID);\n  }\n  _insertFakeElement(tagName, tagID) {\n    const element = this.treeAdapter.createElement(tagName, html_js_1.NS.HTML, []);\n    this._attachElementToTree(element, null);\n    this.openElements.push(element, tagID);\n  }\n  _insertTemplate(token) {\n    const tmpl = this.treeAdapter.createElement(token.tagName, html_js_1.NS.HTML, token.attrs);\n    const content = this.treeAdapter.createDocumentFragment();\n    this.treeAdapter.setTemplateContent(tmpl, content);\n    this._attachElementToTree(tmpl, token.location);\n    this.openElements.push(tmpl, token.tagID);\n    if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n  }\n  _insertFakeRootElement() {\n    const element = this.treeAdapter.createElement(html_js_1.TAG_NAMES.HTML, html_js_1.NS.HTML, []);\n    if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n    this.treeAdapter.appendChild(this.openElements.current, element);\n    this.openElements.push(element, html_js_1.TAG_ID.HTML);\n  }\n  _appendCommentNode(token, parent) {\n    const commentNode = this.treeAdapter.createCommentNode(token.data);\n    this.treeAdapter.appendChild(parent, commentNode);\n    if (this.options.sourceCodeLocationInfo) {\n      this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n    }\n  }\n  _insertCharacters(token) {\n    let parent;\n    let beforeElement;\n    if (this._shouldFosterParentOnInsertion()) {\n      ({\n        parent,\n        beforeElement\n      } = this._findFosterParentingLocation());\n      if (beforeElement) {\n        this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n      } else {\n        this.treeAdapter.insertText(parent, token.chars);\n      }\n    } else {\n      parent = this.openElements.currentTmplContentOrNode;\n      this.treeAdapter.insertText(parent, token.chars);\n    }\n    if (!token.location) return;\n    const siblings = this.treeAdapter.getChildNodes(parent);\n    const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n    const textNode = siblings[textNodeIdx - 1];\n    //NOTE: if we have a location assigned by another token, then just update the end position\n    const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n    if (tnLoc) {\n      const {\n        endLine,\n        endCol,\n        endOffset\n      } = token.location;\n      this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n        endLine,\n        endCol,\n        endOffset\n      });\n    } else if (this.options.sourceCodeLocationInfo) {\n      this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n    }\n  }\n  _adoptNodes(donor, recipient) {\n    for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n      this.treeAdapter.detachNode(child);\n      this.treeAdapter.appendChild(recipient, child);\n    }\n  }\n  _setEndLocation(element, closingToken) {\n    if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n      const ctLoc = closingToken.location;\n      const tn = this.treeAdapter.getTagName(element);\n      const endLoc =\n      // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n      // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n      closingToken.type === token_js_1.TokenType.END_TAG && tn === closingToken.tagName ? {\n        endTag: Object.assign({}, ctLoc),\n        endLine: ctLoc.endLine,\n        endCol: ctLoc.endCol,\n        endOffset: ctLoc.endOffset\n      } : {\n        endLine: ctLoc.startLine,\n        endCol: ctLoc.startCol,\n        endOffset: ctLoc.startOffset\n      };\n      this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n    }\n  }\n  //Token processing\n  shouldProcessStartTagTokenInForeignContent(token) {\n    // Check that neither current === document, or ns === NS.HTML\n    if (!this.currentNotInHTML) return false;\n    let current;\n    let currentTagId;\n    if (this.openElements.stackTop === 0 && this.fragmentContext) {\n      current = this.fragmentContext;\n      currentTagId = this.fragmentContextID;\n    } else {\n      ({\n        current,\n        currentTagId\n      } = this.openElements);\n    }\n    if (token.tagID === html_js_1.TAG_ID.SVG && this.treeAdapter.getTagName(current) === html_js_1.TAG_NAMES.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === html_js_1.NS.MATHML) {\n      return false;\n    }\n    return (\n      // Check that `current` is not an integration point for HTML or MathML elements.\n      this.tokenizer.inForeignNode ||\n      // If it _is_ an integration point, then we might have to check that it is not an HTML\n      // integration point.\n      (token.tagID === html_js_1.TAG_ID.MGLYPH || token.tagID === html_js_1.TAG_ID.MALIGNMARK) && !this._isIntegrationPoint(currentTagId, current, html_js_1.NS.HTML)\n    );\n  }\n  _processToken(token) {\n    switch (token.type) {\n      case token_js_1.TokenType.CHARACTER:\n        {\n          this.onCharacter(token);\n          break;\n        }\n      case token_js_1.TokenType.NULL_CHARACTER:\n        {\n          this.onNullCharacter(token);\n          break;\n        }\n      case token_js_1.TokenType.COMMENT:\n        {\n          this.onComment(token);\n          break;\n        }\n      case token_js_1.TokenType.DOCTYPE:\n        {\n          this.onDoctype(token);\n          break;\n        }\n      case token_js_1.TokenType.START_TAG:\n        {\n          this._processStartTag(token);\n          break;\n        }\n      case token_js_1.TokenType.END_TAG:\n        {\n          this.onEndTag(token);\n          break;\n        }\n      case token_js_1.TokenType.EOF:\n        {\n          this.onEof(token);\n          break;\n        }\n      case token_js_1.TokenType.WHITESPACE_CHARACTER:\n        {\n          this.onWhitespaceCharacter(token);\n          break;\n        }\n    }\n  }\n  //Integration points\n  _isIntegrationPoint(tid, element, foreignNS) {\n    const ns = this.treeAdapter.getNamespaceURI(element);\n    const attrs = this.treeAdapter.getAttrList(element);\n    return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n  }\n  //Active formatting elements reconstruction\n  _reconstructActiveFormattingElements() {\n    const listLength = this.activeFormattingElements.entries.length;\n    if (listLength) {\n      const endIndex = this.activeFormattingElements.entries.findIndex(entry => entry.type === formatting_element_list_js_1.EntryType.Marker || this.openElements.contains(entry.element));\n      const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n      for (let i = unopenIdx; i >= 0; i--) {\n        const entry = this.activeFormattingElements.entries[i];\n        this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n        entry.element = this.openElements.current;\n      }\n    }\n  }\n  //Close elements\n  _closeTableCell() {\n    this.openElements.generateImpliedEndTags();\n    this.openElements.popUntilTableCellPopped();\n    this.activeFormattingElements.clearToLastMarker();\n    this.insertionMode = InsertionMode.IN_ROW;\n  }\n  _closePElement() {\n    this.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.P);\n    this.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.P);\n  }\n  //Insertion modes\n  _resetInsertionMode() {\n    for (let i = this.openElements.stackTop; i >= 0; i--) {\n      //Insertion mode reset map\n      switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n        case html_js_1.TAG_ID.TR:\n          {\n            this.insertionMode = InsertionMode.IN_ROW;\n            return;\n          }\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.THEAD:\n        case html_js_1.TAG_ID.TFOOT:\n          {\n            this.insertionMode = InsertionMode.IN_TABLE_BODY;\n            return;\n          }\n        case html_js_1.TAG_ID.CAPTION:\n          {\n            this.insertionMode = InsertionMode.IN_CAPTION;\n            return;\n          }\n        case html_js_1.TAG_ID.COLGROUP:\n          {\n            this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            return;\n          }\n        case html_js_1.TAG_ID.TABLE:\n          {\n            this.insertionMode = InsertionMode.IN_TABLE;\n            return;\n          }\n        case html_js_1.TAG_ID.BODY:\n          {\n            this.insertionMode = InsertionMode.IN_BODY;\n            return;\n          }\n        case html_js_1.TAG_ID.FRAMESET:\n          {\n            this.insertionMode = InsertionMode.IN_FRAMESET;\n            return;\n          }\n        case html_js_1.TAG_ID.SELECT:\n          {\n            this._resetInsertionModeForSelect(i);\n            return;\n          }\n        case html_js_1.TAG_ID.TEMPLATE:\n          {\n            this.insertionMode = this.tmplInsertionModeStack[0];\n            return;\n          }\n        case html_js_1.TAG_ID.HTML:\n          {\n            this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n            return;\n          }\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TH:\n          {\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_CELL;\n              return;\n            }\n            break;\n          }\n        case html_js_1.TAG_ID.HEAD:\n          {\n            if (i > 0) {\n              this.insertionMode = InsertionMode.IN_HEAD;\n              return;\n            }\n            break;\n          }\n      }\n    }\n    this.insertionMode = InsertionMode.IN_BODY;\n  }\n  _resetInsertionModeForSelect(selectIdx) {\n    if (selectIdx > 0) {\n      for (let i = selectIdx - 1; i > 0; i--) {\n        const tn = this.openElements.tagIDs[i];\n        if (tn === html_js_1.TAG_ID.TEMPLATE) {\n          break;\n        } else if (tn === html_js_1.TAG_ID.TABLE) {\n          this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n          return;\n        }\n      }\n    }\n    this.insertionMode = InsertionMode.IN_SELECT;\n  }\n  //Foster parenting\n  _isElementCausesFosterParenting(tn) {\n    return TABLE_STRUCTURE_TAGS.has(tn);\n  }\n  _shouldFosterParentOnInsertion() {\n    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n  }\n  _findFosterParentingLocation() {\n    for (let i = this.openElements.stackTop; i >= 0; i--) {\n      const openElement = this.openElements.items[i];\n      switch (this.openElements.tagIDs[i]) {\n        case html_js_1.TAG_ID.TEMPLATE:\n          {\n            if (this.treeAdapter.getNamespaceURI(openElement) === html_js_1.NS.HTML) {\n              return {\n                parent: this.treeAdapter.getTemplateContent(openElement),\n                beforeElement: null\n              };\n            }\n            break;\n          }\n        case html_js_1.TAG_ID.TABLE:\n          {\n            const parent = this.treeAdapter.getParentNode(openElement);\n            if (parent) {\n              return {\n                parent,\n                beforeElement: openElement\n              };\n            }\n            return {\n              parent: this.openElements.items[i - 1],\n              beforeElement: null\n            };\n          }\n        default:\n        // Do nothing\n      }\n    }\n\n    return {\n      parent: this.openElements.items[0],\n      beforeElement: null\n    };\n  }\n  _fosterParentElement(element) {\n    const location = this._findFosterParentingLocation();\n    if (location.beforeElement) {\n      this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n    } else {\n      this.treeAdapter.appendChild(location.parent, element);\n    }\n  }\n  //Special elements\n  _isSpecialElement(element, id) {\n    const ns = this.treeAdapter.getNamespaceURI(element);\n    return html_js_1.SPECIAL_ELEMENTS[ns].has(id);\n  }\n  onCharacter(token) {\n    this.skipNextNewLine = false;\n    if (this.tokenizer.inForeignNode) {\n      characterInForeignContent(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_TEMPLATE:\n        {\n          characterInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          characterInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          tokenInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          tokenAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n\n  onNullCharacter(token) {\n    this.skipNextNewLine = false;\n    if (this.tokenizer.inForeignNode) {\n      nullCharacterInForeignContent(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          tokenInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          tokenAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n\n  onComment(token) {\n    this.skipNextNewLine = false;\n    if (this.currentNotInHTML) {\n      appendComment(this, token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n      case InsertionMode.BEFORE_HTML:\n      case InsertionMode.BEFORE_HEAD:\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n      case InsertionMode.IN_TEMPLATE:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          appendComment(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          appendCommentToRootHtmlElement(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          appendCommentToDocument(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n\n  onDoctype(token) {\n    this.skipNextNewLine = false;\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          doctypeInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n        {\n          this._err(token, error_codes_js_1.ERR.misplacedDoctype);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n\n  onStartTag(token) {\n    this.skipNextNewLine = false;\n    this.currentToken = token;\n    this._processStartTag(token);\n    if (token.selfClosing && !token.ackSelfClosing) {\n      this._err(token, error_codes_js_1.ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n    }\n  }\n  /**\n   * Processes a given start tag.\n   *\n   * `onStartTag` checks if a self-closing tag was recognized. When a token\n   * is moved inbetween multiple insertion modes, this check for self-closing\n   * could lead to false positives. To avoid this, `_processStartTag` is used\n   * for nested calls.\n   *\n   * @param token The token to process.\n   */\n  _processStartTag(token) {\n    if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n      startTagInForeignContent(this, token);\n    } else {\n      this._startTagOutsideForeignContent(token);\n    }\n  }\n  _startTagOutsideForeignContent(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          startTagBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          startTagBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          startTagInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          startTagInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          startTagAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n        {\n          startTagInBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n        {\n          startTagInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_CAPTION:\n        {\n          startTagInCaption(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          startTagInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_BODY:\n        {\n          startTagInTableBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_ROW:\n        {\n          startTagInRow(this, token);\n          break;\n        }\n      case InsertionMode.IN_CELL:\n        {\n          startTagInCell(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT:\n        {\n          startTagInSelect(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          startTagInSelectInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          startTagInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          startTagAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_FRAMESET:\n        {\n          startTagInFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          startTagAfterFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          startTagAfterAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          startTagAfterAfterFrameset(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n\n  onEndTag(token) {\n    this.skipNextNewLine = false;\n    this.currentToken = token;\n    if (this.currentNotInHTML) {\n      endTagInForeignContent(this, token);\n    } else {\n      this._endTagOutsideForeignContent(token);\n    }\n  }\n  _endTagOutsideForeignContent(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          endTagBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          endTagBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          endTagInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          endTagInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          endTagAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n        {\n          endTagInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          endTagInText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n        {\n          endTagInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_CAPTION:\n        {\n          endTagInCaption(this, token);\n          break;\n        }\n      case InsertionMode.IN_COLUMN_GROUP:\n        {\n          endTagInColumnGroup(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_BODY:\n        {\n          endTagInTableBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_ROW:\n        {\n          endTagInRow(this, token);\n          break;\n        }\n      case InsertionMode.IN_CELL:\n        {\n          endTagInCell(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT:\n        {\n          endTagInSelect(this, token);\n          break;\n        }\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          endTagInSelectInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          endTagInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n        {\n          endTagAfterBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_FRAMESET:\n        {\n          endTagInFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          endTagAfterFrameset(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_AFTER_BODY:\n        {\n          tokenAfterAfterBody(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n\n  onEof(token) {\n    switch (this.insertionMode) {\n      case InsertionMode.INITIAL:\n        {\n          tokenInInitialMode(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HTML:\n        {\n          tokenBeforeHtml(this, token);\n          break;\n        }\n      case InsertionMode.BEFORE_HEAD:\n        {\n          tokenBeforeHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD:\n        {\n          tokenInHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n        {\n          tokenInHeadNoScript(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_HEAD:\n        {\n          tokenAfterHead(this, token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n        {\n          eofInBody(this, token);\n          break;\n        }\n      case InsertionMode.TEXT:\n        {\n          eofInText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          tokenInTableText(this, token);\n          break;\n        }\n      case InsertionMode.IN_TEMPLATE:\n        {\n          eofInTemplate(this, token);\n          break;\n        }\n      case InsertionMode.AFTER_BODY:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          stopParsing(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n\n  onWhitespaceCharacter(token) {\n    if (this.skipNextNewLine) {\n      this.skipNextNewLine = false;\n      if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n        if (token.chars.length === 1) {\n          return;\n        }\n        token.chars = token.chars.substr(1);\n      }\n    }\n    if (this.tokenizer.inForeignNode) {\n      this._insertCharacters(token);\n      return;\n    }\n    switch (this.insertionMode) {\n      case InsertionMode.IN_HEAD:\n      case InsertionMode.IN_HEAD_NO_SCRIPT:\n      case InsertionMode.AFTER_HEAD:\n      case InsertionMode.TEXT:\n      case InsertionMode.IN_COLUMN_GROUP:\n      case InsertionMode.IN_SELECT:\n      case InsertionMode.IN_SELECT_IN_TABLE:\n      case InsertionMode.IN_FRAMESET:\n      case InsertionMode.AFTER_FRAMESET:\n        {\n          this._insertCharacters(token);\n          break;\n        }\n      case InsertionMode.IN_BODY:\n      case InsertionMode.IN_CAPTION:\n      case InsertionMode.IN_CELL:\n      case InsertionMode.IN_TEMPLATE:\n      case InsertionMode.AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_BODY:\n      case InsertionMode.AFTER_AFTER_FRAMESET:\n        {\n          whitespaceCharacterInBody(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE:\n      case InsertionMode.IN_TABLE_BODY:\n      case InsertionMode.IN_ROW:\n        {\n          characterInTable(this, token);\n          break;\n        }\n      case InsertionMode.IN_TABLE_TEXT:\n        {\n          whitespaceCharacterInTableText(this, token);\n          break;\n        }\n      default:\n      // Do nothing\n    }\n  }\n}\n\nexports.Parser = Parser;\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n  let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n  if (formattingElementEntry) {\n    if (!p.openElements.contains(formattingElementEntry.element)) {\n      p.activeFormattingElements.removeEntry(formattingElementEntry);\n      formattingElementEntry = null;\n    } else if (!p.openElements.hasInScope(token.tagID)) {\n      formattingElementEntry = null;\n    }\n  } else {\n    genericEndTagInBody(p, token);\n  }\n  return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n  let furthestBlock = null;\n  let idx = p.openElements.stackTop;\n  for (; idx >= 0; idx--) {\n    const element = p.openElements.items[idx];\n    if (element === formattingElementEntry.element) {\n      break;\n    }\n    if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n      furthestBlock = element;\n    }\n  }\n  if (!furthestBlock) {\n    p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n  }\n  return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n  let lastElement = furthestBlock;\n  let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n  for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n    //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n    nextElement = p.openElements.getCommonAncestor(element);\n    const elementEntry = p.activeFormattingElements.getElementEntry(element);\n    const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n    const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n    if (shouldRemoveFromOpenElements) {\n      if (counterOverflow) {\n        p.activeFormattingElements.removeEntry(elementEntry);\n      }\n      p.openElements.remove(element);\n    } else {\n      element = aaRecreateElementFromEntry(p, elementEntry);\n      if (lastElement === furthestBlock) {\n        p.activeFormattingElements.bookmark = elementEntry;\n      }\n      p.treeAdapter.detachNode(lastElement);\n      p.treeAdapter.appendChild(element, lastElement);\n      lastElement = element;\n    }\n  }\n  return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n  const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n  const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n  p.openElements.replace(elementEntry.element, newElement);\n  elementEntry.element = newElement;\n  return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n  const tn = p.treeAdapter.getTagName(commonAncestor);\n  const tid = (0, html_js_1.getTagID)(tn);\n  if (p._isElementCausesFosterParenting(tid)) {\n    p._fosterParentElement(lastElement);\n  } else {\n    const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n    if (tid === html_js_1.TAG_ID.TEMPLATE && ns === html_js_1.NS.HTML) {\n      commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n    }\n    p.treeAdapter.appendChild(commonAncestor, lastElement);\n  }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n  const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n  const {\n    token\n  } = formattingElementEntry;\n  const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n  p._adoptNodes(furthestBlock, newElement);\n  p.treeAdapter.appendChild(furthestBlock, newElement);\n  p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n  p.activeFormattingElements.removeEntry(formattingElementEntry);\n  p.openElements.remove(formattingElementEntry.element);\n  p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n  for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n    const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n    if (!formattingElementEntry) {\n      break;\n    }\n    const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n    if (!furthestBlock) {\n      break;\n    }\n    p.activeFormattingElements.bookmark = formattingElementEntry;\n    const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n    const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n    p.treeAdapter.detachNode(lastElement);\n    if (commonAncestor) aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n    aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n  }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n  p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n  p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n  p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n  p.stopped = true;\n  // NOTE: Set end locations for elements that remain on the open element stack.\n  if (token.location) {\n    // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n    // This is a problem, as we might overwrite their end position here.\n    const target = p.fragmentContext ? 0 : 2;\n    for (let i = p.openElements.stackTop; i >= target; i--) {\n      p._setEndLocation(p.openElements.items[i], token);\n    }\n    // Handle `html` and `body`\n    if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n      const htmlElement = p.openElements.items[0];\n      const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n      if (htmlLocation && !htmlLocation.endTag) {\n        p._setEndLocation(htmlElement, token);\n        if (p.openElements.stackTop >= 1) {\n          const bodyElement = p.openElements.items[1];\n          const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n          if (bodyLocation && !bodyLocation.endTag) {\n            p._setEndLocation(bodyElement, token);\n          }\n        }\n      }\n    }\n  }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n  p._setDocumentType(token);\n  const mode = token.forceQuirks ? html_js_1.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n  if (!doctype.isConforming(token)) {\n    p._err(token, error_codes_js_1.ERR.nonConformingDoctype);\n  }\n  p.treeAdapter.setDocumentMode(p.document, mode);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n  p._err(token, error_codes_js_1.ERR.missingDoctype, true);\n  p.treeAdapter.setDocumentMode(p.document, html_js_1.DOCUMENT_MODE.QUIRKS);\n  p.insertionMode = InsertionMode.BEFORE_HTML;\n  p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n  if (token.tagID === html_js_1.TAG_ID.HTML) {\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n  } else {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction endTagBeforeHtml(p, token) {\n  const tn = token.tagID;\n  if (tn === html_js_1.TAG_ID.HTML || tn === html_js_1.TAG_ID.HEAD || tn === html_js_1.TAG_ID.BODY || tn === html_js_1.TAG_ID.BR) {\n    tokenBeforeHtml(p, token);\n  }\n}\nfunction tokenBeforeHtml(p, token) {\n  p._insertFakeRootElement();\n  p.insertionMode = InsertionMode.BEFORE_HEAD;\n  p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.HEAD:\n      {\n        p._insertElement(token, html_js_1.NS.HTML);\n        p.headElement = p.openElements.current;\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    default:\n      {\n        tokenBeforeHead(p, token);\n      }\n  }\n}\nfunction endTagBeforeHead(p, token) {\n  const tn = token.tagID;\n  if (tn === html_js_1.TAG_ID.HEAD || tn === html_js_1.TAG_ID.BODY || tn === html_js_1.TAG_ID.HTML || tn === html_js_1.TAG_ID.BR) {\n    tokenBeforeHead(p, token);\n  } else {\n    p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenBeforeHead(p, token) {\n  p._insertFakeElement(html_js_1.TAG_NAMES.HEAD, html_js_1.TAG_ID.HEAD);\n  p.headElement = p.openElements.current;\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.BASE:\n    case html_js_1.TAG_ID.BASEFONT:\n    case html_js_1.TAG_ID.BGSOUND:\n    case html_js_1.TAG_ID.LINK:\n    case html_js_1.TAG_ID.META:\n      {\n        p._appendElement(token, html_js_1.NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case html_js_1.TAG_ID.TITLE:\n      {\n        p._switchToTextParsing(token, index_js_1.TokenizerMode.RCDATA);\n        break;\n      }\n    case html_js_1.TAG_ID.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n        } else {\n          p._insertElement(token, html_js_1.NS.HTML);\n          p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.NOFRAMES:\n    case html_js_1.TAG_ID.STYLE:\n      {\n        p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n        break;\n      }\n    case html_js_1.TAG_ID.SCRIPT:\n      {\n        p._switchToTextParsing(token, index_js_1.TokenizerMode.SCRIPT_DATA);\n        break;\n      }\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        p._insertTemplate(token);\n        p.activeFormattingElements.insertMarker();\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_TEMPLATE;\n        p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        break;\n      }\n    case html_js_1.TAG_ID.HEAD:\n      {\n        p._err(token, error_codes_js_1.ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenInHead(p, token);\n      }\n  }\n}\nfunction endTagInHead(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HEAD:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.AFTER_HEAD;\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n    case html_js_1.TAG_ID.BR:\n    case html_js_1.TAG_ID.HTML:\n      {\n        tokenInHead(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction templateEndTagInHead(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.generateImpliedEndTagsThoroughly();\n    if (p.openElements.currentTagId !== html_js_1.TAG_ID.TEMPLATE) {\n      p._err(token, error_codes_js_1.ERR.closingOfElementWithOpenChildElements);\n    }\n    p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n  } else {\n    p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n  }\n}\nfunction tokenInHead(p, token) {\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.AFTER_HEAD;\n  p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.BASEFONT:\n    case html_js_1.TAG_ID.BGSOUND:\n    case html_js_1.TAG_ID.HEAD:\n    case html_js_1.TAG_ID.LINK:\n    case html_js_1.TAG_ID.META:\n    case html_js_1.TAG_ID.NOFRAMES:\n    case html_js_1.TAG_ID.STYLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.NOSCRIPT:\n      {\n        p._err(token, error_codes_js_1.ERR.nestedNoscriptInHead);\n        break;\n      }\n    default:\n      {\n        tokenInHeadNoScript(p, token);\n      }\n  }\n}\nfunction endTagInHeadNoScript(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.NOSCRIPT:\n      {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_HEAD;\n        break;\n      }\n    case html_js_1.TAG_ID.BR:\n      {\n        tokenInHeadNoScript(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenInHeadNoScript(p, token) {\n  const errCode = token.type === token_js_1.TokenType.EOF ? error_codes_js_1.ERR.openElementsLeftAfterEof : error_codes_js_1.ERR.disallowedContentInNoscriptInHead;\n  p._err(token, errCode);\n  p.openElements.pop();\n  p.insertionMode = InsertionMode.IN_HEAD;\n  p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n      {\n        p._insertElement(token, html_js_1.NS.HTML);\n        p.framesetOk = false;\n        p.insertionMode = InsertionMode.IN_BODY;\n        break;\n      }\n    case html_js_1.TAG_ID.FRAMESET:\n      {\n        p._insertElement(token, html_js_1.NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n        break;\n      }\n    case html_js_1.TAG_ID.BASE:\n    case html_js_1.TAG_ID.BASEFONT:\n    case html_js_1.TAG_ID.BGSOUND:\n    case html_js_1.TAG_ID.LINK:\n    case html_js_1.TAG_ID.META:\n    case html_js_1.TAG_ID.NOFRAMES:\n    case html_js_1.TAG_ID.SCRIPT:\n    case html_js_1.TAG_ID.STYLE:\n    case html_js_1.TAG_ID.TEMPLATE:\n    case html_js_1.TAG_ID.TITLE:\n      {\n        p._err(token, error_codes_js_1.ERR.abandonedHeadElementChild);\n        p.openElements.push(p.headElement, html_js_1.TAG_ID.HEAD);\n        startTagInHead(p, token);\n        p.openElements.remove(p.headElement);\n        break;\n      }\n    case html_js_1.TAG_ID.HEAD:\n      {\n        p._err(token, error_codes_js_1.ERR.misplacedStartTagForHeadElement);\n        break;\n      }\n    default:\n      {\n        tokenAfterHead(p, token);\n      }\n  }\n}\nfunction endTagAfterHead(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.BODY:\n    case html_js_1.TAG_ID.HTML:\n    case html_js_1.TAG_ID.BR:\n      {\n        tokenAfterHead(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n      }\n  }\n}\nfunction tokenAfterHead(p, token) {\n  p._insertFakeElement(html_js_1.TAG_NAMES.BODY, html_js_1.TAG_ID.BODY);\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n  switch (token.type) {\n    case token_js_1.TokenType.CHARACTER:\n      {\n        characterInBody(p, token);\n        break;\n      }\n    case token_js_1.TokenType.WHITESPACE_CHARACTER:\n      {\n        whitespaceCharacterInBody(p, token);\n        break;\n      }\n    case token_js_1.TokenType.COMMENT:\n      {\n        appendComment(p, token);\n        break;\n      }\n    case token_js_1.TokenType.START_TAG:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case token_js_1.TokenType.END_TAG:\n      {\n        endTagInBody(p, token);\n        break;\n      }\n    case token_js_1.TokenType.EOF:\n      {\n        eofInBody(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction whitespaceCharacterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n  if (p.openElements.tmplCount === 0) {\n    p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n  }\n}\nfunction bodyStartTagInBody(p, token) {\n  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (bodyElement && p.openElements.tmplCount === 0) {\n    p.framesetOk = false;\n    p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n  }\n}\nfunction framesetStartTagInBody(p, token) {\n  const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n  if (p.framesetOk && bodyElement) {\n    p.treeAdapter.detachNode(bodyElement);\n    p.openElements.popAllUpToHtmlElement();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.insertionMode = InsertionMode.IN_FRAMESET;\n  }\n}\nfunction addressStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._closePElement();\n  }\n  if ((0, html_js_1.isNumberedHeader)(p.openElements.currentTagId)) {\n    p.openElements.pop();\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n  const inTemplate = p.openElements.tmplCount > 0;\n  if (!p.formElement || inTemplate) {\n    if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n      p._closePElement();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n    if (!inTemplate) {\n      p.formElement = p.openElements.current;\n    }\n  }\n}\nfunction listItemStartTagInBody(p, token) {\n  p.framesetOk = false;\n  const tn = token.tagID;\n  for (let i = p.openElements.stackTop; i >= 0; i--) {\n    const elementId = p.openElements.tagIDs[i];\n    if (tn === html_js_1.TAG_ID.LI && elementId === html_js_1.TAG_ID.LI || (tn === html_js_1.TAG_ID.DD || tn === html_js_1.TAG_ID.DT) && (elementId === html_js_1.TAG_ID.DD || elementId === html_js_1.TAG_ID.DT)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n      p.openElements.popUntilTagNamePopped(elementId);\n      break;\n    }\n    if (elementId !== html_js_1.TAG_ID.ADDRESS && elementId !== html_js_1.TAG_ID.DIV && elementId !== html_js_1.TAG_ID.P && p._isSpecialElement(p.openElements.items[i], elementId)) {\n      break;\n    }\n  }\n  if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n  if (p.openElements.hasInScope(html_js_1.TAG_ID.BUTTON)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.BUTTON);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n  const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(html_js_1.TAG_NAMES.A);\n  if (activeElementEntry) {\n    callAdoptionAgency(p, token);\n    p.openElements.remove(activeElementEntry.element);\n    p.activeFormattingElements.removeEntry(activeElementEntry);\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  if (p.openElements.hasInScope(html_js_1.TAG_ID.NOBR)) {\n    callAdoptionAgency(p, token);\n    p._reconstructActiveFormattingElements();\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.activeFormattingElements.insertMarker();\n  p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n  if (p.treeAdapter.getDocumentMode(p.document) !== html_js_1.DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, html_js_1.NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n  const inputType = (0, token_js_1.getTokenAttr)(token, html_js_1.ATTRS.TYPE);\n  return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._appendElement(token, html_js_1.NS.HTML);\n  if (!isHiddenInput(token)) {\n    p.framesetOk = false;\n  }\n  token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n  p._appendElement(token, html_js_1.NS.HTML);\n  token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._appendElement(token, html_js_1.NS.HTML);\n  p.framesetOk = false;\n  token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n  token.tagName = html_js_1.TAG_NAMES.IMG;\n  token.tagID = html_js_1.TAG_ID.IMG;\n  areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n  p._insertElement(token, html_js_1.NS.HTML);\n  //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n  //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n  p.skipNextNewLine = true;\n  p.tokenizer.state = index_js_1.TokenizerMode.RCDATA;\n  p.originalInsertionMode = p.insertionMode;\n  p.framesetOk = false;\n  p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n  if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._closePElement();\n  }\n  p._reconstructActiveFormattingElements();\n  p.framesetOk = false;\n  p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n  p.framesetOk = false;\n  p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n  p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.framesetOk = false;\n  p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n  if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTION) {\n    p.openElements.pop();\n  }\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n  if (p.openElements.hasInScope(html_js_1.TAG_ID.RUBY)) {\n    p.openElements.generateImpliedEndTags();\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n  if (p.openElements.hasInScope(html_js_1.TAG_ID.RUBY)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.RTC);\n  }\n  p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenMathMLAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, html_js_1.NS.MATHML);\n  } else {\n    p._insertElement(token, html_js_1.NS.MATHML);\n  }\n  token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  foreignContent.adjustTokenSVGAttrs(token);\n  foreignContent.adjustTokenXMLAttrs(token);\n  if (token.selfClosing) {\n    p._appendElement(token, html_js_1.NS.SVG);\n  } else {\n    p._insertElement(token, html_js_1.NS.SVG);\n  }\n  token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n  p._reconstructActiveFormattingElements();\n  p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction startTagInBody(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.I:\n    case html_js_1.TAG_ID.S:\n    case html_js_1.TAG_ID.B:\n    case html_js_1.TAG_ID.U:\n    case html_js_1.TAG_ID.EM:\n    case html_js_1.TAG_ID.TT:\n    case html_js_1.TAG_ID.BIG:\n    case html_js_1.TAG_ID.CODE:\n    case html_js_1.TAG_ID.FONT:\n    case html_js_1.TAG_ID.SMALL:\n    case html_js_1.TAG_ID.STRIKE:\n    case html_js_1.TAG_ID.STRONG:\n      {\n        bStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.A:\n      {\n        aStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.H1:\n    case html_js_1.TAG_ID.H2:\n    case html_js_1.TAG_ID.H3:\n    case html_js_1.TAG_ID.H4:\n    case html_js_1.TAG_ID.H5:\n    case html_js_1.TAG_ID.H6:\n      {\n        numberedHeaderStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.P:\n    case html_js_1.TAG_ID.DL:\n    case html_js_1.TAG_ID.OL:\n    case html_js_1.TAG_ID.UL:\n    case html_js_1.TAG_ID.DIV:\n    case html_js_1.TAG_ID.DIR:\n    case html_js_1.TAG_ID.NAV:\n    case html_js_1.TAG_ID.MAIN:\n    case html_js_1.TAG_ID.MENU:\n    case html_js_1.TAG_ID.ASIDE:\n    case html_js_1.TAG_ID.CENTER:\n    case html_js_1.TAG_ID.FIGURE:\n    case html_js_1.TAG_ID.FOOTER:\n    case html_js_1.TAG_ID.HEADER:\n    case html_js_1.TAG_ID.HGROUP:\n    case html_js_1.TAG_ID.DIALOG:\n    case html_js_1.TAG_ID.DETAILS:\n    case html_js_1.TAG_ID.ADDRESS:\n    case html_js_1.TAG_ID.ARTICLE:\n    case html_js_1.TAG_ID.SECTION:\n    case html_js_1.TAG_ID.SUMMARY:\n    case html_js_1.TAG_ID.FIELDSET:\n    case html_js_1.TAG_ID.BLOCKQUOTE:\n    case html_js_1.TAG_ID.FIGCAPTION:\n      {\n        addressStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.LI:\n    case html_js_1.TAG_ID.DD:\n    case html_js_1.TAG_ID.DT:\n      {\n        listItemStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.BR:\n    case html_js_1.TAG_ID.IMG:\n    case html_js_1.TAG_ID.WBR:\n    case html_js_1.TAG_ID.AREA:\n    case html_js_1.TAG_ID.EMBED:\n    case html_js_1.TAG_ID.KEYGEN:\n      {\n        areaStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.HR:\n      {\n        hrStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.RB:\n    case html_js_1.TAG_ID.RTC:\n      {\n        rbStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.RT:\n    case html_js_1.TAG_ID.RP:\n      {\n        rtStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.PRE:\n    case html_js_1.TAG_ID.LISTING:\n      {\n        preStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.XMP:\n      {\n        xmpStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.SVG:\n      {\n        svgStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.HTML:\n      {\n        htmlStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.BASE:\n    case html_js_1.TAG_ID.LINK:\n    case html_js_1.TAG_ID.META:\n    case html_js_1.TAG_ID.STYLE:\n    case html_js_1.TAG_ID.TITLE:\n    case html_js_1.TAG_ID.SCRIPT:\n    case html_js_1.TAG_ID.BGSOUND:\n    case html_js_1.TAG_ID.BASEFONT:\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n      {\n        bodyStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.FORM:\n      {\n        formStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.NOBR:\n      {\n        nobrStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.MATH:\n      {\n        mathStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TABLE:\n      {\n        tableStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.INPUT:\n      {\n        inputStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.PARAM:\n    case html_js_1.TAG_ID.TRACK:\n    case html_js_1.TAG_ID.SOURCE:\n      {\n        paramStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.IMAGE:\n      {\n        imageStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.BUTTON:\n      {\n        buttonStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.APPLET:\n    case html_js_1.TAG_ID.OBJECT:\n    case html_js_1.TAG_ID.MARQUEE:\n      {\n        appletStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.IFRAME:\n      {\n        iframeStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.SELECT:\n      {\n        selectStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.OPTION:\n    case html_js_1.TAG_ID.OPTGROUP:\n      {\n        optgroupStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.NOEMBED:\n      {\n        noembedStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.FRAMESET:\n      {\n        framesetStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TEXTAREA:\n      {\n        textareaStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.NOSCRIPT:\n      {\n        if (p.options.scriptingEnabled) {\n          noembedStartTagInBody(p, token);\n        } else {\n          genericStartTagInBody(p, token);\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.PLAINTEXT:\n      {\n        plaintextStartTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.COL:\n    case html_js_1.TAG_ID.TH:\n    case html_js_1.TAG_ID.TD:\n    case html_js_1.TAG_ID.TR:\n    case html_js_1.TAG_ID.HEAD:\n    case html_js_1.TAG_ID.FRAME:\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.THEAD:\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.COLGROUP:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        genericStartTagInBody(p, token);\n      }\n  }\n}\nfunction bodyEndTagInBody(p, token) {\n  if (p.openElements.hasInScope(html_js_1.TAG_ID.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    //NOTE: <body> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo) {\n      const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n      if (bodyElement) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  }\n}\nfunction htmlEndTagInBody(p, token) {\n  if (p.openElements.hasInScope(html_js_1.TAG_ID.BODY)) {\n    p.insertionMode = InsertionMode.AFTER_BODY;\n    endTagAfterBody(p, token);\n  }\n}\nfunction addressEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction formEndTagInBody(p) {\n  const inTemplate = p.openElements.tmplCount > 0;\n  const {\n    formElement\n  } = p;\n  if (!inTemplate) {\n    p.formElement = null;\n  }\n  if ((formElement || inTemplate) && p.openElements.hasInScope(html_js_1.TAG_ID.FORM)) {\n    p.openElements.generateImpliedEndTags();\n    if (inTemplate) {\n      p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.FORM);\n    } else if (formElement) {\n      p.openElements.remove(formElement);\n    }\n  }\n}\nfunction pEndTagInBody(p) {\n  if (!p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n    p._insertFakeElement(html_js_1.TAG_NAMES.P, html_js_1.TAG_ID.P);\n  }\n  p._closePElement();\n}\nfunction liEndTagInBody(p) {\n  if (p.openElements.hasInListItemScope(html_js_1.TAG_ID.LI)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.LI);\n    p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.LI);\n  }\n}\nfunction ddEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTagsWithExclusion(tn);\n    p.openElements.popUntilTagNamePopped(tn);\n  }\n}\nfunction numberedHeaderEndTagInBody(p) {\n  if (p.openElements.hasNumberedHeaderInScope()) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilNumberedHeaderPopped();\n  }\n}\nfunction appletEndTagInBody(p, token) {\n  const tn = token.tagID;\n  if (p.openElements.hasInScope(tn)) {\n    p.openElements.generateImpliedEndTags();\n    p.openElements.popUntilTagNamePopped(tn);\n    p.activeFormattingElements.clearToLastMarker();\n  }\n}\nfunction brEndTagInBody(p) {\n  p._reconstructActiveFormattingElements();\n  p._insertFakeElement(html_js_1.TAG_NAMES.BR, html_js_1.TAG_ID.BR);\n  p.openElements.pop();\n  p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n  const tn = token.tagName;\n  const tid = token.tagID;\n  for (let i = p.openElements.stackTop; i > 0; i--) {\n    const element = p.openElements.items[i];\n    const elementId = p.openElements.tagIDs[i];\n    // Compare the tag name here, as the tag might not be a known tag with an ID.\n    if (tid === elementId && (tid !== html_js_1.TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n      p.openElements.generateImpliedEndTagsWithExclusion(tid);\n      if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n      break;\n    }\n    if (p._isSpecialElement(element, elementId)) {\n      break;\n    }\n  }\n}\nfunction endTagInBody(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.A:\n    case html_js_1.TAG_ID.B:\n    case html_js_1.TAG_ID.I:\n    case html_js_1.TAG_ID.S:\n    case html_js_1.TAG_ID.U:\n    case html_js_1.TAG_ID.EM:\n    case html_js_1.TAG_ID.TT:\n    case html_js_1.TAG_ID.BIG:\n    case html_js_1.TAG_ID.CODE:\n    case html_js_1.TAG_ID.FONT:\n    case html_js_1.TAG_ID.NOBR:\n    case html_js_1.TAG_ID.SMALL:\n    case html_js_1.TAG_ID.STRIKE:\n    case html_js_1.TAG_ID.STRONG:\n      {\n        callAdoptionAgency(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.P:\n      {\n        pEndTagInBody(p);\n        break;\n      }\n    case html_js_1.TAG_ID.DL:\n    case html_js_1.TAG_ID.UL:\n    case html_js_1.TAG_ID.OL:\n    case html_js_1.TAG_ID.DIR:\n    case html_js_1.TAG_ID.DIV:\n    case html_js_1.TAG_ID.NAV:\n    case html_js_1.TAG_ID.PRE:\n    case html_js_1.TAG_ID.MAIN:\n    case html_js_1.TAG_ID.MENU:\n    case html_js_1.TAG_ID.ASIDE:\n    case html_js_1.TAG_ID.BUTTON:\n    case html_js_1.TAG_ID.CENTER:\n    case html_js_1.TAG_ID.FIGURE:\n    case html_js_1.TAG_ID.FOOTER:\n    case html_js_1.TAG_ID.HEADER:\n    case html_js_1.TAG_ID.HGROUP:\n    case html_js_1.TAG_ID.DIALOG:\n    case html_js_1.TAG_ID.ADDRESS:\n    case html_js_1.TAG_ID.ARTICLE:\n    case html_js_1.TAG_ID.DETAILS:\n    case html_js_1.TAG_ID.SECTION:\n    case html_js_1.TAG_ID.SUMMARY:\n    case html_js_1.TAG_ID.LISTING:\n    case html_js_1.TAG_ID.FIELDSET:\n    case html_js_1.TAG_ID.BLOCKQUOTE:\n    case html_js_1.TAG_ID.FIGCAPTION:\n      {\n        addressEndTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.LI:\n      {\n        liEndTagInBody(p);\n        break;\n      }\n    case html_js_1.TAG_ID.DD:\n    case html_js_1.TAG_ID.DT:\n      {\n        ddEndTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.H1:\n    case html_js_1.TAG_ID.H2:\n    case html_js_1.TAG_ID.H3:\n    case html_js_1.TAG_ID.H4:\n    case html_js_1.TAG_ID.H5:\n    case html_js_1.TAG_ID.H6:\n      {\n        numberedHeaderEndTagInBody(p);\n        break;\n      }\n    case html_js_1.TAG_ID.BR:\n      {\n        brEndTagInBody(p);\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n      {\n        bodyEndTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.HTML:\n      {\n        htmlEndTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.FORM:\n      {\n        formEndTagInBody(p);\n        break;\n      }\n    case html_js_1.TAG_ID.APPLET:\n    case html_js_1.TAG_ID.OBJECT:\n    case html_js_1.TAG_ID.MARQUEE:\n      {\n        appletEndTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        genericEndTagInBody(p, token);\n      }\n  }\n}\nfunction eofInBody(p, token) {\n  if (p.tmplInsertionModeStack.length > 0) {\n    eofInTemplate(p, token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n  var _a;\n  if (token.tagID === html_js_1.TAG_ID.SCRIPT) {\n    (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n  }\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n  p._err(token, error_codes_js_1.ERR.eofInElementThatCanContainOnlyText);\n  p.openElements.pop();\n  p.insertionMode = p.originalInsertionMode;\n  p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n  if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n    p.pendingCharacterTokens.length = 0;\n    p.hasNonWhitespacePendingCharacterToken = false;\n    p.originalInsertionMode = p.insertionMode;\n    p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n    switch (token.type) {\n      case token_js_1.TokenType.CHARACTER:\n        {\n          characterInTableText(p, token);\n          break;\n        }\n      case token_js_1.TokenType.WHITESPACE_CHARACTER:\n        {\n          whitespaceCharacterInTableText(p, token);\n          break;\n        }\n      // Ignore null\n    }\n  } else {\n    tokenInTable(p, token);\n  }\n}\nfunction captionStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p.activeFormattingElements.insertMarker();\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(html_js_1.TAG_NAMES.COLGROUP, html_js_1.TAG_ID.COLGROUP);\n  p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n  startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertElement(token, html_js_1.NS.HTML);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n  p.openElements.clearBackToTableContext();\n  p._insertFakeElement(html_js_1.TAG_NAMES.TBODY, html_js_1.TAG_ID.TBODY);\n  p.insertionMode = InsertionMode.IN_TABLE_BODY;\n  startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n  if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TABLE)) {\n    p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TABLE);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  }\n}\nfunction inputStartTagInTable(p, token) {\n  if (isHiddenInput(token)) {\n    p._appendElement(token, html_js_1.NS.HTML);\n  } else {\n    tokenInTable(p, token);\n  }\n  token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n  if (!p.formElement && p.openElements.tmplCount === 0) {\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.formElement = p.openElements.current;\n    p.openElements.pop();\n  }\n}\nfunction startTagInTable(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.TD:\n    case html_js_1.TAG_ID.TH:\n    case html_js_1.TAG_ID.TR:\n      {\n        tdStartTagInTable(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.STYLE:\n    case html_js_1.TAG_ID.SCRIPT:\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.COL:\n      {\n        colStartTagInTable(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.FORM:\n      {\n        formStartTagInTable(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TABLE:\n      {\n        tableStartTagInTable(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.THEAD:\n      {\n        tbodyStartTagInTable(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.INPUT:\n      {\n        inputStartTagInTable(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.CAPTION:\n      {\n        captionStartTagInTable(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.COLGROUP:\n      {\n        colgroupStartTagInTable(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction endTagInTable(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.TABLE:\n      {\n        if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TABLE)) {\n          p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TABLE);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.COL:\n    case html_js_1.TAG_ID.COLGROUP:\n    case html_js_1.TAG_ID.HTML:\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TD:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.TH:\n    case html_js_1.TAG_ID.THEAD:\n    case html_js_1.TAG_ID.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInTable(p, token);\n      }\n  }\n}\nfunction tokenInTable(p, token) {\n  const savedFosterParentingState = p.fosterParentingEnabled;\n  p.fosterParentingEnabled = true;\n  // Process token in `In Body` mode\n  modeInBody(p, token);\n  p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n  p.pendingCharacterTokens.push(token);\n  p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n  let i = 0;\n  if (p.hasNonWhitespacePendingCharacterToken) {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      tokenInTable(p, p.pendingCharacterTokens[i]);\n    }\n  } else {\n    for (; i < p.pendingCharacterTokens.length; i++) {\n      p._insertCharacters(p.pendingCharacterTokens[i]);\n    }\n  }\n  p.insertionMode = p.originalInsertionMode;\n  p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([html_js_1.TAG_ID.CAPTION, html_js_1.TAG_ID.COL, html_js_1.TAG_ID.COLGROUP, html_js_1.TAG_ID.TBODY, html_js_1.TAG_ID.TD, html_js_1.TAG_ID.TFOOT, html_js_1.TAG_ID.TH, html_js_1.TAG_ID.THEAD, html_js_1.TAG_ID.TR]);\nfunction startTagInCaption(p, token) {\n  const tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope(html_js_1.TAG_ID.CAPTION)) {\n      p.openElements.generateImpliedEndTags();\n      p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.CAPTION);\n      p.activeFormattingElements.clearToLastMarker();\n      p.insertionMode = InsertionMode.IN_TABLE;\n      startTagInTable(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCaption(p, token) {\n  const tn = token.tagID;\n  switch (tn) {\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.TABLE:\n      {\n        if (p.openElements.hasInTableScope(html_js_1.TAG_ID.CAPTION)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.CAPTION);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          if (tn === html_js_1.TAG_ID.TABLE) {\n            endTagInTable(p, token);\n          }\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n    case html_js_1.TAG_ID.COL:\n    case html_js_1.TAG_ID.COLGROUP:\n    case html_js_1.TAG_ID.HTML:\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TD:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.TH:\n    case html_js_1.TAG_ID.THEAD:\n    case html_js_1.TAG_ID.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.COL:\n      {\n        p._appendElement(token, html_js_1.NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction endTagInColumnGroup(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.COLGROUP:\n      {\n        if (p.openElements.currentTagId === html_js_1.TAG_ID.COLGROUP) {\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.COL:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        tokenInColumnGroup(p, token);\n      }\n  }\n}\nfunction tokenInColumnGroup(p, token) {\n  if (p.openElements.currentTagId === html_js_1.TAG_ID.COLGROUP) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_TABLE;\n    p._processToken(token);\n  }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.TR:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertElement(token, html_js_1.NS.HTML);\n        p.insertionMode = InsertionMode.IN_ROW;\n        break;\n      }\n    case html_js_1.TAG_ID.TH:\n    case html_js_1.TAG_ID.TD:\n      {\n        p.openElements.clearBackToTableBodyContext();\n        p._insertFakeElement(html_js_1.TAG_NAMES.TR, html_js_1.TAG_ID.TR);\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.COL:\n    case html_js_1.TAG_ID.COLGROUP:\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.THEAD:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          startTagInTable(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInTableBody(p, token) {\n  const tn = token.tagID;\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.THEAD:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.TABLE:\n      {\n        if (p.openElements.hasTableBodyContextInTableScope()) {\n          p.openElements.clearBackToTableBodyContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE;\n          endTagInTable(p, token);\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.COL:\n    case html_js_1.TAG_ID.COLGROUP:\n    case html_js_1.TAG_ID.HTML:\n    case html_js_1.TAG_ID.TD:\n    case html_js_1.TAG_ID.TH:\n    case html_js_1.TAG_ID.TR:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.TH:\n    case html_js_1.TAG_ID.TD:\n      {\n        p.openElements.clearBackToTableRowContext();\n        p._insertElement(token, html_js_1.NS.HTML);\n        p.insertionMode = InsertionMode.IN_CELL;\n        p.activeFormattingElements.insertMarker();\n        break;\n      }\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.COL:\n    case html_js_1.TAG_ID.COLGROUP:\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.THEAD:\n    case html_js_1.TAG_ID.TR:\n      {\n        if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          startTagInTableBody(p, token);\n        }\n        break;\n      }\n    default:\n      {\n        startTagInTable(p, token);\n      }\n  }\n}\nfunction endTagInRow(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.TR:\n      {\n        if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.TABLE:\n      {\n        if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.THEAD:\n      {\n        if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) {\n          p.openElements.clearBackToTableRowContext();\n          p.openElements.pop();\n          p.insertionMode = InsertionMode.IN_TABLE_BODY;\n          endTagInTableBody(p, token);\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.COL:\n    case html_js_1.TAG_ID.COLGROUP:\n    case html_js_1.TAG_ID.HTML:\n    case html_js_1.TAG_ID.TD:\n    case html_js_1.TAG_ID.TH:\n      {\n        // Ignore end tag\n        break;\n      }\n    default:\n      {\n        endTagInTable(p, token);\n      }\n  }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n  const tn = token.tagID;\n  if (TABLE_VOID_ELEMENTS.has(tn)) {\n    if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TD) || p.openElements.hasInTableScope(html_js_1.TAG_ID.TH)) {\n      p._closeTableCell();\n      startTagInRow(p, token);\n    }\n  } else {\n    startTagInBody(p, token);\n  }\n}\nfunction endTagInCell(p, token) {\n  const tn = token.tagID;\n  switch (tn) {\n    case html_js_1.TAG_ID.TD:\n    case html_js_1.TAG_ID.TH:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p.openElements.generateImpliedEndTags();\n          p.openElements.popUntilTagNamePopped(tn);\n          p.activeFormattingElements.clearToLastMarker();\n          p.insertionMode = InsertionMode.IN_ROW;\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.TABLE:\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.THEAD:\n    case html_js_1.TAG_ID.TR:\n      {\n        if (p.openElements.hasInTableScope(tn)) {\n          p._closeTableCell();\n          endTagInRow(p, token);\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.BODY:\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.COL:\n    case html_js_1.TAG_ID.COLGROUP:\n    case html_js_1.TAG_ID.HTML:\n      {\n        // Ignore token\n        break;\n      }\n    default:\n      {\n        endTagInBody(p, token);\n      }\n  }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.OPTION:\n      {\n        if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTION) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, html_js_1.NS.HTML);\n        break;\n      }\n    case html_js_1.TAG_ID.OPTGROUP:\n      {\n        if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTION) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTGROUP) {\n          p.openElements.pop();\n        }\n        p._insertElement(token, html_js_1.NS.HTML);\n        break;\n      }\n    case html_js_1.TAG_ID.INPUT:\n    case html_js_1.TAG_ID.KEYGEN:\n    case html_js_1.TAG_ID.TEXTAREA:\n    case html_js_1.TAG_ID.SELECT:\n      {\n        if (p.openElements.hasInSelectScope(html_js_1.TAG_ID.SELECT)) {\n          p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT);\n          p._resetInsertionMode();\n          if (token.tagID !== html_js_1.TAG_ID.SELECT) {\n            p._processStartTag(token);\n          }\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.SCRIPT:\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagInSelect(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.OPTGROUP:\n      {\n        if (p.openElements.stackTop > 0 && p.openElements.currentTagId === html_js_1.TAG_ID.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === html_js_1.TAG_ID.OPTGROUP) {\n          p.openElements.pop();\n        }\n        if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTGROUP) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.OPTION:\n      {\n        if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTION) {\n          p.openElements.pop();\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.SELECT:\n      {\n        if (p.openElements.hasInSelectScope(html_js_1.TAG_ID.SELECT)) {\n          p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT);\n          p._resetInsertionMode();\n        }\n        break;\n      }\n    case html_js_1.TAG_ID.TEMPLATE:\n      {\n        templateEndTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n  const tn = token.tagID;\n  if (tn === html_js_1.TAG_ID.CAPTION || tn === html_js_1.TAG_ID.TABLE || tn === html_js_1.TAG_ID.TBODY || tn === html_js_1.TAG_ID.TFOOT || tn === html_js_1.TAG_ID.THEAD || tn === html_js_1.TAG_ID.TR || tn === html_js_1.TAG_ID.TD || tn === html_js_1.TAG_ID.TH) {\n    p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT);\n    p._resetInsertionMode();\n    p._processStartTag(token);\n  } else {\n    startTagInSelect(p, token);\n  }\n}\nfunction endTagInSelectInTable(p, token) {\n  const tn = token.tagID;\n  if (tn === html_js_1.TAG_ID.CAPTION || tn === html_js_1.TAG_ID.TABLE || tn === html_js_1.TAG_ID.TBODY || tn === html_js_1.TAG_ID.TFOOT || tn === html_js_1.TAG_ID.THEAD || tn === html_js_1.TAG_ID.TR || tn === html_js_1.TAG_ID.TD || tn === html_js_1.TAG_ID.TH) {\n    if (p.openElements.hasInTableScope(tn)) {\n      p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT);\n      p._resetInsertionMode();\n      p.onEndTag(token);\n    }\n  } else {\n    endTagInSelect(p, token);\n  }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n  switch (token.tagID) {\n    // First, handle tags that can start without a mode change\n    case html_js_1.TAG_ID.BASE:\n    case html_js_1.TAG_ID.BASEFONT:\n    case html_js_1.TAG_ID.BGSOUND:\n    case html_js_1.TAG_ID.LINK:\n    case html_js_1.TAG_ID.META:\n    case html_js_1.TAG_ID.NOFRAMES:\n    case html_js_1.TAG_ID.SCRIPT:\n    case html_js_1.TAG_ID.STYLE:\n    case html_js_1.TAG_ID.TEMPLATE:\n    case html_js_1.TAG_ID.TITLE:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    // Re-process the token in the appropriate mode\n    case html_js_1.TAG_ID.CAPTION:\n    case html_js_1.TAG_ID.COLGROUP:\n    case html_js_1.TAG_ID.TBODY:\n    case html_js_1.TAG_ID.TFOOT:\n    case html_js_1.TAG_ID.THEAD:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n        p.insertionMode = InsertionMode.IN_TABLE;\n        startTagInTable(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.COL:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n        p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n        startTagInColumnGroup(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TR:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n        p.insertionMode = InsertionMode.IN_TABLE_BODY;\n        startTagInTableBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.TD:\n    case html_js_1.TAG_ID.TH:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n        p.insertionMode = InsertionMode.IN_ROW;\n        startTagInRow(p, token);\n        break;\n      }\n    default:\n      {\n        p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n        p.insertionMode = InsertionMode.IN_BODY;\n        startTagInBody(p, token);\n      }\n  }\n}\nfunction endTagInTemplate(p, token) {\n  if (token.tagID === html_js_1.TAG_ID.TEMPLATE) {\n    templateEndTagInHead(p, token);\n  }\n}\nfunction eofInTemplate(p, token) {\n  if (p.openElements.tmplCount > 0) {\n    p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TEMPLATE);\n    p.activeFormattingElements.clearToLastMarker();\n    p.tmplInsertionModeStack.shift();\n    p._resetInsertionMode();\n    p.onEof(token);\n  } else {\n    stopParsing(p, token);\n  }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n  if (token.tagID === html_js_1.TAG_ID.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction endTagAfterBody(p, token) {\n  var _a;\n  if (token.tagID === html_js_1.TAG_ID.HTML) {\n    if (!p.fragmentContext) {\n      p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n    }\n    //NOTE: <html> is never popped from the stack, so we need to updated\n    //the end location explicitly.\n    if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === html_js_1.TAG_ID.HTML) {\n      p._setEndLocation(p.openElements.items[0], token);\n      // Update the body element, if it doesn't have an end tag\n      const bodyElement = p.openElements.items[1];\n      if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n        p._setEndLocation(bodyElement, token);\n      }\n    }\n  } else {\n    tokenAfterBody(p, token);\n  }\n}\nfunction tokenAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.FRAMESET:\n      {\n        p._insertElement(token, html_js_1.NS.HTML);\n        break;\n      }\n    case html_js_1.TAG_ID.FRAME:\n      {\n        p._appendElement(token, html_js_1.NS.HTML);\n        token.ackSelfClosing = true;\n        break;\n      }\n    case html_js_1.TAG_ID.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagInFrameset(p, token) {\n  if (token.tagID === html_js_1.TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n    p.openElements.pop();\n    if (!p.fragmentContext && p.openElements.currentTagId !== html_js_1.TAG_ID.FRAMESET) {\n      p.insertionMode = InsertionMode.AFTER_FRAMESET;\n    }\n  }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n\nfunction endTagAfterFrameset(p, token) {\n  if (token.tagID === html_js_1.TAG_ID.HTML) {\n    p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n  }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n  if (token.tagID === html_js_1.TAG_ID.HTML) {\n    startTagInBody(p, token);\n  } else {\n    tokenAfterAfterBody(p, token);\n  }\n}\nfunction tokenAfterAfterBody(p, token) {\n  p.insertionMode = InsertionMode.IN_BODY;\n  modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n  switch (token.tagID) {\n    case html_js_1.TAG_ID.HTML:\n      {\n        startTagInBody(p, token);\n        break;\n      }\n    case html_js_1.TAG_ID.NOFRAMES:\n      {\n        startTagInHead(p, token);\n        break;\n      }\n    default:\n    // Do nothing\n  }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n  token.chars = unicode.REPLACEMENT_CHARACTER;\n  p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n  p._insertCharacters(token);\n  p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n  while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== html_js_1.NS.HTML && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n    p.openElements.pop();\n  }\n}\nfunction startTagInForeignContent(p, token) {\n  if (foreignContent.causesExit(token)) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._startTagOutsideForeignContent(token);\n  } else {\n    const current = p._getAdjustedCurrentElement();\n    const currentNs = p.treeAdapter.getNamespaceURI(current);\n    if (currentNs === html_js_1.NS.MATHML) {\n      foreignContent.adjustTokenMathMLAttrs(token);\n    } else if (currentNs === html_js_1.NS.SVG) {\n      foreignContent.adjustTokenSVGTagName(token);\n      foreignContent.adjustTokenSVGAttrs(token);\n    }\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n      p._appendElement(token, currentNs);\n    } else {\n      p._insertElement(token, currentNs);\n    }\n    token.ackSelfClosing = true;\n  }\n}\nfunction endTagInForeignContent(p, token) {\n  if (token.tagID === html_js_1.TAG_ID.P || token.tagID === html_js_1.TAG_ID.BR) {\n    popUntilHtmlOrIntegrationPoint(p);\n    p._endTagOutsideForeignContent(token);\n    return;\n  }\n  for (let i = p.openElements.stackTop; i > 0; i--) {\n    const element = p.openElements.items[i];\n    if (p.treeAdapter.getNamespaceURI(element) === html_js_1.NS.HTML) {\n      p._endTagOutsideForeignContent(token);\n      break;\n    }\n    const tagName = p.treeAdapter.getTagName(element);\n    if (tagName.toLowerCase() === token.tagName) {\n      //NOTE: update the token tag name for `_setEndLocation`.\n      token.tagName = tagName;\n      p.openElements.shortenToLength(i);\n      break;\n    }\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Parser","index_js_1","require","open_element_stack_js_1","formatting_element_list_js_1","default_js_1","doctype","foreignContent","error_codes_js_1","unicode","html_js_1","token_js_1","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","startLine","startCol","startOffset","endLine","endCol","endOffset","TABLE_STRUCTURE_TAGS","Set","TAG_ID","TABLE","TBODY","TFOOT","THEAD","TR","defaultParserOptions","scriptingEnabled","sourceCodeLocationInfo","treeAdapter","defaultTreeAdapter","onParseError","constructor","options","document","fragmentContext","arguments","length","undefined","scriptHandler","currentToken","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","skipNextNewLine","fosterParentingEnabled","assign","createDocument","tokenizer","Tokenizer","activeFormattingElements","FormattingElementList","fragmentContextID","getTagID","getTagName","UNKNOWN","_setContextModes","openElements","OpenElementStack","parse","html","parser","write","getFragmentParser","opts","createElement","TAG_NAMES","TEMPLATE","NS","HTML","documentMock","unshift","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","getFirstChild","fragment","createDocumentFragment","_adoptNodes","_err","token","code","beforeToken","_a","loc","location","err","onItemPush","node","tid","isTop","_b","call","stackTop","onItemPop","_setEndLocation","current","currentTagId","isHTML","getNamespaceURI","inForeignNode","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","state","TEXT","switchToPlaintextParsing","IN_BODY","TokenizerMode","PLAINTEXT","_getAdjustedCurrentElement","FORM","getParentNode","TITLE","TEXTAREA","RCDATA","STYLE","XMP","IFRAME","NOEMBED","NOFRAMES","NOSCRIPT","RAWTEXT","SCRIPT","SCRIPT_DATA","_setDocumentType","name","publicId","systemId","setDocumentType","documentChildren","getChildNodes","docTypeNode","find","isDocumentTypeNode","setNodeSourceCodeLocation","_attachElementToTree","element","startTag","_shouldFosterParentOnInsertion","_fosterParentElement","parent","currentTmplContentOrNode","appendChild","_appendElement","namespaceURI","tagName","attrs","push","tagID","_insertFakeElement","_insertTemplate","tmpl","content","setTemplateContent","_appendCommentNode","commentNode","createCommentNode","data","_insertCharacters","beforeElement","_findFosterParentingLocation","insertTextBefore","chars","insertText","siblings","textNodeIdx","lastIndexOf","textNode","tnLoc","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","donor","recipient","child","detachNode","closingToken","ctLoc","tn","endLoc","type","TokenType","END_TAG","endTag","shouldProcessStartTagTokenInForeignContent","SVG","ANNOTATION_XML","MATHML","MGLYPH","MALIGNMARK","_processToken","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","COMMENT","onComment","DOCTYPE","onDoctype","START_TAG","_processStartTag","onEndTag","EOF","onEof","WHITESPACE_CHARACTER","onWhitespaceCharacter","foreignNS","ns","getAttrList","isIntegrationPoint","_reconstructActiveFormattingElements","listLength","entries","endIndex","findIndex","entry","EntryType","Marker","contains","unopenIdx","i","_closeTableCell","generateImpliedEndTags","popUntilTableCellPopped","clearToLastMarker","IN_ROW","_closePElement","generateImpliedEndTagsWithExclusion","P","popUntilTagNamePopped","tagIDs","IN_TABLE_BODY","CAPTION","IN_CAPTION","COLGROUP","IN_COLUMN_GROUP","IN_TABLE","BODY","FRAMESET","IN_FRAMESET","SELECT","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","TD","TH","IN_CELL","HEAD","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","has","openElement","items","getTemplateContent","insertBefore","_isSpecialElement","id","SPECIAL_ELEMENTS","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","doctypeInInitialMode","ERR","misplacedDoctype","onStartTag","selfClosing","ackSelfClosing","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagInForeignContent","_startTagOutsideForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","_endTagOutsideForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","charCodeAt","CODE_POINTS","LINE_FEED","substr","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","p","formattingElementEntry","getElementEntryInScopeWithTagName","removeEntry","hasInScope","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","idx","shortenToLength","aaInnerLoop","formattingElement","lastElement","nextElement","getCommonAncestor","elementEntry","getElementEntry","counterOverflow","shouldRemoveFromOpenElements","remove","aaRecreateElementFromEntry","bookmark","newElement","replace","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","insertElementAfterBookmark","insertAfter","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","mode","forceQuirks","DOCUMENT_MODE","QUIRKS","getDocumentMode","isConforming","nonConformingDoctype","setDocumentMode","missingDoctype","BR","endTagWithoutMatchingOpenElement","BASE","BASEFONT","BGSOUND","LINK","META","insertMarker","misplacedStartTagForHeadElement","pop","templateEndTagInHead","tmplCount","generateImpliedEndTagsThoroughly","closingOfElementWithOpenChildElements","shift","nestedNoscriptInHead","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","abandonedHeadElementChild","modeInBody","htmlStartTagInBody","adoptAttributes","bodyStartTagInBody","tryPeekProperlyNestedBodyElement","framesetStartTagInBody","popAllUpToHtmlElement","addressStartTagInBody","hasInButtonScope","numberedHeaderStartTagInBody","isNumberedHeader","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","LI","DD","DT","ADDRESS","DIV","plaintextStartTagInBody","buttonStartTagInBody","BUTTON","aStartTagInBody","activeElementEntry","A","pushElement","bStartTagInBody","nobrStartTagInBody","NOBR","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","getTokenAttr","ATTRS","TYPE","toLowerCase","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","IMG","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","noembedStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","OPTION","rbStartTagInBody","RUBY","rtStartTagInBody","RTC","mathStartTagInBody","adjustTokenMathMLAttrs","adjustTokenXMLAttrs","svgStartTagInBody","adjustTokenSVGAttrs","genericStartTagInBody","I","S","B","U","EM","TT","BIG","CODE","FONT","SMALL","STRIKE","STRONG","H1","H2","H3","H4","H5","H6","DL","OL","UL","DIR","NAV","MAIN","MENU","ASIDE","CENTER","FIGURE","FOOTER","HEADER","HGROUP","DIALOG","DETAILS","ARTICLE","SECTION","SUMMARY","FIELDSET","BLOCKQUOTE","FIGCAPTION","WBR","AREA","EMBED","KEYGEN","HR","RB","RT","RP","PRE","LISTING","MATH","INPUT","PARAM","TRACK","SOURCE","IMAGE","APPLET","OBJECT","MARQUEE","OPTGROUP","COL","FRAME","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","pEndTagInBody","liEndTagInBody","hasInListItemScope","ddEndTagInBody","numberedHeaderEndTagInBody","hasNumberedHeaderInScope","popUntilNumberedHeaderPopped","appletEndTagInBody","brEndTagInBody","eofInElementThatCanContainOnlyText","tokenInTable","captionStartTagInTable","clearBackToTableContext","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","hasInTableScope","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","clearBackToTableBodyContext","hasTableBodyContextInTableScope","clearBackToTableRowContext","hasInSelectScope","isRootHtmlElementCurrent","REPLACEMENT_CHARACTER","popUntilHtmlOrIntegrationPoint","causesExit","currentNs","adjustTokenSVGTagName"],"sources":["C:/Users/vedic/node_modules/parse5/dist/cjs/parser/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Parser = void 0;\nconst index_js_1 = require(\"../tokenizer/index.js\");\nconst open_element_stack_js_1 = require(\"./open-element-stack.js\");\nconst formatting_element_list_js_1 = require(\"./formatting-element-list.js\");\nconst default_js_1 = require(\"../tree-adapters/default.js\");\nconst doctype = require(\"../common/doctype.js\");\nconst foreignContent = require(\"../common/foreign-content.js\");\nconst error_codes_js_1 = require(\"../common/error-codes.js\");\nconst unicode = require(\"../common/unicode.js\");\nconst html_js_1 = require(\"../common/html.js\");\nconst token_js_1 = require(\"../common/token.js\");\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([html_js_1.TAG_ID.TABLE, html_js_1.TAG_ID.TBODY, html_js_1.TAG_ID.TFOOT, html_js_1.TAG_ID.THEAD, html_js_1.TAG_ID.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: default_js_1.defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nclass Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = Object.assign(Object.assign({}, defaultParserOptions), options);\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new index_js_1.Tokenizer(this.options, this);\n        this.activeFormattingElements = new formatting_element_list_js_1.FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? (0, html_js_1.getTagID)(this.treeAdapter.getTagName(fragmentContext)) : html_js_1.TAG_ID.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new open_element_stack_js_1.OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = Object.assign(Object.assign({}, defaultParserOptions), options);\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(html_js_1.TAG_NAMES.TEMPLATE, html_js_1.NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', html_js_1.NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === html_js_1.TAG_ID.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === html_js_1.NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, html_js_1.NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === html_js_1.TAG_NAMES.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== html_js_1.NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case html_js_1.TAG_ID.TITLE:\n            case html_js_1.TAG_ID.TEXTAREA: {\n                this.tokenizer.state = index_js_1.TokenizerMode.RCDATA;\n                break;\n            }\n            case html_js_1.TAG_ID.STYLE:\n            case html_js_1.TAG_ID.XMP:\n            case html_js_1.TAG_ID.IFRAME:\n            case html_js_1.TAG_ID.NOEMBED:\n            case html_js_1.TAG_ID.NOFRAMES:\n            case html_js_1.TAG_ID.NOSCRIPT: {\n                this.tokenizer.state = index_js_1.TokenizerMode.RAWTEXT;\n                break;\n            }\n            case html_js_1.TAG_ID.SCRIPT: {\n                this.tokenizer.state = index_js_1.TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case html_js_1.TAG_ID.PLAINTEXT: {\n                this.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && Object.assign(Object.assign({}, location), { startTag: location });\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, html_js_1.NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, html_js_1.NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(html_js_1.TAG_NAMES.HTML, html_js_1.NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, html_js_1.TAG_ID.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === token_js_1.TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: Object.assign({}, ctLoc),\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === html_js_1.TAG_ID.SVG &&\n            this.treeAdapter.getTagName(current) === html_js_1.TAG_NAMES.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === html_js_1.NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === html_js_1.TAG_ID.MGLYPH || token.tagID === html_js_1.TAG_ID.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, html_js_1.NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case token_js_1.TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case token_js_1.TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case token_js_1.TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case token_js_1.TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case token_js_1.TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case token_js_1.TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case token_js_1.TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case token_js_1.TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === formatting_element_list_js_1.EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.P);\n        this.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case html_js_1.TAG_ID.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case html_js_1.TAG_ID.TBODY:\n                case html_js_1.TAG_ID.THEAD:\n                case html_js_1.TAG_ID.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case html_js_1.TAG_ID.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case html_js_1.TAG_ID.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case html_js_1.TAG_ID.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case html_js_1.TAG_ID.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case html_js_1.TAG_ID.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case html_js_1.TAG_ID.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case html_js_1.TAG_ID.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case html_js_1.TAG_ID.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case html_js_1.TAG_ID.TD:\n                case html_js_1.TAG_ID.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case html_js_1.TAG_ID.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === html_js_1.TAG_ID.TEMPLATE) {\n                    break;\n                }\n                else if (tn === html_js_1.TAG_ID.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case html_js_1.TAG_ID.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === html_js_1.NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case html_js_1.TAG_ID.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return html_js_1.SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, error_codes_js_1.ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, error_codes_js_1.ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\nexports.Parser = Parser;\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = (0, html_js_1.getTagID)(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === html_js_1.TAG_ID.TEMPLATE && ns === html_js_1.NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? html_js_1.DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, error_codes_js_1.ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, error_codes_js_1.ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, html_js_1.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === html_js_1.TAG_ID.HTML) {\n        p._insertElement(token, html_js_1.NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === html_js_1.TAG_ID.HTML || tn === html_js_1.TAG_ID.HEAD || tn === html_js_1.TAG_ID.BODY || tn === html_js_1.TAG_ID.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.HEAD: {\n            p._insertElement(token, html_js_1.NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === html_js_1.TAG_ID.HEAD || tn === html_js_1.TAG_ID.BODY || tn === html_js_1.TAG_ID.HTML || tn === html_js_1.TAG_ID.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(html_js_1.TAG_NAMES.HEAD, html_js_1.TAG_ID.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.BASE:\n        case html_js_1.TAG_ID.BASEFONT:\n        case html_js_1.TAG_ID.BGSOUND:\n        case html_js_1.TAG_ID.LINK:\n        case html_js_1.TAG_ID.META: {\n            p._appendElement(token, html_js_1.NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case html_js_1.TAG_ID.TITLE: {\n            p._switchToTextParsing(token, index_js_1.TokenizerMode.RCDATA);\n            break;\n        }\n        case html_js_1.TAG_ID.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, html_js_1.NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.NOFRAMES:\n        case html_js_1.TAG_ID.STYLE: {\n            p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n            break;\n        }\n        case html_js_1.TAG_ID.SCRIPT: {\n            p._switchToTextParsing(token, index_js_1.TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case html_js_1.TAG_ID.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case html_js_1.TAG_ID.HEAD: {\n            p._err(token, error_codes_js_1.ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case html_js_1.TAG_ID.BODY:\n        case html_js_1.TAG_ID.BR:\n        case html_js_1.TAG_ID.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== html_js_1.TAG_ID.TEMPLATE) {\n            p._err(token, error_codes_js_1.ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.BASEFONT:\n        case html_js_1.TAG_ID.BGSOUND:\n        case html_js_1.TAG_ID.HEAD:\n        case html_js_1.TAG_ID.LINK:\n        case html_js_1.TAG_ID.META:\n        case html_js_1.TAG_ID.NOFRAMES:\n        case html_js_1.TAG_ID.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.NOSCRIPT: {\n            p._err(token, error_codes_js_1.ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case html_js_1.TAG_ID.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === token_js_1.TokenType.EOF ? error_codes_js_1.ERR.openElementsLeftAfterEof : error_codes_js_1.ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.BODY: {\n            p._insertElement(token, html_js_1.NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case html_js_1.TAG_ID.FRAMESET: {\n            p._insertElement(token, html_js_1.NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case html_js_1.TAG_ID.BASE:\n        case html_js_1.TAG_ID.BASEFONT:\n        case html_js_1.TAG_ID.BGSOUND:\n        case html_js_1.TAG_ID.LINK:\n        case html_js_1.TAG_ID.META:\n        case html_js_1.TAG_ID.NOFRAMES:\n        case html_js_1.TAG_ID.SCRIPT:\n        case html_js_1.TAG_ID.STYLE:\n        case html_js_1.TAG_ID.TEMPLATE:\n        case html_js_1.TAG_ID.TITLE: {\n            p._err(token, error_codes_js_1.ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, html_js_1.TAG_ID.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case html_js_1.TAG_ID.HEAD: {\n            p._err(token, error_codes_js_1.ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.BODY:\n        case html_js_1.TAG_ID.HTML:\n        case html_js_1.TAG_ID.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, error_codes_js_1.ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(html_js_1.TAG_NAMES.BODY, html_js_1.TAG_ID.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case token_js_1.TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case token_js_1.TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case token_js_1.TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case token_js_1.TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case token_js_1.TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case token_js_1.TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, html_js_1.NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._closePElement();\n    }\n    if ((0, html_js_1.isNumberedHeader)(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, html_js_1.NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === html_js_1.TAG_ID.LI && elementId === html_js_1.TAG_ID.LI) ||\n            ((tn === html_js_1.TAG_ID.DD || tn === html_js_1.TAG_ID.DT) && (elementId === html_js_1.TAG_ID.DD || elementId === html_js_1.TAG_ID.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== html_js_1.TAG_ID.ADDRESS &&\n            elementId !== html_js_1.TAG_ID.DIV &&\n            elementId !== html_js_1.TAG_ID.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.tokenizer.state = index_js_1.TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(html_js_1.TAG_ID.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(html_js_1.TAG_NAMES.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope(html_js_1.TAG_ID.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== html_js_1.DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, html_js_1.NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = (0, token_js_1.getTokenAttr)(token, html_js_1.ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, html_js_1.NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, html_js_1.NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, html_js_1.NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = html_js_1.TAG_NAMES.IMG;\n    token.tagID = html_js_1.TAG_ID.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, html_js_1.NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = index_js_1.TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, index_js_1.TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(html_js_1.TAG_ID.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(html_js_1.TAG_ID.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.RTC);\n    }\n    p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, html_js_1.NS.MATHML);\n    }\n    else {\n        p._insertElement(token, html_js_1.NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, html_js_1.NS.SVG);\n    }\n    else {\n        p._insertElement(token, html_js_1.NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, html_js_1.NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.I:\n        case html_js_1.TAG_ID.S:\n        case html_js_1.TAG_ID.B:\n        case html_js_1.TAG_ID.U:\n        case html_js_1.TAG_ID.EM:\n        case html_js_1.TAG_ID.TT:\n        case html_js_1.TAG_ID.BIG:\n        case html_js_1.TAG_ID.CODE:\n        case html_js_1.TAG_ID.FONT:\n        case html_js_1.TAG_ID.SMALL:\n        case html_js_1.TAG_ID.STRIKE:\n        case html_js_1.TAG_ID.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.H1:\n        case html_js_1.TAG_ID.H2:\n        case html_js_1.TAG_ID.H3:\n        case html_js_1.TAG_ID.H4:\n        case html_js_1.TAG_ID.H5:\n        case html_js_1.TAG_ID.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.P:\n        case html_js_1.TAG_ID.DL:\n        case html_js_1.TAG_ID.OL:\n        case html_js_1.TAG_ID.UL:\n        case html_js_1.TAG_ID.DIV:\n        case html_js_1.TAG_ID.DIR:\n        case html_js_1.TAG_ID.NAV:\n        case html_js_1.TAG_ID.MAIN:\n        case html_js_1.TAG_ID.MENU:\n        case html_js_1.TAG_ID.ASIDE:\n        case html_js_1.TAG_ID.CENTER:\n        case html_js_1.TAG_ID.FIGURE:\n        case html_js_1.TAG_ID.FOOTER:\n        case html_js_1.TAG_ID.HEADER:\n        case html_js_1.TAG_ID.HGROUP:\n        case html_js_1.TAG_ID.DIALOG:\n        case html_js_1.TAG_ID.DETAILS:\n        case html_js_1.TAG_ID.ADDRESS:\n        case html_js_1.TAG_ID.ARTICLE:\n        case html_js_1.TAG_ID.SECTION:\n        case html_js_1.TAG_ID.SUMMARY:\n        case html_js_1.TAG_ID.FIELDSET:\n        case html_js_1.TAG_ID.BLOCKQUOTE:\n        case html_js_1.TAG_ID.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.LI:\n        case html_js_1.TAG_ID.DD:\n        case html_js_1.TAG_ID.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.BR:\n        case html_js_1.TAG_ID.IMG:\n        case html_js_1.TAG_ID.WBR:\n        case html_js_1.TAG_ID.AREA:\n        case html_js_1.TAG_ID.EMBED:\n        case html_js_1.TAG_ID.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.RB:\n        case html_js_1.TAG_ID.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.RT:\n        case html_js_1.TAG_ID.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.PRE:\n        case html_js_1.TAG_ID.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.BASE:\n        case html_js_1.TAG_ID.LINK:\n        case html_js_1.TAG_ID.META:\n        case html_js_1.TAG_ID.STYLE:\n        case html_js_1.TAG_ID.TITLE:\n        case html_js_1.TAG_ID.SCRIPT:\n        case html_js_1.TAG_ID.BGSOUND:\n        case html_js_1.TAG_ID.BASEFONT:\n        case html_js_1.TAG_ID.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.PARAM:\n        case html_js_1.TAG_ID.TRACK:\n        case html_js_1.TAG_ID.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.APPLET:\n        case html_js_1.TAG_ID.OBJECT:\n        case html_js_1.TAG_ID.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.OPTION:\n        case html_js_1.TAG_ID.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.COL:\n        case html_js_1.TAG_ID.TH:\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TR:\n        case html_js_1.TAG_ID.HEAD:\n        case html_js_1.TAG_ID.FRAME:\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.THEAD:\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope(html_js_1.TAG_ID.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope(html_js_1.TAG_ID.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope(html_js_1.TAG_ID.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope(html_js_1.TAG_ID.P)) {\n        p._insertFakeElement(html_js_1.TAG_NAMES.P, html_js_1.TAG_ID.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope(html_js_1.TAG_ID.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(html_js_1.TAG_ID.LI);\n        p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(html_js_1.TAG_NAMES.BR, html_js_1.TAG_ID.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== html_js_1.TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.A:\n        case html_js_1.TAG_ID.B:\n        case html_js_1.TAG_ID.I:\n        case html_js_1.TAG_ID.S:\n        case html_js_1.TAG_ID.U:\n        case html_js_1.TAG_ID.EM:\n        case html_js_1.TAG_ID.TT:\n        case html_js_1.TAG_ID.BIG:\n        case html_js_1.TAG_ID.CODE:\n        case html_js_1.TAG_ID.FONT:\n        case html_js_1.TAG_ID.NOBR:\n        case html_js_1.TAG_ID.SMALL:\n        case html_js_1.TAG_ID.STRIKE:\n        case html_js_1.TAG_ID.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case html_js_1.TAG_ID.DL:\n        case html_js_1.TAG_ID.UL:\n        case html_js_1.TAG_ID.OL:\n        case html_js_1.TAG_ID.DIR:\n        case html_js_1.TAG_ID.DIV:\n        case html_js_1.TAG_ID.NAV:\n        case html_js_1.TAG_ID.PRE:\n        case html_js_1.TAG_ID.MAIN:\n        case html_js_1.TAG_ID.MENU:\n        case html_js_1.TAG_ID.ASIDE:\n        case html_js_1.TAG_ID.BUTTON:\n        case html_js_1.TAG_ID.CENTER:\n        case html_js_1.TAG_ID.FIGURE:\n        case html_js_1.TAG_ID.FOOTER:\n        case html_js_1.TAG_ID.HEADER:\n        case html_js_1.TAG_ID.HGROUP:\n        case html_js_1.TAG_ID.DIALOG:\n        case html_js_1.TAG_ID.ADDRESS:\n        case html_js_1.TAG_ID.ARTICLE:\n        case html_js_1.TAG_ID.DETAILS:\n        case html_js_1.TAG_ID.SECTION:\n        case html_js_1.TAG_ID.SUMMARY:\n        case html_js_1.TAG_ID.LISTING:\n        case html_js_1.TAG_ID.FIELDSET:\n        case html_js_1.TAG_ID.BLOCKQUOTE:\n        case html_js_1.TAG_ID.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case html_js_1.TAG_ID.DD:\n        case html_js_1.TAG_ID.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.H1:\n        case html_js_1.TAG_ID.H2:\n        case html_js_1.TAG_ID.H3:\n        case html_js_1.TAG_ID.H4:\n        case html_js_1.TAG_ID.H5:\n        case html_js_1.TAG_ID.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case html_js_1.TAG_ID.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case html_js_1.TAG_ID.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case html_js_1.TAG_ID.APPLET:\n        case html_js_1.TAG_ID.OBJECT:\n        case html_js_1.TAG_ID.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === html_js_1.TAG_ID.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, error_codes_js_1.ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case token_js_1.TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case token_js_1.TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(html_js_1.TAG_NAMES.COLGROUP, html_js_1.TAG_ID.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, html_js_1.NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(html_js_1.TAG_NAMES.TBODY, html_js_1.TAG_ID.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TABLE)) {\n        p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, html_js_1.NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, html_js_1.NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TH:\n        case html_js_1.TAG_ID.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.STYLE:\n        case html_js_1.TAG_ID.SCRIPT:\n        case html_js_1.TAG_ID.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.TABLE: {\n            if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TABLE)) {\n                p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.BODY:\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.COL:\n        case html_js_1.TAG_ID.COLGROUP:\n        case html_js_1.TAG_ID.HTML:\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.TH:\n        case html_js_1.TAG_ID.THEAD:\n        case html_js_1.TAG_ID.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([html_js_1.TAG_ID.CAPTION, html_js_1.TAG_ID.COL, html_js_1.TAG_ID.COLGROUP, html_js_1.TAG_ID.TBODY, html_js_1.TAG_ID.TD, html_js_1.TAG_ID.TFOOT, html_js_1.TAG_ID.TH, html_js_1.TAG_ID.THEAD, html_js_1.TAG_ID.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope(html_js_1.TAG_ID.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.TABLE: {\n            if (p.openElements.hasInTableScope(html_js_1.TAG_ID.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === html_js_1.TAG_ID.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.BODY:\n        case html_js_1.TAG_ID.COL:\n        case html_js_1.TAG_ID.COLGROUP:\n        case html_js_1.TAG_ID.HTML:\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.TH:\n        case html_js_1.TAG_ID.THEAD:\n        case html_js_1.TAG_ID.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.COL: {\n            p._appendElement(token, html_js_1.NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case html_js_1.TAG_ID.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.COLGROUP: {\n            if (p.openElements.currentTagId === html_js_1.TAG_ID.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === html_js_1.TAG_ID.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, html_js_1.NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case html_js_1.TAG_ID.TH:\n        case html_js_1.TAG_ID.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(html_js_1.TAG_NAMES.TR, html_js_1.TAG_ID.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.COL:\n        case html_js_1.TAG_ID.COLGROUP:\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.BODY:\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.COL:\n        case html_js_1.TAG_ID.COLGROUP:\n        case html_js_1.TAG_ID.HTML:\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TH:\n        case html_js_1.TAG_ID.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.TH:\n        case html_js_1.TAG_ID.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, html_js_1.NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.COL:\n        case html_js_1.TAG_ID.COLGROUP:\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.THEAD:\n        case html_js_1.TAG_ID.TR: {\n            if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.TR: {\n            if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.TABLE: {\n            if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(html_js_1.TAG_ID.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.BODY:\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.COL:\n        case html_js_1.TAG_ID.COLGROUP:\n        case html_js_1.TAG_ID.HTML:\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope(html_js_1.TAG_ID.TD) || p.openElements.hasInTableScope(html_js_1.TAG_ID.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.TABLE:\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.THEAD:\n        case html_js_1.TAG_ID.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.BODY:\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.COL:\n        case html_js_1.TAG_ID.COLGROUP:\n        case html_js_1.TAG_ID.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.OPTION: {\n            if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, html_js_1.NS.HTML);\n            break;\n        }\n        case html_js_1.TAG_ID.OPTGROUP: {\n            if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, html_js_1.NS.HTML);\n            break;\n        }\n        case html_js_1.TAG_ID.INPUT:\n        case html_js_1.TAG_ID.KEYGEN:\n        case html_js_1.TAG_ID.TEXTAREA:\n        case html_js_1.TAG_ID.SELECT: {\n            if (p.openElements.hasInSelectScope(html_js_1.TAG_ID.SELECT)) {\n                p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== html_js_1.TAG_ID.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.SCRIPT:\n        case html_js_1.TAG_ID.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === html_js_1.TAG_ID.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === html_js_1.TAG_ID.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.OPTION: {\n            if (p.openElements.currentTagId === html_js_1.TAG_ID.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.SELECT: {\n            if (p.openElements.hasInSelectScope(html_js_1.TAG_ID.SELECT)) {\n                p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case html_js_1.TAG_ID.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === html_js_1.TAG_ID.CAPTION ||\n        tn === html_js_1.TAG_ID.TABLE ||\n        tn === html_js_1.TAG_ID.TBODY ||\n        tn === html_js_1.TAG_ID.TFOOT ||\n        tn === html_js_1.TAG_ID.THEAD ||\n        tn === html_js_1.TAG_ID.TR ||\n        tn === html_js_1.TAG_ID.TD ||\n        tn === html_js_1.TAG_ID.TH) {\n        p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === html_js_1.TAG_ID.CAPTION ||\n        tn === html_js_1.TAG_ID.TABLE ||\n        tn === html_js_1.TAG_ID.TBODY ||\n        tn === html_js_1.TAG_ID.TFOOT ||\n        tn === html_js_1.TAG_ID.THEAD ||\n        tn === html_js_1.TAG_ID.TR ||\n        tn === html_js_1.TAG_ID.TD ||\n        tn === html_js_1.TAG_ID.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case html_js_1.TAG_ID.BASE:\n        case html_js_1.TAG_ID.BASEFONT:\n        case html_js_1.TAG_ID.BGSOUND:\n        case html_js_1.TAG_ID.LINK:\n        case html_js_1.TAG_ID.META:\n        case html_js_1.TAG_ID.NOFRAMES:\n        case html_js_1.TAG_ID.SCRIPT:\n        case html_js_1.TAG_ID.STYLE:\n        case html_js_1.TAG_ID.TEMPLATE:\n        case html_js_1.TAG_ID.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case html_js_1.TAG_ID.CAPTION:\n        case html_js_1.TAG_ID.COLGROUP:\n        case html_js_1.TAG_ID.TBODY:\n        case html_js_1.TAG_ID.TFOOT:\n        case html_js_1.TAG_ID.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.TD:\n        case html_js_1.TAG_ID.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === html_js_1.TAG_ID.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped(html_js_1.TAG_ID.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === html_js_1.TAG_ID.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === html_js_1.TAG_ID.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === html_js_1.TAG_ID.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.FRAMESET: {\n            p._insertElement(token, html_js_1.NS.HTML);\n            break;\n        }\n        case html_js_1.TAG_ID.FRAME: {\n            p._appendElement(token, html_js_1.NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case html_js_1.TAG_ID.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === html_js_1.TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== html_js_1.TAG_ID.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === html_js_1.TAG_ID.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === html_js_1.TAG_ID.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case html_js_1.TAG_ID.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case html_js_1.TAG_ID.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== html_js_1.NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === html_js_1.NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === html_js_1.NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === html_js_1.TAG_ID.P || token.tagID === html_js_1.TAG_ID.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === html_js_1.NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\n/**\n * Methods for modifying the DOM structure.\n *\n * @module cheerio/manipulation\n */\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clone = exports.text = exports.toString = exports.html = exports.empty = exports.replaceWith = exports.remove = exports.insertBefore = exports.before = exports.insertAfter = exports.after = exports.wrapAll = exports.unwrap = exports.wrapInner = exports.wrap = exports.prepend = exports.append = exports.prependTo = exports.appendTo = exports._makeDomArray = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar parse_js_1 = require(\"../parse.js\");\nvar static_js_1 = require(\"../static.js\");\nvar utils_js_1 = require(\"../utils.js\");\nvar domutils_1 = require(\"domutils\");\n/**\n * Create an array of nodes, recursing into arrays and parsing strings if necessary.\n *\n * @private\n * @category Manipulation\n * @param elem - Elements to make an array of.\n * @param clone - Optionally clone nodes.\n * @returns The array of nodes.\n */\nfunction _makeDomArray(elem, clone) {\n  var _this = this;\n  if (elem == null) {\n    return [];\n  }\n  if ((0, utils_js_1.isCheerio)(elem)) {\n    return clone ? (0, utils_js_1.cloneDom)(elem.get()) : elem.get();\n  }\n  if (Array.isArray(elem)) {\n    return elem.reduce(function (newElems, el) {\n      return newElems.concat(_this._makeDomArray(el, clone));\n    }, []);\n  }\n  if (typeof elem === 'string') {\n    return this._parse(elem, this.options, false, null).children;\n  }\n  return clone ? (0, utils_js_1.cloneDom)([elem]) : [elem];\n}\nexports._makeDomArray = _makeDomArray;\nfunction _insert(concatenator) {\n  return function () {\n    var _this = this;\n    var elems = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      elems[_i] = arguments[_i];\n    }\n    var lastIdx = this.length - 1;\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n      if (!(0, domhandler_1.hasChildren)(el)) return;\n      var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n      var dom = _this._makeDomArray(domSrc, i < lastIdx);\n      concatenator(dom, el.children, el);\n    });\n  };\n}\n/**\n * Modify an array in-place, removing some number of elements and adding new\n * elements directly following them.\n *\n * @private\n * @category Manipulation\n * @param array - Target array to splice.\n * @param spliceIdx - Index at which to begin changing the array.\n * @param spliceCount - Number of elements to remove from the array.\n * @param newElems - Elements to insert into the array.\n * @param parent - The parent of the node.\n * @returns The spliced array.\n */\nfunction uniqueSplice(array, spliceIdx, spliceCount, newElems, parent) {\n  var _a, _b;\n  var spliceArgs = __spreadArray([spliceIdx, spliceCount], newElems, true);\n  var prev = spliceIdx === 0 ? null : array[spliceIdx - 1];\n  var next = spliceIdx + spliceCount >= array.length ? null : array[spliceIdx + spliceCount];\n  /*\n   * Before splicing in new elements, ensure they do not already appear in the\n   * current array.\n   */\n  for (var idx = 0; idx < newElems.length; ++idx) {\n    var node = newElems[idx];\n    var oldParent = node.parent;\n    if (oldParent) {\n      var oldSiblings = oldParent.children;\n      var prevIdx = oldSiblings.indexOf(node);\n      if (prevIdx > -1) {\n        oldParent.children.splice(prevIdx, 1);\n        if (parent === oldParent && spliceIdx > prevIdx) {\n          spliceArgs[0]--;\n        }\n      }\n    }\n    node.parent = parent;\n    if (node.prev) {\n      node.prev.next = (_a = node.next) !== null && _a !== void 0 ? _a : null;\n    }\n    if (node.next) {\n      node.next.prev = (_b = node.prev) !== null && _b !== void 0 ? _b : null;\n    }\n    node.prev = idx === 0 ? prev : newElems[idx - 1];\n    node.next = idx === newElems.length - 1 ? next : newElems[idx + 1];\n  }\n  if (prev) {\n    prev.next = newElems[0];\n  }\n  if (next) {\n    next.prev = newElems[newElems.length - 1];\n  }\n  return array.splice.apply(array, spliceArgs);\n}\n/**\n * Insert every element in the set of matched elements to the end of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').appendTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to append elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/appendTo/}\n */\nfunction appendTo(target) {\n  var appendTarget = (0, utils_js_1.isCheerio)(target) ? target : this._make(target);\n  appendTarget.append(this);\n  return this;\n}\nexports.appendTo = appendTo;\n/**\n * Insert every element in the set of matched elements to the beginning of the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').prependTo('#fruits');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to prepend elements to.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/prependTo/}\n */\nfunction prependTo(target) {\n  var prependTarget = (0, utils_js_1.isCheerio)(target) ? target : this._make(target);\n  prependTarget.prepend(this);\n  return this;\n}\nexports.prependTo = prependTo;\n/**\n * Inserts content as the _last_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').append('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //      <li class=\"plum\">Plum</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/append/}\n */\nexports.append = _insert(function (dom, children, parent) {\n  uniqueSplice(children, children.length, 0, dom, parent);\n});\n/**\n * Inserts content as the _first_ child of each of the selected elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').prepend('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @see {@link https://api.jquery.com/prepend/}\n */\nexports.prepend = _insert(function (dom, children, parent) {\n  uniqueSplice(children, 0, 0, dom, parent);\n});\nfunction _wrap(insert) {\n  return function (wrapper) {\n    var lastIdx = this.length - 1;\n    var lastParent = this.parents().last();\n    for (var i = 0; i < this.length; i++) {\n      var el = this[i];\n      var wrap_1 = typeof wrapper === 'function' ? wrapper.call(el, i, el) : typeof wrapper === 'string' && !(0, utils_js_1.isHtml)(wrapper) ? lastParent.find(wrapper).clone() : wrapper;\n      var wrapperDom = this._makeDomArray(wrap_1, i < lastIdx)[0];\n      if (!wrapperDom || !(0, domhandler_1.hasChildren)(wrapperDom)) continue;\n      var elInsertLocation = wrapperDom;\n      /*\n       * Find the deepest child. Only consider the first tag child of each node\n       * (ignore text); stop if no children are found.\n       */\n      var j = 0;\n      while (j < elInsertLocation.children.length) {\n        var child = elInsertLocation.children[j];\n        if ((0, utils_js_1.isTag)(child)) {\n          elInsertLocation = child;\n          j = 0;\n        } else {\n          j++;\n        }\n      }\n      insert(el, elInsertLocation, [wrapperDom]);\n    }\n    return this;\n  };\n}\n/**\n * The .wrap() function can take any string or object that could be passed to\n * the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. A\n * copy of this structure will be wrapped around each of the elements in the set\n * of matched elements. This method returns the original set of elements for\n * chaining purposes.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrap(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"red-fruit\">\n * //      <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrap(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <div class=\"healthy\">\n * //       <li class=\"apple\">Apple</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //       <li class=\"orange\">Orange</li>\n * //     </div>\n * //     <div class=\"healthy\">\n * //        <li class=\"plum\">Plum</li>\n * //     </div>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around each element in the selection.\n * @see {@link https://api.jquery.com/wrap/}\n */\nexports.wrap = _wrap(function (el, elInsertLocation, wrapperDom) {\n  var parent = el.parent;\n  if (!parent) return;\n  var siblings = parent.children;\n  var index = siblings.indexOf(el);\n  (0, parse_js_1.update)([el], elInsertLocation);\n  /*\n   * The previous operation removed the current element from the `siblings`\n   * array, so the `dom` array can be inserted without removing any\n   * additional elements.\n   */\n  uniqueSplice(siblings, index, 0, wrapperDom, parent);\n});\n/**\n * The .wrapInner() function can take any string or object that could be passed\n * to the $() factory function to specify a DOM structure. This structure may be\n * nested several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around the content of each of the elements in the\n * set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const redFruit = $('<div class=\"red-fruit\"></div>');\n * $('.apple').wrapInner(redFruit);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"red-fruit\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"pear\">Pear</li>\n * //   </ul>\n *\n * const healthy = $('<div class=\"healthy\"></div>');\n * $('li').wrapInner(healthy);\n *\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">\n * //       <div class=\"healthy\">Apple</div>\n * //     </li>\n * //     <li class=\"orange\">\n * //       <div class=\"healthy\">Orange</div>\n * //     </li>\n * //     <li class=\"pear\">\n * //       <div class=\"healthy\">Pear</div>\n * //     </li>\n * //   </ul>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around the content of each element\n *   in the selection.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/wrapInner/}\n */\nexports.wrapInner = _wrap(function (el, elInsertLocation, wrapperDom) {\n  if (!(0, domhandler_1.hasChildren)(el)) return;\n  (0, parse_js_1.update)(el.children, elInsertLocation);\n  (0, parse_js_1.update)(wrapperDom, el);\n});\n/**\n * The .unwrap() function, removes the parents of the set of matched elements\n * from the DOM, leaving the matched elements in their place.\n *\n * @category Manipulation\n * @example <caption>without selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <div><p>Hello</p></div>\\n  <div><p>World</p></div>\\n</div>'\n * );\n * $('#test p').unwrap();\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @example <caption>with selector</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div id=test>\\n  <p>Hello</p>\\n  <b><p>World</p></b>\\n</div>'\n * );\n * $('#test p').unwrap('b');\n *\n * //=> <div id=test>\n * //     <p>Hello</p>\n * //     <p>World</p>\n * //   </div>\n * ```\n *\n * @param selector - A selector to check the parent element against. If an\n *   element's parent does not match the selector, the element won't be unwrapped.\n * @returns The instance itself, for chaining.\n * @see {@link https://api.jquery.com/unwrap/}\n */\nfunction unwrap(selector) {\n  var _this = this;\n  this.parent(selector).not('body').each(function (_, el) {\n    _this._make(el).replaceWith(el.children);\n  });\n  return this;\n}\nexports.unwrap = unwrap;\n/**\n * The .wrapAll() function can take any string or object that could be passed to\n * the $() function to specify a DOM structure. This structure may be nested\n * several levels deep, but should contain only one inmost element. The\n * structure will be wrapped around all of the elements in the set of matched\n * elements, as a single group.\n *\n * @category Manipulation\n * @example <caption>With markup passed to `wrapAll`</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<div class=\"container\"><div class=\"inner\">First</div><div class=\"inner\">Second</div></div>'\n * );\n * $('.inner').wrapAll(\"<div class='new'></div>\");\n *\n * //=> <div class=\"container\">\n * //     <div class='new'>\n * //       <div class=\"inner\">First</div>\n * //       <div class=\"inner\">Second</div>\n * //     </div>\n * //   </div>\n * ```\n *\n * @example <caption>With an existing cheerio instance</caption>\n *\n * ```js\n * const $ = cheerio.load(\n *   '<span>Span 1</span><strong>Strong</strong><span>Span 2</span>'\n * );\n * const wrap = $('<div><p><em><b></b></em></p></div>');\n * $('span').wrapAll(wrap);\n *\n * //=> <div>\n * //     <p>\n * //       <em>\n * //         <b>\n * //           <span>Span 1</span>\n * //           <span>Span 2</span>\n * //         </b>\n * //       </em>\n * //     </p>\n * //   </div>\n * //   <strong>Strong</strong>\n * ```\n *\n * @param wrapper - The DOM structure to wrap around all matched elements in the\n *   selection.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/wrapAll/}\n */\nfunction wrapAll(wrapper) {\n  var el = this[0];\n  if (el) {\n    var wrap_2 = this._make(typeof wrapper === 'function' ? wrapper.call(el, 0, el) : wrapper).insertBefore(el);\n    // If html is given as wrapper, wrap may contain text elements\n    var elInsertLocation = void 0;\n    for (var i = 0; i < wrap_2.length; i++) {\n      if (wrap_2[i].type === 'tag') elInsertLocation = wrap_2[i];\n    }\n    var j = 0;\n    /*\n     * Find the deepest child. Only consider the first tag child of each node\n     * (ignore text); stop if no children are found.\n     */\n    while (elInsertLocation && j < elInsertLocation.children.length) {\n      var child = elInsertLocation.children[j];\n      if (child.type === 'tag') {\n        elInsertLocation = child;\n        j = 0;\n      } else {\n        j++;\n      }\n    }\n    if (elInsertLocation) this._make(elInsertLocation).append(this);\n  }\n  return this;\n}\nexports.wrapAll = wrapAll;\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content next to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').after('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert after each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/after/}\n */\nfunction after() {\n  var _this = this;\n  var elems = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    elems[_i] = arguments[_i];\n  }\n  var lastIdx = this.length - 1;\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n    if (!(0, domhandler_1.hasChildren)(el) || !parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n    var dom = _this._makeDomArray(domSrc, i < lastIdx);\n    // Add element after `this` element\n    uniqueSplice(siblings, index + 1, 0, dom, parent);\n  });\n}\nexports.after = after;\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements after the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertAfter('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements after.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertAfter/}\n */\nfunction insertAfter(target) {\n  var _this = this;\n  if (typeof target === 'string') {\n    target = this._make(target);\n  }\n  this.remove();\n  var clones = [];\n  this._makeDomArray(target).forEach(function (el) {\n    var clonedSelf = _this.clone().toArray();\n    var parent = el.parent;\n    if (!parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index + 1, 0, clonedSelf, parent);\n    clones.push.apply(clones, clonedSelf);\n  });\n  return this._make(clones);\n}\nexports.insertAfter = insertAfter;\n/* eslint-disable jsdoc/check-param-names*/\n/**\n * Insert content previous to each element in the set of matched elements.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.apple').before('<li class=\"plum\">Plum</li>');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param content - HTML string, DOM element, array of DOM elements or Cheerio\n *   to insert before each element in the set of matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/before/}\n */\nfunction before() {\n  var _this = this;\n  var elems = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    elems[_i] = arguments[_i];\n  }\n  var lastIdx = this.length - 1;\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n    if (!(0, domhandler_1.hasChildren)(el) || !parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    var domSrc = typeof elems[0] === 'function' ? elems[0].call(el, i, _this._render(el.children)) : elems;\n    var dom = _this._makeDomArray(domSrc, i < lastIdx);\n    // Add element before `el` element\n    uniqueSplice(siblings, index, 0, dom, parent);\n  });\n}\nexports.before = before;\n/* eslint-enable jsdoc/check-param-names*/\n/**\n * Insert every element in the set of matched elements before the target.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('<li class=\"plum\">Plum</li>').insertBefore('.apple');\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"plum\">Plum</li>\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //      <li class=\"pear\">Pear</li>\n * //    </ul>\n * ```\n *\n * @param target - Element to insert elements before.\n * @returns The set of newly inserted elements.\n * @see {@link https://api.jquery.com/insertBefore/}\n */\nfunction insertBefore(target) {\n  var _this = this;\n  var targetArr = this._make(target);\n  this.remove();\n  var clones = [];\n  (0, utils_js_1.domEach)(targetArr, function (el) {\n    var clonedSelf = _this.clone().toArray();\n    var parent = el.parent;\n    if (!parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var index = siblings.indexOf(el);\n    // If not found, move on\n    /* istanbul ignore next */\n    if (index < 0) return;\n    // Add cloned `this` element(s) after target element\n    uniqueSplice(siblings, index, 0, clonedSelf, parent);\n    clones.push.apply(clones, clonedSelf);\n  });\n  return this._make(clones);\n}\nexports.insertBefore = insertBefore;\n/**\n * Removes the set of matched elements from the DOM and all their children.\n * `selector` filters the set of matched elements to be removed.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('.pear').remove();\n * $.html();\n * //=>  <ul id=\"fruits\">\n * //      <li class=\"apple\">Apple</li>\n * //      <li class=\"orange\">Orange</li>\n * //    </ul>\n * ```\n *\n * @param selector - Optional selector for elements to remove.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/remove/}\n */\nfunction remove(selector) {\n  // Filter if we have selector\n  var elems = selector ? this.filter(selector) : this;\n  (0, utils_js_1.domEach)(elems, function (el) {\n    (0, domutils_1.removeElement)(el);\n    el.prev = el.next = el.parent = null;\n  });\n  return this;\n}\nexports.remove = remove;\n/**\n * Replaces matched elements with `content`.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const plum = $('<li class=\"plum\">Plum</li>');\n * $('.pear').replaceWith(plum);\n * $.html();\n * //=> <ul id=\"fruits\">\n * //     <li class=\"apple\">Apple</li>\n * //     <li class=\"orange\">Orange</li>\n * //     <li class=\"plum\">Plum</li>\n * //   </ul>\n * ```\n *\n * @param content - Replacement for matched elements.\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/replaceWith/}\n */\nfunction replaceWith(content) {\n  var _this = this;\n  return (0, utils_js_1.domEach)(this, function (el, i) {\n    var parent = el.parent;\n    if (!parent) {\n      return;\n    }\n    var siblings = parent.children;\n    var cont = typeof content === 'function' ? content.call(el, i, el) : content;\n    var dom = _this._makeDomArray(cont);\n    /*\n     * In the case that `dom` contains nodes that already exist in other\n     * structures, ensure those nodes are properly removed.\n     */\n    (0, parse_js_1.update)(dom, null);\n    var index = siblings.indexOf(el);\n    // Completely remove old element\n    uniqueSplice(siblings, index, 1, dom, parent);\n    if (!dom.includes(el)) {\n      el.parent = el.prev = el.next = null;\n    }\n  });\n}\nexports.replaceWith = replaceWith;\n/**\n * Empties an element, removing all its children.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * $('ul').empty();\n * $.html();\n * //=>  <ul id=\"fruits\"></ul>\n * ```\n *\n * @returns The instance itself.\n * @see {@link https://api.jquery.com/empty/}\n */\nfunction empty() {\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    el.children.length = 0;\n  });\n}\nexports.empty = empty;\nfunction html(str) {\n  var _this = this;\n  if (str === undefined) {\n    var el = this[0];\n    if (!el || !(0, domhandler_1.hasChildren)(el)) return null;\n    return this._render(el.children);\n  }\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    var content = (0, utils_js_1.isCheerio)(str) ? str.toArray() : _this._parse(\"\".concat(str), _this.options, false, el).children;\n    (0, parse_js_1.update)(content, el);\n  });\n}\nexports.html = html;\n/**\n * Turns the collection to a string. Alias for `.html()`.\n *\n * @category Manipulation\n * @returns The rendered document.\n */\nfunction toString() {\n  return this._render(this);\n}\nexports.toString = toString;\nfunction text(str) {\n  var _this = this;\n  // If `str` is undefined, act as a \"getter\"\n  if (str === undefined) {\n    return (0, static_js_1.text)(this);\n  }\n  if (typeof str === 'function') {\n    // Function support\n    return (0, utils_js_1.domEach)(this, function (el, i) {\n      return _this._make(el).text(str.call(el, i, (0, static_js_1.text)([el])));\n    });\n  }\n  // Append text node to each selected elements\n  return (0, utils_js_1.domEach)(this, function (el) {\n    if (!(0, domhandler_1.hasChildren)(el)) return;\n    el.children.forEach(function (child) {\n      child.next = child.prev = child.parent = null;\n    });\n    var textNode = new domhandler_1.Text(\"\".concat(str));\n    (0, parse_js_1.update)(textNode, el);\n  });\n}\nexports.text = text;\n/**\n * Clone the cheerio object.\n *\n * @category Manipulation\n * @example\n *\n * ```js\n * const moreFruit = $('#fruits').clone();\n * ```\n *\n * @returns The cloned object.\n * @see {@link https://api.jquery.com/clone/}\n */\nfunction clone() {\n  return this._make((0, utils_js_1.cloneDom)(this.get()));\n}\nexports.clone = clone;","map":{"version":3,"names":["domhandler_1","require","parse_js_1","static_js_1","utils_js_1","domutils_1","_makeDomArray","elem","clone","_this","isCheerio","cloneDom","get","Array","isArray","reduce","newElems","el","concat","_parse","options","children","exports","_insert","concatenator","elems","_i","arguments","length","lastIdx","domEach","i","hasChildren","domSrc","call","_render","dom","uniqueSplice","array","spliceIdx","spliceCount","parent","spliceArgs","__spreadArray","prev","next","idx","node","oldParent","oldSiblings","prevIdx","indexOf","splice","_a","_b","apply","appendTo","target","appendTarget","_make","append","prependTo","prependTarget","prepend","_wrap","insert","wrapper","lastParent","parents","last","wrap_1","isHtml","find","wrapperDom","elInsertLocation","j","child","isTag","wrap","siblings","index","update","wrapInner","unwrap","selector","not","each","_","replaceWith","wrapAll","wrap_2","insertBefore","type","after","insertAfter","remove","clones","forEach","clonedSelf","toArray","push","before","targetArr","filter","removeElement","content","cont","includes","empty","html","str","undefined","toString","text","textNode","Text"],"sources":["https://raw.githubusercontent.com/cheeriojs/cheerio/7b260a2233b112375dbeb261013e142cbe48d81d/src/api/manipulation.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.flatten = void 0;\nvar defaultOpts = {\n  xml: false,\n  decodeEntities: true\n};\n/** Cheerio default options. */\nexports.default = defaultOpts;\nvar xmlModeDefault = {\n  _useHtmlParser2: true,\n  xmlMode: true\n};\n/**\n * Flatten the options for Cheerio.\n *\n * This will set `_useHtmlParser2` to true if `xml` is set to true.\n *\n * @param options - The options to flatten.\n * @returns The flattened options.\n */\nfunction flatten(options) {\n  return (options === null || options === void 0 ? void 0 : options.xml) ? typeof options.xml === 'boolean' ? xmlModeDefault : __assign(__assign({}, xmlModeDefault), options.xml) : options !== null && options !== void 0 ? options : undefined;\n}\nexports.flatten = flatten;","map":{"version":3,"names":["defaultOpts","xml","decodeEntities","exports","default","xmlModeDefault","_useHtmlParser2","xmlMode","flatten","options","__assign","undefined"],"sources":["https://raw.githubusercontent.com/cheeriojs/cheerio/7b260a2233b112375dbeb261013e142cbe48d81d/src/options.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;AAiFA,IAAMA,WAAW,GAAmB;EAClCC,GAAG,EAAE,KAAK;EACVC,cAAc,EAAE;CACjB;AAED;AACAC,OAAA,CAAAC,OAAA,GAAeJ,WAAW;AAE1B,IAAMK,cAAc,GAAoB;EACtCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;CACV;AAED;;;;;;;;AAQA,SAAgBC,OAAOA,CACrBC,OAA+B;EAE/B,OAAO,CAAAA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAER,GAAG,IACf,OAAOQ,OAAO,CAACR,GAAG,KAAK,SAAS,GAC9BI,cAAc,GACfK,QAAA,CAAAA,QAAA,KAAML,cAAc,GAAKI,OAAO,CAACR,GAAG,CAAE,GACvCQ,OAAO,aAAPA,OAAO,cAAPA,OAAO,GAAIE,SAAS;AAC1B;AARAR,OAAA,CAAAK,OAAA,GAAAA,OAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
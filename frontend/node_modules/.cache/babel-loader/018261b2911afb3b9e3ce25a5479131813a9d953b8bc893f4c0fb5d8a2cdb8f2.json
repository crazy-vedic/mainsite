{"ast":null,"code":"var crypto = require('crypto');\nfunction sha(key, body, algorithm) {\n  return crypto.createHmac(algorithm, key).update(body).digest('base64');\n}\nfunction rsa(key, body) {\n  return crypto.createSign('RSA-SHA1').update(body).sign(key, 'base64');\n}\nfunction rfc3986(str) {\n  return encodeURIComponent(str).replace(/!/g, '%21').replace(/\\*/g, '%2A').replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/'/g, '%27');\n}\n\n// Maps object to bi-dimensional array\n// Converts { foo: 'A', bar: [ 'b', 'B' ]} to\n// [ ['foo', 'A'], ['bar', 'b'], ['bar', 'B'] ]\nfunction map(obj) {\n  var key,\n    val,\n    arr = [];\n  for (key in obj) {\n    val = obj[key];\n    if (Array.isArray(val)) for (var i = 0; i < val.length; i++) arr.push([key, val[i]]);else if (typeof val === 'object') for (var prop in val) arr.push([key + '[' + prop + ']', val[prop]]);else arr.push([key, val]);\n  }\n  return arr;\n}\n\n// Compare function for sort\nfunction compare(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\nfunction generateBase(httpMethod, base_uri, params) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth and \n  // https://dev.twitter.com/docs/auth/creating-signature\n\n  // Parameter normalization\n  // http://tools.ietf.org/html/rfc5849#section-3.4.1.3.2\n  var normalized = map(params)\n  // 1.  First, the name and value of each parameter are encoded\n  .map(function (p) {\n    return [rfc3986(p[0]), rfc3986(p[1] || '')];\n  })\n  // 2.  The parameters are sorted by name, using ascending byte value\n  //     ordering.  If two or more parameters share the same name, they\n  //     are sorted by their value.\n  .sort(function (a, b) {\n    return compare(a[0], b[0]) || compare(a[1], b[1]);\n  })\n  // 3.  The name of each parameter is concatenated to its corresponding\n  //     value using an \"=\" character (ASCII code 61) as a separator, even\n  //     if the value is empty.\n  .map(function (p) {\n    return p.join('=');\n  })\n  // 4.  The sorted name/value pairs are concatenated together into a\n  //     single string by using an \"&\" character (ASCII code 38) as\n  //     separator.\n  .join('&');\n  var base = [rfc3986(httpMethod ? httpMethod.toUpperCase() : 'GET'), rfc3986(base_uri), rfc3986(normalized)].join('&');\n  return base;\n}\nfunction hmacsign(httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params);\n  var key = [consumer_secret || '', token_secret || ''].map(rfc3986).join('&');\n  return sha(key, base, 'sha1');\n}\nfunction hmacsign256(httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params);\n  var key = [consumer_secret || '', token_secret || ''].map(rfc3986).join('&');\n  return sha(key, base, 'sha256');\n}\nfunction rsasign(httpMethod, base_uri, params, private_key, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params);\n  var key = private_key || '';\n  return rsa(key, base);\n}\nfunction plaintext(consumer_secret, token_secret) {\n  var key = [consumer_secret || '', token_secret || ''].map(rfc3986).join('&');\n  return key;\n}\nfunction sign(signMethod, httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var method;\n  var skipArgs = 1;\n  switch (signMethod) {\n    case 'RSA-SHA1':\n      method = rsasign;\n      break;\n    case 'HMAC-SHA1':\n      method = hmacsign;\n      break;\n    case 'HMAC-SHA256':\n      method = hmacsign256;\n      break;\n    case 'PLAINTEXT':\n      method = plaintext;\n      skipArgs = 4;\n      break;\n    default:\n      throw new Error('Signature method not supported: ' + signMethod);\n  }\n  return method.apply(null, [].slice.call(arguments, skipArgs));\n}\nexports.hmacsign = hmacsign;\nexports.hmacsign256 = hmacsign256;\nexports.rsasign = rsasign;\nexports.plaintext = plaintext;\nexports.sign = sign;\nexports.rfc3986 = rfc3986;\nexports.generateBase = generateBase;","map":{"version":3,"names":["crypto","require","sha","key","body","algorithm","createHmac","update","digest","rsa","createSign","sign","rfc3986","str","encodeURIComponent","replace","map","obj","val","arr","Array","isArray","i","length","push","prop","compare","a","b","generateBase","httpMethod","base_uri","params","normalized","p","sort","join","base","toUpperCase","hmacsign","consumer_secret","token_secret","hmacsign256","rsasign","private_key","plaintext","signMethod","method","skipArgs","Error","apply","slice","call","arguments","exports"],"sources":["C:/Users/vedic/node_modules/oauth-sign/index.js"],"sourcesContent":["var crypto = require('crypto')\n\nfunction sha (key, body, algorithm) {\n  return crypto.createHmac(algorithm, key).update(body).digest('base64')\n}\n\nfunction rsa (key, body) {\n  return crypto.createSign('RSA-SHA1').update(body).sign(key, 'base64')\n}\n\nfunction rfc3986 (str) {\n  return encodeURIComponent(str)\n    .replace(/!/g,'%21')\n    .replace(/\\*/g,'%2A')\n    .replace(/\\(/g,'%28')\n    .replace(/\\)/g,'%29')\n    .replace(/'/g,'%27')\n}\n\n// Maps object to bi-dimensional array\n// Converts { foo: 'A', bar: [ 'b', 'B' ]} to\n// [ ['foo', 'A'], ['bar', 'b'], ['bar', 'B'] ]\nfunction map (obj) {\n  var key, val, arr = []\n  for (key in obj) {\n    val = obj[key]\n    if (Array.isArray(val))\n      for (var i = 0; i < val.length; i++)\n        arr.push([key, val[i]])\n    else if (typeof val === 'object')\n      for (var prop in val)\n        arr.push([key + '[' + prop + ']', val[prop]])\n    else\n      arr.push([key, val])\n  }\n  return arr\n}\n\n// Compare function for sort\nfunction compare (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n}\n\nfunction generateBase (httpMethod, base_uri, params) {\n  // adapted from https://dev.twitter.com/docs/auth/oauth and \n  // https://dev.twitter.com/docs/auth/creating-signature\n\n  // Parameter normalization\n  // http://tools.ietf.org/html/rfc5849#section-3.4.1.3.2\n  var normalized = map(params)\n  // 1.  First, the name and value of each parameter are encoded\n  .map(function (p) {\n    return [ rfc3986(p[0]), rfc3986(p[1] || '') ]\n  })\n  // 2.  The parameters are sorted by name, using ascending byte value\n  //     ordering.  If two or more parameters share the same name, they\n  //     are sorted by their value.\n  .sort(function (a, b) {\n    return compare(a[0], b[0]) || compare(a[1], b[1])\n  })\n  // 3.  The name of each parameter is concatenated to its corresponding\n  //     value using an \"=\" character (ASCII code 61) as a separator, even\n  //     if the value is empty.\n  .map(function (p) { return p.join('=') })\n   // 4.  The sorted name/value pairs are concatenated together into a\n   //     single string by using an \"&\" character (ASCII code 38) as\n   //     separator.\n  .join('&')\n\n  var base = [\n    rfc3986(httpMethod ? httpMethod.toUpperCase() : 'GET'),\n    rfc3986(base_uri),\n    rfc3986(normalized)\n  ].join('&')\n\n  return base\n}\n\nfunction hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params)\n  var key = [\n    consumer_secret || '',\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return sha(key, base, 'sha1')\n}\n\nfunction hmacsign256 (httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params)\n  var key = [\n    consumer_secret || '',\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return sha(key, base, 'sha256')\n}\n\nfunction rsasign (httpMethod, base_uri, params, private_key, token_secret) {\n  var base = generateBase(httpMethod, base_uri, params)\n  var key = private_key || ''\n\n  return rsa(key, base)\n}\n\nfunction plaintext (consumer_secret, token_secret) {\n  var key = [\n    consumer_secret || '',\n    token_secret || ''\n  ].map(rfc3986).join('&')\n\n  return key\n}\n\nfunction sign (signMethod, httpMethod, base_uri, params, consumer_secret, token_secret) {\n  var method\n  var skipArgs = 1\n\n  switch (signMethod) {\n    case 'RSA-SHA1':\n      method = rsasign\n      break\n    case 'HMAC-SHA1':\n      method = hmacsign\n      break\n    case 'HMAC-SHA256':\n      method = hmacsign256\n      break\n    case 'PLAINTEXT':\n      method = plaintext\n      skipArgs = 4\n      break\n    default:\n     throw new Error('Signature method not supported: ' + signMethod)\n  }\n\n  return method.apply(null, [].slice.call(arguments, skipArgs))\n}\n\nexports.hmacsign = hmacsign\nexports.hmacsign256 = hmacsign256\nexports.rsasign = rsasign\nexports.plaintext = plaintext\nexports.sign = sign\nexports.rfc3986 = rfc3986\nexports.generateBase = generateBase"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
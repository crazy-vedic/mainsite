{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.serializeArray = exports.serialize = void 0;\nvar utils_js_1 = require(\"../utils.js\");\n/*\n * https://github.com/jquery/jquery/blob/2.1.3/src/manipulation/var/rcheckableType.js\n * https://github.com/jquery/jquery/blob/2.1.3/src/serialize.js\n */\nvar submittableSelector = 'input,select,textarea,keygen';\nvar r20 = /%20/g;\nvar rCRLF = /\\r?\\n/g;\n/**\n * Encode a set of form elements as a string for submission.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serialize();\n * //=> 'foo=bar'\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serialize/}\n */\nfunction serialize() {\n  // Convert form elements into name/value objects\n  var arr = this.serializeArray();\n  // Serialize each element into a key/value string\n  var retArr = arr.map(function (data) {\n    return \"\".concat(encodeURIComponent(data.name), \"=\").concat(encodeURIComponent(data.value));\n  });\n  // Return the resulting serialization\n  return retArr.join('&').replace(r20, '+');\n}\nexports.serialize = serialize;\n/**\n * Encode a set of form elements as an array of names and values.\n *\n * @category Forms\n * @example\n *\n * ```js\n * $('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray();\n * //=> [ { name: 'foo', value: 'bar' } ]\n * ```\n *\n * @returns The serialized form.\n * @see {@link https://api.jquery.com/serializeArray/}\n */\nfunction serializeArray() {\n  var _this = this;\n  // Resolve all form elements from either forms or collections of form elements\n  return this.map(function (_, elem) {\n    var $elem = _this._make(elem);\n    if ((0, utils_js_1.isTag)(elem) && elem.name === 'form') {\n      return $elem.find(submittableSelector).toArray();\n    }\n    return $elem.filter(submittableSelector).toArray();\n  }).filter(\n  // Verify elements have a name (`attr.name`) and are not disabled (`:enabled`)\n  '[name!=\"\"]:enabled' +\n  // And cannot be clicked (`[type=submit]`) or are used in `x-www-form-urlencoded` (`[type=file]`)\n  ':not(:submit, :button, :image, :reset, :file)' +\n  // And are either checked/don't have a checkable state\n  ':matches([checked], :not(:checkbox, :radio))'\n  // Convert each of the elements to its value(s)\n  ).map(function (_, elem) {\n    var _a;\n    var $elem = _this._make(elem);\n    var name = $elem.attr('name'); // We have filtered for elements with a name before.\n    // If there is no value set (e.g. `undefined`, `null`), then default value to empty\n    var value = (_a = $elem.val()) !== null && _a !== void 0 ? _a : '';\n    // If we have an array of values (e.g. `<select multiple>`), return an array of key/value pairs\n    if (Array.isArray(value)) {\n      return value.map(function (val) {\n        /*\n         * We trim replace any line endings (e.g. `\\r` or `\\r\\n` with `\\r\\n`) to guarantee consistency across platforms\n         * These can occur inside of `<textarea>'s`\n         */\n        return {\n          name: name,\n          value: val.replace(rCRLF, '\\r\\n')\n        };\n      });\n    }\n    // Otherwise (e.g. `<input type=\"text\">`, return only one key/value pair\n    return {\n      name: name,\n      value: value.replace(rCRLF, '\\r\\n')\n    };\n  }).toArray();\n}\nexports.serializeArray = serializeArray;","map":{"version":3,"names":["utils_js_1","require","submittableSelector","r20","rCRLF","serialize","arr","serializeArray","retArr","map","data","concat","encodeURIComponent","name","value","join","replace","exports","_this","_","elem","$elem","_make","isTag","find","toArray","filter","attr","_a","val","Array","isArray"],"sources":["https://raw.githubusercontent.com/cheeriojs/cheerio/7b260a2233b112375dbeb261013e142cbe48d81d/src/api/forms.ts"],"sourcesContent":[null],"mappings":";;;;;;AAEA,IAAAA,UAAA,GAAAC,OAAA;AAEA;;;;AAIA,IAAMC,mBAAmB,GAAG,8BAA8B;AAC1D,IAAMC,GAAG,GAAG,MAAM;AAClB,IAAMC,KAAK,GAAG,QAAQ;AAEtB;;;;;;;;;;;;;;AAcA,SAAgBC,SAASA,CAAA;EACvB;EACA,IAAMC,GAAG,GAAG,IAAI,CAACC,cAAc,EAAE;EAEjC;EACA,IAAMC,MAAM,GAAGF,GAAG,CAACG,GAAG,CACpB,UAACC,IAAI;IACH,UAAAC,MAAA,CAAGC,kBAAkB,CAACF,IAAI,CAACG,IAAI,CAAC,OAAAF,MAAA,CAAIC,kBAAkB,CAACF,IAAI,CAACI,KAAK,CAAC,CAAE;EAApE,CAAoE,CACvE;EAED;EACA,OAAON,MAAM,CAACO,IAAI,CAAC,GAAG,CAAC,CAACC,OAAO,CAACb,GAAG,EAAE,GAAG,CAAC;AAC3C;AAZAc,OAAA,CAAAZ,SAAA,GAAAA,SAAA;AAmBA;;;;;;;;;;;;;;AAcA,SAAgBE,cAAcA,CAAA;EAA9B,IAAAW,KAAA;EAGE;EACA,OAAO,IAAI,CAACT,GAAG,CAAC,UAACU,CAAC,EAAEC,IAAI;IACtB,IAAMC,KAAK,GAAGH,KAAI,CAACI,KAAK,CAACF,IAAI,CAAC;IAC9B,IAAI,IAAApB,UAAA,CAAAuB,KAAK,EAACH,IAAI,CAAC,IAAIA,IAAI,CAACP,IAAI,KAAK,MAAM,EAAE;MACvC,OAAOQ,KAAK,CAACG,IAAI,CAACtB,mBAAmB,CAAC,CAACuB,OAAO,EAAE;;IAElD,OAAOJ,KAAK,CAACK,MAAM,CAACxB,mBAAmB,CAAC,CAACuB,OAAO,EAAE;EACpD,CAAC,CAAC,CACCC,MAAM;EACL;EACA,oBAAoB;EAClB;EACA,+CAA+C;EAC/C;EACA;EACF;GACD,CACAjB,GAAG,CAA2B,UAACU,CAAC,EAAEC,IAAI;;IACrC,IAAMC,KAAK,GAAGH,KAAI,CAACI,KAAK,CAACF,IAAI,CAAC;IAC9B,IAAMP,IAAI,GAAGQ,KAAK,CAACM,IAAI,CAAC,MAAM,CAAW,CAAC,CAAC;IAC3C;IACA,IAAMb,KAAK,GAAG,CAAAc,EAAA,GAAAP,KAAK,CAACQ,GAAG,EAAE,cAAAD,EAAA,cAAAA,EAAA,GAAI,EAAE;IAE/B;IACA,IAAIE,KAAK,CAACC,OAAO,CAACjB,KAAK,CAAC,EAAE;MACxB,OAAOA,KAAK,CAACL,GAAG,CAAC,UAACoB,GAAG;QACnB;;;;QAIA,OAAC;UAAEhB,IAAI,EAAAA,IAAA;UAAEC,KAAK,EAAEe,GAAG,CAACb,OAAO,CAACZ,KAAK,EAAE,MAAM;QAAC,CAAE;MAA5C,CAA6C,CAC9C;;IAEH;IACA,OAAO;MAAES,IAAI,EAAAA,IAAA;MAAEC,KAAK,EAAEA,KAAK,CAACE,OAAO,CAACZ,KAAK,EAAE,MAAM;IAAC,CAAE;EACtD,CAAC,CAAC,CACDqB,OAAO,EAAE;AACd;AAxCAR,OAAA,CAAAV,cAAA,GAAAA,cAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uniqueSort = exports.compareDocumentPosition = exports.DocumentPosition = exports.removeSubsets = void 0;\nvar domhandler_1 = require(\"domhandler\");\n/**\n * Given an array of nodes, remove any member that is contained by another\n * member.\n *\n * @category Helpers\n * @param nodes Nodes to filter.\n * @returns Remaining nodes that aren't contained by other nodes.\n */\nfunction removeSubsets(nodes) {\n  var idx = nodes.length;\n  /*\n   * Check if each node (or one of its ancestors) is already contained in the\n   * array.\n   */\n  while (--idx >= 0) {\n    var node = nodes[idx];\n    /*\n     * Remove the node if it is not unique.\n     * We are going through the array from the end, so we only\n     * have to check nodes that preceed the node under consideration in the array.\n     */\n    if (idx > 0 && nodes.lastIndexOf(node, idx - 1) >= 0) {\n      nodes.splice(idx, 1);\n      continue;\n    }\n    for (var ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n      if (nodes.includes(ancestor)) {\n        nodes.splice(idx, 1);\n        break;\n      }\n    }\n  }\n  return nodes;\n}\nexports.removeSubsets = removeSubsets;\n/**\n * @category Helpers\n * @see {@link http://dom.spec.whatwg.org/#dom-node-comparedocumentposition}\n */\nvar DocumentPosition;\n(function (DocumentPosition) {\n  DocumentPosition[DocumentPosition[\"DISCONNECTED\"] = 1] = \"DISCONNECTED\";\n  DocumentPosition[DocumentPosition[\"PRECEDING\"] = 2] = \"PRECEDING\";\n  DocumentPosition[DocumentPosition[\"FOLLOWING\"] = 4] = \"FOLLOWING\";\n  DocumentPosition[DocumentPosition[\"CONTAINS\"] = 8] = \"CONTAINS\";\n  DocumentPosition[DocumentPosition[\"CONTAINED_BY\"] = 16] = \"CONTAINED_BY\";\n})(DocumentPosition = exports.DocumentPosition || (exports.DocumentPosition = {}));\n/**\n * Compare the position of one node against another node in any other document,\n * returning a bitmask with the values from {@link DocumentPosition}.\n *\n * Document order:\n * > There is an ordering, document order, defined on all the nodes in the\n * > document corresponding to the order in which the first character of the\n * > XML representation of each node occurs in the XML representation of the\n * > document after expansion of general entities. Thus, the document element\n * > node will be the first node. Element nodes occur before their children.\n * > Thus, document order orders element nodes in order of the occurrence of\n * > their start-tag in the XML (after expansion of entities). The attribute\n * > nodes of an element occur after the element and before its children. The\n * > relative order of attribute nodes is implementation-dependent.\n *\n * Source:\n * http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order\n *\n * @category Helpers\n * @param nodeA The first node to use in the comparison\n * @param nodeB The second node to use in the comparison\n * @returns A bitmask describing the input nodes' relative position.\n *\n * See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for\n * a description of these values.\n */\nfunction compareDocumentPosition(nodeA, nodeB) {\n  var aParents = [];\n  var bParents = [];\n  if (nodeA === nodeB) {\n    return 0;\n  }\n  var current = (0, domhandler_1.hasChildren)(nodeA) ? nodeA : nodeA.parent;\n  while (current) {\n    aParents.unshift(current);\n    current = current.parent;\n  }\n  current = (0, domhandler_1.hasChildren)(nodeB) ? nodeB : nodeB.parent;\n  while (current) {\n    bParents.unshift(current);\n    current = current.parent;\n  }\n  var maxIdx = Math.min(aParents.length, bParents.length);\n  var idx = 0;\n  while (idx < maxIdx && aParents[idx] === bParents[idx]) {\n    idx++;\n  }\n  if (idx === 0) {\n    return DocumentPosition.DISCONNECTED;\n  }\n  var sharedParent = aParents[idx - 1];\n  var siblings = sharedParent.children;\n  var aSibling = aParents[idx];\n  var bSibling = bParents[idx];\n  if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {\n    if (sharedParent === nodeB) {\n      return DocumentPosition.FOLLOWING | DocumentPosition.CONTAINED_BY;\n    }\n    return DocumentPosition.FOLLOWING;\n  }\n  if (sharedParent === nodeA) {\n    return DocumentPosition.PRECEDING | DocumentPosition.CONTAINS;\n  }\n  return DocumentPosition.PRECEDING;\n}\nexports.compareDocumentPosition = compareDocumentPosition;\n/**\n * Sort an array of nodes based on their relative position in the document,\n * removing any duplicate nodes. If the array contains nodes that do not belong\n * to the same document, sort order is unspecified.\n *\n * @category Helpers\n * @param nodes Array of DOM nodes.\n * @returns Collection of unique nodes, sorted in document order.\n */\nfunction uniqueSort(nodes) {\n  nodes = nodes.filter(function (node, i, arr) {\n    return !arr.includes(node, i + 1);\n  });\n  nodes.sort(function (a, b) {\n    var relative = compareDocumentPosition(a, b);\n    if (relative & DocumentPosition.PRECEDING) {\n      return -1;\n    } else if (relative & DocumentPosition.FOLLOWING) {\n      return 1;\n    }\n    return 0;\n  });\n  return nodes;\n}\nexports.uniqueSort = uniqueSort;","map":{"version":3,"names":["domhandler_1","require","removeSubsets","nodes","idx","length","node","lastIndexOf","splice","ancestor","parent","includes","exports","DocumentPosition","compareDocumentPosition","nodeA","nodeB","aParents","bParents","current","hasChildren","unshift","maxIdx","Math","min","DISCONNECTED","sharedParent","siblings","children","aSibling","bSibling","indexOf","FOLLOWING","CONTAINED_BY","PRECEDING","CONTAINS","uniqueSort","filter","i","arr","sort","a","b","relative"],"sources":["https://raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/helpers.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * JavaScript code in this page\n *\n * Copyright 2023 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * JavaScript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = root.pdfjsLib = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], () => {\n    return root.pdfjsLib = factory();\n  });else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(globalThis, () => {\n  return (/******/(() => {\n      // webpackBootstrap\n      /******/\n      \"use strict\";\n\n      /******/\n      var __webpack_modules__ = [\n        /* 0 */\n      , /* 1 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.VerbosityLevel = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.RenderingIntentFlag = exports.PromiseCapability = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.PageActionEventType = exports.OPS = exports.MissingPDFException = exports.MAX_IMAGE_SIZE_TO_CACHE = exports.LINE_FACTOR = exports.LINE_DESCENT_FACTOR = exports.InvalidPDFException = exports.ImageKind = exports.IDENTITY_MATRIX = exports.FormatError = exports.FeatureTest = exports.FONT_IDENTITY_MATRIX = exports.DocumentActionEventType = exports.CMapCompressionType = exports.BaseException = exports.BASELINE_FACTOR = exports.AnnotationType = exports.AnnotationReplyType = exports.AnnotationPrefix = exports.AnnotationMode = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationEditorType = exports.AnnotationEditorPrefix = exports.AnnotationEditorParamsType = exports.AnnotationBorderStyleType = exports.AnnotationActionEventType = exports.AbortException = void 0;\n        exports.assert = assert;\n        exports.bytesToString = bytesToString;\n        exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n        exports.getModificationDate = getModificationDate;\n        exports.getUuid = getUuid;\n        exports.getVerbosityLevel = getVerbosityLevel;\n        exports.info = info;\n        exports.isArrayBuffer = isArrayBuffer;\n        exports.isArrayEqual = isArrayEqual;\n        exports.isNodeJS = void 0;\n        exports.normalizeUnicode = normalizeUnicode;\n        exports.objectFromMap = objectFromMap;\n        exports.objectSize = objectSize;\n        exports.setVerbosityLevel = setVerbosityLevel;\n        exports.shadow = shadow;\n        exports.string32 = string32;\n        exports.stringToBytes = stringToBytes;\n        exports.stringToPDFString = stringToPDFString;\n        exports.stringToUTF8String = stringToUTF8String;\n        exports.unreachable = unreachable;\n        exports.utf8StringToString = utf8StringToString;\n        exports.warn = warn;\n        const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n        exports.isNodeJS = isNodeJS;\n        const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n        exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n        const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n        exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n        const MAX_IMAGE_SIZE_TO_CACHE = 10e6;\n        exports.MAX_IMAGE_SIZE_TO_CACHE = MAX_IMAGE_SIZE_TO_CACHE;\n        const LINE_FACTOR = 1.35;\n        exports.LINE_FACTOR = LINE_FACTOR;\n        const LINE_DESCENT_FACTOR = 0.35;\n        exports.LINE_DESCENT_FACTOR = LINE_DESCENT_FACTOR;\n        const BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n        exports.BASELINE_FACTOR = BASELINE_FACTOR;\n        const RenderingIntentFlag = {\n          ANY: 0x01,\n          DISPLAY: 0x02,\n          PRINT: 0x04,\n          SAVE: 0x08,\n          ANNOTATIONS_FORMS: 0x10,\n          ANNOTATIONS_STORAGE: 0x20,\n          ANNOTATIONS_DISABLE: 0x40,\n          OPLIST: 0x100\n        };\n        exports.RenderingIntentFlag = RenderingIntentFlag;\n        const AnnotationMode = {\n          DISABLE: 0,\n          ENABLE: 1,\n          ENABLE_FORMS: 2,\n          ENABLE_STORAGE: 3\n        };\n        exports.AnnotationMode = AnnotationMode;\n        const AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n        exports.AnnotationEditorPrefix = AnnotationEditorPrefix;\n        const AnnotationEditorType = {\n          DISABLE: -1,\n          NONE: 0,\n          FREETEXT: 3,\n          STAMP: 13,\n          INK: 15\n        };\n        exports.AnnotationEditorType = AnnotationEditorType;\n        const AnnotationEditorParamsType = {\n          RESIZE: 1,\n          CREATE: 2,\n          FREETEXT_SIZE: 11,\n          FREETEXT_COLOR: 12,\n          FREETEXT_OPACITY: 13,\n          INK_COLOR: 21,\n          INK_THICKNESS: 22,\n          INK_OPACITY: 23\n        };\n        exports.AnnotationEditorParamsType = AnnotationEditorParamsType;\n        const PermissionFlag = {\n          PRINT: 0x04,\n          MODIFY_CONTENTS: 0x08,\n          COPY: 0x10,\n          MODIFY_ANNOTATIONS: 0x20,\n          FILL_INTERACTIVE_FORMS: 0x100,\n          COPY_FOR_ACCESSIBILITY: 0x200,\n          ASSEMBLE: 0x400,\n          PRINT_HIGH_QUALITY: 0x800\n        };\n        exports.PermissionFlag = PermissionFlag;\n        const TextRenderingMode = {\n          FILL: 0,\n          STROKE: 1,\n          FILL_STROKE: 2,\n          INVISIBLE: 3,\n          FILL_ADD_TO_PATH: 4,\n          STROKE_ADD_TO_PATH: 5,\n          FILL_STROKE_ADD_TO_PATH: 6,\n          ADD_TO_PATH: 7,\n          FILL_STROKE_MASK: 3,\n          ADD_TO_PATH_FLAG: 4\n        };\n        exports.TextRenderingMode = TextRenderingMode;\n        const ImageKind = {\n          GRAYSCALE_1BPP: 1,\n          RGB_24BPP: 2,\n          RGBA_32BPP: 3\n        };\n        exports.ImageKind = ImageKind;\n        const AnnotationType = {\n          TEXT: 1,\n          LINK: 2,\n          FREETEXT: 3,\n          LINE: 4,\n          SQUARE: 5,\n          CIRCLE: 6,\n          POLYGON: 7,\n          POLYLINE: 8,\n          HIGHLIGHT: 9,\n          UNDERLINE: 10,\n          SQUIGGLY: 11,\n          STRIKEOUT: 12,\n          STAMP: 13,\n          CARET: 14,\n          INK: 15,\n          POPUP: 16,\n          FILEATTACHMENT: 17,\n          SOUND: 18,\n          MOVIE: 19,\n          WIDGET: 20,\n          SCREEN: 21,\n          PRINTERMARK: 22,\n          TRAPNET: 23,\n          WATERMARK: 24,\n          THREED: 25,\n          REDACT: 26\n        };\n        exports.AnnotationType = AnnotationType;\n        const AnnotationReplyType = {\n          GROUP: \"Group\",\n          REPLY: \"R\"\n        };\n        exports.AnnotationReplyType = AnnotationReplyType;\n        const AnnotationFlag = {\n          INVISIBLE: 0x01,\n          HIDDEN: 0x02,\n          PRINT: 0x04,\n          NOZOOM: 0x08,\n          NOROTATE: 0x10,\n          NOVIEW: 0x20,\n          READONLY: 0x40,\n          LOCKED: 0x80,\n          TOGGLENOVIEW: 0x100,\n          LOCKEDCONTENTS: 0x200\n        };\n        exports.AnnotationFlag = AnnotationFlag;\n        const AnnotationFieldFlag = {\n          READONLY: 0x0000001,\n          REQUIRED: 0x0000002,\n          NOEXPORT: 0x0000004,\n          MULTILINE: 0x0001000,\n          PASSWORD: 0x0002000,\n          NOTOGGLETOOFF: 0x0004000,\n          RADIO: 0x0008000,\n          PUSHBUTTON: 0x0010000,\n          COMBO: 0x0020000,\n          EDIT: 0x0040000,\n          SORT: 0x0080000,\n          FILESELECT: 0x0100000,\n          MULTISELECT: 0x0200000,\n          DONOTSPELLCHECK: 0x0400000,\n          DONOTSCROLL: 0x0800000,\n          COMB: 0x1000000,\n          RICHTEXT: 0x2000000,\n          RADIOSINUNISON: 0x2000000,\n          COMMITONSELCHANGE: 0x4000000\n        };\n        exports.AnnotationFieldFlag = AnnotationFieldFlag;\n        const AnnotationBorderStyleType = {\n          SOLID: 1,\n          DASHED: 2,\n          BEVELED: 3,\n          INSET: 4,\n          UNDERLINE: 5\n        };\n        exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n        const AnnotationActionEventType = {\n          E: \"Mouse Enter\",\n          X: \"Mouse Exit\",\n          D: \"Mouse Down\",\n          U: \"Mouse Up\",\n          Fo: \"Focus\",\n          Bl: \"Blur\",\n          PO: \"PageOpen\",\n          PC: \"PageClose\",\n          PV: \"PageVisible\",\n          PI: \"PageInvisible\",\n          K: \"Keystroke\",\n          F: \"Format\",\n          V: \"Validate\",\n          C: \"Calculate\"\n        };\n        exports.AnnotationActionEventType = AnnotationActionEventType;\n        const DocumentActionEventType = {\n          WC: \"WillClose\",\n          WS: \"WillSave\",\n          DS: \"DidSave\",\n          WP: \"WillPrint\",\n          DP: \"DidPrint\"\n        };\n        exports.DocumentActionEventType = DocumentActionEventType;\n        const PageActionEventType = {\n          O: \"PageOpen\",\n          C: \"PageClose\"\n        };\n        exports.PageActionEventType = PageActionEventType;\n        const VerbosityLevel = {\n          ERRORS: 0,\n          WARNINGS: 1,\n          INFOS: 5\n        };\n        exports.VerbosityLevel = VerbosityLevel;\n        const CMapCompressionType = {\n          NONE: 0,\n          BINARY: 1\n        };\n        exports.CMapCompressionType = CMapCompressionType;\n        const OPS = {\n          dependency: 1,\n          setLineWidth: 2,\n          setLineCap: 3,\n          setLineJoin: 4,\n          setMiterLimit: 5,\n          setDash: 6,\n          setRenderingIntent: 7,\n          setFlatness: 8,\n          setGState: 9,\n          save: 10,\n          restore: 11,\n          transform: 12,\n          moveTo: 13,\n          lineTo: 14,\n          curveTo: 15,\n          curveTo2: 16,\n          curveTo3: 17,\n          closePath: 18,\n          rectangle: 19,\n          stroke: 20,\n          closeStroke: 21,\n          fill: 22,\n          eoFill: 23,\n          fillStroke: 24,\n          eoFillStroke: 25,\n          closeFillStroke: 26,\n          closeEOFillStroke: 27,\n          endPath: 28,\n          clip: 29,\n          eoClip: 30,\n          beginText: 31,\n          endText: 32,\n          setCharSpacing: 33,\n          setWordSpacing: 34,\n          setHScale: 35,\n          setLeading: 36,\n          setFont: 37,\n          setTextRenderingMode: 38,\n          setTextRise: 39,\n          moveText: 40,\n          setLeadingMoveText: 41,\n          setTextMatrix: 42,\n          nextLine: 43,\n          showText: 44,\n          showSpacedText: 45,\n          nextLineShowText: 46,\n          nextLineSetSpacingShowText: 47,\n          setCharWidth: 48,\n          setCharWidthAndBounds: 49,\n          setStrokeColorSpace: 50,\n          setFillColorSpace: 51,\n          setStrokeColor: 52,\n          setStrokeColorN: 53,\n          setFillColor: 54,\n          setFillColorN: 55,\n          setStrokeGray: 56,\n          setFillGray: 57,\n          setStrokeRGBColor: 58,\n          setFillRGBColor: 59,\n          setStrokeCMYKColor: 60,\n          setFillCMYKColor: 61,\n          shadingFill: 62,\n          beginInlineImage: 63,\n          beginImageData: 64,\n          endInlineImage: 65,\n          paintXObject: 66,\n          markPoint: 67,\n          markPointProps: 68,\n          beginMarkedContent: 69,\n          beginMarkedContentProps: 70,\n          endMarkedContent: 71,\n          beginCompat: 72,\n          endCompat: 73,\n          paintFormXObjectBegin: 74,\n          paintFormXObjectEnd: 75,\n          beginGroup: 76,\n          endGroup: 77,\n          beginAnnotation: 80,\n          endAnnotation: 81,\n          paintImageMaskXObject: 83,\n          paintImageMaskXObjectGroup: 84,\n          paintImageXObject: 85,\n          paintInlineImageXObject: 86,\n          paintInlineImageXObjectGroup: 87,\n          paintImageXObjectRepeat: 88,\n          paintImageMaskXObjectRepeat: 89,\n          paintSolidColorImageMask: 90,\n          constructPath: 91\n        };\n        exports.OPS = OPS;\n        const PasswordResponses = {\n          NEED_PASSWORD: 1,\n          INCORRECT_PASSWORD: 2\n        };\n        exports.PasswordResponses = PasswordResponses;\n        let verbosity = VerbosityLevel.WARNINGS;\n        function setVerbosityLevel(level) {\n          if (Number.isInteger(level)) {\n            verbosity = level;\n          }\n        }\n        function getVerbosityLevel() {\n          return verbosity;\n        }\n        function info(msg) {\n          if (verbosity >= VerbosityLevel.INFOS) {\n            console.log(`Info: ${msg}`);\n          }\n        }\n        function warn(msg) {\n          if (verbosity >= VerbosityLevel.WARNINGS) {\n            console.log(`Warning: ${msg}`);\n          }\n        }\n        function unreachable(msg) {\n          throw new Error(msg);\n        }\n        function assert(cond, msg) {\n          if (!cond) {\n            unreachable(msg);\n          }\n        }\n        function _isValidProtocol(url) {\n          switch (url?.protocol) {\n            case \"http:\":\n            case \"https:\":\n            case \"ftp:\":\n            case \"mailto:\":\n            case \"tel:\":\n              return true;\n            default:\n              return false;\n          }\n        }\n        function createValidAbsoluteUrl(url) {\n          let baseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n          let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n          if (!url) {\n            return null;\n          }\n          try {\n            if (options && typeof url === \"string\") {\n              if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n                const dots = url.match(/\\./g);\n                if (dots?.length >= 2) {\n                  url = `http://${url}`;\n                }\n              }\n              if (options.tryConvertEncoding) {\n                try {\n                  url = stringToUTF8String(url);\n                } catch {}\n              }\n            }\n            const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n            if (_isValidProtocol(absoluteUrl)) {\n              return absoluteUrl;\n            }\n          } catch {}\n          return null;\n        }\n        function shadow(obj, prop, value) {\n          let nonSerializable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n          Object.defineProperty(obj, prop, {\n            value,\n            enumerable: !nonSerializable,\n            configurable: true,\n            writable: false\n          });\n          return value;\n        }\n        const BaseException = function BaseExceptionClosure() {\n          function BaseException(message, name) {\n            if (this.constructor === BaseException) {\n              unreachable(\"Cannot initialize BaseException.\");\n            }\n            this.message = message;\n            this.name = name;\n          }\n          BaseException.prototype = new Error();\n          BaseException.constructor = BaseException;\n          return BaseException;\n        }();\n        exports.BaseException = BaseException;\n        class PasswordException extends BaseException {\n          constructor(msg, code) {\n            super(msg, \"PasswordException\");\n            this.code = code;\n          }\n        }\n        exports.PasswordException = PasswordException;\n        class UnknownErrorException extends BaseException {\n          constructor(msg, details) {\n            super(msg, \"UnknownErrorException\");\n            this.details = details;\n          }\n        }\n        exports.UnknownErrorException = UnknownErrorException;\n        class InvalidPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"InvalidPDFException\");\n          }\n        }\n        exports.InvalidPDFException = InvalidPDFException;\n        class MissingPDFException extends BaseException {\n          constructor(msg) {\n            super(msg, \"MissingPDFException\");\n          }\n        }\n        exports.MissingPDFException = MissingPDFException;\n        class UnexpectedResponseException extends BaseException {\n          constructor(msg, status) {\n            super(msg, \"UnexpectedResponseException\");\n            this.status = status;\n          }\n        }\n        exports.UnexpectedResponseException = UnexpectedResponseException;\n        class FormatError extends BaseException {\n          constructor(msg) {\n            super(msg, \"FormatError\");\n          }\n        }\n        exports.FormatError = FormatError;\n        class AbortException extends BaseException {\n          constructor(msg) {\n            super(msg, \"AbortException\");\n          }\n        }\n        exports.AbortException = AbortException;\n        function bytesToString(bytes) {\n          if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n            unreachable(\"Invalid argument for bytesToString\");\n          }\n          const length = bytes.length;\n          const MAX_ARGUMENT_COUNT = 8192;\n          if (length < MAX_ARGUMENT_COUNT) {\n            return String.fromCharCode.apply(null, bytes);\n          }\n          const strBuf = [];\n          for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n            const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n            const chunk = bytes.subarray(i, chunkEnd);\n            strBuf.push(String.fromCharCode.apply(null, chunk));\n          }\n          return strBuf.join(\"\");\n        }\n        function stringToBytes(str) {\n          if (typeof str !== \"string\") {\n            unreachable(\"Invalid argument for stringToBytes\");\n          }\n          const length = str.length;\n          const bytes = new Uint8Array(length);\n          for (let i = 0; i < length; ++i) {\n            bytes[i] = str.charCodeAt(i) & 0xff;\n          }\n          return bytes;\n        }\n        function string32(value) {\n          return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n        }\n        function objectSize(obj) {\n          return Object.keys(obj).length;\n        }\n        function objectFromMap(map) {\n          const obj = Object.create(null);\n          for (const [key, value] of map) {\n            obj[key] = value;\n          }\n          return obj;\n        }\n        function isLittleEndian() {\n          const buffer8 = new Uint8Array(4);\n          buffer8[0] = 1;\n          const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n          return view32[0] === 1;\n        }\n        function isEvalSupported() {\n          try {\n            new Function(\"\");\n            return true;\n          } catch {\n            return false;\n          }\n        }\n        class FeatureTest {\n          static get isLittleEndian() {\n            return shadow(this, \"isLittleEndian\", isLittleEndian());\n          }\n          static get isEvalSupported() {\n            return shadow(this, \"isEvalSupported\", isEvalSupported());\n          }\n          static get isOffscreenCanvasSupported() {\n            return shadow(this, \"isOffscreenCanvasSupported\", typeof OffscreenCanvas !== \"undefined\");\n          }\n          static get platform() {\n            if (typeof navigator === \"undefined\") {\n              return shadow(this, \"platform\", {\n                isWin: false,\n                isMac: false\n              });\n            }\n            return shadow(this, \"platform\", {\n              isWin: navigator.platform.includes(\"Win\"),\n              isMac: navigator.platform.includes(\"Mac\")\n            });\n          }\n          static get isCSSRoundSupported() {\n            return shadow(this, \"isCSSRoundSupported\", globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\"));\n          }\n        }\n        exports.FeatureTest = FeatureTest;\n        const hexNumbers = [...Array(256).keys()].map(n => n.toString(16).padStart(2, \"0\"));\n        class Util {\n          static makeHexColor(r, g, b) {\n            return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n          }\n          static scaleMinMax(transform, minMax) {\n            let temp;\n            if (transform[0]) {\n              if (transform[0] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n              minMax[0] *= transform[0];\n              minMax[1] *= transform[0];\n              if (transform[3] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n              minMax[2] *= transform[3];\n              minMax[3] *= transform[3];\n            } else {\n              temp = minMax[0];\n              minMax[0] = minMax[2];\n              minMax[2] = temp;\n              temp = minMax[1];\n              minMax[1] = minMax[3];\n              minMax[3] = temp;\n              if (transform[1] < 0) {\n                temp = minMax[2];\n                minMax[2] = minMax[3];\n                minMax[3] = temp;\n              }\n              minMax[2] *= transform[1];\n              minMax[3] *= transform[1];\n              if (transform[2] < 0) {\n                temp = minMax[0];\n                minMax[0] = minMax[1];\n                minMax[1] = temp;\n              }\n              minMax[0] *= transform[2];\n              minMax[1] *= transform[2];\n            }\n            minMax[0] += transform[4];\n            minMax[1] += transform[4];\n            minMax[2] += transform[5];\n            minMax[3] += transform[5];\n          }\n          static transform(m1, m2) {\n            return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n          }\n          static applyTransform(p, m) {\n            const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n            const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n            return [xt, yt];\n          }\n          static applyInverseTransform(p, m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n            const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n            return [xt, yt];\n          }\n          static getAxialAlignedBoundingBox(r, m) {\n            const p1 = this.applyTransform(r, m);\n            const p2 = this.applyTransform(r.slice(2, 4), m);\n            const p3 = this.applyTransform([r[0], r[3]], m);\n            const p4 = this.applyTransform([r[2], r[1]], m);\n            return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n          }\n          static inverseTransform(m) {\n            const d = m[0] * m[3] - m[1] * m[2];\n            return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n          }\n          static singularValueDecompose2dScale(m) {\n            const transpose = [m[0], m[2], m[1], m[3]];\n            const a = m[0] * transpose[0] + m[1] * transpose[2];\n            const b = m[0] * transpose[1] + m[1] * transpose[3];\n            const c = m[2] * transpose[0] + m[3] * transpose[2];\n            const d = m[2] * transpose[1] + m[3] * transpose[3];\n            const first = (a + d) / 2;\n            const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n            const sx = first + second || 1;\n            const sy = first - second || 1;\n            return [Math.sqrt(sx), Math.sqrt(sy)];\n          }\n          static normalizeRect(rect) {\n            const r = rect.slice(0);\n            if (rect[0] > rect[2]) {\n              r[0] = rect[2];\n              r[2] = rect[0];\n            }\n            if (rect[1] > rect[3]) {\n              r[1] = rect[3];\n              r[3] = rect[1];\n            }\n            return r;\n          }\n          static intersect(rect1, rect2) {\n            const xLow = Math.max(Math.min(rect1[0], rect1[2]), Math.min(rect2[0], rect2[2]));\n            const xHigh = Math.min(Math.max(rect1[0], rect1[2]), Math.max(rect2[0], rect2[2]));\n            if (xLow > xHigh) {\n              return null;\n            }\n            const yLow = Math.max(Math.min(rect1[1], rect1[3]), Math.min(rect2[1], rect2[3]));\n            const yHigh = Math.min(Math.max(rect1[1], rect1[3]), Math.max(rect2[1], rect2[3]));\n            if (yLow > yHigh) {\n              return null;\n            }\n            return [xLow, yLow, xHigh, yHigh];\n          }\n          static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n            const tvalues = [],\n              bounds = [[], []];\n            let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n            for (let i = 0; i < 2; ++i) {\n              if (i === 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n              } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n              }\n              if (Math.abs(a) < 1e-12) {\n                if (Math.abs(b) < 1e-12) {\n                  continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                  tvalues.push(t);\n                }\n                continue;\n              }\n              b2ac = b * b - 4 * c * a;\n              sqrtb2ac = Math.sqrt(b2ac);\n              if (b2ac < 0) {\n                continue;\n              }\n              t1 = (-b + sqrtb2ac) / (2 * a);\n              if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n              }\n              t2 = (-b - sqrtb2ac) / (2 * a);\n              if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n              }\n            }\n            let j = tvalues.length,\n              mt;\n            const jlen = j;\n            while (j--) {\n              t = tvalues[j];\n              mt = 1 - t;\n              bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n              bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n            }\n            bounds[0][jlen] = x0;\n            bounds[1][jlen] = y0;\n            bounds[0][jlen + 1] = x3;\n            bounds[1][jlen + 1] = y3;\n            bounds[0].length = bounds[1].length = jlen + 2;\n            return [Math.min(...bounds[0]), Math.min(...bounds[1]), Math.max(...bounds[0]), Math.max(...bounds[1])];\n          }\n        }\n        exports.Util = Util;\n        const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8, 0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018, 0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d, 0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac];\n        function stringToPDFString(str) {\n          if (str[0] >= \"\\xEF\") {\n            let encoding;\n            if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n              encoding = \"utf-16be\";\n            } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n              encoding = \"utf-16le\";\n            } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n              encoding = \"utf-8\";\n            }\n            if (encoding) {\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = stringToBytes(str);\n                return decoder.decode(buffer);\n              } catch (ex) {\n                warn(`stringToPDFString: \"${ex}\".`);\n              }\n            }\n          }\n          const strBuf = [];\n          for (let i = 0, ii = str.length; i < ii; i++) {\n            const code = PDFStringTranslateTable[str.charCodeAt(i)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n          }\n          return strBuf.join(\"\");\n        }\n        function stringToUTF8String(str) {\n          return decodeURIComponent(escape(str));\n        }\n        function utf8StringToString(str) {\n          return unescape(encodeURIComponent(str));\n        }\n        function isArrayBuffer(v) {\n          return typeof v === \"object\" && v?.byteLength !== undefined;\n        }\n        function isArrayEqual(arr1, arr2) {\n          if (arr1.length !== arr2.length) {\n            return false;\n          }\n          for (let i = 0, ii = arr1.length; i < ii; i++) {\n            if (arr1[i] !== arr2[i]) {\n              return false;\n            }\n          }\n          return true;\n        }\n        function getModificationDate() {\n          let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date();\n          const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), date.getUTCDate().toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n          return buffer.join(\"\");\n        }\n        class PromiseCapability {\n          #settled = false;\n          constructor() {\n            this.promise = new Promise((resolve, reject) => {\n              this.resolve = data => {\n                this.#settled = true;\n                resolve(data);\n              };\n              this.reject = reason => {\n                this.#settled = true;\n                reject(reason);\n              };\n            });\n          }\n          get settled() {\n            return this.#settled;\n          }\n        }\n        exports.PromiseCapability = PromiseCapability;\n        let NormalizeRegex = null;\n        let NormalizationMap = null;\n        function normalizeUnicode(str) {\n          if (!NormalizeRegex) {\n            NormalizeRegex = /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n            NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n          }\n          return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n            return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n          });\n        }\n        function getUuid() {\n          if (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\") {\n            return crypto.randomUUID();\n          }\n          const buf = new Uint8Array(32);\n          if (typeof crypto !== \"undefined\" && typeof crypto?.getRandomValues === \"function\") {\n            crypto.getRandomValues(buf);\n          } else {\n            for (let i = 0; i < 32; i++) {\n              buf[i] = Math.floor(Math.random() * 255);\n            }\n          }\n          return bytesToString(buf);\n        }\n        const AnnotationPrefix = \"pdfjs_internal_id_\";\n        exports.AnnotationPrefix = AnnotationPrefix;\n\n        /***/\n      }, /* 2 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.RenderTask = exports.PDFWorkerUtil = exports.PDFWorker = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFDocumentLoadingTask = exports.PDFDataRangeTransport = exports.LoopbackPort = exports.DefaultStandardFontDataFactory = exports.DefaultFilterFactory = exports.DefaultCanvasFactory = exports.DefaultCMapReaderFactory = void 0;\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function () {\n            return _displaySvg.SVGGraphics;\n          }\n        });\n        exports.build = void 0;\n        exports.getDocument = getDocument;\n        exports.version = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _annotation_storage = __w_pdfjs_require__(3);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _font_loader = __w_pdfjs_require__(9);\n        var _displayNode_utils = __w_pdfjs_require__(10);\n        var _canvas = __w_pdfjs_require__(11);\n        var _worker_options = __w_pdfjs_require__(14);\n        var _message_handler = __w_pdfjs_require__(15);\n        var _metadata = __w_pdfjs_require__(16);\n        var _optional_content_config = __w_pdfjs_require__(17);\n        var _transport_stream = __w_pdfjs_require__(18);\n        var _displayFetch_stream = __w_pdfjs_require__(19);\n        var _displayNetwork = __w_pdfjs_require__(22);\n        var _displayNode_stream = __w_pdfjs_require__(23);\n        var _displaySvg = __w_pdfjs_require__(24);\n        var _xfa_text = __w_pdfjs_require__(25);\n        const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n        const RENDERING_CANCELLED_TIMEOUT = 100;\n        const DELAYED_CLEANUP_TIMEOUT = 5000;\n        const DefaultCanvasFactory = _util.isNodeJS ? _displayNode_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n        exports.DefaultCanvasFactory = DefaultCanvasFactory;\n        const DefaultCMapReaderFactory = _util.isNodeJS ? _displayNode_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n        exports.DefaultCMapReaderFactory = DefaultCMapReaderFactory;\n        const DefaultFilterFactory = _util.isNodeJS ? _displayNode_utils.NodeFilterFactory : _display_utils.DOMFilterFactory;\n        exports.DefaultFilterFactory = DefaultFilterFactory;\n        const DefaultStandardFontDataFactory = _util.isNodeJS ? _displayNode_utils.NodeStandardFontDataFactory : _display_utils.DOMStandardFontDataFactory;\n        exports.DefaultStandardFontDataFactory = DefaultStandardFontDataFactory;\n        function getDocument(src) {\n          if (typeof src === \"string\" || src instanceof URL) {\n            src = {\n              url: src\n            };\n          } else if ((0, _util.isArrayBuffer)(src)) {\n            src = {\n              data: src\n            };\n          }\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n          }\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n          const task = new PDFDocumentLoadingTask();\n          const {\n            docId\n          } = task;\n          const url = src.url ? getUrlProp(src.url) : null;\n          const data = src.data ? getDataProp(src.data) : null;\n          const httpHeaders = src.httpHeaders || null;\n          const withCredentials = src.withCredentials === true;\n          const password = src.password ?? null;\n          const rangeTransport = src.range instanceof PDFDataRangeTransport ? src.range : null;\n          const rangeChunkSize = Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0 ? src.rangeChunkSize : DEFAULT_RANGE_CHUNK_SIZE;\n          let worker = src.worker instanceof PDFWorker ? src.worker : null;\n          const verbosity = src.verbosity;\n          const docBaseUrl = typeof src.docBaseUrl === \"string\" && !(0, _display_utils.isDataScheme)(src.docBaseUrl) ? src.docBaseUrl : null;\n          const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n          const cMapPacked = src.cMapPacked !== false;\n          const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n          const standardFontDataUrl = typeof src.standardFontDataUrl === \"string\" ? src.standardFontDataUrl : null;\n          const StandardFontDataFactory = src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n          const ignoreErrors = src.stopAtErrors !== true;\n          const maxImageSize = Number.isInteger(src.maxImageSize) && src.maxImageSize > -1 ? src.maxImageSize : -1;\n          const isEvalSupported = src.isEvalSupported !== false;\n          const isOffscreenCanvasSupported = typeof src.isOffscreenCanvasSupported === \"boolean\" ? src.isOffscreenCanvasSupported : !_util.isNodeJS;\n          const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes) ? src.canvasMaxAreaInBytes : -1;\n          const disableFontFace = typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : _util.isNodeJS;\n          const fontExtraProperties = src.fontExtraProperties === true;\n          const enableXfa = src.enableXfa === true;\n          const ownerDocument = src.ownerDocument || globalThis.document;\n          const disableRange = src.disableRange === true;\n          const disableStream = src.disableStream === true;\n          const disableAutoFetch = src.disableAutoFetch === true;\n          const pdfBug = src.pdfBug === true;\n          const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n          const useSystemFonts = typeof src.useSystemFonts === \"boolean\" ? src.useSystemFonts : !_util.isNodeJS && !disableFontFace;\n          const useWorkerFetch = typeof src.useWorkerFetch === \"boolean\" ? src.useWorkerFetch : CMapReaderFactory === _display_utils.DOMCMapReaderFactory && StandardFontDataFactory === _display_utils.DOMStandardFontDataFactory && cMapUrl && standardFontDataUrl && (0, _display_utils.isValidFetchUrl)(cMapUrl, document.baseURI) && (0, _display_utils.isValidFetchUrl)(standardFontDataUrl, document.baseURI);\n          const canvasFactory = src.canvasFactory || new DefaultCanvasFactory({\n            ownerDocument\n          });\n          const filterFactory = src.filterFactory || new DefaultFilterFactory({\n            docId,\n            ownerDocument\n          });\n          const styleElement = null;\n          (0, _util.setVerbosityLevel)(verbosity);\n          const transportFactory = {\n            canvasFactory,\n            filterFactory\n          };\n          if (!useWorkerFetch) {\n            transportFactory.cMapReaderFactory = new CMapReaderFactory({\n              baseUrl: cMapUrl,\n              isCompressed: cMapPacked\n            });\n            transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n              baseUrl: standardFontDataUrl\n            });\n          }\n          if (!worker) {\n            const workerParams = {\n              verbosity,\n              port: _worker_options.GlobalWorkerOptions.workerPort\n            };\n            worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n            task._worker = worker;\n          }\n          const fetchDocParams = {\n            docId,\n            apiVersion: '3.11.174',\n            data,\n            password,\n            disableAutoFetch,\n            rangeChunkSize,\n            length,\n            docBaseUrl,\n            enableXfa,\n            evaluatorOptions: {\n              maxImageSize,\n              disableFontFace,\n              ignoreErrors,\n              isEvalSupported,\n              isOffscreenCanvasSupported,\n              canvasMaxAreaInBytes,\n              fontExtraProperties,\n              useSystemFonts,\n              cMapUrl: useWorkerFetch ? cMapUrl : null,\n              standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null\n            }\n          };\n          const transportParams = {\n            ignoreErrors,\n            isEvalSupported,\n            disableFontFace,\n            fontExtraProperties,\n            enableXfa,\n            ownerDocument,\n            disableAutoFetch,\n            pdfBug,\n            styleElement\n          };\n          worker.promise.then(function () {\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n            const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n            const networkStreamPromise = new Promise(function (resolve) {\n              let networkStream;\n              if (rangeTransport) {\n                networkStream = new _transport_stream.PDFDataTransportStream({\n                  length,\n                  initialData: rangeTransport.initialData,\n                  progressiveDone: rangeTransport.progressiveDone,\n                  contentDispositionFilename: rangeTransport.contentDispositionFilename,\n                  disableRange,\n                  disableStream\n                }, rangeTransport);\n              } else if (!data) {\n                const createPDFNetworkStream = params => {\n                  if (_util.isNodeJS) {\n                    return new _displayNode_stream.PDFNodeStream(params);\n                  }\n                  return (0, _display_utils.isValidFetchUrl)(params.url) ? new _displayFetch_stream.PDFFetchStream(params) : new _displayNetwork.PDFNetworkStream(params);\n                };\n                networkStream = createPDFNetworkStream({\n                  url,\n                  length,\n                  httpHeaders,\n                  withCredentials,\n                  rangeChunkSize,\n                  disableRange,\n                  disableStream\n                });\n              }\n              resolve(networkStream);\n            });\n            return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref) {\n              let [workerId, networkStream] = _ref;\n              if (task.destroyed) {\n                throw new Error(\"Loading aborted\");\n              }\n              const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n              const transport = new WorkerTransport(messageHandler, task, networkStream, transportParams, transportFactory);\n              task._transport = transport;\n              messageHandler.send(\"Ready\", null);\n            });\n          }).catch(task._capability.reject);\n          return task;\n        }\n        async function _fetchDocument(worker, source) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n          const workerId = await worker.messageHandler.sendWithPromise(\"GetDocRequest\", source, source.data ? [source.data.buffer] : null);\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n          return workerId;\n        }\n        function getUrlProp(val) {\n          if (val instanceof URL) {\n            return val.href;\n          }\n          try {\n            return new URL(val, window.location).href;\n          } catch {\n            if (_util.isNodeJS && typeof val === \"string\") {\n              return val;\n            }\n          }\n          throw new Error(\"Invalid PDF url data: \" + \"either string or URL-object is expected in the url property.\");\n        }\n        function getDataProp(val) {\n          if (_util.isNodeJS && typeof Buffer !== \"undefined\" && val instanceof Buffer) {\n            throw new Error(\"Please provide binary data as `Uint8Array`, rather than `Buffer`.\");\n          }\n          if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n            return val;\n          }\n          if (typeof val === \"string\") {\n            return (0, _util.stringToBytes)(val);\n          }\n          if (typeof val === \"object\" && !isNaN(val?.length) || (0, _util.isArrayBuffer)(val)) {\n            return new Uint8Array(val);\n          }\n          throw new Error(\"Invalid PDF binary data: either TypedArray, \" + \"string, or array-like object is expected in the data property.\");\n        }\n        class PDFDocumentLoadingTask {\n          static #docId = 0;\n          constructor() {\n            this._capability = new _util.PromiseCapability();\n            this._transport = null;\n            this._worker = null;\n            this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n          }\n          get promise() {\n            return this._capability.promise;\n          }\n          async destroy() {\n            this.destroyed = true;\n            try {\n              if (this._worker?.port) {\n                this._worker._pendingDestroy = true;\n              }\n              await this._transport?.destroy();\n            } catch (ex) {\n              if (this._worker?.port) {\n                delete this._worker._pendingDestroy;\n              }\n              throw ex;\n            }\n            this._transport = null;\n            if (this._worker) {\n              this._worker.destroy();\n              this._worker = null;\n            }\n          }\n        }\n        exports.PDFDocumentLoadingTask = PDFDocumentLoadingTask;\n        class PDFDataRangeTransport {\n          constructor(length, initialData) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this.length = length;\n            this.initialData = initialData;\n            this.progressiveDone = progressiveDone;\n            this.contentDispositionFilename = contentDispositionFilename;\n            this._rangeListeners = [];\n            this._progressListeners = [];\n            this._progressiveReadListeners = [];\n            this._progressiveDoneListeners = [];\n            this._readyCapability = new _util.PromiseCapability();\n          }\n          addRangeListener(listener) {\n            this._rangeListeners.push(listener);\n          }\n          addProgressListener(listener) {\n            this._progressListeners.push(listener);\n          }\n          addProgressiveReadListener(listener) {\n            this._progressiveReadListeners.push(listener);\n          }\n          addProgressiveDoneListener(listener) {\n            this._progressiveDoneListeners.push(listener);\n          }\n          onDataRange(begin, chunk) {\n            for (const listener of this._rangeListeners) {\n              listener(begin, chunk);\n            }\n          }\n          onDataProgress(loaded, total) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressListeners) {\n                listener(loaded, total);\n              }\n            });\n          }\n          onDataProgressiveRead(chunk) {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveReadListeners) {\n                listener(chunk);\n              }\n            });\n          }\n          onDataProgressiveDone() {\n            this._readyCapability.promise.then(() => {\n              for (const listener of this._progressiveDoneListeners) {\n                listener();\n              }\n            });\n          }\n          transportReady() {\n            this._readyCapability.resolve();\n          }\n          requestDataRange(begin, end) {\n            (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n          }\n          abort() {}\n        }\n        exports.PDFDataRangeTransport = PDFDataRangeTransport;\n        class PDFDocumentProxy {\n          constructor(pdfInfo, transport) {\n            this._pdfInfo = pdfInfo;\n            this._transport = transport;\n            Object.defineProperty(this, \"getJavaScript\", {\n              value: () => {\n                (0, _display_utils.deprecated)(\"`PDFDocumentProxy.getJavaScript`, \" + \"please use `PDFDocumentProxy.getJSActions` instead.\");\n                return this.getJSActions().then(js => {\n                  if (!js) {\n                    return js;\n                  }\n                  const jsArr = [];\n                  for (const name in js) {\n                    jsArr.push(...js[name]);\n                  }\n                  return jsArr;\n                });\n              }\n            });\n          }\n          get annotationStorage() {\n            return this._transport.annotationStorage;\n          }\n          get filterFactory() {\n            return this._transport.filterFactory;\n          }\n          get numPages() {\n            return this._pdfInfo.numPages;\n          }\n          get fingerprints() {\n            return this._pdfInfo.fingerprints;\n          }\n          get isPureXfa() {\n            return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n          }\n          get allXfaHtml() {\n            return this._transport._htmlForXfa;\n          }\n          getPage(pageNumber) {\n            return this._transport.getPage(pageNumber);\n          }\n          getPageIndex(ref) {\n            return this._transport.getPageIndex(ref);\n          }\n          getDestinations() {\n            return this._transport.getDestinations();\n          }\n          getDestination(id) {\n            return this._transport.getDestination(id);\n          }\n          getPageLabels() {\n            return this._transport.getPageLabels();\n          }\n          getPageLayout() {\n            return this._transport.getPageLayout();\n          }\n          getPageMode() {\n            return this._transport.getPageMode();\n          }\n          getViewerPreferences() {\n            return this._transport.getViewerPreferences();\n          }\n          getOpenAction() {\n            return this._transport.getOpenAction();\n          }\n          getAttachments() {\n            return this._transport.getAttachments();\n          }\n          getJSActions() {\n            return this._transport.getDocJSActions();\n          }\n          getOutline() {\n            return this._transport.getOutline();\n          }\n          getOptionalContentConfig() {\n            return this._transport.getOptionalContentConfig();\n          }\n          getPermissions() {\n            return this._transport.getPermissions();\n          }\n          getMetadata() {\n            return this._transport.getMetadata();\n          }\n          getMarkInfo() {\n            return this._transport.getMarkInfo();\n          }\n          getData() {\n            return this._transport.getData();\n          }\n          saveDocument() {\n            return this._transport.saveDocument();\n          }\n          getDownloadInfo() {\n            return this._transport.downloadInfoCapability.promise;\n          }\n          cleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n          }\n          destroy() {\n            return this.loadingTask.destroy();\n          }\n          get loadingParams() {\n            return this._transport.loadingParams;\n          }\n          get loadingTask() {\n            return this._transport.loadingTask;\n          }\n          getFieldObjects() {\n            return this._transport.getFieldObjects();\n          }\n          hasJSActions() {\n            return this._transport.hasJSActions();\n          }\n          getCalculationOrderIds() {\n            return this._transport.getCalculationOrderIds();\n          }\n        }\n        exports.PDFDocumentProxy = PDFDocumentProxy;\n        class PDFPageProxy {\n          #delayedCleanupTimeout = null;\n          #pendingCleanup = false;\n          constructor(pageIndex, pageInfo, transport) {\n            let pdfBug = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            this._pageIndex = pageIndex;\n            this._pageInfo = pageInfo;\n            this._transport = transport;\n            this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n            this._pdfBug = pdfBug;\n            this.commonObjs = transport.commonObjs;\n            this.objs = new PDFObjects();\n            this._maybeCleanupAfterRender = false;\n            this._intentStates = new Map();\n            this.destroyed = false;\n          }\n          get pageNumber() {\n            return this._pageIndex + 1;\n          }\n          get rotate() {\n            return this._pageInfo.rotate;\n          }\n          get ref() {\n            return this._pageInfo.ref;\n          }\n          get userUnit() {\n            return this._pageInfo.userUnit;\n          }\n          get view() {\n            return this._pageInfo.view;\n          }\n          getViewport() {\n            let {\n              scale,\n              rotation = this.rotate,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new _display_utils.PageViewport({\n              viewBox: this.view,\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n          getAnnotations() {\n            let {\n              intent = \"display\"\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            const intentArgs = this._transport.getRenderingIntent(intent);\n            return this._transport.getAnnotations(this._pageIndex, intentArgs.renderingIntent);\n          }\n          getJSActions() {\n            return this._transport.getPageJSActions(this._pageIndex);\n          }\n          get filterFactory() {\n            return this._transport.filterFactory;\n          }\n          get isPureXfa() {\n            return (0, _util.shadow)(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n          }\n          async getXfa() {\n            return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n          }\n          render(_ref2) {\n            let {\n              canvasContext,\n              viewport,\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE,\n              transform = null,\n              background = null,\n              optionalContentConfigPromise = null,\n              annotationCanvasMap = null,\n              pageColors = null,\n              printAnnotationStorage = null\n            } = _ref2;\n            this._stats?.time(\"Overall\");\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage);\n            this.#pendingCleanup = false;\n            this.#abortDelayedCleanup();\n            if (!optionalContentConfigPromise) {\n              optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n            }\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n            if (!intentState) {\n              intentState = Object.create(null);\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n            const intentPrint = !!(intentArgs.renderingIntent & _util.RenderingIntentFlag.PRINT);\n            if (!intentState.displayReadyCapability) {\n              intentState.displayReadyCapability = new _util.PromiseCapability();\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false,\n                separateAnnots: null\n              };\n              this._stats?.time(\"Page Request\");\n              this._pumpOperatorList(intentArgs);\n            }\n            const complete = error => {\n              intentState.renderTasks.delete(internalRenderTask);\n              if (this._maybeCleanupAfterRender || intentPrint) {\n                this.#pendingCleanup = true;\n              }\n              this.#tryCleanup(!intentPrint);\n              if (error) {\n                internalRenderTask.capability.reject(error);\n                this._abortOperatorList({\n                  intentState,\n                  reason: error instanceof Error ? error : new Error(error)\n                });\n              } else {\n                internalRenderTask.capability.resolve();\n              }\n              this._stats?.timeEnd(\"Rendering\");\n              this._stats?.timeEnd(\"Overall\");\n            };\n            const internalRenderTask = new InternalRenderTask({\n              callback: complete,\n              params: {\n                canvasContext,\n                viewport,\n                transform,\n                background\n              },\n              objs: this.objs,\n              commonObjs: this.commonObjs,\n              annotationCanvasMap,\n              operatorList: intentState.operatorList,\n              pageIndex: this._pageIndex,\n              canvasFactory: this._transport.canvasFactory,\n              filterFactory: this._transport.filterFactory,\n              useRequestAnimationFrame: !intentPrint,\n              pdfBug: this._pdfBug,\n              pageColors\n            });\n            (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n            const renderTask = internalRenderTask.task;\n            Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(_ref3 => {\n              let [transparency, optionalContentConfig] = _ref3;\n              if (this.destroyed) {\n                complete();\n                return;\n              }\n              this._stats?.time(\"Rendering\");\n              internalRenderTask.initializeGraphics({\n                transparency,\n                optionalContentConfig\n              });\n              internalRenderTask.operatorListChanged();\n            }).catch(complete);\n            return renderTask;\n          }\n          getOperatorList() {\n            let {\n              intent = \"display\",\n              annotationMode = _util.AnnotationMode.ENABLE,\n              printAnnotationStorage = null\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            function operatorListChanged() {\n              if (intentState.operatorList.lastChunk) {\n                intentState.opListReadCapability.resolve(intentState.operatorList);\n                intentState.renderTasks.delete(opListTask);\n              }\n            }\n            const intentArgs = this._transport.getRenderingIntent(intent, annotationMode, printAnnotationStorage, true);\n            let intentState = this._intentStates.get(intentArgs.cacheKey);\n            if (!intentState) {\n              intentState = Object.create(null);\n              this._intentStates.set(intentArgs.cacheKey, intentState);\n            }\n            let opListTask;\n            if (!intentState.opListReadCapability) {\n              opListTask = Object.create(null);\n              opListTask.operatorListChanged = operatorListChanged;\n              intentState.opListReadCapability = new _util.PromiseCapability();\n              (intentState.renderTasks ||= new Set()).add(opListTask);\n              intentState.operatorList = {\n                fnArray: [],\n                argsArray: [],\n                lastChunk: false,\n                separateAnnots: null\n              };\n              this._stats?.time(\"Page Request\");\n              this._pumpOperatorList(intentArgs);\n            }\n            return intentState.opListReadCapability.promise;\n          }\n          streamTextContent() {\n            let {\n              includeMarkedContent = false,\n              disableNormalization = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            const TEXT_CONTENT_CHUNK_SIZE = 100;\n            return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n              pageIndex: this._pageIndex,\n              includeMarkedContent: includeMarkedContent === true,\n              disableNormalization: disableNormalization === true\n            }, {\n              highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n              size(textContent) {\n                return textContent.items.length;\n              }\n            });\n          }\n          getTextContent() {\n            let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            if (this._transport._htmlForXfa) {\n              return this.getXfa().then(xfa => {\n                return _xfa_text.XfaText.textContent(xfa);\n              });\n            }\n            const readableStream = this.streamTextContent(params);\n            return new Promise(function (resolve, reject) {\n              function pump() {\n                reader.read().then(function (_ref4) {\n                  let {\n                    value,\n                    done\n                  } = _ref4;\n                  if (done) {\n                    resolve(textContent);\n                    return;\n                  }\n                  Object.assign(textContent.styles, value.styles);\n                  textContent.items.push(...value.items);\n                  pump();\n                }, reject);\n              }\n              const reader = readableStream.getReader();\n              const textContent = {\n                items: [],\n                styles: Object.create(null)\n              };\n              pump();\n            });\n          }\n          getStructTree() {\n            return this._transport.getStructTree(this._pageIndex);\n          }\n          _destroy() {\n            this.destroyed = true;\n            const waitOn = [];\n            for (const intentState of this._intentStates.values()) {\n              this._abortOperatorList({\n                intentState,\n                reason: new Error(\"Page was destroyed.\"),\n                force: true\n              });\n              if (intentState.opListReadCapability) {\n                continue;\n              }\n              for (const internalRenderTask of intentState.renderTasks) {\n                waitOn.push(internalRenderTask.completed);\n                internalRenderTask.cancel();\n              }\n            }\n            this.objs.clear();\n            this.#pendingCleanup = false;\n            this.#abortDelayedCleanup();\n            return Promise.all(waitOn);\n          }\n          cleanup() {\n            let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#pendingCleanup = true;\n            const success = this.#tryCleanup(false);\n            if (resetStats && success) {\n              this._stats &&= new _display_utils.StatTimer();\n            }\n            return success;\n          }\n          #tryCleanup() {\n            let delayed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#abortDelayedCleanup();\n            if (!this.#pendingCleanup || this.destroyed) {\n              return false;\n            }\n            if (delayed) {\n              this.#delayedCleanupTimeout = setTimeout(() => {\n                this.#delayedCleanupTimeout = null;\n                this.#tryCleanup(false);\n              }, DELAYED_CLEANUP_TIMEOUT);\n              return false;\n            }\n            for (const {\n              renderTasks,\n              operatorList\n            } of this._intentStates.values()) {\n              if (renderTasks.size > 0 || !operatorList.lastChunk) {\n                return false;\n              }\n            }\n            this._intentStates.clear();\n            this.objs.clear();\n            this.#pendingCleanup = false;\n            return true;\n          }\n          #abortDelayedCleanup() {\n            if (this.#delayedCleanupTimeout) {\n              clearTimeout(this.#delayedCleanupTimeout);\n              this.#delayedCleanupTimeout = null;\n            }\n          }\n          _startRenderPage(transparency, cacheKey) {\n            const intentState = this._intentStates.get(cacheKey);\n            if (!intentState) {\n              return;\n            }\n            this._stats?.timeEnd(\"Page Request\");\n            intentState.displayReadyCapability?.resolve(transparency);\n          }\n          _renderPageChunk(operatorListChunk, intentState) {\n            for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n              intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n              intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n            }\n            intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n            intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            if (operatorListChunk.lastChunk) {\n              this.#tryCleanup(true);\n            }\n          }\n          _pumpOperatorList(_ref5) {\n            let {\n              renderingIntent,\n              cacheKey,\n              annotationStorageSerializable\n            } = _ref5;\n            const {\n              map,\n              transfers\n            } = annotationStorageSerializable;\n            const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", {\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              cacheKey,\n              annotationStorage: map\n            }, transfers);\n            const reader = readableStream.getReader();\n            const intentState = this._intentStates.get(cacheKey);\n            intentState.streamReader = reader;\n            const pump = () => {\n              reader.read().then(_ref6 => {\n                let {\n                  value,\n                  done\n                } = _ref6;\n                if (done) {\n                  intentState.streamReader = null;\n                  return;\n                }\n                if (this._transport.destroyed) {\n                  return;\n                }\n                this._renderPageChunk(value, intentState);\n                pump();\n              }, reason => {\n                intentState.streamReader = null;\n                if (this._transport.destroyed) {\n                  return;\n                }\n                if (intentState.operatorList) {\n                  intentState.operatorList.lastChunk = true;\n                  for (const internalRenderTask of intentState.renderTasks) {\n                    internalRenderTask.operatorListChanged();\n                  }\n                  this.#tryCleanup(true);\n                }\n                if (intentState.displayReadyCapability) {\n                  intentState.displayReadyCapability.reject(reason);\n                } else if (intentState.opListReadCapability) {\n                  intentState.opListReadCapability.reject(reason);\n                } else {\n                  throw reason;\n                }\n              });\n            };\n            pump();\n          }\n          _abortOperatorList(_ref7) {\n            let {\n              intentState,\n              reason,\n              force = false\n            } = _ref7;\n            if (!intentState.streamReader) {\n              return;\n            }\n            if (intentState.streamReaderCancelTimeout) {\n              clearTimeout(intentState.streamReaderCancelTimeout);\n              intentState.streamReaderCancelTimeout = null;\n            }\n            if (!force) {\n              if (intentState.renderTasks.size > 0) {\n                return;\n              }\n              if (reason instanceof _display_utils.RenderingCancelledException) {\n                let delay = RENDERING_CANCELLED_TIMEOUT;\n                if (reason.extraDelay > 0 && reason.extraDelay < 1000) {\n                  delay += reason.extraDelay;\n                }\n                intentState.streamReaderCancelTimeout = setTimeout(() => {\n                  intentState.streamReaderCancelTimeout = null;\n                  this._abortOperatorList({\n                    intentState,\n                    reason,\n                    force: true\n                  });\n                }, delay);\n                return;\n              }\n            }\n            intentState.streamReader.cancel(new _util.AbortException(reason.message)).catch(() => {});\n            intentState.streamReader = null;\n            if (this._transport.destroyed) {\n              return;\n            }\n            for (const [curCacheKey, curIntentState] of this._intentStates) {\n              if (curIntentState === intentState) {\n                this._intentStates.delete(curCacheKey);\n                break;\n              }\n            }\n            this.cleanup();\n          }\n          get stats() {\n            return this._stats;\n          }\n        }\n        exports.PDFPageProxy = PDFPageProxy;\n        class LoopbackPort {\n          #listeners = new Set();\n          #deferred = Promise.resolve();\n          postMessage(obj, transfer) {\n            const event = {\n              data: structuredClone(obj, transfer ? {\n                transfer\n              } : null)\n            };\n            this.#deferred.then(() => {\n              for (const listener of this.#listeners) {\n                listener.call(this, event);\n              }\n            });\n          }\n          addEventListener(name, listener) {\n            this.#listeners.add(listener);\n          }\n          removeEventListener(name, listener) {\n            this.#listeners.delete(listener);\n          }\n          terminate() {\n            this.#listeners.clear();\n          }\n        }\n        exports.LoopbackPort = LoopbackPort;\n        const PDFWorkerUtil = {\n          isWorkerDisabled: false,\n          fallbackWorkerSrc: null,\n          fakeWorkerId: 0\n        };\n        exports.PDFWorkerUtil = PDFWorkerUtil;\n        {\n          if (_util.isNodeJS && typeof require === \"function\") {\n            PDFWorkerUtil.isWorkerDisabled = true;\n            PDFWorkerUtil.fallbackWorkerSrc = \"./pdf.worker.js\";\n          } else if (typeof document === \"object\") {\n            const pdfjsFilePath = document?.currentScript?.src;\n            if (pdfjsFilePath) {\n              PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n            }\n          }\n          PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n            let base;\n            try {\n              base = new URL(baseUrl);\n              if (!base.origin || base.origin === \"null\") {\n                return false;\n              }\n            } catch {\n              return false;\n            }\n            const other = new URL(otherUrl, base);\n            return base.origin === other.origin;\n          };\n          PDFWorkerUtil.createCDNWrapper = function (url) {\n            const wrapper = `importScripts(\"${url}\");`;\n            return URL.createObjectURL(new Blob([wrapper]));\n          };\n        }\n        class PDFWorker {\n          static #workerPorts;\n          constructor() {\n            let {\n              name = null,\n              port = null,\n              verbosity = (0, _util.getVerbosityLevel)()\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            this.name = name;\n            this.destroyed = false;\n            this.verbosity = verbosity;\n            this._readyCapability = new _util.PromiseCapability();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n            if (port) {\n              if (PDFWorker.#workerPorts?.has(port)) {\n                throw new Error(\"Cannot use more than one PDFWorker per port.\");\n              }\n              (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n              this._initializeFromPort(port);\n              return;\n            }\n            this._initialize();\n          }\n          get promise() {\n            return this._readyCapability.promise;\n          }\n          get port() {\n            return this._port;\n          }\n          get messageHandler() {\n            return this._messageHandler;\n          }\n          _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n            this._messageHandler.on(\"ready\", function () {});\n            this._readyCapability.resolve();\n            this._messageHandler.send(\"configure\", {\n              verbosity: this.verbosity\n            });\n          }\n          _initialize() {\n            if (!PDFWorkerUtil.isWorkerDisabled && !PDFWorker._mainThreadWorkerMessageHandler) {\n              let {\n                workerSrc\n              } = PDFWorker;\n              try {\n                if (!PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)) {\n                  workerSrc = PDFWorkerUtil.createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n                const worker = new Worker(workerSrc);\n                const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n                const terminateEarly = () => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n                  if (this.destroyed) {\n                    this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    this._setupFakeWorker();\n                  }\n                };\n                const onWorkerError = () => {\n                  if (!this._webWorker) {\n                    terminateEarly();\n                  }\n                };\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n                  if (data) {\n                    this._messageHandler = messageHandler;\n                    this._port = worker;\n                    this._webWorker = worker;\n                    this._readyCapability.resolve();\n                    messageHandler.send(\"configure\", {\n                      verbosity: this.verbosity\n                    });\n                  } else {\n                    this._setupFakeWorker();\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n                  try {\n                    sendTest();\n                  } catch {\n                    this._setupFakeWorker();\n                  }\n                });\n                const sendTest = () => {\n                  const testObj = new Uint8Array();\n                  messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                };\n                sendTest();\n                return;\n              } catch {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n            this._setupFakeWorker();\n          }\n          _setupFakeWorker() {\n            if (!PDFWorkerUtil.isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              PDFWorkerUtil.isWorkerDisabled = true;\n            }\n            PDFWorker._setupFakeWorkerGlobal.then(WorkerMessageHandler => {\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                return;\n              }\n              const port = new LoopbackPort();\n              this._port = port;\n              const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n              const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              this._messageHandler = messageHandler;\n              this._readyCapability.resolve();\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            }).catch(reason => {\n              this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n            });\n          }\n          destroy() {\n            this.destroyed = true;\n            if (this._webWorker) {\n              this._webWorker.terminate();\n              this._webWorker = null;\n            }\n            PDFWorker.#workerPorts?.delete(this._port);\n            this._port = null;\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n              this._messageHandler = null;\n            }\n          }\n          static fromPort(params) {\n            if (!params?.port) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n            const cachedPort = this.#workerPorts?.get(params.port);\n            if (cachedPort) {\n              if (cachedPort._pendingDestroy) {\n                throw new Error(\"PDFWorker.fromPort - the worker is being destroyed.\\n\" + \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\");\n              }\n              return cachedPort;\n            }\n            return new PDFWorker(params);\n          }\n          static get workerSrc() {\n            if (_worker_options.GlobalWorkerOptions.workerSrc) {\n              return _worker_options.GlobalWorkerOptions.workerSrc;\n            }\n            if (PDFWorkerUtil.fallbackWorkerSrc !== null) {\n              if (!_util.isNodeJS) {\n                (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n              }\n              return PDFWorkerUtil.fallbackWorkerSrc;\n            }\n            throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n          }\n          static get _mainThreadWorkerMessageHandler() {\n            try {\n              return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n            } catch {\n              return null;\n            }\n          }\n          static get _setupFakeWorkerGlobal() {\n            const loader = async () => {\n              const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n              if (mainWorkerMessageHandler) {\n                return mainWorkerMessageHandler;\n              }\n              if (_util.isNodeJS && typeof require === \"function\") {\n                const worker = eval(\"require\")(this.workerSrc);\n                return worker.WorkerMessageHandler;\n              }\n              await (0, _display_utils.loadScript)(this.workerSrc);\n              return window.pdfjsWorker.WorkerMessageHandler;\n            };\n            return (0, _util.shadow)(this, \"_setupFakeWorkerGlobal\", loader());\n          }\n        }\n        exports.PDFWorker = PDFWorker;\n        class WorkerTransport {\n          #methodPromises = new Map();\n          #pageCache = new Map();\n          #pagePromises = new Map();\n          #passwordCapability = null;\n          constructor(messageHandler, loadingTask, networkStream, params, factory) {\n            this.messageHandler = messageHandler;\n            this.loadingTask = loadingTask;\n            this.commonObjs = new PDFObjects();\n            this.fontLoader = new _font_loader.FontLoader({\n              ownerDocument: params.ownerDocument,\n              styleElement: params.styleElement\n            });\n            this._params = params;\n            this.canvasFactory = factory.canvasFactory;\n            this.filterFactory = factory.filterFactory;\n            this.cMapReaderFactory = factory.cMapReaderFactory;\n            this.standardFontDataFactory = factory.standardFontDataFactory;\n            this.destroyed = false;\n            this.destroyCapability = null;\n            this._networkStream = networkStream;\n            this._fullReader = null;\n            this._lastProgress = null;\n            this.downloadInfoCapability = new _util.PromiseCapability();\n            this.setupMessageHandler();\n          }\n          #cacheSimpleMethod(name) {\n            let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const cachedPromise = this.#methodPromises.get(name);\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n            const promise = this.messageHandler.sendWithPromise(name, data);\n            this.#methodPromises.set(name, promise);\n            return promise;\n          }\n          get annotationStorage() {\n            return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n          }\n          getRenderingIntent(intent) {\n            let annotationMode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _util.AnnotationMode.ENABLE;\n            let printAnnotationStorage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            let isOpList = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n            let renderingIntent = _util.RenderingIntentFlag.DISPLAY;\n            let annotationStorageSerializable = _annotation_storage.SerializableEmpty;\n            switch (intent) {\n              case \"any\":\n                renderingIntent = _util.RenderingIntentFlag.ANY;\n                break;\n              case \"display\":\n                break;\n              case \"print\":\n                renderingIntent = _util.RenderingIntentFlag.PRINT;\n                break;\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid intent: ${intent}`);\n            }\n            switch (annotationMode) {\n              case _util.AnnotationMode.DISABLE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_DISABLE;\n                break;\n              case _util.AnnotationMode.ENABLE:\n                break;\n              case _util.AnnotationMode.ENABLE_FORMS:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_FORMS;\n                break;\n              case _util.AnnotationMode.ENABLE_STORAGE:\n                renderingIntent += _util.RenderingIntentFlag.ANNOTATIONS_STORAGE;\n                const annotationStorage = renderingIntent & _util.RenderingIntentFlag.PRINT && printAnnotationStorage instanceof _annotation_storage.PrintAnnotationStorage ? printAnnotationStorage : this.annotationStorage;\n                annotationStorageSerializable = annotationStorage.serializable;\n                break;\n              default:\n                (0, _util.warn)(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n            }\n            if (isOpList) {\n              renderingIntent += _util.RenderingIntentFlag.OPLIST;\n            }\n            return {\n              renderingIntent,\n              cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n              annotationStorageSerializable\n            };\n          }\n          destroy() {\n            if (this.destroyCapability) {\n              return this.destroyCapability.promise;\n            }\n            this.destroyed = true;\n            this.destroyCapability = new _util.PromiseCapability();\n            this.#passwordCapability?.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n            const waitOn = [];\n            for (const page of this.#pageCache.values()) {\n              waitOn.push(page._destroy());\n            }\n            this.#pageCache.clear();\n            this.#pagePromises.clear();\n            if (this.hasOwnProperty(\"annotationStorage\")) {\n              this.annotationStorage.resetModified();\n            }\n            const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n            waitOn.push(terminated);\n            Promise.all(waitOn).then(() => {\n              this.commonObjs.clear();\n              this.fontLoader.clear();\n              this.#methodPromises.clear();\n              this.filterFactory.destroy();\n              this._networkStream?.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n              if (this.messageHandler) {\n                this.messageHandler.destroy();\n                this.messageHandler = null;\n              }\n              this.destroyCapability.resolve();\n            }, this.destroyCapability.reject);\n            return this.destroyCapability.promise;\n          }\n          setupMessageHandler() {\n            const {\n              messageHandler,\n              loadingTask\n            } = this;\n            messageHandler.on(\"GetReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n              this._fullReader = this._networkStream.getFullReader();\n              this._fullReader.onProgress = evt => {\n                this._lastProgress = {\n                  loaded: evt.loaded,\n                  total: evt.total\n                };\n              };\n              sink.onPull = () => {\n                this._fullReader.read().then(function (_ref8) {\n                  let {\n                    value,\n                    done\n                  } = _ref8;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)(value instanceof ArrayBuffer, \"GetReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = reason => {\n                this._fullReader.cancel(reason);\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"ReaderHeadersReady\", data => {\n              const headersCapability = new _util.PromiseCapability();\n              const fullReader = this._fullReader;\n              fullReader.headersReady.then(() => {\n                if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                  if (this._lastProgress) {\n                    loadingTask.onProgress?.(this._lastProgress);\n                  }\n                  fullReader.onProgress = evt => {\n                    loadingTask.onProgress?.({\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  };\n                }\n                headersCapability.resolve({\n                  isStreamingSupported: fullReader.isStreamingSupported,\n                  isRangeSupported: fullReader.isRangeSupported,\n                  contentLength: fullReader.contentLength\n                });\n              }, headersCapability.reject);\n              return headersCapability.promise;\n            });\n            messageHandler.on(\"GetRangeReader\", (data, sink) => {\n              (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n              const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n              if (!rangeReader) {\n                sink.close();\n                return;\n              }\n              sink.onPull = () => {\n                rangeReader.read().then(function (_ref9) {\n                  let {\n                    value,\n                    done\n                  } = _ref9;\n                  if (done) {\n                    sink.close();\n                    return;\n                  }\n                  (0, _util.assert)(value instanceof ArrayBuffer, \"GetRangeReader - expected an ArrayBuffer.\");\n                  sink.enqueue(new Uint8Array(value), 1, [value]);\n                }).catch(reason => {\n                  sink.error(reason);\n                });\n              };\n              sink.onCancel = reason => {\n                rangeReader.cancel(reason);\n                sink.ready.catch(readyReason => {\n                  if (this.destroyed) {\n                    return;\n                  }\n                  throw readyReason;\n                });\n              };\n            });\n            messageHandler.on(\"GetDoc\", _ref10 => {\n              let {\n                pdfInfo\n              } = _ref10;\n              this._numPages = pdfInfo.numPages;\n              this._htmlForXfa = pdfInfo.htmlForXfa;\n              delete pdfInfo.htmlForXfa;\n              loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n            });\n            messageHandler.on(\"DocException\", function (ex) {\n              let reason;\n              switch (ex.name) {\n                case \"PasswordException\":\n                  reason = new _util.PasswordException(ex.message, ex.code);\n                  break;\n                case \"InvalidPDFException\":\n                  reason = new _util.InvalidPDFException(ex.message);\n                  break;\n                case \"MissingPDFException\":\n                  reason = new _util.MissingPDFException(ex.message);\n                  break;\n                case \"UnexpectedResponseException\":\n                  reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                  break;\n                case \"UnknownErrorException\":\n                  reason = new _util.UnknownErrorException(ex.message, ex.details);\n                  break;\n                default:\n                  (0, _util.unreachable)(\"DocException - expected a valid Error.\");\n              }\n              loadingTask._capability.reject(reason);\n            });\n            messageHandler.on(\"PasswordRequest\", exception => {\n              this.#passwordCapability = new _util.PromiseCapability();\n              if (loadingTask.onPassword) {\n                const updatePassword = password => {\n                  if (password instanceof Error) {\n                    this.#passwordCapability.reject(password);\n                  } else {\n                    this.#passwordCapability.resolve({\n                      password\n                    });\n                  }\n                };\n                try {\n                  loadingTask.onPassword(updatePassword, exception.code);\n                } catch (ex) {\n                  this.#passwordCapability.reject(ex);\n                }\n              } else {\n                this.#passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n              }\n              return this.#passwordCapability.promise;\n            });\n            messageHandler.on(\"DataLoaded\", data => {\n              loadingTask.onProgress?.({\n                loaded: data.length,\n                total: data.length\n              });\n              this.downloadInfoCapability.resolve(data);\n            });\n            messageHandler.on(\"StartRenderPage\", data => {\n              if (this.destroyed) {\n                return;\n              }\n              const page = this.#pageCache.get(data.pageIndex);\n              page._startRenderPage(data.transparency, data.cacheKey);\n            });\n            messageHandler.on(\"commonobj\", _ref11 => {\n              let [id, type, exportedData] = _ref11;\n              if (this.destroyed) {\n                return;\n              }\n              if (this.commonObjs.has(id)) {\n                return;\n              }\n              switch (type) {\n                case \"Font\":\n                  const params = this._params;\n                  if (\"error\" in exportedData) {\n                    const exportedError = exportedData.error;\n                    (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                    this.commonObjs.resolve(id, exportedError);\n                    break;\n                  }\n                  const inspectFont = params.pdfBug && globalThis.FontInspector?.enabled ? (font, url) => globalThis.FontInspector.fontAdded(font, url) : null;\n                  const font = new _font_loader.FontFaceObject(exportedData, {\n                    isEvalSupported: params.isEvalSupported,\n                    disableFontFace: params.disableFontFace,\n                    ignoreErrors: params.ignoreErrors,\n                    inspectFont\n                  });\n                  this.fontLoader.bind(font).catch(reason => {\n                    return messageHandler.sendWithPromise(\"FontFallback\", {\n                      id\n                    });\n                  }).finally(() => {\n                    if (!params.fontExtraProperties && font.data) {\n                      font.data = null;\n                    }\n                    this.commonObjs.resolve(id, font);\n                  });\n                  break;\n                case \"FontPath\":\n                case \"Image\":\n                case \"Pattern\":\n                  this.commonObjs.resolve(id, exportedData);\n                  break;\n                default:\n                  throw new Error(`Got unknown common object type ${type}`);\n              }\n            });\n            messageHandler.on(\"obj\", _ref12 => {\n              let [id, pageIndex, type, imageData] = _ref12;\n              if (this.destroyed) {\n                return;\n              }\n              const pageProxy = this.#pageCache.get(pageIndex);\n              if (pageProxy.objs.has(id)) {\n                return;\n              }\n              switch (type) {\n                case \"Image\":\n                  pageProxy.objs.resolve(id, imageData);\n                  if (imageData) {\n                    let length;\n                    if (imageData.bitmap) {\n                      const {\n                        width,\n                        height\n                      } = imageData;\n                      length = width * height * 4;\n                    } else {\n                      length = imageData.data?.length || 0;\n                    }\n                    if (length > _util.MAX_IMAGE_SIZE_TO_CACHE) {\n                      pageProxy._maybeCleanupAfterRender = true;\n                    }\n                  }\n                  break;\n                case \"Pattern\":\n                  pageProxy.objs.resolve(id, imageData);\n                  break;\n                default:\n                  throw new Error(`Got unknown object type ${type}`);\n              }\n            });\n            messageHandler.on(\"DocProgress\", data => {\n              if (this.destroyed) {\n                return;\n              }\n              loadingTask.onProgress?.({\n                loaded: data.loaded,\n                total: data.total\n              });\n            });\n            messageHandler.on(\"FetchBuiltInCMap\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n              if (!this.cMapReaderFactory) {\n                return Promise.reject(new Error(\"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n              return this.cMapReaderFactory.fetch(data);\n            });\n            messageHandler.on(\"FetchStandardFontData\", data => {\n              if (this.destroyed) {\n                return Promise.reject(new Error(\"Worker was destroyed.\"));\n              }\n              if (!this.standardFontDataFactory) {\n                return Promise.reject(new Error(\"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"));\n              }\n              return this.standardFontDataFactory.fetch(data);\n            });\n          }\n          getData() {\n            return this.messageHandler.sendWithPromise(\"GetData\", null);\n          }\n          saveDocument() {\n            if (this.annotationStorage.size <= 0) {\n              (0, _util.warn)(\"saveDocument called while `annotationStorage` is empty, \" + \"please use the getData-method instead.\");\n            }\n            const {\n              map,\n              transfers\n            } = this.annotationStorage.serializable;\n            return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n              isPureXfa: !!this._htmlForXfa,\n              numPages: this._numPages,\n              annotationStorage: map,\n              filename: this._fullReader?.filename ?? null\n            }, transfers).finally(() => {\n              this.annotationStorage.resetModified();\n            });\n          }\n          getPage(pageNumber) {\n            if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n              return Promise.reject(new Error(\"Invalid page request.\"));\n            }\n            const pageIndex = pageNumber - 1,\n              cachedPromise = this.#pagePromises.get(pageIndex);\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n            const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n              pageIndex\n            }).then(pageInfo => {\n              if (this.destroyed) {\n                throw new Error(\"Transport destroyed\");\n              }\n              const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.pdfBug);\n              this.#pageCache.set(pageIndex, page);\n              return page;\n            });\n            this.#pagePromises.set(pageIndex, promise);\n            return promise;\n          }\n          getPageIndex(ref) {\n            if (typeof ref !== \"object\" || ref === null || !Number.isInteger(ref.num) || ref.num < 0 || !Number.isInteger(ref.gen) || ref.gen < 0) {\n              return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n            }\n            return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n              num: ref.num,\n              gen: ref.gen\n            });\n          }\n          getAnnotations(pageIndex, intent) {\n            return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n              pageIndex,\n              intent\n            });\n          }\n          getFieldObjects() {\n            return this.#cacheSimpleMethod(\"GetFieldObjects\");\n          }\n          hasJSActions() {\n            return this.#cacheSimpleMethod(\"HasJSActions\");\n          }\n          getCalculationOrderIds() {\n            return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n          }\n          getDestinations() {\n            return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n          }\n          getDestination(id) {\n            if (typeof id !== \"string\") {\n              return Promise.reject(new Error(\"Invalid destination request.\"));\n            }\n            return this.messageHandler.sendWithPromise(\"GetDestination\", {\n              id\n            });\n          }\n          getPageLabels() {\n            return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n          }\n          getPageLayout() {\n            return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n          }\n          getPageMode() {\n            return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n          }\n          getViewerPreferences() {\n            return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n          }\n          getOpenAction() {\n            return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n          }\n          getAttachments() {\n            return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n          }\n          getDocJSActions() {\n            return this.#cacheSimpleMethod(\"GetDocJSActions\");\n          }\n          getPageJSActions(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n              pageIndex\n            });\n          }\n          getStructTree(pageIndex) {\n            return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n              pageIndex\n            });\n          }\n          getOutline() {\n            return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n          }\n          getOptionalContentConfig() {\n            return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n              return new _optional_content_config.OptionalContentConfig(results);\n            });\n          }\n          getPermissions() {\n            return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n          }\n          getMetadata() {\n            const name = \"GetMetadata\",\n              cachedPromise = this.#methodPromises.get(name);\n            if (cachedPromise) {\n              return cachedPromise;\n            }\n            const promise = this.messageHandler.sendWithPromise(name, null).then(results => {\n              return {\n                info: results[0],\n                metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n                contentDispositionFilename: this._fullReader?.filename ?? null,\n                contentLength: this._fullReader?.contentLength ?? null\n              };\n            });\n            this.#methodPromises.set(name, promise);\n            return promise;\n          }\n          getMarkInfo() {\n            return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n          }\n          async startCleanup() {\n            let keepLoadedFonts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.destroyed) {\n              return;\n            }\n            await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n            for (const page of this.#pageCache.values()) {\n              const cleanupSuccessful = page.cleanup();\n              if (!cleanupSuccessful) {\n                throw new Error(`startCleanup: Page ${page.pageNumber} is currently rendering.`);\n              }\n            }\n            this.commonObjs.clear();\n            if (!keepLoadedFonts) {\n              this.fontLoader.clear();\n            }\n            this.#methodPromises.clear();\n            this.filterFactory.destroy(true);\n          }\n          get loadingParams() {\n            const {\n              disableAutoFetch,\n              enableXfa\n            } = this._params;\n            return (0, _util.shadow)(this, \"loadingParams\", {\n              disableAutoFetch,\n              enableXfa\n            });\n          }\n        }\n        class PDFObjects {\n          #objs = Object.create(null);\n          #ensureObj(objId) {\n            return this.#objs[objId] ||= {\n              capability: new _util.PromiseCapability(),\n              data: null\n            };\n          }\n          get(objId) {\n            let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (callback) {\n              const obj = this.#ensureObj(objId);\n              obj.capability.promise.then(() => callback(obj.data));\n              return null;\n            }\n            const obj = this.#objs[objId];\n            if (!obj?.capability.settled) {\n              throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n            }\n            return obj.data;\n          }\n          has(objId) {\n            const obj = this.#objs[objId];\n            return obj?.capability.settled || false;\n          }\n          resolve(objId) {\n            let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const obj = this.#ensureObj(objId);\n            obj.data = data;\n            obj.capability.resolve();\n          }\n          clear() {\n            for (const objId in this.#objs) {\n              const {\n                data\n              } = this.#objs[objId];\n              data?.bitmap?.close();\n            }\n            this.#objs = Object.create(null);\n          }\n        }\n        class RenderTask {\n          #internalRenderTask = null;\n          constructor(internalRenderTask) {\n            this.#internalRenderTask = internalRenderTask;\n            this.onContinue = null;\n          }\n          get promise() {\n            return this.#internalRenderTask.capability.promise;\n          }\n          cancel() {\n            let extraDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            this.#internalRenderTask.cancel(null, extraDelay);\n          }\n          get separateAnnots() {\n            const {\n              separateAnnots\n            } = this.#internalRenderTask.operatorList;\n            if (!separateAnnots) {\n              return false;\n            }\n            const {\n              annotationCanvasMap\n            } = this.#internalRenderTask;\n            return separateAnnots.form || separateAnnots.canvas && annotationCanvasMap?.size > 0;\n          }\n        }\n        exports.RenderTask = RenderTask;\n        class InternalRenderTask {\n          static #canvasInUse = new WeakSet();\n          constructor(_ref13) {\n            let {\n              callback,\n              params,\n              objs,\n              commonObjs,\n              annotationCanvasMap,\n              operatorList,\n              pageIndex,\n              canvasFactory,\n              filterFactory,\n              useRequestAnimationFrame = false,\n              pdfBug = false,\n              pageColors = null\n            } = _ref13;\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this.filterFactory = filterFactory;\n            this._pdfBug = pdfBug;\n            this.pageColors = pageColors;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = new _util.PromiseCapability();\n            this.task = new RenderTask(this);\n            this._cancelBound = this.cancel.bind(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n          get completed() {\n            return this.capability.promise.catch(function () {});\n          }\n          initializeGraphics(_ref14) {\n            let {\n              transparency = false,\n              optionalContentConfig\n            } = _ref14;\n            if (this.cancelled) {\n              return;\n            }\n            if (this._canvas) {\n              if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n              InternalRenderTask.#canvasInUse.add(this._canvas);\n            }\n            if (this._pdfBug && globalThis.StepperManager?.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n            const {\n              canvasContext,\n              viewport,\n              transform,\n              background\n            } = this.params;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n              optionalContentConfig\n            }, this.annotationCanvasMap, this.pageColors);\n            this.gfx.beginDrawing({\n              transform,\n              viewport,\n              transparency,\n              background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n            this.graphicsReadyCallback?.();\n          }\n          cancel() {\n            let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            let extraDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            this.running = false;\n            this.cancelled = true;\n            this.gfx?.endDrawing();\n            InternalRenderTask.#canvasInUse.delete(this._canvas);\n            this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, extraDelay));\n          }\n          operatorListChanged() {\n            if (!this.graphicsReady) {\n              this.graphicsReadyCallback ||= this._continueBound;\n              return;\n            }\n            this.stepper?.updateOperatorList(this.operatorList);\n            if (this.running) {\n              return;\n            }\n            this._continue();\n          }\n          _continue() {\n            this.running = true;\n            if (this.cancelled) {\n              return;\n            }\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n          _scheduleNext() {\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(() => {\n                this._nextBound().catch(this._cancelBound);\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n            }\n          }\n          async _next() {\n            if (this.cancelled) {\n              return;\n            }\n            this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n            if (this.operatorListIdx === this.operatorList.argsArray.length) {\n              this.running = false;\n              if (this.operatorList.lastChunk) {\n                this.gfx.endDrawing();\n                InternalRenderTask.#canvasInUse.delete(this._canvas);\n                this.callback();\n              }\n            }\n          }\n        }\n        const version = '3.11.174';\n        exports.version = version;\n        const build = 'ce8716743';\n        exports.build = build;\n\n        /***/\n      }, /* 3 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SerializableEmpty = exports.PrintAnnotationStorage = exports.AnnotationStorage = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _editor = __w_pdfjs_require__(4);\n        var _murmurhash = __w_pdfjs_require__(8);\n        const SerializableEmpty = Object.freeze({\n          map: null,\n          hash: \"\",\n          transfers: undefined\n        });\n        exports.SerializableEmpty = SerializableEmpty;\n        class AnnotationStorage {\n          #modified = false;\n          #storage = new Map();\n          constructor() {\n            this.onSetModified = null;\n            this.onResetModified = null;\n            this.onAnnotationEditor = null;\n          }\n          getValue(key, defaultValue) {\n            const value = this.#storage.get(key);\n            if (value === undefined) {\n              return defaultValue;\n            }\n            return Object.assign(defaultValue, value);\n          }\n          getRawValue(key) {\n            return this.#storage.get(key);\n          }\n          remove(key) {\n            this.#storage.delete(key);\n            if (this.#storage.size === 0) {\n              this.resetModified();\n            }\n            if (typeof this.onAnnotationEditor === \"function\") {\n              for (const value of this.#storage.values()) {\n                if (value instanceof _editor.AnnotationEditor) {\n                  return;\n                }\n              }\n              this.onAnnotationEditor(null);\n            }\n          }\n          setValue(key, value) {\n            const obj = this.#storage.get(key);\n            let modified = false;\n            if (obj !== undefined) {\n              for (const [entry, val] of Object.entries(value)) {\n                if (obj[entry] !== val) {\n                  modified = true;\n                  obj[entry] = val;\n                }\n              }\n            } else {\n              modified = true;\n              this.#storage.set(key, value);\n            }\n            if (modified) {\n              this.#setModified();\n            }\n            if (value instanceof _editor.AnnotationEditor && typeof this.onAnnotationEditor === \"function\") {\n              this.onAnnotationEditor(value.constructor._type);\n            }\n          }\n          has(key) {\n            return this.#storage.has(key);\n          }\n          getAll() {\n            return this.#storage.size > 0 ? (0, _util.objectFromMap)(this.#storage) : null;\n          }\n          setAll(obj) {\n            for (const [key, val] of Object.entries(obj)) {\n              this.setValue(key, val);\n            }\n          }\n          get size() {\n            return this.#storage.size;\n          }\n          #setModified() {\n            if (!this.#modified) {\n              this.#modified = true;\n              if (typeof this.onSetModified === \"function\") {\n                this.onSetModified();\n              }\n            }\n          }\n          resetModified() {\n            if (this.#modified) {\n              this.#modified = false;\n              if (typeof this.onResetModified === \"function\") {\n                this.onResetModified();\n              }\n            }\n          }\n          get print() {\n            return new PrintAnnotationStorage(this);\n          }\n          get serializable() {\n            if (this.#storage.size === 0) {\n              return SerializableEmpty;\n            }\n            const map = new Map(),\n              hash = new _murmurhash.MurmurHash3_64(),\n              transfers = [];\n            const context = Object.create(null);\n            let hasBitmap = false;\n            for (const [key, val] of this.#storage) {\n              const serialized = val instanceof _editor.AnnotationEditor ? val.serialize(false, context) : val;\n              if (serialized) {\n                map.set(key, serialized);\n                hash.update(`${key}:${JSON.stringify(serialized)}`);\n                hasBitmap ||= !!serialized.bitmap;\n              }\n            }\n            if (hasBitmap) {\n              for (const value of map.values()) {\n                if (value.bitmap) {\n                  transfers.push(value.bitmap);\n                }\n              }\n            }\n            return map.size > 0 ? {\n              map,\n              hash: hash.hexdigest(),\n              transfers\n            } : SerializableEmpty;\n          }\n        }\n        exports.AnnotationStorage = AnnotationStorage;\n        class PrintAnnotationStorage extends AnnotationStorage {\n          #serializable;\n          constructor(parent) {\n            super();\n            const {\n              map,\n              hash,\n              transfers\n            } = parent.serializable;\n            const clone = structuredClone(map, transfers ? {\n              transfer: transfers\n            } : null);\n            this.#serializable = {\n              map: clone,\n              hash,\n              transfers\n            };\n          }\n          get print() {\n            (0, _util.unreachable)(\"Should not call PrintAnnotationStorage.print\");\n          }\n          get serializable() {\n            return this.#serializable;\n          }\n        }\n        exports.PrintAnnotationStorage = PrintAnnotationStorage;\n\n        /***/\n      }, /* 4 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationEditor = void 0;\n        var _tools = __w_pdfjs_require__(5);\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        class AnnotationEditor {\n          #altText = \"\";\n          #altTextDecorative = false;\n          #altTextButton = null;\n          #altTextTooltip = null;\n          #altTextTooltipTimeout = null;\n          #keepAspectRatio = false;\n          #resizersDiv = null;\n          #boundFocusin = this.focusin.bind(this);\n          #boundFocusout = this.focusout.bind(this);\n          #hasBeenClicked = false;\n          #isEditing = false;\n          #isInEditMode = false;\n          _initialOptions = Object.create(null);\n          _uiManager = null;\n          _focusEventsAllowed = true;\n          _l10nPromise = null;\n          #isDraggable = false;\n          #zIndex = AnnotationEditor._zIndex++;\n          static _borderLineWidth = -1;\n          static _colorManager = new _tools.ColorManager();\n          static _zIndex = 1;\n          static SMALL_EDITOR_SIZE = 0;\n          constructor(parameters) {\n            if (this.constructor === AnnotationEditor) {\n              (0, _util.unreachable)(\"Cannot initialize AnnotationEditor.\");\n            }\n            this.parent = parameters.parent;\n            this.id = parameters.id;\n            this.width = this.height = null;\n            this.pageIndex = parameters.parent.pageIndex;\n            this.name = parameters.name;\n            this.div = null;\n            this._uiManager = parameters.uiManager;\n            this.annotationElementId = null;\n            this._willKeepAspectRatio = false;\n            this._initialOptions.isCentered = parameters.isCentered;\n            this._structTreeParentId = null;\n            const {\n              rotation,\n              rawDims: {\n                pageWidth,\n                pageHeight,\n                pageX,\n                pageY\n              }\n            } = this.parent.viewport;\n            this.rotation = rotation;\n            this.pageRotation = (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n            this.pageDimensions = [pageWidth, pageHeight];\n            this.pageTranslation = [pageX, pageY];\n            const [width, height] = this.parentDimensions;\n            this.x = parameters.x / width;\n            this.y = parameters.y / height;\n            this.isAttachedToDOM = false;\n            this.deleted = false;\n          }\n          get editorType() {\n            return Object.getPrototypeOf(this).constructor._type;\n          }\n          static get _defaultLineColor() {\n            return (0, _util.shadow)(this, \"_defaultLineColor\", this._colorManager.getHexCode(\"CanvasText\"));\n          }\n          static deleteAnnotationElement(editor) {\n            const fakeEditor = new FakeEditor({\n              id: editor.parent.getNextId(),\n              parent: editor.parent,\n              uiManager: editor._uiManager\n            });\n            fakeEditor.annotationElementId = editor.annotationElementId;\n            fakeEditor.deleted = true;\n            fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n          }\n          static initialize(l10n) {\n            let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            AnnotationEditor._l10nPromise ||= new Map([\"editor_alt_text_button_label\", \"editor_alt_text_edit_button_label\", \"editor_alt_text_decorative_tooltip\"].map(str => [str, l10n.get(str)]));\n            if (options?.strings) {\n              for (const str of options.strings) {\n                AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n              }\n            }\n            if (AnnotationEditor._borderLineWidth !== -1) {\n              return;\n            }\n            const style = getComputedStyle(document.documentElement);\n            AnnotationEditor._borderLineWidth = parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n          }\n          static updateDefaultParams(_type, _value) {}\n          static get defaultPropertiesToUpdate() {\n            return [];\n          }\n          static isHandlingMimeForPasting(mime) {\n            return false;\n          }\n          static paste(item, parent) {\n            (0, _util.unreachable)(\"Not implemented\");\n          }\n          get propertiesToUpdate() {\n            return [];\n          }\n          get _isDraggable() {\n            return this.#isDraggable;\n          }\n          set _isDraggable(value) {\n            this.#isDraggable = value;\n            this.div?.classList.toggle(\"draggable\", value);\n          }\n          center() {\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            switch (this.parentRotation) {\n              case 90:\n                this.x -= this.height * pageHeight / (pageWidth * 2);\n                this.y += this.width * pageWidth / (pageHeight * 2);\n                break;\n              case 180:\n                this.x += this.width / 2;\n                this.y += this.height / 2;\n                break;\n              case 270:\n                this.x += this.height * pageHeight / (pageWidth * 2);\n                this.y -= this.width * pageWidth / (pageHeight * 2);\n                break;\n              default:\n                this.x -= this.width / 2;\n                this.y -= this.height / 2;\n                break;\n            }\n            this.fixAndSetPosition();\n          }\n          addCommands(params) {\n            this._uiManager.addCommands(params);\n          }\n          get currentLayer() {\n            return this._uiManager.currentLayer;\n          }\n          setInBackground() {\n            this.div.style.zIndex = 0;\n          }\n          setInForeground() {\n            this.div.style.zIndex = this.#zIndex;\n          }\n          setParent(parent) {\n            if (parent !== null) {\n              this.pageIndex = parent.pageIndex;\n              this.pageDimensions = parent.pageDimensions;\n            }\n            this.parent = parent;\n          }\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n            if (!this.#hasBeenClicked) {\n              this.parent.setSelected(this);\n            } else {\n              this.#hasBeenClicked = false;\n            }\n          }\n          focusout(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n            if (!this.isAttachedToDOM) {\n              return;\n            }\n            const target = event.relatedTarget;\n            if (target?.closest(`#${this.id}`)) {\n              return;\n            }\n            event.preventDefault();\n            if (!this.parent?.isMultipleSelection) {\n              this.commitOrRemove();\n            }\n          }\n          commitOrRemove() {\n            if (this.isEmpty()) {\n              this.remove();\n            } else {\n              this.commit();\n            }\n          }\n          commit() {\n            this.addToAnnotationStorage();\n          }\n          addToAnnotationStorage() {\n            this._uiManager.addToAnnotationStorage(this);\n          }\n          setAt(x, y, tx, ty) {\n            const [width, height] = this.parentDimensions;\n            [tx, ty] = this.screenToPageTranslation(tx, ty);\n            this.x = (x + tx) / width;\n            this.y = (y + ty) / height;\n            this.fixAndSetPosition();\n          }\n          #translate(_ref15, x, y) {\n            let [width, height] = _ref15;\n            [x, y] = this.screenToPageTranslation(x, y);\n            this.x += x / width;\n            this.y += y / height;\n            this.fixAndSetPosition();\n          }\n          translate(x, y) {\n            this.#translate(this.parentDimensions, x, y);\n          }\n          translateInPage(x, y) {\n            this.#translate(this.pageDimensions, x, y);\n            this.div.scrollIntoView({\n              block: \"nearest\"\n            });\n          }\n          drag(tx, ty) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.x += tx / parentWidth;\n            this.y += ty / parentHeight;\n            if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n              const {\n                x,\n                y\n              } = this.div.getBoundingClientRect();\n              if (this.parent.findNewParent(this, x, y)) {\n                this.x -= Math.floor(this.x);\n                this.y -= Math.floor(this.y);\n              }\n            }\n            let {\n              x,\n              y\n            } = this;\n            const [bx, by] = this.#getBaseTranslation();\n            x += bx;\n            y += by;\n            this.div.style.left = `${(100 * x).toFixed(2)}%`;\n            this.div.style.top = `${(100 * y).toFixed(2)}%`;\n            this.div.scrollIntoView({\n              block: \"nearest\"\n            });\n          }\n          #getBaseTranslation() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const {\n              _borderLineWidth\n            } = AnnotationEditor;\n            const x = _borderLineWidth / parentWidth;\n            const y = _borderLineWidth / parentHeight;\n            switch (this.rotation) {\n              case 90:\n                return [-x, y];\n              case 180:\n                return [x, y];\n              case 270:\n                return [x, -y];\n              default:\n                return [-x, -y];\n            }\n          }\n          fixAndSetPosition() {\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            let {\n              x,\n              y,\n              width,\n              height\n            } = this;\n            width *= pageWidth;\n            height *= pageHeight;\n            x *= pageWidth;\n            y *= pageHeight;\n            switch (this.rotation) {\n              case 0:\n                x = Math.max(0, Math.min(pageWidth - width, x));\n                y = Math.max(0, Math.min(pageHeight - height, y));\n                break;\n              case 90:\n                x = Math.max(0, Math.min(pageWidth - height, x));\n                y = Math.min(pageHeight, Math.max(width, y));\n                break;\n              case 180:\n                x = Math.min(pageWidth, Math.max(width, x));\n                y = Math.min(pageHeight, Math.max(height, y));\n                break;\n              case 270:\n                x = Math.min(pageWidth, Math.max(height, x));\n                y = Math.max(0, Math.min(pageHeight - width, y));\n                break;\n            }\n            this.x = x /= pageWidth;\n            this.y = y /= pageHeight;\n            const [bx, by] = this.#getBaseTranslation();\n            x += bx;\n            y += by;\n            const {\n              style\n            } = this.div;\n            style.left = `${(100 * x).toFixed(2)}%`;\n            style.top = `${(100 * y).toFixed(2)}%`;\n            this.moveInDOM();\n          }\n          static #rotatePoint(x, y, angle) {\n            switch (angle) {\n              case 90:\n                return [y, -x];\n              case 180:\n                return [-x, -y];\n              case 270:\n                return [-y, x];\n              default:\n                return [x, y];\n            }\n          }\n          screenToPageTranslation(x, y) {\n            return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n          }\n          pageTranslationToScreen(x, y) {\n            return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n          }\n          #getRotationMatrix(rotation) {\n            switch (rotation) {\n              case 90:\n                {\n                  const [pageWidth, pageHeight] = this.pageDimensions;\n                  return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n                }\n              case 180:\n                return [-1, 0, 0, -1];\n              case 270:\n                {\n                  const [pageWidth, pageHeight] = this.pageDimensions;\n                  return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n                }\n              default:\n                return [1, 0, 0, 1];\n            }\n          }\n          get parentScale() {\n            return this._uiManager.viewParameters.realScale;\n          }\n          get parentRotation() {\n            return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n          }\n          get parentDimensions() {\n            const {\n              parentScale,\n              pageDimensions: [pageWidth, pageHeight]\n            } = this;\n            const scaledWidth = pageWidth * parentScale;\n            const scaledHeight = pageHeight * parentScale;\n            return _util.FeatureTest.isCSSRoundSupported ? [Math.round(scaledWidth), Math.round(scaledHeight)] : [scaledWidth, scaledHeight];\n          }\n          setDims(width, height) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.div.style.width = `${(100 * width / parentWidth).toFixed(2)}%`;\n            if (!this.#keepAspectRatio) {\n              this.div.style.height = `${(100 * height / parentHeight).toFixed(2)}%`;\n            }\n            this.#altTextButton?.classList.toggle(\"small\", width < AnnotationEditor.SMALL_EDITOR_SIZE || height < AnnotationEditor.SMALL_EDITOR_SIZE);\n          }\n          fixDims() {\n            const {\n              style\n            } = this.div;\n            const {\n              height,\n              width\n            } = style;\n            const widthPercent = width.endsWith(\"%\");\n            const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n            if (widthPercent && heightPercent) {\n              return;\n            }\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            if (!widthPercent) {\n              style.width = `${(100 * parseFloat(width) / parentWidth).toFixed(2)}%`;\n            }\n            if (!this.#keepAspectRatio && !heightPercent) {\n              style.height = `${(100 * parseFloat(height) / parentHeight).toFixed(2)}%`;\n            }\n          }\n          getInitialTranslation() {\n            return [0, 0];\n          }\n          #createResizers() {\n            if (this.#resizersDiv) {\n              return;\n            }\n            this.#resizersDiv = document.createElement(\"div\");\n            this.#resizersDiv.classList.add(\"resizers\");\n            const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n            if (!this._willKeepAspectRatio) {\n              classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n            }\n            for (const name of classes) {\n              const div = document.createElement(\"div\");\n              this.#resizersDiv.append(div);\n              div.classList.add(\"resizer\", name);\n              div.addEventListener(\"pointerdown\", this.#resizerPointerdown.bind(this, name));\n              div.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            }\n            this.div.prepend(this.#resizersDiv);\n          }\n          #resizerPointerdown(name, event) {\n            event.preventDefault();\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n            const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n            const savedDraggable = this._isDraggable;\n            this._isDraggable = false;\n            const pointerMoveOptions = {\n              passive: true,\n              capture: true\n            };\n            window.addEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n            const savedX = this.x;\n            const savedY = this.y;\n            const savedWidth = this.width;\n            const savedHeight = this.height;\n            const savedParentCursor = this.parent.div.style.cursor;\n            const savedCursor = this.div.style.cursor;\n            this.div.style.cursor = this.parent.div.style.cursor = window.getComputedStyle(event.target).cursor;\n            const pointerUpCallback = () => {\n              this._isDraggable = savedDraggable;\n              window.removeEventListener(\"pointerup\", pointerUpCallback);\n              window.removeEventListener(\"blur\", pointerUpCallback);\n              window.removeEventListener(\"pointermove\", boundResizerPointermove, pointerMoveOptions);\n              this.parent.div.style.cursor = savedParentCursor;\n              this.div.style.cursor = savedCursor;\n              const newX = this.x;\n              const newY = this.y;\n              const newWidth = this.width;\n              const newHeight = this.height;\n              if (newX === savedX && newY === savedY && newWidth === savedWidth && newHeight === savedHeight) {\n                return;\n              }\n              this.addCommands({\n                cmd: () => {\n                  this.width = newWidth;\n                  this.height = newHeight;\n                  this.x = newX;\n                  this.y = newY;\n                  const [parentWidth, parentHeight] = this.parentDimensions;\n                  this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n                  this.fixAndSetPosition();\n                },\n                undo: () => {\n                  this.width = savedWidth;\n                  this.height = savedHeight;\n                  this.x = savedX;\n                  this.y = savedY;\n                  const [parentWidth, parentHeight] = this.parentDimensions;\n                  this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n                  this.fixAndSetPosition();\n                },\n                mustExec: true\n              });\n            };\n            window.addEventListener(\"pointerup\", pointerUpCallback);\n            window.addEventListener(\"blur\", pointerUpCallback);\n          }\n          #resizerPointermove(name, event) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const savedX = this.x;\n            const savedY = this.y;\n            const savedWidth = this.width;\n            const savedHeight = this.height;\n            const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n            const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n            const round = x => Math.round(x * 10000) / 10000;\n            const rotationMatrix = this.#getRotationMatrix(this.rotation);\n            const transf = (x, y) => [rotationMatrix[0] * x + rotationMatrix[2] * y, rotationMatrix[1] * x + rotationMatrix[3] * y];\n            const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n            const invTransf = (x, y) => [invRotationMatrix[0] * x + invRotationMatrix[2] * y, invRotationMatrix[1] * x + invRotationMatrix[3] * y];\n            let getPoint;\n            let getOpposite;\n            let isDiagonal = false;\n            let isHorizontal = false;\n            switch (name) {\n              case \"topLeft\":\n                isDiagonal = true;\n                getPoint = (w, h) => [0, 0];\n                getOpposite = (w, h) => [w, h];\n                break;\n              case \"topMiddle\":\n                getPoint = (w, h) => [w / 2, 0];\n                getOpposite = (w, h) => [w / 2, h];\n                break;\n              case \"topRight\":\n                isDiagonal = true;\n                getPoint = (w, h) => [w, 0];\n                getOpposite = (w, h) => [0, h];\n                break;\n              case \"middleRight\":\n                isHorizontal = true;\n                getPoint = (w, h) => [w, h / 2];\n                getOpposite = (w, h) => [0, h / 2];\n                break;\n              case \"bottomRight\":\n                isDiagonal = true;\n                getPoint = (w, h) => [w, h];\n                getOpposite = (w, h) => [0, 0];\n                break;\n              case \"bottomMiddle\":\n                getPoint = (w, h) => [w / 2, h];\n                getOpposite = (w, h) => [w / 2, 0];\n                break;\n              case \"bottomLeft\":\n                isDiagonal = true;\n                getPoint = (w, h) => [0, h];\n                getOpposite = (w, h) => [w, 0];\n                break;\n              case \"middleLeft\":\n                isHorizontal = true;\n                getPoint = (w, h) => [0, h / 2];\n                getOpposite = (w, h) => [w, h / 2];\n                break;\n            }\n            const point = getPoint(savedWidth, savedHeight);\n            const oppositePoint = getOpposite(savedWidth, savedHeight);\n            let transfOppositePoint = transf(...oppositePoint);\n            const oppositeX = round(savedX + transfOppositePoint[0]);\n            const oppositeY = round(savedY + transfOppositePoint[1]);\n            let ratioX = 1;\n            let ratioY = 1;\n            let [deltaX, deltaY] = this.screenToPageTranslation(event.movementX, event.movementY);\n            [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n            if (isDiagonal) {\n              const oldDiag = Math.hypot(savedWidth, savedHeight);\n              ratioX = ratioY = Math.max(Math.min(Math.hypot(oppositePoint[0] - point[0] - deltaX, oppositePoint[1] - point[1] - deltaY) / oldDiag, 1 / savedWidth, 1 / savedHeight), minWidth / savedWidth, minHeight / savedHeight);\n            } else if (isHorizontal) {\n              ratioX = Math.max(minWidth, Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))) / savedWidth;\n            } else {\n              ratioY = Math.max(minHeight, Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))) / savedHeight;\n            }\n            const newWidth = round(savedWidth * ratioX);\n            const newHeight = round(savedHeight * ratioY);\n            transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n            const newX = oppositeX - transfOppositePoint[0];\n            const newY = oppositeY - transfOppositePoint[1];\n            this.width = newWidth;\n            this.height = newHeight;\n            this.x = newX;\n            this.y = newY;\n            this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n            this.fixAndSetPosition();\n          }\n          async addAltTextButton() {\n            if (this.#altTextButton) {\n              return;\n            }\n            const altText = this.#altTextButton = document.createElement(\"button\");\n            altText.className = \"altText\";\n            const msg = await AnnotationEditor._l10nPromise.get(\"editor_alt_text_button_label\");\n            altText.textContent = msg;\n            altText.setAttribute(\"aria-label\", msg);\n            altText.tabIndex = \"0\";\n            altText.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n            altText.addEventListener(\"click\", event => {\n              event.preventDefault();\n              this._uiManager.editAltText(this);\n            }, {\n              capture: true\n            });\n            altText.addEventListener(\"keydown\", event => {\n              if (event.target === altText && event.key === \"Enter\") {\n                event.preventDefault();\n                this._uiManager.editAltText(this);\n              }\n            });\n            this.#setAltTextButtonState();\n            this.div.append(altText);\n            if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n              const PERCENT = 40;\n              AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(128, Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100)));\n            }\n          }\n          async #setAltTextButtonState() {\n            const button = this.#altTextButton;\n            if (!button) {\n              return;\n            }\n            if (!this.#altText && !this.#altTextDecorative) {\n              button.classList.remove(\"done\");\n              this.#altTextTooltip?.remove();\n              return;\n            }\n            AnnotationEditor._l10nPromise.get(\"editor_alt_text_edit_button_label\").then(msg => {\n              button.setAttribute(\"aria-label\", msg);\n            });\n            let tooltip = this.#altTextTooltip;\n            if (!tooltip) {\n              this.#altTextTooltip = tooltip = document.createElement(\"span\");\n              tooltip.className = \"tooltip\";\n              tooltip.setAttribute(\"role\", \"tooltip\");\n              const id = tooltip.id = `alt-text-tooltip-${this.id}`;\n              button.setAttribute(\"aria-describedby\", id);\n              const DELAY_TO_SHOW_TOOLTIP = 100;\n              button.addEventListener(\"mouseenter\", () => {\n                this.#altTextTooltipTimeout = setTimeout(() => {\n                  this.#altTextTooltipTimeout = null;\n                  this.#altTextTooltip.classList.add(\"show\");\n                  this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n                    source: this,\n                    details: {\n                      type: \"editing\",\n                      subtype: this.editorType,\n                      data: {\n                        action: \"alt_text_tooltip\"\n                      }\n                    }\n                  });\n                }, DELAY_TO_SHOW_TOOLTIP);\n              });\n              button.addEventListener(\"mouseleave\", () => {\n                clearTimeout(this.#altTextTooltipTimeout);\n                this.#altTextTooltipTimeout = null;\n                this.#altTextTooltip?.classList.remove(\"show\");\n              });\n            }\n            button.classList.add(\"done\");\n            tooltip.innerText = this.#altTextDecorative ? await AnnotationEditor._l10nPromise.get(\"editor_alt_text_decorative_tooltip\") : this.#altText;\n            if (!tooltip.parentNode) {\n              button.append(tooltip);\n            }\n          }\n          getClientDimensions() {\n            return this.div.getBoundingClientRect();\n          }\n          get altTextData() {\n            return {\n              altText: this.#altText,\n              decorative: this.#altTextDecorative\n            };\n          }\n          set altTextData(_ref16) {\n            let {\n              altText,\n              decorative\n            } = _ref16;\n            if (this.#altText === altText && this.#altTextDecorative === decorative) {\n              return;\n            }\n            this.#altText = altText;\n            this.#altTextDecorative = decorative;\n            this.#setAltTextButtonState();\n          }\n          render() {\n            this.div = document.createElement(\"div\");\n            this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n            this.div.className = this.name;\n            this.div.setAttribute(\"id\", this.id);\n            this.div.setAttribute(\"tabIndex\", 0);\n            this.setInForeground();\n            this.div.addEventListener(\"focusin\", this.#boundFocusin);\n            this.div.addEventListener(\"focusout\", this.#boundFocusout);\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            if (this.parentRotation % 180 !== 0) {\n              this.div.style.maxWidth = `${(100 * parentHeight / parentWidth).toFixed(2)}%`;\n              this.div.style.maxHeight = `${(100 * parentWidth / parentHeight).toFixed(2)}%`;\n            }\n            const [tx, ty] = this.getInitialTranslation();\n            this.translate(tx, ty);\n            (0, _tools.bindEvents)(this, this.div, [\"pointerdown\"]);\n            return this.div;\n          }\n          pointerdown(event) {\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              event.preventDefault();\n              return;\n            }\n            this.#hasBeenClicked = true;\n            this.#setUpDragSession(event);\n          }\n          #setUpDragSession(event) {\n            if (!this._isDraggable) {\n              return;\n            }\n            const isSelected = this._uiManager.isSelected(this);\n            this._uiManager.setUpDragSession();\n            let pointerMoveOptions, pointerMoveCallback;\n            if (isSelected) {\n              pointerMoveOptions = {\n                passive: true,\n                capture: true\n              };\n              pointerMoveCallback = e => {\n                const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n                this._uiManager.dragSelectedEditors(tx, ty);\n              };\n              window.addEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n            }\n            const pointerUpCallback = () => {\n              window.removeEventListener(\"pointerup\", pointerUpCallback);\n              window.removeEventListener(\"blur\", pointerUpCallback);\n              if (isSelected) {\n                window.removeEventListener(\"pointermove\", pointerMoveCallback, pointerMoveOptions);\n              }\n              this.#hasBeenClicked = false;\n              if (!this._uiManager.endDragSession()) {\n                const {\n                  isMac\n                } = _util.FeatureTest.platform;\n                if (event.ctrlKey && !isMac || event.shiftKey || event.metaKey && isMac) {\n                  this.parent.toggleSelected(this);\n                } else {\n                  this.parent.setSelected(this);\n                }\n              }\n            };\n            window.addEventListener(\"pointerup\", pointerUpCallback);\n            window.addEventListener(\"blur\", pointerUpCallback);\n          }\n          moveInDOM() {\n            this.parent?.moveEditorInDOM(this);\n          }\n          _setParentAndPosition(parent, x, y) {\n            parent.changeParent(this);\n            this.x = x;\n            this.y = y;\n            this.fixAndSetPosition();\n          }\n          getRect(tx, ty) {\n            const scale = this.parentScale;\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            const [pageX, pageY] = this.pageTranslation;\n            const shiftX = tx / scale;\n            const shiftY = ty / scale;\n            const x = this.x * pageWidth;\n            const y = this.y * pageHeight;\n            const width = this.width * pageWidth;\n            const height = this.height * pageHeight;\n            switch (this.rotation) {\n              case 0:\n                return [x + shiftX + pageX, pageHeight - y - shiftY - height + pageY, x + shiftX + width + pageX, pageHeight - y - shiftY + pageY];\n              case 90:\n                return [x + shiftY + pageX, pageHeight - y + shiftX + pageY, x + shiftY + height + pageX, pageHeight - y + shiftX + width + pageY];\n              case 180:\n                return [x - shiftX - width + pageX, pageHeight - y + shiftY + pageY, x - shiftX + pageX, pageHeight - y + shiftY + height + pageY];\n              case 270:\n                return [x - shiftY - height + pageX, pageHeight - y - shiftX - width + pageY, x - shiftY + pageX, pageHeight - y - shiftX + pageY];\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n          }\n          getRectInCurrentCoords(rect, pageHeight) {\n            const [x1, y1, x2, y2] = rect;\n            const width = x2 - x1;\n            const height = y2 - y1;\n            switch (this.rotation) {\n              case 0:\n                return [x1, pageHeight - y2, width, height];\n              case 90:\n                return [x1, pageHeight - y1, height, width];\n              case 180:\n                return [x2, pageHeight - y1, width, height];\n              case 270:\n                return [x2, pageHeight - y2, height, width];\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n          }\n          onceAdded() {}\n          isEmpty() {\n            return false;\n          }\n          enableEditMode() {\n            this.#isInEditMode = true;\n          }\n          disableEditMode() {\n            this.#isInEditMode = false;\n          }\n          isInEditMode() {\n            return this.#isInEditMode;\n          }\n          shouldGetKeyboardEvents() {\n            return false;\n          }\n          needsToBeRebuilt() {\n            return this.div && !this.isAttachedToDOM;\n          }\n          rebuild() {\n            this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n            this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n          }\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            (0, _util.unreachable)(\"An editor must be serializable\");\n          }\n          static deserialize(data, parent, uiManager) {\n            const editor = new this.prototype.constructor({\n              parent,\n              id: parent.getNextId(),\n              uiManager\n            });\n            editor.rotation = data.rotation;\n            const [pageWidth, pageHeight] = editor.pageDimensions;\n            const [x, y, width, height] = editor.getRectInCurrentCoords(data.rect, pageHeight);\n            editor.x = x / pageWidth;\n            editor.y = y / pageHeight;\n            editor.width = width / pageWidth;\n            editor.height = height / pageHeight;\n            return editor;\n          }\n          remove() {\n            this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n            this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n            if (!this.isEmpty()) {\n              this.commit();\n            }\n            if (this.parent) {\n              this.parent.remove(this);\n            } else {\n              this._uiManager.removeEditor(this);\n            }\n            this.#altTextButton?.remove();\n            this.#altTextButton = null;\n            this.#altTextTooltip = null;\n          }\n          get isResizable() {\n            return false;\n          }\n          makeResizable() {\n            if (this.isResizable) {\n              this.#createResizers();\n              this.#resizersDiv.classList.remove(\"hidden\");\n            }\n          }\n          select() {\n            this.makeResizable();\n            this.div?.classList.add(\"selectedEditor\");\n          }\n          unselect() {\n            this.#resizersDiv?.classList.add(\"hidden\");\n            this.div?.classList.remove(\"selectedEditor\");\n            if (this.div?.contains(document.activeElement)) {\n              this._uiManager.currentLayer.div.focus();\n            }\n          }\n          updateParams(type, value) {}\n          disableEditing() {\n            if (this.#altTextButton) {\n              this.#altTextButton.hidden = true;\n            }\n          }\n          enableEditing() {\n            if (this.#altTextButton) {\n              this.#altTextButton.hidden = false;\n            }\n          }\n          enterInEditMode() {}\n          get contentDiv() {\n            return this.div;\n          }\n          get isEditing() {\n            return this.#isEditing;\n          }\n          set isEditing(value) {\n            this.#isEditing = value;\n            if (!this.parent) {\n              return;\n            }\n            if (value) {\n              this.parent.setSelected(this);\n              this.parent.setActiveEditor(this);\n            } else {\n              this.parent.setActiveEditor(null);\n            }\n          }\n          setAspectRatio(width, height) {\n            this.#keepAspectRatio = true;\n            const aspectRatio = width / height;\n            const {\n              style\n            } = this.div;\n            style.aspectRatio = aspectRatio;\n            style.height = \"auto\";\n          }\n          static get MIN_SIZE() {\n            return 16;\n          }\n        }\n        exports.AnnotationEditor = AnnotationEditor;\n        class FakeEditor extends AnnotationEditor {\n          constructor(params) {\n            super(params);\n            this.annotationElementId = params.annotationElementId;\n            this.deleted = true;\n          }\n          serialize() {\n            return {\n              id: this.annotationElementId,\n              deleted: true,\n              pageIndex: this.pageIndex\n            };\n          }\n        }\n\n        /***/\n      }, /* 5 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.KeyboardManager = exports.CommandManager = exports.ColorManager = exports.AnnotationEditorUIManager = void 0;\n        exports.bindEvents = bindEvents;\n        exports.opacityToHex = opacityToHex;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        function bindEvents(obj, element, names) {\n          for (const name of names) {\n            element.addEventListener(name, obj[name].bind(obj));\n          }\n        }\n        function opacityToHex(opacity) {\n          return Math.round(Math.min(255, Math.max(1, 255 * opacity))).toString(16).padStart(2, \"0\");\n        }\n        class IdManager {\n          #id = 0;\n          getId() {\n            return `${_util.AnnotationEditorPrefix}${this.#id++}`;\n          }\n        }\n        class ImageManager {\n          #baseId = (0, _util.getUuid)();\n          #id = 0;\n          #cache = null;\n          static get _isSVGFittingCanvas() {\n            const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n            const canvas = new OffscreenCanvas(1, 3);\n            const ctx = canvas.getContext(\"2d\");\n            const image = new Image();\n            image.src = svg;\n            const promise = image.decode().then(() => {\n              ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n              return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n            });\n            return (0, _util.shadow)(this, \"_isSVGFittingCanvas\", promise);\n          }\n          async #get(key, rawData) {\n            this.#cache ||= new Map();\n            let data = this.#cache.get(key);\n            if (data === null) {\n              return null;\n            }\n            if (data?.bitmap) {\n              data.refCounter += 1;\n              return data;\n            }\n            try {\n              data ||= {\n                bitmap: null,\n                id: `image_${this.#baseId}_${this.#id++}`,\n                refCounter: 0,\n                isSvg: false\n              };\n              let image;\n              if (typeof rawData === \"string\") {\n                data.url = rawData;\n                const response = await fetch(rawData);\n                if (!response.ok) {\n                  throw new Error(response.statusText);\n                }\n                image = await response.blob();\n              } else {\n                image = data.file = rawData;\n              }\n              if (image.type === \"image/svg+xml\") {\n                const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n                const fileReader = new FileReader();\n                const imageElement = new Image();\n                const imagePromise = new Promise((resolve, reject) => {\n                  imageElement.onload = () => {\n                    data.bitmap = imageElement;\n                    data.isSvg = true;\n                    resolve();\n                  };\n                  fileReader.onload = async () => {\n                    const url = data.svgUrl = fileReader.result;\n                    imageElement.src = (await mustRemoveAspectRatioPromise) ? `${url}#svgView(preserveAspectRatio(none))` : url;\n                  };\n                  imageElement.onerror = fileReader.onerror = reject;\n                });\n                fileReader.readAsDataURL(image);\n                await imagePromise;\n              } else {\n                data.bitmap = await createImageBitmap(image);\n              }\n              data.refCounter = 1;\n            } catch (e) {\n              console.error(e);\n              data = null;\n            }\n            this.#cache.set(key, data);\n            if (data) {\n              this.#cache.set(data.id, data);\n            }\n            return data;\n          }\n          async getFromFile(file) {\n            const {\n              lastModified,\n              name,\n              size,\n              type\n            } = file;\n            return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n          }\n          async getFromUrl(url) {\n            return this.#get(url, url);\n          }\n          async getFromId(id) {\n            this.#cache ||= new Map();\n            const data = this.#cache.get(id);\n            if (!data) {\n              return null;\n            }\n            if (data.bitmap) {\n              data.refCounter += 1;\n              return data;\n            }\n            if (data.file) {\n              return this.getFromFile(data.file);\n            }\n            return this.getFromUrl(data.url);\n          }\n          getSvgUrl(id) {\n            const data = this.#cache.get(id);\n            if (!data?.isSvg) {\n              return null;\n            }\n            return data.svgUrl;\n          }\n          deleteId(id) {\n            this.#cache ||= new Map();\n            const data = this.#cache.get(id);\n            if (!data) {\n              return;\n            }\n            data.refCounter -= 1;\n            if (data.refCounter !== 0) {\n              return;\n            }\n            data.bitmap = null;\n          }\n          isValidId(id) {\n            return id.startsWith(`image_${this.#baseId}_`);\n          }\n        }\n        class CommandManager {\n          #commands = [];\n          #locked = false;\n          #maxSize;\n          #position = -1;\n          constructor() {\n            let maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;\n            this.#maxSize = maxSize;\n          }\n          add(_ref17) {\n            let {\n              cmd,\n              undo,\n              mustExec,\n              type = NaN,\n              overwriteIfSameType = false,\n              keepUndo = false\n            } = _ref17;\n            if (mustExec) {\n              cmd();\n            }\n            if (this.#locked) {\n              return;\n            }\n            const save = {\n              cmd,\n              undo,\n              type\n            };\n            if (this.#position === -1) {\n              if (this.#commands.length > 0) {\n                this.#commands.length = 0;\n              }\n              this.#position = 0;\n              this.#commands.push(save);\n              return;\n            }\n            if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n              if (keepUndo) {\n                save.undo = this.#commands[this.#position].undo;\n              }\n              this.#commands[this.#position] = save;\n              return;\n            }\n            const next = this.#position + 1;\n            if (next === this.#maxSize) {\n              this.#commands.splice(0, 1);\n            } else {\n              this.#position = next;\n              if (next < this.#commands.length) {\n                this.#commands.splice(next);\n              }\n            }\n            this.#commands.push(save);\n          }\n          undo() {\n            if (this.#position === -1) {\n              return;\n            }\n            this.#locked = true;\n            this.#commands[this.#position].undo();\n            this.#locked = false;\n            this.#position -= 1;\n          }\n          redo() {\n            if (this.#position < this.#commands.length - 1) {\n              this.#position += 1;\n              this.#locked = true;\n              this.#commands[this.#position].cmd();\n              this.#locked = false;\n            }\n          }\n          hasSomethingToUndo() {\n            return this.#position !== -1;\n          }\n          hasSomethingToRedo() {\n            return this.#position < this.#commands.length - 1;\n          }\n          destroy() {\n            this.#commands = null;\n          }\n        }\n        exports.CommandManager = CommandManager;\n        class KeyboardManager {\n          constructor(callbacks) {\n            this.buffer = [];\n            this.callbacks = new Map();\n            this.allKeys = new Set();\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            for (const [keys, callback, options = {}] of callbacks) {\n              for (const key of keys) {\n                const isMacKey = key.startsWith(\"mac+\");\n                if (isMac && isMacKey) {\n                  this.callbacks.set(key.slice(4), {\n                    callback,\n                    options\n                  });\n                  this.allKeys.add(key.split(\"+\").at(-1));\n                } else if (!isMac && !isMacKey) {\n                  this.callbacks.set(key, {\n                    callback,\n                    options\n                  });\n                  this.allKeys.add(key.split(\"+\").at(-1));\n                }\n              }\n            }\n          }\n          #serialize(event) {\n            if (event.altKey) {\n              this.buffer.push(\"alt\");\n            }\n            if (event.ctrlKey) {\n              this.buffer.push(\"ctrl\");\n            }\n            if (event.metaKey) {\n              this.buffer.push(\"meta\");\n            }\n            if (event.shiftKey) {\n              this.buffer.push(\"shift\");\n            }\n            this.buffer.push(event.key);\n            const str = this.buffer.join(\"+\");\n            this.buffer.length = 0;\n            return str;\n          }\n          exec(self, event) {\n            if (!this.allKeys.has(event.key)) {\n              return;\n            }\n            const info = this.callbacks.get(this.#serialize(event));\n            if (!info) {\n              return;\n            }\n            const {\n              callback,\n              options: {\n                bubbles = false,\n                args = [],\n                checker = null\n              }\n            } = info;\n            if (checker && !checker(self, event)) {\n              return;\n            }\n            callback.bind(self, ...args)();\n            if (!bubbles) {\n              event.stopPropagation();\n              event.preventDefault();\n            }\n          }\n        }\n        exports.KeyboardManager = KeyboardManager;\n        class ColorManager {\n          static _colorsMapping = new Map([[\"CanvasText\", [0, 0, 0]], [\"Canvas\", [255, 255, 255]]]);\n          get _colors() {\n            const colors = new Map([[\"CanvasText\", null], [\"Canvas\", null]]);\n            (0, _display_utils.getColorValues)(colors);\n            return (0, _util.shadow)(this, \"_colors\", colors);\n          }\n          convert(color) {\n            const rgb = (0, _display_utils.getRGB)(color);\n            if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n              return rgb;\n            }\n            for (const [name, RGB] of this._colors) {\n              if (RGB.every((x, i) => x === rgb[i])) {\n                return ColorManager._colorsMapping.get(name);\n              }\n            }\n            return rgb;\n          }\n          getHexCode(name) {\n            const rgb = this._colors.get(name);\n            if (!rgb) {\n              return name;\n            }\n            return _util.Util.makeHexColor(...rgb);\n          }\n        }\n        exports.ColorManager = ColorManager;\n        class AnnotationEditorUIManager {\n          #activeEditor = null;\n          #allEditors = new Map();\n          #allLayers = new Map();\n          #altTextManager = null;\n          #annotationStorage = null;\n          #commandManager = new CommandManager();\n          #currentPageIndex = 0;\n          #deletedAnnotationsElementIds = new Set();\n          #draggingEditors = null;\n          #editorTypes = null;\n          #editorsToRescale = new Set();\n          #filterFactory = null;\n          #idManager = new IdManager();\n          #isEnabled = false;\n          #isWaiting = false;\n          #lastActiveElement = null;\n          #mode = _util.AnnotationEditorType.NONE;\n          #selectedEditors = new Set();\n          #pageColors = null;\n          #boundBlur = this.blur.bind(this);\n          #boundFocus = this.focus.bind(this);\n          #boundCopy = this.copy.bind(this);\n          #boundCut = this.cut.bind(this);\n          #boundPaste = this.paste.bind(this);\n          #boundKeydown = this.keydown.bind(this);\n          #boundOnEditingAction = this.onEditingAction.bind(this);\n          #boundOnPageChanging = this.onPageChanging.bind(this);\n          #boundOnScaleChanging = this.onScaleChanging.bind(this);\n          #boundOnRotationChanging = this.onRotationChanging.bind(this);\n          #previousStates = {\n            isEditing: false,\n            isEmpty: true,\n            hasSomethingToUndo: false,\n            hasSomethingToRedo: false,\n            hasSelectedEditor: false\n          };\n          #translation = [0, 0];\n          #translationTimeoutId = null;\n          #container = null;\n          #viewer = null;\n          static TRANSLATE_SMALL = 1;\n          static TRANSLATE_BIG = 10;\n          static get _keyboardManager() {\n            const proto = AnnotationEditorUIManager.prototype;\n            const arrowChecker = self => {\n              const {\n                activeElement\n              } = document;\n              return activeElement && self.#container.contains(activeElement) && self.hasSomethingToControl();\n            };\n            const small = this.TRANSLATE_SMALL;\n            const big = this.TRANSLATE_BIG;\n            return (0, _util.shadow)(this, \"_keyboardManager\", new KeyboardManager([[[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll], [[\"ctrl+z\", \"mac+meta+z\"], proto.undo], [[\"ctrl+y\", \"ctrl+shift+z\", \"mac+meta+shift+z\", \"ctrl+shift+Z\", \"mac+meta+shift+Z\"], proto.redo], [[\"Backspace\", \"alt+Backspace\", \"ctrl+Backspace\", \"shift+Backspace\", \"mac+Backspace\", \"mac+alt+Backspace\", \"mac+ctrl+Backspace\", \"Delete\", \"ctrl+Delete\", \"shift+Delete\", \"mac+Delete\"], proto.delete], [[\"Escape\", \"mac+Escape\"], proto.unselectAll], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto.translateSelectedEditors, {\n              args: [-small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto.translateSelectedEditors, {\n              args: [-big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto.translateSelectedEditors, {\n              args: [small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto.translateSelectedEditors, {\n              args: [big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto.translateSelectedEditors, {\n              args: [0, -small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto.translateSelectedEditors, {\n              args: [0, -big],\n              checker: arrowChecker\n            }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto.translateSelectedEditors, {\n              args: [0, small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto.translateSelectedEditors, {\n              args: [0, big],\n              checker: arrowChecker\n            }]]));\n          }\n          constructor(container, viewer, altTextManager, eventBus, pdfDocument, pageColors) {\n            this.#container = container;\n            this.#viewer = viewer;\n            this.#altTextManager = altTextManager;\n            this._eventBus = eventBus;\n            this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n            this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n            this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n            this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n            this.#annotationStorage = pdfDocument.annotationStorage;\n            this.#filterFactory = pdfDocument.filterFactory;\n            this.#pageColors = pageColors;\n            this.viewParameters = {\n              realScale: _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS,\n              rotation: 0\n            };\n          }\n          destroy() {\n            this.#removeKeyboardManager();\n            this.#removeFocusManager();\n            this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n            this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n            this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n            this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n            for (const layer of this.#allLayers.values()) {\n              layer.destroy();\n            }\n            this.#allLayers.clear();\n            this.#allEditors.clear();\n            this.#editorsToRescale.clear();\n            this.#activeEditor = null;\n            this.#selectedEditors.clear();\n            this.#commandManager.destroy();\n            this.#altTextManager.destroy();\n          }\n          get hcmFilter() {\n            return (0, _util.shadow)(this, \"hcmFilter\", this.#pageColors ? this.#filterFactory.addHCMFilter(this.#pageColors.foreground, this.#pageColors.background) : \"none\");\n          }\n          get direction() {\n            return (0, _util.shadow)(this, \"direction\", getComputedStyle(this.#container).direction);\n          }\n          editAltText(editor) {\n            this.#altTextManager?.editAltText(this, editor);\n          }\n          onPageChanging(_ref18) {\n            let {\n              pageNumber\n            } = _ref18;\n            this.#currentPageIndex = pageNumber - 1;\n          }\n          focusMainContainer() {\n            this.#container.focus();\n          }\n          findParent(x, y) {\n            for (const layer of this.#allLayers.values()) {\n              const {\n                x: layerX,\n                y: layerY,\n                width,\n                height\n              } = layer.div.getBoundingClientRect();\n              if (x >= layerX && x <= layerX + width && y >= layerY && y <= layerY + height) {\n                return layer;\n              }\n            }\n            return null;\n          }\n          disableUserSelect() {\n            let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            this.#viewer.classList.toggle(\"noUserSelect\", value);\n          }\n          addShouldRescale(editor) {\n            this.#editorsToRescale.add(editor);\n          }\n          removeShouldRescale(editor) {\n            this.#editorsToRescale.delete(editor);\n          }\n          onScaleChanging(_ref19) {\n            let {\n              scale\n            } = _ref19;\n            this.commitOrRemove();\n            this.viewParameters.realScale = scale * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS;\n            for (const editor of this.#editorsToRescale) {\n              editor.onScaleChanging();\n            }\n          }\n          onRotationChanging(_ref20) {\n            let {\n              pagesRotation\n            } = _ref20;\n            this.commitOrRemove();\n            this.viewParameters.rotation = pagesRotation;\n          }\n          addToAnnotationStorage(editor) {\n            if (!editor.isEmpty() && this.#annotationStorage && !this.#annotationStorage.has(editor.id)) {\n              this.#annotationStorage.setValue(editor.id, editor);\n            }\n          }\n          #addFocusManager() {\n            window.addEventListener(\"focus\", this.#boundFocus);\n            window.addEventListener(\"blur\", this.#boundBlur);\n          }\n          #removeFocusManager() {\n            window.removeEventListener(\"focus\", this.#boundFocus);\n            window.removeEventListener(\"blur\", this.#boundBlur);\n          }\n          blur() {\n            if (!this.hasSelection) {\n              return;\n            }\n            const {\n              activeElement\n            } = document;\n            for (const editor of this.#selectedEditors) {\n              if (editor.div.contains(activeElement)) {\n                this.#lastActiveElement = [editor, activeElement];\n                editor._focusEventsAllowed = false;\n                break;\n              }\n            }\n          }\n          focus() {\n            if (!this.#lastActiveElement) {\n              return;\n            }\n            const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n            this.#lastActiveElement = null;\n            lastActiveElement.addEventListener(\"focusin\", () => {\n              lastEditor._focusEventsAllowed = true;\n            }, {\n              once: true\n            });\n            lastActiveElement.focus();\n          }\n          #addKeyboardManager() {\n            window.addEventListener(\"keydown\", this.#boundKeydown, {\n              capture: true\n            });\n          }\n          #removeKeyboardManager() {\n            window.removeEventListener(\"keydown\", this.#boundKeydown, {\n              capture: true\n            });\n          }\n          #addCopyPasteListeners() {\n            document.addEventListener(\"copy\", this.#boundCopy);\n            document.addEventListener(\"cut\", this.#boundCut);\n            document.addEventListener(\"paste\", this.#boundPaste);\n          }\n          #removeCopyPasteListeners() {\n            document.removeEventListener(\"copy\", this.#boundCopy);\n            document.removeEventListener(\"cut\", this.#boundCut);\n            document.removeEventListener(\"paste\", this.#boundPaste);\n          }\n          addEditListeners() {\n            this.#addKeyboardManager();\n            this.#addCopyPasteListeners();\n          }\n          removeEditListeners() {\n            this.#removeKeyboardManager();\n            this.#removeCopyPasteListeners();\n          }\n          copy(event) {\n            event.preventDefault();\n            this.#activeEditor?.commitOrRemove();\n            if (!this.hasSelection) {\n              return;\n            }\n            const editors = [];\n            for (const editor of this.#selectedEditors) {\n              const serialized = editor.serialize(true);\n              if (serialized) {\n                editors.push(serialized);\n              }\n            }\n            if (editors.length === 0) {\n              return;\n            }\n            event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n          }\n          cut(event) {\n            this.copy(event);\n            this.delete();\n          }\n          paste(event) {\n            event.preventDefault();\n            const {\n              clipboardData\n            } = event;\n            for (const item of clipboardData.items) {\n              for (const editorType of this.#editorTypes) {\n                if (editorType.isHandlingMimeForPasting(item.type)) {\n                  editorType.paste(item, this.currentLayer);\n                  return;\n                }\n              }\n            }\n            let data = clipboardData.getData(\"application/pdfjs\");\n            if (!data) {\n              return;\n            }\n            try {\n              data = JSON.parse(data);\n            } catch (ex) {\n              (0, _util.warn)(`paste: \"${ex.message}\".`);\n              return;\n            }\n            if (!Array.isArray(data)) {\n              return;\n            }\n            this.unselectAll();\n            const layer = this.currentLayer;\n            try {\n              const newEditors = [];\n              for (const editor of data) {\n                const deserializedEditor = layer.deserialize(editor);\n                if (!deserializedEditor) {\n                  return;\n                }\n                newEditors.push(deserializedEditor);\n              }\n              const cmd = () => {\n                for (const editor of newEditors) {\n                  this.#addEditorToLayer(editor);\n                }\n                this.#selectEditors(newEditors);\n              };\n              const undo = () => {\n                for (const editor of newEditors) {\n                  editor.remove();\n                }\n              };\n              this.addCommands({\n                cmd,\n                undo,\n                mustExec: true\n              });\n            } catch (ex) {\n              (0, _util.warn)(`paste: \"${ex.message}\".`);\n            }\n          }\n          keydown(event) {\n            if (!this.getActive()?.shouldGetKeyboardEvents()) {\n              AnnotationEditorUIManager._keyboardManager.exec(this, event);\n            }\n          }\n          onEditingAction(details) {\n            if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n              this[details.name]();\n            }\n          }\n          #dispatchUpdateStates(details) {\n            const hasChanged = Object.entries(details).some(_ref21 => {\n              let [key, value] = _ref21;\n              return this.#previousStates[key] !== value;\n            });\n            if (hasChanged) {\n              this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n                source: this,\n                details: Object.assign(this.#previousStates, details)\n              });\n            }\n          }\n          #dispatchUpdateUI(details) {\n            this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n              source: this,\n              details\n            });\n          }\n          setEditingState(isEditing) {\n            if (isEditing) {\n              this.#addFocusManager();\n              this.#addKeyboardManager();\n              this.#addCopyPasteListeners();\n              this.#dispatchUpdateStates({\n                isEditing: this.#mode !== _util.AnnotationEditorType.NONE,\n                isEmpty: this.#isEmpty(),\n                hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n                hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n                hasSelectedEditor: false\n              });\n            } else {\n              this.#removeFocusManager();\n              this.#removeKeyboardManager();\n              this.#removeCopyPasteListeners();\n              this.#dispatchUpdateStates({\n                isEditing: false\n              });\n              this.disableUserSelect(false);\n            }\n          }\n          registerEditorTypes(types) {\n            if (this.#editorTypes) {\n              return;\n            }\n            this.#editorTypes = types;\n            for (const editorType of this.#editorTypes) {\n              this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n            }\n          }\n          getId() {\n            return this.#idManager.getId();\n          }\n          get currentLayer() {\n            return this.#allLayers.get(this.#currentPageIndex);\n          }\n          getLayer(pageIndex) {\n            return this.#allLayers.get(pageIndex);\n          }\n          get currentPageIndex() {\n            return this.#currentPageIndex;\n          }\n          addLayer(layer) {\n            this.#allLayers.set(layer.pageIndex, layer);\n            if (this.#isEnabled) {\n              layer.enable();\n            } else {\n              layer.disable();\n            }\n          }\n          removeLayer(layer) {\n            this.#allLayers.delete(layer.pageIndex);\n          }\n          updateMode(mode) {\n            let editId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (this.#mode === mode) {\n              return;\n            }\n            this.#mode = mode;\n            if (mode === _util.AnnotationEditorType.NONE) {\n              this.setEditingState(false);\n              this.#disableAll();\n              return;\n            }\n            this.setEditingState(true);\n            this.#enableAll();\n            this.unselectAll();\n            for (const layer of this.#allLayers.values()) {\n              layer.updateMode(mode);\n            }\n            if (!editId) {\n              return;\n            }\n            for (const editor of this.#allEditors.values()) {\n              if (editor.annotationElementId === editId) {\n                this.setSelected(editor);\n                editor.enterInEditMode();\n                break;\n              }\n            }\n          }\n          updateToolbar(mode) {\n            if (mode === this.#mode) {\n              return;\n            }\n            this._eventBus.dispatch(\"switchannotationeditormode\", {\n              source: this,\n              mode\n            });\n          }\n          updateParams(type, value) {\n            if (!this.#editorTypes) {\n              return;\n            }\n            if (type === _util.AnnotationEditorParamsType.CREATE) {\n              this.currentLayer.addNewEditor(type);\n              return;\n            }\n            for (const editor of this.#selectedEditors) {\n              editor.updateParams(type, value);\n            }\n            for (const editorType of this.#editorTypes) {\n              editorType.updateDefaultParams(type, value);\n            }\n          }\n          enableWaiting() {\n            let mustWait = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.#isWaiting === mustWait) {\n              return;\n            }\n            this.#isWaiting = mustWait;\n            for (const layer of this.#allLayers.values()) {\n              if (mustWait) {\n                layer.disableClick();\n              } else {\n                layer.enableClick();\n              }\n              layer.div.classList.toggle(\"waiting\", mustWait);\n            }\n          }\n          #enableAll() {\n            if (!this.#isEnabled) {\n              this.#isEnabled = true;\n              for (const layer of this.#allLayers.values()) {\n                layer.enable();\n              }\n            }\n          }\n          #disableAll() {\n            this.unselectAll();\n            if (this.#isEnabled) {\n              this.#isEnabled = false;\n              for (const layer of this.#allLayers.values()) {\n                layer.disable();\n              }\n            }\n          }\n          getEditors(pageIndex) {\n            const editors = [];\n            for (const editor of this.#allEditors.values()) {\n              if (editor.pageIndex === pageIndex) {\n                editors.push(editor);\n              }\n            }\n            return editors;\n          }\n          getEditor(id) {\n            return this.#allEditors.get(id);\n          }\n          addEditor(editor) {\n            this.#allEditors.set(editor.id, editor);\n          }\n          removeEditor(editor) {\n            this.#allEditors.delete(editor.id);\n            this.unselect(editor);\n            if (!editor.annotationElementId || !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)) {\n              this.#annotationStorage?.remove(editor.id);\n            }\n          }\n          addDeletedAnnotationElement(editor) {\n            this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n            editor.deleted = true;\n          }\n          isDeletedAnnotationElement(annotationElementId) {\n            return this.#deletedAnnotationsElementIds.has(annotationElementId);\n          }\n          removeDeletedAnnotationElement(editor) {\n            this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n            editor.deleted = false;\n          }\n          #addEditorToLayer(editor) {\n            const layer = this.#allLayers.get(editor.pageIndex);\n            if (layer) {\n              layer.addOrRebuild(editor);\n            } else {\n              this.addEditor(editor);\n            }\n          }\n          setActiveEditor(editor) {\n            if (this.#activeEditor === editor) {\n              return;\n            }\n            this.#activeEditor = editor;\n            if (editor) {\n              this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            }\n          }\n          toggleSelected(editor) {\n            if (this.#selectedEditors.has(editor)) {\n              this.#selectedEditors.delete(editor);\n              editor.unselect();\n              this.#dispatchUpdateStates({\n                hasSelectedEditor: this.hasSelection\n              });\n              return;\n            }\n            this.#selectedEditors.add(editor);\n            editor.select();\n            this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n          setSelected(editor) {\n            for (const ed of this.#selectedEditors) {\n              if (ed !== editor) {\n                ed.unselect();\n              }\n            }\n            this.#selectedEditors.clear();\n            this.#selectedEditors.add(editor);\n            editor.select();\n            this.#dispatchUpdateUI(editor.propertiesToUpdate);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n          isSelected(editor) {\n            return this.#selectedEditors.has(editor);\n          }\n          unselect(editor) {\n            editor.unselect();\n            this.#selectedEditors.delete(editor);\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: this.hasSelection\n            });\n          }\n          get hasSelection() {\n            return this.#selectedEditors.size !== 0;\n          }\n          undo() {\n            this.#commandManager.undo();\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n              hasSomethingToRedo: true,\n              isEmpty: this.#isEmpty()\n            });\n          }\n          redo() {\n            this.#commandManager.redo();\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n              isEmpty: this.#isEmpty()\n            });\n          }\n          addCommands(params) {\n            this.#commandManager.add(params);\n            this.#dispatchUpdateStates({\n              hasSomethingToUndo: true,\n              hasSomethingToRedo: false,\n              isEmpty: this.#isEmpty()\n            });\n          }\n          #isEmpty() {\n            if (this.#allEditors.size === 0) {\n              return true;\n            }\n            if (this.#allEditors.size === 1) {\n              for (const editor of this.#allEditors.values()) {\n                return editor.isEmpty();\n              }\n            }\n            return false;\n          }\n          delete() {\n            this.commitOrRemove();\n            if (!this.hasSelection) {\n              return;\n            }\n            const editors = [...this.#selectedEditors];\n            const cmd = () => {\n              for (const editor of editors) {\n                editor.remove();\n              }\n            };\n            const undo = () => {\n              for (const editor of editors) {\n                this.#addEditorToLayer(editor);\n              }\n            };\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: true\n            });\n          }\n          commitOrRemove() {\n            this.#activeEditor?.commitOrRemove();\n          }\n          hasSomethingToControl() {\n            return this.#activeEditor || this.hasSelection;\n          }\n          #selectEditors(editors) {\n            this.#selectedEditors.clear();\n            for (const editor of editors) {\n              if (editor.isEmpty()) {\n                continue;\n              }\n              this.#selectedEditors.add(editor);\n              editor.select();\n            }\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: true\n            });\n          }\n          selectAll() {\n            for (const editor of this.#selectedEditors) {\n              editor.commit();\n            }\n            this.#selectEditors(this.#allEditors.values());\n          }\n          unselectAll() {\n            if (this.#activeEditor) {\n              this.#activeEditor.commitOrRemove();\n              return;\n            }\n            if (!this.hasSelection) {\n              return;\n            }\n            for (const editor of this.#selectedEditors) {\n              editor.unselect();\n            }\n            this.#selectedEditors.clear();\n            this.#dispatchUpdateStates({\n              hasSelectedEditor: false\n            });\n          }\n          translateSelectedEditors(x, y) {\n            let noCommit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            if (!noCommit) {\n              this.commitOrRemove();\n            }\n            if (!this.hasSelection) {\n              return;\n            }\n            this.#translation[0] += x;\n            this.#translation[1] += y;\n            const [totalX, totalY] = this.#translation;\n            const editors = [...this.#selectedEditors];\n            const TIME_TO_WAIT = 1000;\n            if (this.#translationTimeoutId) {\n              clearTimeout(this.#translationTimeoutId);\n            }\n            this.#translationTimeoutId = setTimeout(() => {\n              this.#translationTimeoutId = null;\n              this.#translation[0] = this.#translation[1] = 0;\n              this.addCommands({\n                cmd: () => {\n                  for (const editor of editors) {\n                    if (this.#allEditors.has(editor.id)) {\n                      editor.translateInPage(totalX, totalY);\n                    }\n                  }\n                },\n                undo: () => {\n                  for (const editor of editors) {\n                    if (this.#allEditors.has(editor.id)) {\n                      editor.translateInPage(-totalX, -totalY);\n                    }\n                  }\n                },\n                mustExec: false\n              });\n            }, TIME_TO_WAIT);\n            for (const editor of editors) {\n              editor.translateInPage(x, y);\n            }\n          }\n          setUpDragSession() {\n            if (!this.hasSelection) {\n              return;\n            }\n            this.disableUserSelect(true);\n            this.#draggingEditors = new Map();\n            for (const editor of this.#selectedEditors) {\n              this.#draggingEditors.set(editor, {\n                savedX: editor.x,\n                savedY: editor.y,\n                savedPageIndex: editor.pageIndex,\n                newX: 0,\n                newY: 0,\n                newPageIndex: -1\n              });\n            }\n          }\n          endDragSession() {\n            if (!this.#draggingEditors) {\n              return false;\n            }\n            this.disableUserSelect(false);\n            const map = this.#draggingEditors;\n            this.#draggingEditors = null;\n            let mustBeAddedInUndoStack = false;\n            for (const [{\n              x,\n              y,\n              pageIndex\n            }, value] of map) {\n              value.newX = x;\n              value.newY = y;\n              value.newPageIndex = pageIndex;\n              mustBeAddedInUndoStack ||= x !== value.savedX || y !== value.savedY || pageIndex !== value.savedPageIndex;\n            }\n            if (!mustBeAddedInUndoStack) {\n              return false;\n            }\n            const move = (editor, x, y, pageIndex) => {\n              if (this.#allEditors.has(editor.id)) {\n                const parent = this.#allLayers.get(pageIndex);\n                if (parent) {\n                  editor._setParentAndPosition(parent, x, y);\n                } else {\n                  editor.pageIndex = pageIndex;\n                  editor.x = x;\n                  editor.y = y;\n                }\n              }\n            };\n            this.addCommands({\n              cmd: () => {\n                for (const [editor, {\n                  newX,\n                  newY,\n                  newPageIndex\n                }] of map) {\n                  move(editor, newX, newY, newPageIndex);\n                }\n              },\n              undo: () => {\n                for (const [editor, {\n                  savedX,\n                  savedY,\n                  savedPageIndex\n                }] of map) {\n                  move(editor, savedX, savedY, savedPageIndex);\n                }\n              },\n              mustExec: true\n            });\n            return true;\n          }\n          dragSelectedEditors(tx, ty) {\n            if (!this.#draggingEditors) {\n              return;\n            }\n            for (const editor of this.#draggingEditors.keys()) {\n              editor.drag(tx, ty);\n            }\n          }\n          rebuild(editor) {\n            if (editor.parent === null) {\n              const parent = this.getLayer(editor.pageIndex);\n              if (parent) {\n                parent.changeParent(editor);\n                parent.addOrRebuild(editor);\n              } else {\n                this.addEditor(editor);\n                this.addToAnnotationStorage(editor);\n                editor.rebuild();\n              }\n            } else {\n              editor.parent.addOrRebuild(editor);\n            }\n          }\n          isActive(editor) {\n            return this.#activeEditor === editor;\n          }\n          getActive() {\n            return this.#activeEditor;\n          }\n          getMode() {\n            return this.#mode;\n          }\n          get imageManager() {\n            return (0, _util.shadow)(this, \"imageManager\", new ImageManager());\n          }\n        }\n        exports.AnnotationEditorUIManager = AnnotationEditorUIManager;\n\n        /***/\n      }, /* 6 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StatTimer = exports.RenderingCancelledException = exports.PixelsPerInch = exports.PageViewport = exports.PDFDateString = exports.DOMStandardFontDataFactory = exports.DOMSVGFactory = exports.DOMFilterFactory = exports.DOMCanvasFactory = exports.DOMCMapReaderFactory = void 0;\n        exports.deprecated = deprecated;\n        exports.getColorValues = getColorValues;\n        exports.getCurrentTransform = getCurrentTransform;\n        exports.getCurrentTransformInverse = getCurrentTransformInverse;\n        exports.getFilenameFromUrl = getFilenameFromUrl;\n        exports.getPdfFilenameFromUrl = getPdfFilenameFromUrl;\n        exports.getRGB = getRGB;\n        exports.getXfaPageViewport = getXfaPageViewport;\n        exports.isDataScheme = isDataScheme;\n        exports.isPdfFile = isPdfFile;\n        exports.isValidFetchUrl = isValidFetchUrl;\n        exports.loadScript = loadScript;\n        exports.noContextMenu = noContextMenu;\n        exports.setLayerDimensions = setLayerDimensions;\n        var _base_factory = __w_pdfjs_require__(7);\n        var _util = __w_pdfjs_require__(1);\n        const SVG_NS = \"http://www.w3.org/2000/svg\";\n        class PixelsPerInch {\n          static CSS = 96.0;\n          static PDF = 72.0;\n          static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n        }\n        exports.PixelsPerInch = PixelsPerInch;\n        class DOMFilterFactory extends _base_factory.BaseFilterFactory {\n          #_cache;\n          #_defs;\n          #docId;\n          #document;\n          #hcmFilter;\n          #hcmKey;\n          #hcmUrl;\n          #hcmHighlightFilter;\n          #hcmHighlightKey;\n          #hcmHighlightUrl;\n          #id = 0;\n          constructor() {\n            let {\n              docId,\n              ownerDocument = globalThis.document\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            super();\n            this.#docId = docId;\n            this.#document = ownerDocument;\n          }\n          get #cache() {\n            return this.#_cache ||= new Map();\n          }\n          get #defs() {\n            if (!this.#_defs) {\n              const div = this.#document.createElement(\"div\");\n              const {\n                style\n              } = div;\n              style.visibility = \"hidden\";\n              style.contain = \"strict\";\n              style.width = style.height = 0;\n              style.position = \"absolute\";\n              style.top = style.left = 0;\n              style.zIndex = -1;\n              const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n              svg.setAttribute(\"width\", 0);\n              svg.setAttribute(\"height\", 0);\n              this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n              div.append(svg);\n              svg.append(this.#_defs);\n              this.#document.body.append(div);\n            }\n            return this.#_defs;\n          }\n          addFilter(maps) {\n            if (!maps) {\n              return \"none\";\n            }\n            let value = this.#cache.get(maps);\n            if (value) {\n              return value;\n            }\n            let tableR, tableG, tableB, key;\n            if (maps.length === 1) {\n              const mapR = maps[0];\n              const buffer = new Array(256);\n              for (let i = 0; i < 256; i++) {\n                buffer[i] = mapR[i] / 255;\n              }\n              key = tableR = tableG = tableB = buffer.join(\",\");\n            } else {\n              const [mapR, mapG, mapB] = maps;\n              const bufferR = new Array(256);\n              const bufferG = new Array(256);\n              const bufferB = new Array(256);\n              for (let i = 0; i < 256; i++) {\n                bufferR[i] = mapR[i] / 255;\n                bufferG[i] = mapG[i] / 255;\n                bufferB[i] = mapB[i] / 255;\n              }\n              tableR = bufferR.join(\",\");\n              tableG = bufferG.join(\",\");\n              tableB = bufferB.join(\",\");\n              key = `${tableR}${tableG}${tableB}`;\n            }\n            value = this.#cache.get(key);\n            if (value) {\n              this.#cache.set(maps, value);\n              return value;\n            }\n            const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n            const url = `url(#${id})`;\n            this.#cache.set(maps, url);\n            this.#cache.set(key, url);\n            const filter = this.#createFilter(id);\n            this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n            return url;\n          }\n          addHCMFilter(fgColor, bgColor) {\n            const key = `${fgColor}-${bgColor}`;\n            if (this.#hcmKey === key) {\n              return this.#hcmUrl;\n            }\n            this.#hcmKey = key;\n            this.#hcmUrl = \"none\";\n            this.#hcmFilter?.remove();\n            if (!fgColor || !bgColor) {\n              return this.#hcmUrl;\n            }\n            const fgRGB = this.#getRGB(fgColor);\n            fgColor = _util.Util.makeHexColor(...fgRGB);\n            const bgRGB = this.#getRGB(bgColor);\n            bgColor = _util.Util.makeHexColor(...bgRGB);\n            this.#defs.style.color = \"\";\n            if (fgColor === \"#000000\" && bgColor === \"#ffffff\" || fgColor === bgColor) {\n              return this.#hcmUrl;\n            }\n            const map = new Array(256);\n            for (let i = 0; i <= 255; i++) {\n              const x = i / 255;\n              map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n            }\n            const table = map.join(\",\");\n            const id = `g_${this.#docId}_hcm_filter`;\n            const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n            this.#addTransferMapConversion(table, table, table, filter);\n            this.#addGrayConversion(filter);\n            const getSteps = (c, n) => {\n              const start = fgRGB[c] / 255;\n              const end = bgRGB[c] / 255;\n              const arr = new Array(n + 1);\n              for (let i = 0; i <= n; i++) {\n                arr[i] = start + i / n * (end - start);\n              }\n              return arr.join(\",\");\n            };\n            this.#addTransferMapConversion(getSteps(0, 5), getSteps(1, 5), getSteps(2, 5), filter);\n            this.#hcmUrl = `url(#${id})`;\n            return this.#hcmUrl;\n          }\n          addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n            const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n            if (this.#hcmHighlightKey === key) {\n              return this.#hcmHighlightUrl;\n            }\n            this.#hcmHighlightKey = key;\n            this.#hcmHighlightUrl = \"none\";\n            this.#hcmHighlightFilter?.remove();\n            if (!fgColor || !bgColor) {\n              return this.#hcmHighlightUrl;\n            }\n            const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n            let fgGray = Math.round(0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]);\n            let bgGray = Math.round(0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]);\n            let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(this.#getRGB.bind(this));\n            if (bgGray < fgGray) {\n              [fgGray, bgGray, newFgRGB, newBgRGB] = [bgGray, fgGray, newBgRGB, newFgRGB];\n            }\n            this.#defs.style.color = \"\";\n            const getSteps = (fg, bg, n) => {\n              const arr = new Array(256);\n              const step = (bgGray - fgGray) / n;\n              const newStart = fg / 255;\n              const newStep = (bg - fg) / (255 * n);\n              let prev = 0;\n              for (let i = 0; i <= n; i++) {\n                const k = Math.round(fgGray + i * step);\n                const value = newStart + i * newStep;\n                for (let j = prev; j <= k; j++) {\n                  arr[j] = value;\n                }\n                prev = k + 1;\n              }\n              for (let i = prev; i < 256; i++) {\n                arr[i] = arr[prev - 1];\n              }\n              return arr.join(\",\");\n            };\n            const id = `g_${this.#docId}_hcm_highlight_filter`;\n            const filter = this.#hcmHighlightFilter = this.#createFilter(id);\n            this.#addGrayConversion(filter);\n            this.#addTransferMapConversion(getSteps(newFgRGB[0], newBgRGB[0], 5), getSteps(newFgRGB[1], newBgRGB[1], 5), getSteps(newFgRGB[2], newBgRGB[2], 5), filter);\n            this.#hcmHighlightUrl = `url(#${id})`;\n            return this.#hcmHighlightUrl;\n          }\n          destroy() {\n            let keepHCM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n              return;\n            }\n            if (this.#_defs) {\n              this.#_defs.parentNode.parentNode.remove();\n              this.#_defs = null;\n            }\n            if (this.#_cache) {\n              this.#_cache.clear();\n              this.#_cache = null;\n            }\n            this.#id = 0;\n          }\n          #addGrayConversion(filter) {\n            const feColorMatrix = this.#document.createElementNS(SVG_NS, \"feColorMatrix\");\n            feColorMatrix.setAttribute(\"type\", \"matrix\");\n            feColorMatrix.setAttribute(\"values\", \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\");\n            filter.append(feColorMatrix);\n          }\n          #createFilter(id) {\n            const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n            filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n            filter.setAttribute(\"id\", id);\n            this.#defs.append(filter);\n            return filter;\n          }\n          #appendFeFunc(feComponentTransfer, func, table) {\n            const feFunc = this.#document.createElementNS(SVG_NS, func);\n            feFunc.setAttribute(\"type\", \"discrete\");\n            feFunc.setAttribute(\"tableValues\", table);\n            feComponentTransfer.append(feFunc);\n          }\n          #addTransferMapConversion(rTable, gTable, bTable, filter) {\n            const feComponentTransfer = this.#document.createElementNS(SVG_NS, \"feComponentTransfer\");\n            filter.append(feComponentTransfer);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n            this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n          }\n          #getRGB(color) {\n            this.#defs.style.color = color;\n            return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n          }\n        }\n        exports.DOMFilterFactory = DOMFilterFactory;\n        class DOMCanvasFactory extends _base_factory.BaseCanvasFactory {\n          constructor() {\n            let {\n              ownerDocument = globalThis.document\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            super();\n            this._document = ownerDocument;\n          }\n          _createCanvas(width, height) {\n            const canvas = this._document.createElement(\"canvas\");\n            canvas.width = width;\n            canvas.height = height;\n            return canvas;\n          }\n        }\n        exports.DOMCanvasFactory = DOMCanvasFactory;\n        async function fetchData(url) {\n          let asTypedArray = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          if (isValidFetchUrl(url, document.baseURI)) {\n            const response = await fetch(url);\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return asTypedArray ? new Uint8Array(await response.arrayBuffer()) : (0, _util.stringToBytes)(await response.text());\n          }\n          return new Promise((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n            if (asTypedArray) {\n              request.responseType = \"arraybuffer\";\n            }\n            request.onreadystatechange = () => {\n              if (request.readyState !== XMLHttpRequest.DONE) {\n                return;\n              }\n              if (request.status === 200 || request.status === 0) {\n                let data;\n                if (asTypedArray && request.response) {\n                  data = new Uint8Array(request.response);\n                } else if (!asTypedArray && request.responseText) {\n                  data = (0, _util.stringToBytes)(request.responseText);\n                }\n                if (data) {\n                  resolve(data);\n                  return;\n                }\n              }\n              reject(new Error(request.statusText));\n            };\n            request.send(null);\n          });\n        }\n        class DOMCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url, this.isCompressed).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n        }\n        exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n        class DOMStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url, true);\n          }\n        }\n        exports.DOMStandardFontDataFactory = DOMStandardFontDataFactory;\n        class DOMSVGFactory extends _base_factory.BaseSVGFactory {\n          _createSVG(type) {\n            return document.createElementNS(SVG_NS, type);\n          }\n        }\n        exports.DOMSVGFactory = DOMSVGFactory;\n        class PageViewport {\n          constructor(_ref22) {\n            let {\n              viewBox,\n              scale,\n              rotation,\n              offsetX = 0,\n              offsetY = 0,\n              dontFlip = false\n            } = _ref22;\n            this.viewBox = viewBox;\n            this.scale = scale;\n            this.rotation = rotation;\n            this.offsetX = offsetX;\n            this.offsetY = offsetY;\n            const centerX = (viewBox[2] + viewBox[0]) / 2;\n            const centerY = (viewBox[3] + viewBox[1]) / 2;\n            let rotateA, rotateB, rotateC, rotateD;\n            rotation %= 360;\n            if (rotation < 0) {\n              rotation += 360;\n            }\n            switch (rotation) {\n              case 180:\n                rotateA = -1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = 1;\n                break;\n              case 90:\n                rotateA = 0;\n                rotateB = 1;\n                rotateC = 1;\n                rotateD = 0;\n                break;\n              case 270:\n                rotateA = 0;\n                rotateB = -1;\n                rotateC = -1;\n                rotateD = 0;\n                break;\n              case 0:\n                rotateA = 1;\n                rotateB = 0;\n                rotateC = 0;\n                rotateD = -1;\n                break;\n              default:\n                throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n            }\n            if (dontFlip) {\n              rotateC = -rotateC;\n              rotateD = -rotateD;\n            }\n            let offsetCanvasX, offsetCanvasY;\n            let width, height;\n            if (rotateA === 0) {\n              offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n              width = (viewBox[3] - viewBox[1]) * scale;\n              height = (viewBox[2] - viewBox[0]) * scale;\n            } else {\n              offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n              offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n              width = (viewBox[2] - viewBox[0]) * scale;\n              height = (viewBox[3] - viewBox[1]) * scale;\n            }\n            this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n            this.width = width;\n            this.height = height;\n          }\n          get rawDims() {\n            const {\n              viewBox\n            } = this;\n            return (0, _util.shadow)(this, \"rawDims\", {\n              pageWidth: viewBox[2] - viewBox[0],\n              pageHeight: viewBox[3] - viewBox[1],\n              pageX: viewBox[0],\n              pageY: viewBox[1]\n            });\n          }\n          clone() {\n            let {\n              scale = this.scale,\n              rotation = this.rotation,\n              offsetX = this.offsetX,\n              offsetY = this.offsetY,\n              dontFlip = false\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            return new PageViewport({\n              viewBox: this.viewBox.slice(),\n              scale,\n              rotation,\n              offsetX,\n              offsetY,\n              dontFlip\n            });\n          }\n          convertToViewportPoint(x, y) {\n            return _util.Util.applyTransform([x, y], this.transform);\n          }\n          convertToViewportRectangle(rect) {\n            const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n            const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n            return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n          }\n          convertToPdfPoint(x, y) {\n            return _util.Util.applyInverseTransform([x, y], this.transform);\n          }\n        }\n        exports.PageViewport = PageViewport;\n        class RenderingCancelledException extends _util.BaseException {\n          constructor(msg) {\n            let extraDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            super(msg, \"RenderingCancelledException\");\n            this.extraDelay = extraDelay;\n          }\n        }\n        exports.RenderingCancelledException = RenderingCancelledException;\n        function isDataScheme(url) {\n          const ii = url.length;\n          let i = 0;\n          while (i < ii && url[i].trim() === \"\") {\n            i++;\n          }\n          return url.substring(i, i + 5).toLowerCase() === \"data:\";\n        }\n        function isPdfFile(filename) {\n          return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n        }\n        function getFilenameFromUrl(url) {\n          let onlyStripPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          if (!onlyStripPath) {\n            [url] = url.split(/[#?]/, 1);\n          }\n          return url.substring(url.lastIndexOf(\"/\") + 1);\n        }\n        function getPdfFilenameFromUrl(url) {\n          let defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"document.pdf\";\n          if (typeof url !== \"string\") {\n            return defaultFilename;\n          }\n          if (isDataScheme(url)) {\n            (0, _util.warn)('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n            return defaultFilename;\n          }\n          const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n          const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n          const splitURI = reURI.exec(url);\n          let suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n          if (suggestedFilename) {\n            suggestedFilename = suggestedFilename[0];\n            if (suggestedFilename.includes(\"%\")) {\n              try {\n                suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n              } catch {}\n            }\n          }\n          return suggestedFilename || defaultFilename;\n        }\n        class StatTimer {\n          started = Object.create(null);\n          times = [];\n          time(name) {\n            if (name in this.started) {\n              (0, _util.warn)(`Timer is already running for ${name}`);\n            }\n            this.started[name] = Date.now();\n          }\n          timeEnd(name) {\n            if (!(name in this.started)) {\n              (0, _util.warn)(`Timer has not been started for ${name}`);\n            }\n            this.times.push({\n              name,\n              start: this.started[name],\n              end: Date.now()\n            });\n            delete this.started[name];\n          }\n          toString() {\n            const outBuf = [];\n            let longest = 0;\n            for (const {\n              name\n            } of this.times) {\n              longest = Math.max(name.length, longest);\n            }\n            for (const {\n              name,\n              start,\n              end\n            } of this.times) {\n              outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n            }\n            return outBuf.join(\"\");\n          }\n        }\n        exports.StatTimer = StatTimer;\n        function isValidFetchUrl(url, baseUrl) {\n          try {\n            const {\n              protocol\n            } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n            return protocol === \"http:\" || protocol === \"https:\";\n          } catch {\n            return false;\n          }\n        }\n        function noContextMenu(e) {\n          e.preventDefault();\n        }\n        function loadScript(src) {\n          let removeScriptElement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          return new Promise((resolve, reject) => {\n            const script = document.createElement(\"script\");\n            script.src = src;\n            script.onload = function (evt) {\n              if (removeScriptElement) {\n                script.remove();\n              }\n              resolve(evt);\n            };\n            script.onerror = function () {\n              reject(new Error(`Cannot load script at: ${script.src}`));\n            };\n            (document.head || document.documentElement).append(script);\n          });\n        }\n        function deprecated(details) {\n          console.log(\"Deprecated API usage: \" + details);\n        }\n        let pdfDateStringRegex;\n        class PDFDateString {\n          static toDateObject(input) {\n            if (!input || typeof input !== \"string\") {\n              return null;\n            }\n            pdfDateStringRegex ||= new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n            const matches = pdfDateStringRegex.exec(input);\n            if (!matches) {\n              return null;\n            }\n            const year = parseInt(matches[1], 10);\n            let month = parseInt(matches[2], 10);\n            month = month >= 1 && month <= 12 ? month - 1 : 0;\n            let day = parseInt(matches[3], 10);\n            day = day >= 1 && day <= 31 ? day : 1;\n            let hour = parseInt(matches[4], 10);\n            hour = hour >= 0 && hour <= 23 ? hour : 0;\n            let minute = parseInt(matches[5], 10);\n            minute = minute >= 0 && minute <= 59 ? minute : 0;\n            let second = parseInt(matches[6], 10);\n            second = second >= 0 && second <= 59 ? second : 0;\n            const universalTimeRelation = matches[7] || \"Z\";\n            let offsetHour = parseInt(matches[8], 10);\n            offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n            let offsetMinute = parseInt(matches[9], 10) || 0;\n            offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n            if (universalTimeRelation === \"-\") {\n              hour += offsetHour;\n              minute += offsetMinute;\n            } else if (universalTimeRelation === \"+\") {\n              hour -= offsetHour;\n              minute -= offsetMinute;\n            }\n            return new Date(Date.UTC(year, month, day, hour, minute, second));\n          }\n        }\n        exports.PDFDateString = PDFDateString;\n        function getXfaPageViewport(xfaPage, _ref23) {\n          let {\n            scale = 1,\n            rotation = 0\n          } = _ref23;\n          const {\n            width,\n            height\n          } = xfaPage.attributes.style;\n          const viewBox = [0, 0, parseInt(width), parseInt(height)];\n          return new PageViewport({\n            viewBox,\n            scale,\n            rotation\n          });\n        }\n        function getRGB(color) {\n          if (color.startsWith(\"#\")) {\n            const colorRGB = parseInt(color.slice(1), 16);\n            return [(colorRGB & 0xff0000) >> 16, (colorRGB & 0x00ff00) >> 8, colorRGB & 0x0000ff];\n          }\n          if (color.startsWith(\"rgb(\")) {\n            return color.slice(4, -1).split(\",\").map(x => parseInt(x));\n          }\n          if (color.startsWith(\"rgba(\")) {\n            return color.slice(5, -1).split(\",\").map(x => parseInt(x)).slice(0, 3);\n          }\n          (0, _util.warn)(`Not a valid color format: \"${color}\"`);\n          return [0, 0, 0];\n        }\n        function getColorValues(colors) {\n          const span = document.createElement(\"span\");\n          span.style.visibility = \"hidden\";\n          document.body.append(span);\n          for (const name of colors.keys()) {\n            span.style.color = name;\n            const computedColor = window.getComputedStyle(span).color;\n            colors.set(name, getRGB(computedColor));\n          }\n          span.remove();\n        }\n        function getCurrentTransform(ctx) {\n          const {\n            a,\n            b,\n            c,\n            d,\n            e,\n            f\n          } = ctx.getTransform();\n          return [a, b, c, d, e, f];\n        }\n        function getCurrentTransformInverse(ctx) {\n          const {\n            a,\n            b,\n            c,\n            d,\n            e,\n            f\n          } = ctx.getTransform().invertSelf();\n          return [a, b, c, d, e, f];\n        }\n        function setLayerDimensions(div, viewport) {\n          let mustFlip = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          let mustRotate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n          if (viewport instanceof PageViewport) {\n            const {\n              pageWidth,\n              pageHeight\n            } = viewport.rawDims;\n            const {\n              style\n            } = div;\n            const useRound = _util.FeatureTest.isCSSRoundSupported;\n            const w = `var(--scale-factor) * ${pageWidth}px`,\n              h = `var(--scale-factor) * ${pageHeight}px`;\n            const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n              heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n            if (!mustFlip || viewport.rotation % 180 === 0) {\n              style.width = widthStr;\n              style.height = heightStr;\n            } else {\n              style.width = heightStr;\n              style.height = widthStr;\n            }\n          }\n          if (mustRotate) {\n            div.setAttribute(\"data-main-rotation\", viewport.rotation);\n          }\n        }\n\n        /***/\n      }, /* 7 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.BaseStandardFontDataFactory = exports.BaseSVGFactory = exports.BaseFilterFactory = exports.BaseCanvasFactory = exports.BaseCMapReaderFactory = void 0;\n        var _util = __w_pdfjs_require__(1);\n        class BaseFilterFactory {\n          constructor() {\n            if (this.constructor === BaseFilterFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseFilterFactory.\");\n            }\n          }\n          addFilter(maps) {\n            return \"none\";\n          }\n          addHCMFilter(fgColor, bgColor) {\n            return \"none\";\n          }\n          addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n            return \"none\";\n          }\n          destroy() {\n            let keepHCM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          }\n        }\n        exports.BaseFilterFactory = BaseFilterFactory;\n        class BaseCanvasFactory {\n          constructor() {\n            if (this.constructor === BaseCanvasFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n            }\n          }\n          create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            const canvas = this._createCanvas(width, height);\n            return {\n              canvas,\n              context: canvas.getContext(\"2d\")\n            };\n          }\n          reset(canvasAndContext, width, height) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n            canvasAndContext.canvas.width = width;\n            canvasAndContext.canvas.height = height;\n          }\n          destroy(canvasAndContext) {\n            if (!canvasAndContext.canvas) {\n              throw new Error(\"Canvas is not specified\");\n            }\n            canvasAndContext.canvas.width = 0;\n            canvasAndContext.canvas.height = 0;\n            canvasAndContext.canvas = null;\n            canvasAndContext.context = null;\n          }\n          _createCanvas(width, height) {\n            (0, _util.unreachable)(\"Abstract method `_createCanvas` called.\");\n          }\n        }\n        exports.BaseCanvasFactory = BaseCanvasFactory;\n        class BaseCMapReaderFactory {\n          constructor(_ref24) {\n            let {\n              baseUrl = null,\n              isCompressed = true\n            } = _ref24;\n            if (this.constructor === BaseCMapReaderFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n            }\n            this.baseUrl = baseUrl;\n            this.isCompressed = isCompressed;\n          }\n          async fetch(_ref25) {\n            let {\n              name\n            } = _ref25;\n            if (!this.baseUrl) {\n              throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n            }\n            if (!name) {\n              throw new Error(\"CMap name must be specified.\");\n            }\n            const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n            const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n            return this._fetchData(url, compressionType).catch(reason => {\n              throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n            });\n          }\n          _fetchData(url, compressionType) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n        }\n        exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n        class BaseStandardFontDataFactory {\n          constructor(_ref26) {\n            let {\n              baseUrl = null\n            } = _ref26;\n            if (this.constructor === BaseStandardFontDataFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseStandardFontDataFactory.\");\n            }\n            this.baseUrl = baseUrl;\n          }\n          async fetch(_ref27) {\n            let {\n              filename\n            } = _ref27;\n            if (!this.baseUrl) {\n              throw new Error('The standard font \"baseUrl\" parameter must be specified, ensure that ' + 'the \"standardFontDataUrl\" API parameter is provided.');\n            }\n            if (!filename) {\n              throw new Error(\"Font filename must be specified.\");\n            }\n            const url = `${this.baseUrl}${filename}`;\n            return this._fetchData(url).catch(reason => {\n              throw new Error(`Unable to load font data at: ${url}`);\n            });\n          }\n          _fetchData(url) {\n            (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n          }\n        }\n        exports.BaseStandardFontDataFactory = BaseStandardFontDataFactory;\n        class BaseSVGFactory {\n          constructor() {\n            if (this.constructor === BaseSVGFactory) {\n              (0, _util.unreachable)(\"Cannot initialize BaseSVGFactory.\");\n            }\n          }\n          create(width, height) {\n            let skipDimensions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid SVG dimensions\");\n            }\n            const svg = this._createSVG(\"svg:svg\");\n            svg.setAttribute(\"version\", \"1.1\");\n            if (!skipDimensions) {\n              svg.setAttribute(\"width\", `${width}px`);\n              svg.setAttribute(\"height\", `${height}px`);\n            }\n            svg.setAttribute(\"preserveAspectRatio\", \"none\");\n            svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n            return svg;\n          }\n          createElement(type) {\n            if (typeof type !== \"string\") {\n              throw new Error(\"Invalid SVG element type\");\n            }\n            return this._createSVG(type);\n          }\n          _createSVG(type) {\n            (0, _util.unreachable)(\"Abstract method `_createSVG` called.\");\n          }\n        }\n        exports.BaseSVGFactory = BaseSVGFactory;\n\n        /***/\n      }, /* 8 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MurmurHash3_64 = void 0;\n        var _util = __w_pdfjs_require__(1);\n        const SEED = 0xc3d2e1f0;\n        const MASK_HIGH = 0xffff0000;\n        const MASK_LOW = 0xffff;\n        class MurmurHash3_64 {\n          constructor(seed) {\n            this.h1 = seed ? seed & 0xffffffff : SEED;\n            this.h2 = seed ? seed & 0xffffffff : SEED;\n          }\n          update(input) {\n            let data, length;\n            if (typeof input === \"string\") {\n              data = new Uint8Array(input.length * 2);\n              length = 0;\n              for (let i = 0, ii = input.length; i < ii; i++) {\n                const code = input.charCodeAt(i);\n                if (code <= 0xff) {\n                  data[length++] = code;\n                } else {\n                  data[length++] = code >>> 8;\n                  data[length++] = code & 0xff;\n                }\n              }\n            } else if ((0, _util.isArrayBuffer)(input)) {\n              data = input.slice();\n              length = data.byteLength;\n            } else {\n              throw new Error(\"Wrong data format in MurmurHash3_64_update. \" + \"Input must be a string or array.\");\n            }\n            const blockCounts = length >> 2;\n            const tailLength = length - blockCounts * 4;\n            const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n            let k1 = 0,\n              k2 = 0;\n            let h1 = this.h1,\n              h2 = this.h2;\n            const C1 = 0xcc9e2d51,\n              C2 = 0x1b873593;\n            const C1_LOW = C1 & MASK_LOW,\n              C2_LOW = C2 & MASK_LOW;\n            for (let i = 0; i < blockCounts; i++) {\n              if (i & 1) {\n                k1 = dataUint32[i];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                h1 ^= k1;\n                h1 = h1 << 13 | h1 >>> 19;\n                h1 = h1 * 5 + 0xe6546b64;\n              } else {\n                k2 = dataUint32[i];\n                k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n                k2 = k2 << 15 | k2 >>> 17;\n                k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n                h2 ^= k2;\n                h2 = h2 << 13 | h2 >>> 19;\n                h2 = h2 * 5 + 0xe6546b64;\n              }\n            }\n            k1 = 0;\n            switch (tailLength) {\n              case 3:\n                k1 ^= data[blockCounts * 4 + 2] << 16;\n              case 2:\n                k1 ^= data[blockCounts * 4 + 1] << 8;\n              case 1:\n                k1 ^= data[blockCounts * 4];\n                k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n                k1 = k1 << 15 | k1 >>> 17;\n                k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n                if (blockCounts & 1) {\n                  h1 ^= k1;\n                } else {\n                  h2 ^= k1;\n                }\n            }\n            this.h1 = h1;\n            this.h2 = h2;\n          }\n          hexdigest() {\n            let h1 = this.h1,\n              h2 = this.h2;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n            h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n            h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n            h1 ^= h2 >>> 1;\n            return (h1 >>> 0).toString(16).padStart(8, \"0\") + (h2 >>> 0).toString(16).padStart(8, \"0\");\n          }\n        }\n        exports.MurmurHash3_64 = MurmurHash3_64;\n\n        /***/\n      }, /* 9 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FontLoader = exports.FontFaceObject = void 0;\n        var _util = __w_pdfjs_require__(1);\n        class FontLoader {\n          #systemFonts = new Set();\n          constructor(_ref28) {\n            let {\n              ownerDocument = globalThis.document,\n              styleElement = null\n            } = _ref28;\n            this._document = ownerDocument;\n            this.nativeFontFaces = new Set();\n            this.styleElement = null;\n            this.loadingRequests = [];\n            this.loadTestFontId = 0;\n          }\n          addNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.add(nativeFontFace);\n            this._document.fonts.add(nativeFontFace);\n          }\n          removeNativeFontFace(nativeFontFace) {\n            this.nativeFontFaces.delete(nativeFontFace);\n            this._document.fonts.delete(nativeFontFace);\n          }\n          insertRule(rule) {\n            if (!this.styleElement) {\n              this.styleElement = this._document.createElement(\"style\");\n              this._document.documentElement.getElementsByTagName(\"head\")[0].append(this.styleElement);\n            }\n            const styleSheet = this.styleElement.sheet;\n            styleSheet.insertRule(rule, styleSheet.cssRules.length);\n          }\n          clear() {\n            for (const nativeFontFace of this.nativeFontFaces) {\n              this._document.fonts.delete(nativeFontFace);\n            }\n            this.nativeFontFaces.clear();\n            this.#systemFonts.clear();\n            if (this.styleElement) {\n              this.styleElement.remove();\n              this.styleElement = null;\n            }\n          }\n          async loadSystemFont(info) {\n            if (!info || this.#systemFonts.has(info.loadedName)) {\n              return;\n            }\n            (0, _util.assert)(!this.disableFontFace, \"loadSystemFont shouldn't be called when `disableFontFace` is set.\");\n            if (this.isFontLoadingAPISupported) {\n              const {\n                loadedName,\n                src,\n                style\n              } = info;\n              const fontFace = new FontFace(loadedName, src, style);\n              this.addNativeFontFace(fontFace);\n              try {\n                await fontFace.load();\n                this.#systemFonts.add(loadedName);\n              } catch {\n                (0, _util.warn)(`Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`);\n                this.removeNativeFontFace(fontFace);\n              }\n              return;\n            }\n            (0, _util.unreachable)(\"Not implemented: loadSystemFont without the Font Loading API.\");\n          }\n          async bind(font) {\n            if (font.attached || font.missingFile && !font.systemFontInfo) {\n              return;\n            }\n            font.attached = true;\n            if (font.systemFontInfo) {\n              await this.loadSystemFont(font.systemFontInfo);\n              return;\n            }\n            if (this.isFontLoadingAPISupported) {\n              const nativeFontFace = font.createNativeFontFace();\n              if (nativeFontFace) {\n                this.addNativeFontFace(nativeFontFace);\n                try {\n                  await nativeFontFace.loaded;\n                } catch (ex) {\n                  (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                  font.disableFontFace = true;\n                  throw ex;\n                }\n              }\n              return;\n            }\n            const rule = font.createFontFaceRule();\n            if (rule) {\n              this.insertRule(rule);\n              if (this.isSyncFontLoadingSupported) {\n                return;\n              }\n              await new Promise(resolve => {\n                const request = this._queueLoadingCallback(resolve);\n                this._prepareFontLoadEvent(font, request);\n              });\n            }\n          }\n          get isFontLoadingAPISupported() {\n            const hasFonts = !!this._document?.fonts;\n            return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", hasFonts);\n          }\n          get isSyncFontLoadingSupported() {\n            let supported = false;\n            if (_util.isNodeJS) {\n              supported = true;\n            } else if (typeof navigator !== \"undefined\" && /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)) {\n              supported = true;\n            }\n            return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n          }\n          _queueLoadingCallback(callback) {\n            function completeRequest() {\n              (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n              request.done = true;\n              while (loadingRequests.length > 0 && loadingRequests[0].done) {\n                const otherRequest = loadingRequests.shift();\n                setTimeout(otherRequest.callback, 0);\n              }\n            }\n            const {\n              loadingRequests\n            } = this;\n            const request = {\n              done: false,\n              complete: completeRequest,\n              callback\n            };\n            loadingRequests.push(request);\n            return request;\n          }\n          get _loadTestFont() {\n            const testFont = atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n            return (0, _util.shadow)(this, \"_loadTestFont\", testFont);\n          }\n          _prepareFontLoadEvent(font, request) {\n            function int32(data, offset) {\n              return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n            }\n            function spliceString(s, offset, remove, insert) {\n              const chunk1 = s.substring(0, offset);\n              const chunk2 = s.substring(offset + remove);\n              return chunk1 + insert + chunk2;\n            }\n            let i, ii;\n            const canvas = this._document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            const ctx = canvas.getContext(\"2d\");\n            let called = 0;\n            function isFontReady(name, callback) {\n              if (++called > 30) {\n                (0, _util.warn)(\"Load test font never loaded.\");\n                callback();\n                return;\n              }\n              ctx.font = \"30px \" + name;\n              ctx.fillText(\".\", 0, 20);\n              const imageData = ctx.getImageData(0, 0, 1, 1);\n              if (imageData.data[3] > 0) {\n                callback();\n                return;\n              }\n              setTimeout(isFontReady.bind(null, name, callback));\n            }\n            const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n            let data = this._loadTestFont;\n            const COMMENT_OFFSET = 976;\n            data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n            const CFF_CHECKSUM_OFFSET = 16;\n            const XXXX_VALUE = 0x58585858;\n            let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n            for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n            }\n            if (i < loadTestFontId.length) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n            }\n            data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n            const url = `url(data:font/opentype;base64,${btoa(data)});`;\n            const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n            this.insertRule(rule);\n            const div = this._document.createElement(\"div\");\n            div.style.visibility = \"hidden\";\n            div.style.width = div.style.height = \"10px\";\n            div.style.position = \"absolute\";\n            div.style.top = div.style.left = \"0px\";\n            for (const name of [font.loadedName, loadTestFontId]) {\n              const span = this._document.createElement(\"span\");\n              span.textContent = \"Hi\";\n              span.style.fontFamily = name;\n              div.append(span);\n            }\n            this._document.body.append(div);\n            isFontReady(loadTestFontId, () => {\n              div.remove();\n              request.complete();\n            });\n          }\n        }\n        exports.FontLoader = FontLoader;\n        class FontFaceObject {\n          constructor(translatedData, _ref29) {\n            let {\n              isEvalSupported = true,\n              disableFontFace = false,\n              ignoreErrors = false,\n              inspectFont = null\n            } = _ref29;\n            this.compiledGlyphs = Object.create(null);\n            for (const i in translatedData) {\n              this[i] = translatedData[i];\n            }\n            this.isEvalSupported = isEvalSupported !== false;\n            this.disableFontFace = disableFontFace === true;\n            this.ignoreErrors = ignoreErrors === true;\n            this._inspectFont = inspectFont;\n          }\n          createNativeFontFace() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            let nativeFontFace;\n            if (!this.cssFontInfo) {\n              nativeFontFace = new FontFace(this.loadedName, this.data, {});\n            } else {\n              const css = {\n                weight: this.cssFontInfo.fontWeight\n              };\n              if (this.cssFontInfo.italicAngle) {\n                css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n              }\n              nativeFontFace = new FontFace(this.cssFontInfo.fontFamily, this.data, css);\n            }\n            this._inspectFont?.(this);\n            return nativeFontFace;\n          }\n          createFontFaceRule() {\n            if (!this.data || this.disableFontFace) {\n              return null;\n            }\n            const data = (0, _util.bytesToString)(this.data);\n            const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n            let rule;\n            if (!this.cssFontInfo) {\n              rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n            } else {\n              let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n              if (this.cssFontInfo.italicAngle) {\n                css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n              }\n              rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n            }\n            this._inspectFont?.(this, url);\n            return rule;\n          }\n          getPathGenerator(objs, character) {\n            if (this.compiledGlyphs[character] !== undefined) {\n              return this.compiledGlyphs[character];\n            }\n            let cmds;\n            try {\n              cmds = objs.get(this.loadedName + \"_path_\" + character);\n            } catch (ex) {\n              if (!this.ignoreErrors) {\n                throw ex;\n              }\n              (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n              return this.compiledGlyphs[character] = function (c, size) {};\n            }\n            if (this.isEvalSupported && _util.FeatureTest.isEvalSupported) {\n              const jsBuf = [];\n              for (const current of cmds) {\n                const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n                jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n              }\n              return this.compiledGlyphs[character] = new Function(\"c\", \"size\", jsBuf.join(\"\"));\n            }\n            return this.compiledGlyphs[character] = function (c, size) {\n              for (const current of cmds) {\n                if (current.cmd === \"scale\") {\n                  current.args = [size, -size];\n                }\n                c[current.cmd].apply(c, current.args);\n              }\n            };\n          }\n        }\n        exports.FontFaceObject = FontFaceObject;\n\n        /***/\n      }, /* 10 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NodeStandardFontDataFactory = exports.NodeFilterFactory = exports.NodeCanvasFactory = exports.NodeCMapReaderFactory = void 0;\n        var _base_factory = __w_pdfjs_require__(7);\n        var _util = __w_pdfjs_require__(1);\n        ;\n        ;\n        const fetchData = function (url) {\n          return new Promise((resolve, reject) => {\n            const fs = require(\"fs\");\n            fs.readFile(url, (error, data) => {\n              if (error || !data) {\n                reject(new Error(error));\n                return;\n              }\n              resolve(new Uint8Array(data));\n            });\n          });\n        };\n        class NodeFilterFactory extends _base_factory.BaseFilterFactory {}\n        exports.NodeFilterFactory = NodeFilterFactory;\n        class NodeCanvasFactory extends _base_factory.BaseCanvasFactory {\n          _createCanvas(width, height) {\n            const Canvas = require(\"canvas\");\n            return Canvas.createCanvas(width, height);\n          }\n        }\n        exports.NodeCanvasFactory = NodeCanvasFactory;\n        class NodeCMapReaderFactory extends _base_factory.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return fetchData(url).then(data => {\n              return {\n                cMapData: data,\n                compressionType\n              };\n            });\n          }\n        }\n        exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n        class NodeStandardFontDataFactory extends _base_factory.BaseStandardFontDataFactory {\n          _fetchData(url) {\n            return fetchData(url);\n          }\n        }\n        exports.NodeStandardFontDataFactory = NodeStandardFontDataFactory;\n\n        /***/\n      }, /* 11 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.CanvasGraphics = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _pattern_helper = __w_pdfjs_require__(12);\n        var _image_utils = __w_pdfjs_require__(13);\n        const MIN_FONT_SIZE = 16;\n        const MAX_FONT_SIZE = 100;\n        const MAX_GROUP_SIZE = 4096;\n        const EXECUTION_TIME = 15;\n        const EXECUTION_STEPS = 10;\n        const MAX_SIZE_TO_COMPILE = 1000;\n        const FULL_CHUNK_HEIGHT = 16;\n        function mirrorContextOperations(ctx, destCtx) {\n          if (ctx._removeMirroring) {\n            throw new Error(\"Context is already forwarding operations.\");\n          }\n          ctx.__originalSave = ctx.save;\n          ctx.__originalRestore = ctx.restore;\n          ctx.__originalRotate = ctx.rotate;\n          ctx.__originalScale = ctx.scale;\n          ctx.__originalTranslate = ctx.translate;\n          ctx.__originalTransform = ctx.transform;\n          ctx.__originalSetTransform = ctx.setTransform;\n          ctx.__originalResetTransform = ctx.resetTransform;\n          ctx.__originalClip = ctx.clip;\n          ctx.__originalMoveTo = ctx.moveTo;\n          ctx.__originalLineTo = ctx.lineTo;\n          ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n          ctx.__originalRect = ctx.rect;\n          ctx.__originalClosePath = ctx.closePath;\n          ctx.__originalBeginPath = ctx.beginPath;\n          ctx._removeMirroring = () => {\n            ctx.save = ctx.__originalSave;\n            ctx.restore = ctx.__originalRestore;\n            ctx.rotate = ctx.__originalRotate;\n            ctx.scale = ctx.__originalScale;\n            ctx.translate = ctx.__originalTranslate;\n            ctx.transform = ctx.__originalTransform;\n            ctx.setTransform = ctx.__originalSetTransform;\n            ctx.resetTransform = ctx.__originalResetTransform;\n            ctx.clip = ctx.__originalClip;\n            ctx.moveTo = ctx.__originalMoveTo;\n            ctx.lineTo = ctx.__originalLineTo;\n            ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n            ctx.rect = ctx.__originalRect;\n            ctx.closePath = ctx.__originalClosePath;\n            ctx.beginPath = ctx.__originalBeginPath;\n            delete ctx._removeMirroring;\n          };\n          ctx.save = function ctxSave() {\n            destCtx.save();\n            this.__originalSave();\n          };\n          ctx.restore = function ctxRestore() {\n            destCtx.restore();\n            this.__originalRestore();\n          };\n          ctx.translate = function ctxTranslate(x, y) {\n            destCtx.translate(x, y);\n            this.__originalTranslate(x, y);\n          };\n          ctx.scale = function ctxScale(x, y) {\n            destCtx.scale(x, y);\n            this.__originalScale(x, y);\n          };\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            destCtx.transform(a, b, c, d, e, f);\n            this.__originalTransform(a, b, c, d, e, f);\n          };\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            destCtx.setTransform(a, b, c, d, e, f);\n            this.__originalSetTransform(a, b, c, d, e, f);\n          };\n          ctx.resetTransform = function ctxResetTransform() {\n            destCtx.resetTransform();\n            this.__originalResetTransform();\n          };\n          ctx.rotate = function ctxRotate(angle) {\n            destCtx.rotate(angle);\n            this.__originalRotate(angle);\n          };\n          ctx.clip = function ctxRotate(rule) {\n            destCtx.clip(rule);\n            this.__originalClip(rule);\n          };\n          ctx.moveTo = function (x, y) {\n            destCtx.moveTo(x, y);\n            this.__originalMoveTo(x, y);\n          };\n          ctx.lineTo = function (x, y) {\n            destCtx.lineTo(x, y);\n            this.__originalLineTo(x, y);\n          };\n          ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n            destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n            this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n          };\n          ctx.rect = function (x, y, width, height) {\n            destCtx.rect(x, y, width, height);\n            this.__originalRect(x, y, width, height);\n          };\n          ctx.closePath = function () {\n            destCtx.closePath();\n            this.__originalClosePath();\n          };\n          ctx.beginPath = function () {\n            destCtx.beginPath();\n            this.__originalBeginPath();\n          };\n        }\n        class CachedCanvases {\n          constructor(canvasFactory) {\n            this.canvasFactory = canvasFactory;\n            this.cache = Object.create(null);\n          }\n          getCanvas(id, width, height) {\n            let canvasEntry;\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n            return canvasEntry;\n          }\n          delete(id) {\n            delete this.cache[id];\n          }\n          clear() {\n            for (const id in this.cache) {\n              const canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n        }\n        function drawImageAtIntegerCoords(ctx, srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH) {\n          const [a, b, c, d, tx, ty] = (0, _display_utils.getCurrentTransform)(ctx);\n          if (b === 0 && c === 0) {\n            const tlX = destX * a + tx;\n            const rTlX = Math.round(tlX);\n            const tlY = destY * d + ty;\n            const rTlY = Math.round(tlY);\n            const brX = (destX + destW) * a + tx;\n            const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n            const brY = (destY + destH) * d + ty;\n            const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n            ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n            ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n            ctx.setTransform(a, b, c, d, tx, ty);\n            return [rWidth, rHeight];\n          }\n          if (a === 0 && d === 0) {\n            const tlX = destY * c + tx;\n            const rTlX = Math.round(tlX);\n            const tlY = destX * b + ty;\n            const rTlY = Math.round(tlY);\n            const brX = (destY + destH) * c + tx;\n            const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n            const brY = (destX + destW) * b + ty;\n            const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n            ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n            ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n            ctx.setTransform(a, b, c, d, tx, ty);\n            return [rHeight, rWidth];\n          }\n          ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n          const scaleX = Math.hypot(a, b);\n          const scaleY = Math.hypot(c, d);\n          return [scaleX * destW, scaleY * destH];\n        }\n        function compileType3Glyph(imgData) {\n          const {\n            width,\n            height\n          } = imgData;\n          if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n            return null;\n          }\n          const POINT_TO_PROCESS_LIMIT = 1000;\n          const POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n          const width1 = width + 1;\n          let points = new Uint8Array(width1 * (height + 1));\n          let i, j, j0;\n          const lineSize = width + 7 & ~7;\n          let data = new Uint8Array(lineSize * height),\n            pos = 0;\n          for (const elem of imgData.data) {\n            let mask = 128;\n            while (mask > 0) {\n              data[pos++] = elem & mask ? 0 : 255;\n              mask >>= 1;\n            }\n          }\n          let count = 0;\n          pos = 0;\n          if (data[pos] !== 0) {\n            points[0] = 1;\n            ++count;\n          }\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j] = data[pos] ? 2 : 1;\n              ++count;\n            }\n            pos++;\n          }\n          if (data[pos] !== 0) {\n            points[j] = 2;\n            ++count;\n          }\n          for (i = 1; i < height; i++) {\n            pos = i * lineSize;\n            j0 = i * width1;\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0] = data[pos] ? 1 : 8;\n              ++count;\n            }\n            let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n            for (j = 1; j < width; j++) {\n              sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n              if (POINT_TYPES[sum]) {\n                points[j0 + j] = POINT_TYPES[sum];\n                ++count;\n              }\n              pos++;\n            }\n            if (data[pos - lineSize] !== data[pos]) {\n              points[j0 + j] = data[pos] ? 2 : 4;\n              ++count;\n            }\n            if (count > POINT_TO_PROCESS_LIMIT) {\n              return null;\n            }\n          }\n          pos = lineSize * (height - 1);\n          j0 = i * width1;\n          if (data[pos] !== 0) {\n            points[j0] = 8;\n            ++count;\n          }\n          for (j = 1; j < width; j++) {\n            if (data[pos] !== data[pos + 1]) {\n              points[j0 + j] = data[pos] ? 4 : 8;\n              ++count;\n            }\n            pos++;\n          }\n          if (data[pos] !== 0) {\n            points[j0 + j] = 4;\n            ++count;\n          }\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n          const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n          const path = new Path2D();\n          for (i = 0; count && i <= height; i++) {\n            let p = i * width1;\n            const end = p + width;\n            while (p < end && !points[p]) {\n              p++;\n            }\n            if (p === end) {\n              continue;\n            }\n            path.moveTo(p % width1, i);\n            const p0 = p;\n            let type = points[p];\n            do {\n              const step = steps[type];\n              do {\n                p += step;\n              } while (!points[p]);\n              const pp = points[p];\n              if (pp !== 5 && pp !== 10) {\n                type = pp;\n                points[p] = 0;\n              } else {\n                type = pp & 0x33 * type >> 4;\n                points[p] &= type >> 2 | type << 2;\n              }\n              path.lineTo(p % width1, p / width1 | 0);\n              if (!points[p]) {\n                --count;\n              }\n            } while (p0 !== p);\n            --i;\n          }\n          data = null;\n          points = null;\n          const drawOutline = function (c) {\n            c.save();\n            c.scale(1 / width, -1 / height);\n            c.translate(0, -height);\n            c.fill(path);\n            c.beginPath();\n            c.restore();\n          };\n          return drawOutline;\n        }\n        class CanvasExtraState {\n          constructor(width, height) {\n            this.alphaIsShape = false;\n            this.fontSize = 0;\n            this.fontSizeScale = 1;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.textMatrixScale = 1;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textRise = 0;\n            this.fillColor = \"#000000\";\n            this.strokeColor = \"#000000\";\n            this.patternFill = false;\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.activeSMask = null;\n            this.transferMaps = \"none\";\n            this.startNewPathAndClipBox([0, 0, width, height]);\n          }\n          clone() {\n            const clone = Object.create(this);\n            clone.clipBox = this.clipBox.slice();\n            return clone;\n          }\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n          updatePathMinMax(transform, x, y) {\n            [x, y] = _util.Util.applyTransform([x, y], transform);\n            this.minX = Math.min(this.minX, x);\n            this.minY = Math.min(this.minY, y);\n            this.maxX = Math.max(this.maxX, x);\n            this.maxY = Math.max(this.maxY, y);\n          }\n          updateRectMinMax(transform, rect) {\n            const p1 = _util.Util.applyTransform(rect, transform);\n            const p2 = _util.Util.applyTransform(rect.slice(2), transform);\n            this.minX = Math.min(this.minX, p1[0], p2[0]);\n            this.minY = Math.min(this.minY, p1[1], p2[1]);\n            this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n            this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n          }\n          updateScalingPathMinMax(transform, minMax) {\n            _util.Util.scaleMinMax(transform, minMax);\n            this.minX = Math.min(this.minX, minMax[0]);\n            this.maxX = Math.max(this.maxX, minMax[1]);\n            this.minY = Math.min(this.minY, minMax[2]);\n            this.maxY = Math.max(this.maxY, minMax[3]);\n          }\n          updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n            const box = _util.Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n            if (minMax) {\n              minMax[0] = Math.min(minMax[0], box[0], box[2]);\n              minMax[1] = Math.max(minMax[1], box[0], box[2]);\n              minMax[2] = Math.min(minMax[2], box[1], box[3]);\n              minMax[3] = Math.max(minMax[3], box[1], box[3]);\n              return;\n            }\n            this.updateRectMinMax(transform, box);\n          }\n          getPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const box = [this.minX, this.minY, this.maxX, this.maxY];\n            if (pathType === _pattern_helper.PathType.STROKE) {\n              if (!transform) {\n                (0, _util.unreachable)(\"Stroke bounding box must include transform.\");\n              }\n              const scale = _util.Util.singularValueDecompose2dScale(transform);\n              const xStrokePad = scale[0] * this.lineWidth / 2;\n              const yStrokePad = scale[1] * this.lineWidth / 2;\n              box[0] -= xStrokePad;\n              box[1] -= yStrokePad;\n              box[2] += xStrokePad;\n              box[3] += yStrokePad;\n            }\n            return box;\n          }\n          updateClipFromPath() {\n            const intersect = _util.Util.intersect(this.clipBox, this.getPathBoundingBox());\n            this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n          }\n          isEmptyClip() {\n            return this.minX === Infinity;\n          }\n          startNewPathAndClipBox(box) {\n            this.clipBox = box;\n            this.minX = Infinity;\n            this.minY = Infinity;\n            this.maxX = 0;\n            this.maxY = 0;\n          }\n          getClippedPathBoundingBox() {\n            let pathType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _pattern_helper.PathType.FILL;\n            let transform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            return _util.Util.intersect(this.clipBox, this.getPathBoundingBox(pathType, transform));\n          }\n        }\n        function putBinaryImageData(ctx, imgData) {\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n          const height = imgData.height,\n            width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0,\n            destPos;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n          let i, j, thisChunkHeight, elemsInThisChunk;\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            const srcLength = src.byteLength;\n            const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            const dest32DataLength = dest32.length;\n            const fullSrcDiff = width + 7 >> 3;\n            const white = 0xffffffff;\n            const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n              for (j = 0; j < thisChunkHeight; j++) {\n                const srcDiff = srcLength - srcPos;\n                let k = 0;\n                const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                const kEndUnrolled = kEnd & ~7;\n                let mask = 0;\n                let srcByte = 0;\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n              destPos = 0;\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(`bad image kind: ${imgData.kind}`);\n          }\n        }\n        function putBinaryImageMask(ctx, imgData) {\n          if (imgData.bitmap) {\n            ctx.drawImage(imgData.bitmap, 0, 0);\n            return;\n          }\n          const height = imgData.height,\n            width = imgData.width;\n          const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          let srcPos = 0;\n          const src = imgData.data;\n          const dest = chunkImgData.data;\n          for (let i = 0; i < totalChunks; i++) {\n            const thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            ({\n              srcPos\n            } = (0, _image_utils.convertBlackAndWhiteToRGBA)({\n              src,\n              srcPos,\n              dest,\n              width,\n              height: thisChunkHeight,\n              nonBlackColor: 0\n            }));\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n        function copyCtxState(sourceCtx, destCtx) {\n          const properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\", \"filter\"];\n          for (const property of properties) {\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n          if (!_util.isNodeJS) {\n            const {\n              filter\n            } = ctx;\n            if (filter !== \"none\" && filter !== \"\") {\n              ctx.filter = \"none\";\n            }\n          }\n        }\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          const length = bytes.length;\n          for (let i = 3; i < length; i += 4) {\n            const alpha = bytes[i];\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              const alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          const length = maskData.length;\n          const scale = 1 / 255;\n          for (let i = 3; i < length; i += 4) {\n            const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          const length = maskData.length;\n          for (let i = 3; i < length; i += 4) {\n            const y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap, layerOffsetX, layerOffsetY, maskOffsetX, maskOffsetY) {\n          const hasBackdrop = !!backdrop;\n          const r0 = hasBackdrop ? backdrop[0] : 0;\n          const g0 = hasBackdrop ? backdrop[1] : 0;\n          const b0 = hasBackdrop ? backdrop[2] : 0;\n          const composeFn = subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n          const PIXELS_TO_PROCESS = 1048576;\n          const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n          for (let row = 0; row < height; row += chunkSize) {\n            const chunkHeight = Math.min(chunkSize, height - row);\n            const maskData = maskCtx.getImageData(layerOffsetX - maskOffsetX, row + (layerOffsetY - maskOffsetY), width, chunkHeight);\n            const layerData = layerCtx.getImageData(layerOffsetX, row + layerOffsetY, width, chunkHeight);\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n            composeFn(maskData.data, layerData.data, transferMap);\n            layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n          }\n        }\n        function composeSMask(ctx, smask, layerCtx, layerBox) {\n          const layerOffsetX = layerBox[0];\n          const layerOffsetY = layerBox[1];\n          const layerWidth = layerBox[2] - layerOffsetX;\n          const layerHeight = layerBox[3] - layerOffsetY;\n          if (layerWidth === 0 || layerHeight === 0) {\n            return;\n          }\n          genericComposeSMask(smask.context, layerCtx, layerWidth, layerHeight, smask.subtype, smask.backdrop, smask.transferMap, layerOffsetX, layerOffsetY, smask.offsetX, smask.offsetY);\n          ctx.save();\n          ctx.globalAlpha = 1;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.setTransform(1, 0, 0, 1, 0, 0);\n          ctx.drawImage(layerCtx.canvas, 0, 0);\n          ctx.restore();\n        }\n        function getImageSmoothingEnabled(transform, interpolate) {\n          const scale = _util.Util.singularValueDecompose2dScale(transform);\n          scale[0] = Math.fround(scale[0]);\n          scale[1] = Math.fround(scale[1]);\n          const actualScale = Math.fround((globalThis.devicePixelRatio || 1) * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n          if (interpolate !== undefined) {\n            return interpolate;\n          } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n            return true;\n          }\n          return false;\n        }\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        const NORMAL_CLIP = {};\n        const EO_CLIP = {};\n        class CanvasGraphics {\n          constructor(canvasCtx, commonObjs, objs, canvasFactory, filterFactory, _ref30, annotationCanvasMap, pageColors) {\n            let {\n              optionalContentConfig,\n              markedContentStack = null\n            } = _ref30;\n            this.ctx = canvasCtx;\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.stateStack = [];\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.res = null;\n            this.xobjs = null;\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.canvasFactory = canvasFactory;\n            this.filterFactory = filterFactory;\n            this.groupStack = [];\n            this.processingType3 = null;\n            this.baseTransform = null;\n            this.baseTransformStack = [];\n            this.groupLevel = 0;\n            this.smaskStack = [];\n            this.smaskCounter = 0;\n            this.tempSMask = null;\n            this.suspendedCtx = null;\n            this.contentVisible = true;\n            this.markedContentStack = markedContentStack || [];\n            this.optionalContentConfig = optionalContentConfig;\n            this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n            this.cachedPatterns = new Map();\n            this.annotationCanvasMap = annotationCanvasMap;\n            this.viewportScale = 1;\n            this.outputScaleX = 1;\n            this.outputScaleY = 1;\n            this.pageColors = pageColors;\n            this._cachedScaleForStroking = [-1, 0];\n            this._cachedGetSinglePixelWidth = null;\n            this._cachedBitmapsMap = new Map();\n          }\n          getObject(data) {\n            let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (typeof data === \"string\") {\n              return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n            }\n            return fallback;\n          }\n          beginDrawing(_ref31) {\n            let {\n              transform,\n              viewport,\n              transparency = false,\n              background = null\n            } = _ref31;\n            const width = this.ctx.canvas.width;\n            const height = this.ctx.canvas.height;\n            const savedFillStyle = this.ctx.fillStyle;\n            this.ctx.fillStyle = background || \"#ffffff\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.fillStyle = savedFillStyle;\n            if (transparency) {\n              const transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform(...(0, _display_utils.getCurrentTransform)(this.compositeCtx));\n            }\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n            if (transform) {\n              this.ctx.transform(...transform);\n              this.outputScaleX = transform[0];\n              this.outputScaleY = transform[0];\n            }\n            this.ctx.transform(...viewport.transform);\n            this.viewportScale = viewport.scale;\n            this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n          }\n          executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            let i = executionStartIdx || 0;\n            const argsArrayLen = argsArray.length;\n            if (argsArrayLen === i) {\n              return i;\n            }\n            const chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            let steps = 0;\n            const commonObjs = this.commonObjs;\n            const objs = this.objs;\n            let fnId;\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n              fnId = fnArray[i];\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                for (const depObjId of argsArray[i]) {\n                  const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n                  if (!objsPool.has(depObjId)) {\n                    objsPool.get(depObjId, continueCallback);\n                    return i;\n                  }\n                }\n              }\n              i++;\n              if (i === argsArrayLen) {\n                return i;\n              }\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n                steps = 0;\n              }\n            }\n          }\n          #restoreInitialState() {\n            while (this.stateStack.length || this.inSMaskMode) {\n              this.restore();\n            }\n            this.ctx.restore();\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n          }\n          endDrawing() {\n            this.#restoreInitialState();\n            this.cachedCanvases.clear();\n            this.cachedPatterns.clear();\n            for (const cache of this._cachedBitmapsMap.values()) {\n              for (const canvas of cache.values()) {\n                if (typeof HTMLCanvasElement !== \"undefined\" && canvas instanceof HTMLCanvasElement) {\n                  canvas.width = canvas.height = 0;\n                }\n              }\n              cache.clear();\n            }\n            this._cachedBitmapsMap.clear();\n            this.#drawFilter();\n          }\n          #drawFilter() {\n            if (this.pageColors) {\n              const hcmFilterId = this.filterFactory.addHCMFilter(this.pageColors.foreground, this.pageColors.background);\n              if (hcmFilterId !== \"none\") {\n                const savedFilter = this.ctx.filter;\n                this.ctx.filter = hcmFilterId;\n                this.ctx.drawImage(this.ctx.canvas, 0, 0);\n                this.ctx.filter = savedFilter;\n              }\n            }\n          }\n          _scaleImage(img, inverseTransform) {\n            const width = img.width;\n            const height = img.height;\n            let widthScale = Math.max(Math.hypot(inverseTransform[0], inverseTransform[1]), 1);\n            let heightScale = Math.max(Math.hypot(inverseTransform[2], inverseTransform[3]), 1);\n            let paintWidth = width,\n              paintHeight = height;\n            let tmpCanvasId = \"prescale1\";\n            let tmpCanvas, tmpCtx;\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              let newWidth = paintWidth,\n                newHeight = paintHeight;\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = paintWidth >= 16384 ? Math.floor(paintWidth / 2) - 1 || 1 : Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = paintHeight >= 16384 ? Math.floor(paintHeight / 2) - 1 || 1 : Math.ceil(paintHeight) / 2;\n                heightScale /= paintHeight / newHeight;\n              }\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(img, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              img = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n            return {\n              img,\n              paintWidth,\n              paintHeight\n            };\n          }\n          _createMaskCanvas(img) {\n            const ctx = this.ctx;\n            const {\n              width,\n              height\n            } = img;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            let cache, cacheKey, scaled, maskCanvas;\n            if ((img.bitmap || img.data) && img.count > 1) {\n              const mainKey = img.bitmap || img.data.buffer;\n              cacheKey = JSON.stringify(isPatternFill ? currentTransform : [currentTransform.slice(0, 4), fillColor]);\n              cache = this._cachedBitmapsMap.get(mainKey);\n              if (!cache) {\n                cache = new Map();\n                this._cachedBitmapsMap.set(mainKey, cache);\n              }\n              const cachedImage = cache.get(cacheKey);\n              if (cachedImage && !isPatternFill) {\n                const offsetX = Math.round(Math.min(currentTransform[0], currentTransform[2]) + currentTransform[4]);\n                const offsetY = Math.round(Math.min(currentTransform[1], currentTransform[3]) + currentTransform[5]);\n                return {\n                  canvas: cachedImage,\n                  offsetX,\n                  offsetY\n                };\n              }\n              scaled = cachedImage;\n            }\n            if (!scaled) {\n              maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              putBinaryImageMask(maskCanvas.context, img);\n            }\n            let maskToCanvas = _util.Util.transform(currentTransform, [1 / width, 0, 0, -1 / height, 0, 0]);\n            maskToCanvas = _util.Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n            const cord1 = _util.Util.applyTransform([0, 0], maskToCanvas);\n            const cord2 = _util.Util.applyTransform([width, height], maskToCanvas);\n            const rect = _util.Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n            const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n            const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n            const fillCanvas = this.cachedCanvases.getCanvas(\"fillCanvas\", drawnWidth, drawnHeight);\n            const fillCtx = fillCanvas.context;\n            const offsetX = Math.min(cord1[0], cord2[0]);\n            const offsetY = Math.min(cord1[1], cord2[1]);\n            fillCtx.translate(-offsetX, -offsetY);\n            fillCtx.transform(...maskToCanvas);\n            if (!scaled) {\n              scaled = this._scaleImage(maskCanvas.canvas, (0, _display_utils.getCurrentTransformInverse)(fillCtx));\n              scaled = scaled.img;\n              if (cache && isPatternFill) {\n                cache.set(cacheKey, scaled);\n              }\n            }\n            fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(fillCtx), img.interpolate);\n            drawImageAtIntegerCoords(fillCtx, scaled, 0, 0, scaled.width, scaled.height, 0, 0, width, height);\n            fillCtx.globalCompositeOperation = \"source-in\";\n            const inverse = _util.Util.transform((0, _display_utils.getCurrentTransformInverse)(fillCtx), [1, 0, 0, 1, -offsetX, -offsetY]);\n            fillCtx.fillStyle = isPatternFill ? fillColor.getPattern(ctx, this, inverse, _pattern_helper.PathType.FILL) : fillColor;\n            fillCtx.fillRect(0, 0, width, height);\n            if (cache && !isPatternFill) {\n              this.cachedCanvases.delete(\"fillCanvas\");\n              cache.set(cacheKey, fillCanvas.canvas);\n            }\n            return {\n              canvas: fillCanvas.canvas,\n              offsetX: Math.round(offsetX),\n              offsetY: Math.round(offsetY)\n            };\n          }\n          setLineWidth(width) {\n            if (width !== this.current.lineWidth) {\n              this._cachedScaleForStroking[0] = -1;\n            }\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          }\n          setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          }\n          setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          }\n          setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          }\n          setDash(dashArray, dashPhase) {\n            const ctx = this.ctx;\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          }\n          setRenderingIntent(intent) {}\n          setFlatness(flatness) {}\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n                case \"CA\":\n                  this.current.strokeAlpha = value;\n                  break;\n                case \"ca\":\n                  this.current.fillAlpha = value;\n                  this.ctx.globalAlpha = value;\n                  break;\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n                case \"SMask\":\n                  this.current.activeSMask = value ? this.tempSMask : null;\n                  this.tempSMask = null;\n                  this.checkSMaskState();\n                  break;\n                case \"TR\":\n                  this.ctx.filter = this.current.transferMaps = this.filterFactory.addFilter(value);\n                  break;\n              }\n            }\n          }\n          get inSMaskMode() {\n            return !!this.suspendedCtx;\n          }\n          checkSMaskState() {\n            const inSMaskMode = this.inSMaskMode;\n            if (this.current.activeSMask && !inSMaskMode) {\n              this.beginSMaskMode();\n            } else if (!this.current.activeSMask && inSMaskMode) {\n              this.endSMaskMode();\n            }\n          }\n          beginSMaskMode() {\n            if (this.inSMaskMode) {\n              throw new Error(\"beginSMaskMode called while already in smask mode\");\n            }\n            const drawnWidth = this.ctx.canvas.width;\n            const drawnHeight = this.ctx.canvas.height;\n            const cacheId = \"smaskGroupAt\" + this.groupLevel;\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n            this.suspendedCtx = this.ctx;\n            this.ctx = scratchCanvas.context;\n            const ctx = this.ctx;\n            ctx.setTransform(...(0, _display_utils.getCurrentTransform)(this.suspendedCtx));\n            copyCtxState(this.suspendedCtx, ctx);\n            mirrorContextOperations(ctx, this.suspendedCtx);\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n          }\n          endSMaskMode() {\n            if (!this.inSMaskMode) {\n              throw new Error(\"endSMaskMode called while not in smask mode\");\n            }\n            this.ctx._removeMirroring();\n            copyCtxState(this.ctx, this.suspendedCtx);\n            this.ctx = this.suspendedCtx;\n            this.suspendedCtx = null;\n          }\n          compose(dirtyBox) {\n            if (!this.current.activeSMask) {\n              return;\n            }\n            if (!dirtyBox) {\n              dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n            } else {\n              dirtyBox[0] = Math.floor(dirtyBox[0]);\n              dirtyBox[1] = Math.floor(dirtyBox[1]);\n              dirtyBox[2] = Math.ceil(dirtyBox[2]);\n              dirtyBox[3] = Math.ceil(dirtyBox[3]);\n            }\n            const smask = this.current.activeSMask;\n            const suspendedCtx = this.suspendedCtx;\n            composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n            this.ctx.save();\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n            this.ctx.restore();\n          }\n          save() {\n            if (this.inSMaskMode) {\n              copyCtxState(this.ctx, this.suspendedCtx);\n              this.suspendedCtx.save();\n            } else {\n              this.ctx.save();\n            }\n            const old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n          }\n          restore() {\n            if (this.stateStack.length === 0 && this.inSMaskMode) {\n              this.endSMaskMode();\n            }\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n              if (this.inSMaskMode) {\n                this.suspendedCtx.restore();\n                copyCtxState(this.suspendedCtx, this.ctx);\n              } else {\n                this.ctx.restore();\n              }\n              this.checkSMaskState();\n              this.pendingClip = null;\n              this._cachedScaleForStroking[0] = -1;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          }\n          transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedScaleForStroking[0] = -1;\n            this._cachedGetSinglePixelWidth = null;\n          }\n          constructPath(ops, args, minMax) {\n            const ctx = this.ctx;\n            const current = this.current;\n            let x = current.x,\n              y = current.y;\n            let startX, startY;\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            const isScalingMatrix = currentTransform[0] === 0 && currentTransform[3] === 0 || currentTransform[1] === 0 && currentTransform[2] === 0;\n            const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n            for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  ctx.moveTo(x, y);\n                  if (width === 0 || height === 0) {\n                    ctx.lineTo(xw, yh);\n                  } else {\n                    ctx.lineTo(xw, y);\n                    ctx.lineTo(xw, yh);\n                    ctx.lineTo(x, yh);\n                  }\n                  if (!isScalingMatrix) {\n                    current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n                  }\n                  ctx.closePath();\n                  break;\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n                  break;\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  if (!isScalingMatrix) {\n                    current.updatePathMinMax(currentTransform, x, y);\n                  }\n                  break;\n                case _util.OPS.curveTo:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], args[j + 2], args[j + 3], x, y, minMaxForBezier);\n                  j += 6;\n                  break;\n                case _util.OPS.curveTo2:\n                  startX = x;\n                  startY = y;\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, x, y, args[j], args[j + 1], args[j + 2], args[j + 3], minMaxForBezier);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n                case _util.OPS.curveTo3:\n                  startX = x;\n                  startY = y;\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  current.updateCurvePathMinMax(currentTransform, startX, startY, args[j], args[j + 1], x, y, x, y, minMaxForBezier);\n                  j += 4;\n                  break;\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n            if (isScalingMatrix) {\n              current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n            }\n            current.setCurrentPoint(x, y);\n          }\n          closePath() {\n            this.ctx.closePath();\n          }\n          stroke() {\n            let consumePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            const ctx = this.ctx;\n            const strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n            if (this.contentVisible) {\n              if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n                ctx.save();\n                ctx.strokeStyle = strokeColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.STROKE);\n                this.rescaleAndStroke(false);\n                ctx.restore();\n              } else {\n                this.rescaleAndStroke(true);\n              }\n            }\n            if (consumePath) {\n              this.consumePath(this.current.getClippedPathBoundingBox());\n            }\n            ctx.globalAlpha = this.current.fillAlpha;\n          }\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n          fill() {\n            let consumePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            let needRestore = false;\n            if (isPatternFill) {\n              ctx.save();\n              ctx.fillStyle = fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n              needRestore = true;\n            }\n            const intersect = this.current.getClippedPathBoundingBox();\n            if (this.contentVisible && intersect !== null) {\n              if (this.pendingEOFill) {\n                ctx.fill(\"evenodd\");\n                this.pendingEOFill = false;\n              } else {\n                ctx.fill();\n              }\n            }\n            if (needRestore) {\n              ctx.restore();\n            }\n            if (consumePath) {\n              this.consumePath(intersect);\n            }\n          }\n          eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          }\n          fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          }\n          eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          }\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n          closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          }\n          endPath() {\n            this.consumePath();\n          }\n          clip() {\n            this.pendingClip = NORMAL_CLIP;\n          }\n          eoClip() {\n            this.pendingClip = EO_CLIP;\n          }\n          beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n          endText() {\n            const paths = this.pendingTextPaths;\n            const ctx = this.ctx;\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n            ctx.save();\n            ctx.beginPath();\n            for (const path of paths) {\n              ctx.setTransform(...path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          }\n          setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          }\n          setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          }\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n          setFont(fontRefName, size) {\n            const fontObj = this.commonObjs.get(fontRefName);\n            const current = this.current;\n            if (!fontObj) {\n              throw new Error(`Can't find font for ${fontRefName}`);\n            }\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n            if (fontObj.isType3Font) {\n              return;\n            }\n            const name = fontObj.loadedName || \"sans-serif\";\n            const typeface = fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n            let bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n            let browserFontSize = size;\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n          }\n          setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          }\n          setTextRise(rise) {\n            this.current.textRise = rise;\n          }\n          moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          }\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n          setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.hypot(a, b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          }\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n          paintChar(character, x, y, patternTransform) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const textRenderingMode = current.textRenderingMode;\n            const fontSize = current.fontSize / current.fontSizeScale;\n            const fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            const isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            const patternFill = current.patternFill && !font.missingFile;\n            let addToPath;\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n              if (patternTransform) {\n                ctx.setTransform(...patternTransform);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n            if (isAddToPathSet) {\n              const paths = this.pendingTextPaths ||= [];\n              paths.push({\n                transform: (0, _display_utils.getCurrentTransform)(ctx),\n                x,\n                y,\n                fontSize,\n                addToPath\n              });\n            }\n          }\n          get isFontSubpixelAAEnabled() {\n            const {\n              context: ctx\n            } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            const data = ctx.getImageData(0, 0, 10, 10).data;\n            let enabled = false;\n            for (let i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          }\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n            const fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return undefined;\n            }\n            const ctx = this.ctx;\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const glyphsLength = glyphs.length;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            const simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            ctx.transform(...current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n            let patternTransform;\n            if (current.patternFill) {\n              ctx.save();\n              const pattern = current.fillColor.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL);\n              patternTransform = (0, _display_utils.getCurrentTransform)(ctx);\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n            let lineWidth = current.lineWidth;\n            const scale = current.textMatrixScale;\n            if (scale === 0 || lineWidth === 0) {\n              const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                lineWidth = this.getSinglePixelWidth();\n              }\n            } else {\n              lineWidth /= scale;\n            }\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n            ctx.lineWidth = lineWidth;\n            if (font.isInvalidPDFjsFont) {\n              const chars = [];\n              let width = 0;\n              for (const glyph of glyphs) {\n                chars.push(glyph.unicode);\n                width += glyph.width;\n              }\n              ctx.fillText(chars.join(\"\"), 0, 0);\n              current.x += width * widthAdvanceScale * textHScale;\n              ctx.restore();\n              this.compose();\n              return undefined;\n            }\n            let x = 0,\n              i;\n            for (i = 0; i < glyphsLength; ++i) {\n              const glyph = glyphs[i];\n              if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n              let restoreNeeded = false;\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              const accent = glyph.accent;\n              let scaledX, scaledY;\n              let width = glyph.width;\n              if (vertical) {\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                const vx = -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n              if (font.remeasure && width > 0) {\n                const measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  const characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n              if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n                  if (accent) {\n                    const scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                    const scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n              const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n              x += charWidth;\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            ctx.restore();\n            this.compose();\n            return undefined;\n          }\n          showType3Text(glyphs) {\n            const ctx = this.ctx;\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n            const fontDirection = current.fontDirection;\n            const spacingDir = font.vertical ? 1 : -1;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const textHScale = current.textHScale * fontDirection;\n            const fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            const glyphsLength = glyphs.length;\n            const isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            let i, glyph, width, spacingLength;\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n            this._cachedScaleForStroking[0] = -1;\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform(...current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n              if (typeof glyph === \"number\") {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const operatorList = font.charProcOperatorList[glyph.operatorListId];\n              if (!operatorList) {\n                (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n                continue;\n              }\n              if (this.contentVisible) {\n                this.processingType3 = glyph;\n                this.save();\n                ctx.scale(fontSize, fontSize);\n                ctx.transform(...fontMatrix);\n                this.executeOperatorList(operatorList);\n                this.restore();\n              }\n              const transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n            ctx.restore();\n            this.processingType3 = null;\n          }\n          setCharWidth(xWidth, yWidth) {}\n          setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.ctx.clip();\n            this.endPath();\n          }\n          getColorN_Pattern(IR) {\n            let pattern;\n            if (IR[0] === \"TilingPattern\") {\n              const color = IR[1];\n              const baseTransform = this.baseTransform || (0, _display_utils.getCurrentTransform)(this.ctx);\n              const canvasGraphicsFactory = {\n                createCanvasGraphics: ctx => {\n                  return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.filterFactory, {\n                    optionalContentConfig: this.optionalContentConfig,\n                    markedContentStack: this.markedContentStack\n                  });\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = this._getPattern(IR[1], IR[2]);\n            }\n            return pattern;\n          }\n          setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          }\n          setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          }\n          setStrokeRGBColor(r, g, b) {\n            const color = _util.Util.makeHexColor(r, g, b);\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          }\n          setFillRGBColor(r, g, b) {\n            const color = _util.Util.makeHexColor(r, g, b);\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          }\n          _getPattern(objId) {\n            let matrix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            let pattern;\n            if (this.cachedPatterns.has(objId)) {\n              pattern = this.cachedPatterns.get(objId);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPattern)(this.getObject(objId));\n              this.cachedPatterns.set(objId, pattern);\n            }\n            if (matrix) {\n              pattern.matrix = matrix;\n            }\n            return pattern;\n          }\n          shadingFill(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const ctx = this.ctx;\n            this.save();\n            const pattern = this._getPattern(objId);\n            ctx.fillStyle = pattern.getPattern(ctx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.SHADING);\n            const inv = (0, _display_utils.getCurrentTransformInverse)(ctx);\n            if (inv) {\n              const {\n                width,\n                height\n              } = ctx.canvas;\n              const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n            this.compose(this.current.getClippedPathBoundingBox());\n            this.restore();\n          }\n          beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          }\n          beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          }\n          paintFormXObjectBegin(matrix, bbox) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(...matrix);\n            }\n            this.baseTransform = (0, _display_utils.getCurrentTransform)(this.ctx);\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(this.ctx), bbox);\n              this.clip();\n              this.endPath();\n            }\n          }\n          paintFormXObjectEnd() {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          }\n          beginGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.save();\n            if (this.inSMaskMode) {\n              this.endSMaskMode();\n              this.current.activeSMask = null;\n            }\n            const currentCtx = this.ctx;\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n            const currentTransform = (0, _display_utils.getCurrentTransform)(currentCtx);\n            if (group.matrix) {\n              currentCtx.transform(...group.matrix);\n            }\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n            let bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, (0, _display_utils.getCurrentTransform)(currentCtx));\n            const canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            const offsetX = Math.floor(bounds[0]);\n            const offsetY = Math.floor(bounds[1]);\n            let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            let scaleX = 1,\n              scaleY = 1;\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n            this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n            let cacheId = \"groupAt\" + this.groupLevel;\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n            const scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight);\n            const groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform(...currentTransform);\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX,\n                offsetY,\n                scaleX,\n                scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n              currentCtx.save();\n            }\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          }\n          endGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.groupLevel--;\n            const groupCtx = this.ctx;\n            const ctx = this.groupStack.pop();\n            this.ctx = ctx;\n            this.ctx.imageSmoothingEnabled = false;\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n              this.restore();\n            } else {\n              this.ctx.restore();\n              const currentMtx = (0, _display_utils.getCurrentTransform)(this.ctx);\n              this.restore();\n              this.ctx.save();\n              this.ctx.setTransform(...currentMtx);\n              const dirtyBox = _util.Util.getAxialAlignedBoundingBox([0, 0, groupCtx.canvas.width, groupCtx.canvas.height], currentMtx);\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n              this.ctx.restore();\n              this.compose(dirtyBox);\n            }\n          }\n          beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n            this.#restoreInitialState();\n            resetCtxToDefault(this.ctx);\n            this.ctx.save();\n            this.save();\n            if (this.baseTransform) {\n              this.ctx.setTransform(...this.baseTransform);\n            }\n            if (Array.isArray(rect) && rect.length === 4) {\n              const width = rect[2] - rect[0];\n              const height = rect[3] - rect[1];\n              if (hasOwnCanvas && this.annotationCanvasMap) {\n                transform = transform.slice();\n                transform[4] -= rect[0];\n                transform[5] -= rect[1];\n                rect = rect.slice();\n                rect[0] = rect[1] = 0;\n                rect[2] = width;\n                rect[3] = height;\n                const [scaleX, scaleY] = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(this.ctx));\n                const {\n                  viewportScale\n                } = this;\n                const canvasWidth = Math.ceil(width * this.outputScaleX * viewportScale);\n                const canvasHeight = Math.ceil(height * this.outputScaleY * viewportScale);\n                this.annotationCanvas = this.canvasFactory.create(canvasWidth, canvasHeight);\n                const {\n                  canvas,\n                  context\n                } = this.annotationCanvas;\n                this.annotationCanvasMap.set(id, canvas);\n                this.annotationCanvas.savedCtx = this.ctx;\n                this.ctx = context;\n                this.ctx.save();\n                this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n                resetCtxToDefault(this.ctx);\n              } else {\n                resetCtxToDefault(this.ctx);\n                this.ctx.rect(rect[0], rect[1], width, height);\n                this.ctx.clip();\n                this.endPath();\n              }\n            }\n            this.current = new CanvasExtraState(this.ctx.canvas.width, this.ctx.canvas.height);\n            this.transform(...transform);\n            this.transform(...matrix);\n          }\n          endAnnotation() {\n            if (this.annotationCanvas) {\n              this.ctx.restore();\n              this.#drawFilter();\n              this.ctx = this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas.savedCtx;\n              delete this.annotationCanvas;\n            }\n          }\n          paintImageMaskXObject(img) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const count = img.count;\n            img = this.getObject(img.data, img);\n            img.count = count;\n            const ctx = this.ctx;\n            const glyph = this.processingType3;\n            if (glyph) {\n              if (glyph.compiled === undefined) {\n                glyph.compiled = compileType3Glyph(img);\n              }\n              if (glyph.compiled) {\n                glyph.compiled(ctx);\n                return;\n              }\n            }\n            const mask = this._createMaskCanvas(img);\n            const maskCanvas = mask.canvas;\n            ctx.save();\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n            ctx.restore();\n            this.compose();\n          }\n          paintImageMaskXObjectRepeat(img, scaleX) {\n            let skewX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            let skewY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            let scaleY = arguments.length > 4 ? arguments[4] : undefined;\n            let positions = arguments.length > 5 ? arguments[5] : undefined;\n            if (!this.contentVisible) {\n              return;\n            }\n            img = this.getObject(img.data, img);\n            const ctx = this.ctx;\n            ctx.save();\n            const currentTransform = (0, _display_utils.getCurrentTransform)(ctx);\n            ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n            const mask = this._createMaskCanvas(img);\n            ctx.setTransform(1, 0, 0, 1, mask.offsetX - currentTransform[4], mask.offsetY - currentTransform[5]);\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              const trans = _util.Util.transform(currentTransform, [scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]]);\n              const [x, y] = _util.Util.applyTransform([0, 0], trans);\n              ctx.drawImage(mask.canvas, x, y);\n            }\n            ctx.restore();\n            this.compose();\n          }\n          paintImageMaskXObjectGroup(images) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const ctx = this.ctx;\n            const fillColor = this.current.fillColor;\n            const isPatternFill = this.current.patternFill;\n            for (const image of images) {\n              const {\n                data,\n                width,\n                height,\n                transform\n              } = image;\n              const maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              const maskCtx = maskCanvas.context;\n              maskCtx.save();\n              const img = this.getObject(data, image);\n              putBinaryImageMask(maskCtx, img);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this, (0, _display_utils.getCurrentTransformInverse)(ctx), _pattern_helper.PathType.FILL) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform(...transform);\n              ctx.scale(1, -1);\n              drawImageAtIntegerCoords(ctx, maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n            this.compose();\n          }\n          paintImageXObject(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const imgData = this.getObject(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          }\n          paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const imgData = this.getObject(objId);\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n            const width = imgData.width;\n            const height = imgData.height;\n            const map = [];\n            for (let i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n            this.paintInlineImageXObjectGroup(imgData, map);\n          }\n          applyTransferMapsToCanvas(ctx) {\n            if (this.current.transferMaps !== \"none\") {\n              ctx.filter = this.current.transferMaps;\n              ctx.drawImage(ctx.canvas, 0, 0);\n              ctx.filter = \"none\";\n            }\n            return ctx.canvas;\n          }\n          applyTransferMapsToBitmap(imgData) {\n            if (this.current.transferMaps === \"none\") {\n              return imgData.bitmap;\n            }\n            const {\n              bitmap,\n              width,\n              height\n            } = imgData;\n            const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n            const tmpCtx = tmpCanvas.context;\n            tmpCtx.filter = this.current.transferMaps;\n            tmpCtx.drawImage(bitmap, 0, 0);\n            tmpCtx.filter = \"none\";\n            return tmpCanvas.canvas;\n          }\n          paintInlineImageXObject(imgData) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const width = imgData.width;\n            const height = imgData.height;\n            const ctx = this.ctx;\n            this.save();\n            if (!_util.isNodeJS) {\n              const {\n                filter\n              } = ctx;\n              if (filter !== \"none\" && filter !== \"\") {\n                ctx.filter = \"none\";\n              }\n            }\n            ctx.scale(1 / width, -1 / height);\n            let imgToPaint;\n            if (imgData.bitmap) {\n              imgToPaint = this.applyTransferMapsToBitmap(imgData);\n            } else if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              const tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n            }\n            const scaled = this._scaleImage(imgToPaint, (0, _display_utils.getCurrentTransformInverse)(ctx));\n            ctx.imageSmoothingEnabled = getImageSmoothingEnabled((0, _display_utils.getCurrentTransform)(ctx), imgData.interpolate);\n            drawImageAtIntegerCoords(ctx, scaled.img, 0, 0, scaled.paintWidth, scaled.paintHeight, 0, -height, width, height);\n            this.compose();\n            this.restore();\n          }\n          paintInlineImageXObjectGroup(imgData, map) {\n            if (!this.contentVisible) {\n              return;\n            }\n            const ctx = this.ctx;\n            let imgToPaint;\n            if (imgData.bitmap) {\n              imgToPaint = imgData.bitmap;\n            } else {\n              const w = imgData.width;\n              const h = imgData.height;\n              const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n              const tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData);\n              imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n            }\n            for (const entry of map) {\n              ctx.save();\n              ctx.transform(...entry.transform);\n              ctx.scale(1, -1);\n              drawImageAtIntegerCoords(ctx, imgToPaint, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n              ctx.restore();\n            }\n            this.compose();\n          }\n          paintSolidColorImageMask() {\n            if (!this.contentVisible) {\n              return;\n            }\n            this.ctx.fillRect(0, 0, 1, 1);\n            this.compose();\n          }\n          markPoint(tag) {}\n          markPointProps(tag, properties) {}\n          beginMarkedContent(tag) {\n            this.markedContentStack.push({\n              visible: true\n            });\n          }\n          beginMarkedContentProps(tag, properties) {\n            if (tag === \"OC\") {\n              this.markedContentStack.push({\n                visible: this.optionalContentConfig.isVisible(properties)\n              });\n            } else {\n              this.markedContentStack.push({\n                visible: true\n              });\n            }\n            this.contentVisible = this.isContentVisible();\n          }\n          endMarkedContent() {\n            this.markedContentStack.pop();\n            this.contentVisible = this.isContentVisible();\n          }\n          beginCompat() {}\n          endCompat() {}\n          consumePath(clipBox) {\n            const isEmpty = this.current.isEmptyClip();\n            if (this.pendingClip) {\n              this.current.updateClipFromPath();\n            }\n            if (!this.pendingClip) {\n              this.compose(clipBox);\n            }\n            const ctx = this.ctx;\n            if (this.pendingClip) {\n              if (!isEmpty) {\n                if (this.pendingClip === EO_CLIP) {\n                  ctx.clip(\"evenodd\");\n                } else {\n                  ctx.clip();\n                }\n              }\n              this.pendingClip = null;\n            }\n            this.current.startNewPathAndClipBox(this.current.clipBox);\n            ctx.beginPath();\n          }\n          getSinglePixelWidth() {\n            if (!this._cachedGetSinglePixelWidth) {\n              const m = (0, _display_utils.getCurrentTransform)(this.ctx);\n              if (m[1] === 0 && m[2] === 0) {\n                this._cachedGetSinglePixelWidth = 1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n              } else {\n                const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n                const normX = Math.hypot(m[0], m[2]);\n                const normY = Math.hypot(m[1], m[3]);\n                this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n              }\n            }\n            return this._cachedGetSinglePixelWidth;\n          }\n          getScaleForStroking() {\n            if (this._cachedScaleForStroking[0] === -1) {\n              const {\n                lineWidth\n              } = this.current;\n              const {\n                a,\n                b,\n                c,\n                d\n              } = this.ctx.getTransform();\n              let scaleX, scaleY;\n              if (b === 0 && c === 0) {\n                const normX = Math.abs(a);\n                const normY = Math.abs(d);\n                if (normX === normY) {\n                  if (lineWidth === 0) {\n                    scaleX = scaleY = 1 / normX;\n                  } else {\n                    const scaledLineWidth = normX * lineWidth;\n                    scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n                  }\n                } else if (lineWidth === 0) {\n                  scaleX = 1 / normX;\n                  scaleY = 1 / normY;\n                } else {\n                  const scaledXLineWidth = normX * lineWidth;\n                  const scaledYLineWidth = normY * lineWidth;\n                  scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n                  scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n                }\n              } else {\n                const absDet = Math.abs(a * d - b * c);\n                const normX = Math.hypot(a, b);\n                const normY = Math.hypot(c, d);\n                if (lineWidth === 0) {\n                  scaleX = normY / absDet;\n                  scaleY = normX / absDet;\n                } else {\n                  const baseArea = lineWidth * absDet;\n                  scaleX = normY > baseArea ? normY / baseArea : 1;\n                  scaleY = normX > baseArea ? normX / baseArea : 1;\n                }\n              }\n              this._cachedScaleForStroking[0] = scaleX;\n              this._cachedScaleForStroking[1] = scaleY;\n            }\n            return this._cachedScaleForStroking;\n          }\n          rescaleAndStroke(saveRestore) {\n            const {\n              ctx\n            } = this;\n            const {\n              lineWidth\n            } = this.current;\n            const [scaleX, scaleY] = this.getScaleForStroking();\n            ctx.lineWidth = lineWidth || 1;\n            if (scaleX === 1 && scaleY === 1) {\n              ctx.stroke();\n              return;\n            }\n            const dashes = ctx.getLineDash();\n            if (saveRestore) {\n              ctx.save();\n            }\n            ctx.scale(scaleX, scaleY);\n            if (dashes.length > 0) {\n              const scale = Math.max(scaleX, scaleY);\n              ctx.setLineDash(dashes.map(x => x / scale));\n              ctx.lineDashOffset /= scale;\n            }\n            ctx.stroke();\n            if (saveRestore) {\n              ctx.restore();\n            }\n          }\n          isContentVisible() {\n            for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n              if (!this.markedContentStack[i].visible) {\n                return false;\n              }\n            }\n            return true;\n          }\n        }\n        exports.CanvasGraphics = CanvasGraphics;\n        for (const op in _util.OPS) {\n          if (CanvasGraphics.prototype[op] !== undefined) {\n            CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n          }\n        }\n\n        /***/\n      }, /* 12 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.TilingPattern = exports.PathType = void 0;\n        exports.getShadingPattern = getShadingPattern;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        const PathType = {\n          FILL: \"Fill\",\n          STROKE: \"Stroke\",\n          SHADING: \"Shading\"\n        };\n        exports.PathType = PathType;\n        function applyBoundingBox(ctx, bbox) {\n          if (!bbox) {\n            return;\n          }\n          const width = bbox[2] - bbox[0];\n          const height = bbox[3] - bbox[1];\n          const region = new Path2D();\n          region.rect(bbox[0], bbox[1], width, height);\n          ctx.clip(region);\n        }\n        class BaseShadingPattern {\n          constructor() {\n            if (this.constructor === BaseShadingPattern) {\n              (0, _util.unreachable)(\"Cannot initialize BaseShadingPattern.\");\n            }\n          }\n          getPattern() {\n            (0, _util.unreachable)(\"Abstract method `getPattern` called.\");\n          }\n        }\n        class RadialAxialShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._type = IR[1];\n            this._bbox = IR[2];\n            this._colorStops = IR[3];\n            this._p0 = IR[4];\n            this._p1 = IR[5];\n            this._r0 = IR[6];\n            this._r1 = IR[7];\n            this.matrix = null;\n          }\n          _createGradient(ctx) {\n            let grad;\n            if (this._type === \"axial\") {\n              grad = ctx.createLinearGradient(this._p0[0], this._p0[1], this._p1[0], this._p1[1]);\n            } else if (this._type === \"radial\") {\n              grad = ctx.createRadialGradient(this._p0[0], this._p0[1], this._r0, this._p1[0], this._p1[1], this._r1);\n            }\n            for (const colorStop of this._colorStops) {\n              grad.addColorStop(colorStop[0], colorStop[1]);\n            }\n            return grad;\n          }\n          getPattern(ctx, owner, inverse, pathType) {\n            let pattern;\n            if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n              const ownerBBox = owner.current.getClippedPathBoundingBox(pathType, (0, _display_utils.getCurrentTransform)(ctx)) || [0, 0, 0, 0];\n              const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n              const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n              const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", width, height, true);\n              const tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.beginPath();\n              tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n              tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n              inverse = _util.Util.transform(inverse, [1, 0, 0, 1, ownerBBox[0], ownerBBox[1]]);\n              tmpCtx.transform(...owner.baseTransform);\n              if (this.matrix) {\n                tmpCtx.transform(...this.matrix);\n              }\n              applyBoundingBox(tmpCtx, this._bbox);\n              tmpCtx.fillStyle = this._createGradient(tmpCtx);\n              tmpCtx.fill();\n              pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n              const domMatrix = new DOMMatrix(inverse);\n              pattern.setTransform(domMatrix);\n            } else {\n              applyBoundingBox(ctx, this._bbox);\n              pattern = this._createGradient(ctx);\n            }\n            return pattern;\n          }\n        }\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          const coords = context.coords,\n            colors = context.colors;\n          const bytes = data.data,\n            rowSize = data.width * 4;\n          let tmp;\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n          const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n          if (y1 >= y3) {\n            return;\n          }\n          const c1r = colors[c1],\n            c1g = colors[c1 + 1],\n            c1b = colors[c1 + 2];\n          const c2r = colors[c2],\n            c2g = colors[c2 + 1],\n            c2b = colors[c2 + 2];\n          const c3r = colors[c3],\n            c3g = colors[c3 + 1],\n            c3b = colors[c3 + 2];\n          const minY = Math.round(y1),\n            maxY = Math.round(y3);\n          let xa, car, cag, cab;\n          let xb, cbr, cbg, cbb;\n          for (let y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n              xa = x1 - (x1 - x2) * k;\n              car = c1r - (c1r - c2r) * k;\n              cag = c1g - (c1g - c2g) * k;\n              cab = c1b - (c1b - c2b) * k;\n            } else {\n              let k;\n              if (y > y3) {\n                k = 1;\n              } else if (y2 === y3) {\n                k = 0;\n              } else {\n                k = (y2 - y) / (y2 - y3);\n              }\n              xa = x2 - (x2 - x3) * k;\n              car = c2r - (c2r - c3r) * k;\n              cag = c2g - (c2g - c3g) * k;\n              cab = c2b - (c2b - c3b) * k;\n            }\n            let k;\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            const x1_ = Math.round(Math.min(xa, xb));\n            const x2_ = Math.round(Math.max(xa, xb));\n            let j = rowSize * y + x1_ * 4;\n            for (let x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n        function drawFigure(data, figure, context) {\n          const ps = figure.coords;\n          const cs = figure.colors;\n          let i, ii;\n          switch (figure.type) {\n            case \"lattice\":\n              const verticesPerRow = figure.verticesPerRow;\n              const rows = Math.floor(ps.length / verticesPerRow) - 1;\n              const cols = verticesPerRow - 1;\n              for (i = 0; i < rows; i++) {\n                let q = i * verticesPerRow;\n                for (let j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n              break;\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n              break;\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n        class MeshShadingPattern extends BaseShadingPattern {\n          constructor(IR) {\n            super();\n            this._coords = IR[2];\n            this._colors = IR[3];\n            this._figures = IR[4];\n            this._bounds = IR[5];\n            this._bbox = IR[7];\n            this._background = IR[8];\n            this.matrix = null;\n          }\n          _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n            const EXPECTED_SCALE = 1.1;\n            const MAX_PATTERN_SIZE = 3000;\n            const BORDER_SIZE = 2;\n            const offsetX = Math.floor(this._bounds[0]);\n            const offsetY = Math.floor(this._bounds[1]);\n            const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n            const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n            const width = Math.min(Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const height = Math.min(Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n            const scaleX = boundsWidth / width;\n            const scaleY = boundsHeight / height;\n            const context = {\n              coords: this._coords,\n              colors: this._colors,\n              offsetX: -offsetX,\n              offsetY: -offsetY,\n              scaleX: 1 / scaleX,\n              scaleY: 1 / scaleY\n            };\n            const paddedWidth = width + BORDER_SIZE * 2;\n            const paddedHeight = height + BORDER_SIZE * 2;\n            const tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            const tmpCtx = tmpCanvas.context;\n            const data = tmpCtx.createImageData(width, height);\n            if (backgroundColor) {\n              const bytes = data.data;\n              for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n            for (const figure of this._figures) {\n              drawFigure(data, figure, context);\n            }\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            const canvas = tmpCanvas.canvas;\n            return {\n              canvas,\n              offsetX: offsetX - BORDER_SIZE * scaleX,\n              offsetY: offsetY - BORDER_SIZE * scaleY,\n              scaleX,\n              scaleY\n            };\n          }\n          getPattern(ctx, owner, inverse, pathType) {\n            applyBoundingBox(ctx, this._bbox);\n            let scale;\n            if (pathType === PathType.SHADING) {\n              scale = _util.Util.singularValueDecompose2dScale((0, _display_utils.getCurrentTransform)(ctx));\n            } else {\n              scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n              if (this.matrix) {\n                const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n                scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n              }\n            }\n            const temporaryPatternCanvas = this._createMeshCanvas(scale, pathType === PathType.SHADING ? null : this._background, owner.cachedCanvases);\n            if (pathType !== PathType.SHADING) {\n              ctx.setTransform(...owner.baseTransform);\n              if (this.matrix) {\n                ctx.transform(...this.matrix);\n              }\n            }\n            ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n            return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n          }\n        }\n        class DummyShadingPattern extends BaseShadingPattern {\n          getPattern() {\n            return \"hotpink\";\n          }\n        }\n        function getShadingPattern(IR) {\n          switch (IR[0]) {\n            case \"RadialAxial\":\n              return new RadialAxialShadingPattern(IR);\n            case \"Mesh\":\n              return new MeshShadingPattern(IR);\n            case \"Dummy\":\n              return new DummyShadingPattern();\n          }\n          throw new Error(`Unknown IR type: ${IR[0]}`);\n        }\n        const PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n        class TilingPattern {\n          static MAX_PATTERN_SIZE = 3000;\n          constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n            this.operatorList = IR[2];\n            this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n            this.bbox = IR[4];\n            this.xstep = IR[5];\n            this.ystep = IR[6];\n            this.paintType = IR[7];\n            this.tilingType = IR[8];\n            this.color = color;\n            this.ctx = ctx;\n            this.canvasGraphicsFactory = canvasGraphicsFactory;\n            this.baseTransform = baseTransform;\n          }\n          createPatternCanvas(owner) {\n            const operatorList = this.operatorList;\n            const bbox = this.bbox;\n            const xstep = this.xstep;\n            const ystep = this.ystep;\n            const paintType = this.paintType;\n            const tilingType = this.tilingType;\n            const color = this.color;\n            const canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            const x0 = bbox[0],\n              y0 = bbox[1],\n              x1 = bbox[2],\n              y1 = bbox[3];\n            const matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n            const curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n            const combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            const dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            const dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            const tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            const tmpCtx = tmpCanvas.context;\n            const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            let adjustedX0 = x0;\n            let adjustedY0 = y0;\n            let adjustedX1 = x1;\n            let adjustedY1 = y1;\n            if (x0 < 0) {\n              adjustedX0 = 0;\n              adjustedX1 += Math.abs(x0);\n            }\n            if (y0 < 0) {\n              adjustedY0 = 0;\n              adjustedY1 += Math.abs(y0);\n            }\n            tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            tmpCtx.save();\n            this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n            graphics.baseTransform = (0, _display_utils.getCurrentTransform)(graphics.ctx);\n            graphics.executeOperatorList(operatorList);\n            graphics.endDrawing();\n            return {\n              canvas: tmpCanvas.canvas,\n              scaleX: dimx.scale,\n              scaleY: dimy.scale,\n              offsetX: adjustedX0,\n              offsetY: adjustedY0\n            };\n          }\n          getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n            let size = Math.ceil(step * scale);\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n            return {\n              scale,\n              size\n            };\n          }\n          clipBbox(graphics, x0, y0, x1, y1) {\n            const bboxWidth = x1 - x0;\n            const bboxHeight = y1 - y0;\n            graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n            graphics.current.updateRectMinMax((0, _display_utils.getCurrentTransform)(graphics.ctx), [x0, y0, x1, y1]);\n            graphics.clip();\n            graphics.endPath();\n          }\n          setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            const context = graphics.ctx,\n              current = graphics.current;\n            switch (paintType) {\n              case PaintType.COLORED:\n                const ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n              case PaintType.UNCOLORED:\n                const cssColor = _util.Util.makeHexColor(color[0], color[1], color[2]);\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n              default:\n                throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n            }\n          }\n          getPattern(ctx, owner, inverse, pathType) {\n            let matrix = inverse;\n            if (pathType !== PathType.SHADING) {\n              matrix = _util.Util.transform(matrix, owner.baseTransform);\n              if (this.matrix) {\n                matrix = _util.Util.transform(matrix, this.matrix);\n              }\n            }\n            const temporaryPatternCanvas = this.createPatternCanvas(owner);\n            let domMatrix = new DOMMatrix(matrix);\n            domMatrix = domMatrix.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n            domMatrix = domMatrix.scale(1 / temporaryPatternCanvas.scaleX, 1 / temporaryPatternCanvas.scaleY);\n            const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n            pattern.setTransform(domMatrix);\n            return pattern;\n          }\n        }\n        exports.TilingPattern = TilingPattern;\n\n        /***/\n      }, /* 13 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.convertBlackAndWhiteToRGBA = convertBlackAndWhiteToRGBA;\n        exports.convertToRGBA = convertToRGBA;\n        exports.grayToRGBA = grayToRGBA;\n        var _util = __w_pdfjs_require__(1);\n        function convertToRGBA(params) {\n          switch (params.kind) {\n            case _util.ImageKind.GRAYSCALE_1BPP:\n              return convertBlackAndWhiteToRGBA(params);\n            case _util.ImageKind.RGB_24BPP:\n              return convertRGBToRGBA(params);\n          }\n          return null;\n        }\n        function convertBlackAndWhiteToRGBA(_ref32) {\n          let {\n            src,\n            srcPos = 0,\n            dest,\n            width,\n            height,\n            nonBlackColor = 0xffffffff,\n            inverseDecode = false\n          } = _ref32;\n          const black = _util.FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n          const [zeroMapping, oneMapping] = inverseDecode ? [nonBlackColor, black] : [black, nonBlackColor];\n          const widthInSource = width >> 3;\n          const widthRemainder = width & 7;\n          const srcLength = src.length;\n          dest = new Uint32Array(dest.buffer);\n          let destPos = 0;\n          for (let i = 0; i < height; i++) {\n            for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n              const elem = srcPos < srcLength ? src[srcPos] : 255;\n              dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n              dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n            }\n            if (widthRemainder === 0) {\n              continue;\n            }\n            const elem = srcPos < srcLength ? src[srcPos++] : 255;\n            for (let j = 0; j < widthRemainder; j++) {\n              dest[destPos++] = elem & 1 << 7 - j ? oneMapping : zeroMapping;\n            }\n          }\n          return {\n            srcPos,\n            destPos\n          };\n        }\n        function convertRGBToRGBA(_ref33) {\n          let {\n            src,\n            srcPos = 0,\n            dest,\n            destPos = 0,\n            width,\n            height\n          } = _ref33;\n          let i = 0;\n          const len32 = src.length >> 2;\n          const src32 = new Uint32Array(src.buffer, srcPos, len32);\n          if (_util.FeatureTest.isLittleEndian) {\n            for (; i < len32 - 2; i += 3, destPos += 4) {\n              const s1 = src32[i];\n              const s2 = src32[i + 1];\n              const s3 = src32[i + 2];\n              dest[destPos] = s1 | 0xff000000;\n              dest[destPos + 1] = s1 >>> 24 | s2 << 8 | 0xff000000;\n              dest[destPos + 2] = s2 >>> 16 | s3 << 16 | 0xff000000;\n              dest[destPos + 3] = s3 >>> 8 | 0xff000000;\n            }\n            for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n              dest[destPos++] = src[j] | src[j + 1] << 8 | src[j + 2] << 16 | 0xff000000;\n            }\n          } else {\n            for (; i < len32 - 2; i += 3, destPos += 4) {\n              const s1 = src32[i];\n              const s2 = src32[i + 1];\n              const s3 = src32[i + 2];\n              dest[destPos] = s1 | 0xff;\n              dest[destPos + 1] = s1 << 24 | s2 >>> 8 | 0xff;\n              dest[destPos + 2] = s2 << 16 | s3 >>> 16 | 0xff;\n              dest[destPos + 3] = s3 << 8 | 0xff;\n            }\n            for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n              dest[destPos++] = src[j] << 24 | src[j + 1] << 16 | src[j + 2] << 8 | 0xff;\n            }\n          }\n          return {\n            srcPos,\n            destPos\n          };\n        }\n        function grayToRGBA(src, dest) {\n          if (_util.FeatureTest.isLittleEndian) {\n            for (let i = 0, ii = src.length; i < ii; i++) {\n              dest[i] = src[i] * 0x10101 | 0xff000000;\n            }\n          } else {\n            for (let i = 0, ii = src.length; i < ii; i++) {\n              dest[i] = src[i] * 0x1010100 | 0x000000ff;\n            }\n          }\n        }\n\n        /***/\n      }, /* 14 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.GlobalWorkerOptions = void 0;\n        const GlobalWorkerOptions = Object.create(null);\n        exports.GlobalWorkerOptions = GlobalWorkerOptions;\n        GlobalWorkerOptions.workerPort = null;\n        GlobalWorkerOptions.workerSrc = \"\";\n\n        /***/\n      }, /* 15 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.MessageHandler = void 0;\n        var _util = __w_pdfjs_require__(1);\n        const CallbackKind = {\n          UNKNOWN: 0,\n          DATA: 1,\n          ERROR: 2\n        };\n        const StreamKind = {\n          UNKNOWN: 0,\n          CANCEL: 1,\n          CANCEL_COMPLETE: 2,\n          CLOSE: 3,\n          ENQUEUE: 4,\n          ERROR: 5,\n          PULL: 6,\n          PULL_COMPLETE: 7,\n          START_COMPLETE: 8\n        };\n        function wrapReason(reason) {\n          if (!(reason instanceof Error || typeof reason === \"object\" && reason !== null)) {\n            (0, _util.unreachable)('wrapReason: Expected \"reason\" to be a (possibly cloned) Error.');\n          }\n          switch (reason.name) {\n            case \"AbortException\":\n              return new _util.AbortException(reason.message);\n            case \"MissingPDFException\":\n              return new _util.MissingPDFException(reason.message);\n            case \"PasswordException\":\n              return new _util.PasswordException(reason.message, reason.code);\n            case \"UnexpectedResponseException\":\n              return new _util.UnexpectedResponseException(reason.message, reason.status);\n            case \"UnknownErrorException\":\n              return new _util.UnknownErrorException(reason.message, reason.details);\n            default:\n              return new _util.UnknownErrorException(reason.message, reason.toString());\n          }\n        }\n        class MessageHandler {\n          constructor(sourceName, targetName, comObj) {\n            this.sourceName = sourceName;\n            this.targetName = targetName;\n            this.comObj = comObj;\n            this.callbackId = 1;\n            this.streamId = 1;\n            this.streamSinks = Object.create(null);\n            this.streamControllers = Object.create(null);\n            this.callbackCapabilities = Object.create(null);\n            this.actionHandler = Object.create(null);\n            this._onComObjOnMessage = event => {\n              const data = event.data;\n              if (data.targetName !== this.sourceName) {\n                return;\n              }\n              if (data.stream) {\n                this.#processStreamMessage(data);\n                return;\n              }\n              if (data.callback) {\n                const callbackId = data.callbackId;\n                const capability = this.callbackCapabilities[callbackId];\n                if (!capability) {\n                  throw new Error(`Cannot resolve callback ${callbackId}`);\n                }\n                delete this.callbackCapabilities[callbackId];\n                if (data.callback === CallbackKind.DATA) {\n                  capability.resolve(data.data);\n                } else if (data.callback === CallbackKind.ERROR) {\n                  capability.reject(wrapReason(data.reason));\n                } else {\n                  throw new Error(\"Unexpected callback case\");\n                }\n                return;\n              }\n              const action = this.actionHandler[data.action];\n              if (!action) {\n                throw new Error(`Unknown action from worker: ${data.action}`);\n              }\n              if (data.callbackId) {\n                const cbSourceName = this.sourceName;\n                const cbTargetName = data.sourceName;\n                new Promise(function (resolve) {\n                  resolve(action(data.data));\n                }).then(function (result) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.DATA,\n                    callbackId: data.callbackId,\n                    data: result\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName: cbSourceName,\n                    targetName: cbTargetName,\n                    callback: CallbackKind.ERROR,\n                    callbackId: data.callbackId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                return;\n              }\n              if (data.streamId) {\n                this.#createStreamSink(data);\n                return;\n              }\n              action(data.data);\n            };\n            comObj.addEventListener(\"message\", this._onComObjOnMessage);\n          }\n          on(actionName, handler) {\n            const ah = this.actionHandler;\n            if (ah[actionName]) {\n              throw new Error(`There is already an actionName called \"${actionName}\"`);\n            }\n            ah[actionName] = handler;\n          }\n          send(actionName, data, transfers) {\n            this.comObj.postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              data\n            }, transfers);\n          }\n          sendWithPromise(actionName, data, transfers) {\n            const callbackId = this.callbackId++;\n            const capability = new _util.PromiseCapability();\n            this.callbackCapabilities[callbackId] = capability;\n            try {\n              this.comObj.postMessage({\n                sourceName: this.sourceName,\n                targetName: this.targetName,\n                action: actionName,\n                callbackId,\n                data\n              }, transfers);\n            } catch (ex) {\n              capability.reject(ex);\n            }\n            return capability.promise;\n          }\n          sendWithStream(actionName, data, queueingStrategy, transfers) {\n            const streamId = this.streamId++,\n              sourceName = this.sourceName,\n              targetName = this.targetName,\n              comObj = this.comObj;\n            return new ReadableStream({\n              start: controller => {\n                const startCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId] = {\n                  controller,\n                  startCall: startCapability,\n                  pullCall: null,\n                  cancelCall: null,\n                  isClosed: false\n                };\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  action: actionName,\n                  streamId,\n                  data,\n                  desiredSize: controller.desiredSize\n                }, transfers);\n                return startCapability.promise;\n              },\n              pull: controller => {\n                const pullCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId].pullCall = pullCapability;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL,\n                  streamId,\n                  desiredSize: controller.desiredSize\n                });\n                return pullCapability.promise;\n              },\n              cancel: reason => {\n                (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n                const cancelCapability = new _util.PromiseCapability();\n                this.streamControllers[streamId].cancelCall = cancelCapability;\n                this.streamControllers[streamId].isClosed = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n                return cancelCapability.promise;\n              }\n            }, queueingStrategy);\n          }\n          #createStreamSink(data) {\n            const streamId = data.streamId,\n              sourceName = this.sourceName,\n              targetName = data.sourceName,\n              comObj = this.comObj;\n            const self = this,\n              action = this.actionHandler[data.action];\n            const streamSink = {\n              enqueue(chunk) {\n                let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n                let transfers = arguments.length > 2 ? arguments[2] : undefined;\n                if (this.isCancelled) {\n                  return;\n                }\n                const lastDesiredSize = this.desiredSize;\n                this.desiredSize -= size;\n                if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                  this.sinkCapability = new _util.PromiseCapability();\n                  this.ready = this.sinkCapability.promise;\n                }\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ENQUEUE,\n                  streamId,\n                  chunk\n                }, transfers);\n              },\n              close() {\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CLOSE,\n                  streamId\n                });\n                delete self.streamSinks[streamId];\n              },\n              error(reason) {\n                (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n                if (this.isCancelled) {\n                  return;\n                }\n                this.isCancelled = true;\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.ERROR,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              },\n              sinkCapability: new _util.PromiseCapability(),\n              onPull: null,\n              onCancel: null,\n              isCancelled: false,\n              desiredSize: data.desiredSize,\n              ready: null\n            };\n            streamSink.sinkCapability.resolve();\n            streamSink.ready = streamSink.sinkCapability.promise;\n            this.streamSinks[streamId] = streamSink;\n            new Promise(function (resolve) {\n              resolve(action(data.data, streamSink));\n            }).then(function () {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                success: true\n              });\n            }, function (reason) {\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.START_COMPLETE,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            });\n          }\n          #processStreamMessage(data) {\n            const streamId = data.streamId,\n              sourceName = this.sourceName,\n              targetName = data.sourceName,\n              comObj = this.comObj;\n            const streamController = this.streamControllers[streamId],\n              streamSink = this.streamSinks[streamId];\n            switch (data.stream) {\n              case StreamKind.START_COMPLETE:\n                if (data.success) {\n                  streamController.startCall.resolve();\n                } else {\n                  streamController.startCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL_COMPLETE:\n                if (data.success) {\n                  streamController.pullCall.resolve();\n                } else {\n                  streamController.pullCall.reject(wrapReason(data.reason));\n                }\n                break;\n              case StreamKind.PULL:\n                if (!streamSink) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                  break;\n                }\n                if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n                  streamSink.sinkCapability.resolve();\n                }\n                streamSink.desiredSize = data.desiredSize;\n                new Promise(function (resolve) {\n                  resolve(streamSink.onPull?.());\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.PULL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                break;\n              case StreamKind.ENQUEUE:\n                (0, _util.assert)(streamController, \"enqueue should have stream controller\");\n                if (streamController.isClosed) {\n                  break;\n                }\n                streamController.controller.enqueue(data.chunk);\n                break;\n              case StreamKind.CLOSE:\n                (0, _util.assert)(streamController, \"close should have stream controller\");\n                if (streamController.isClosed) {\n                  break;\n                }\n                streamController.isClosed = true;\n                streamController.controller.close();\n                this.#deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.ERROR:\n                (0, _util.assert)(streamController, \"error should have stream controller\");\n                streamController.controller.error(wrapReason(data.reason));\n                this.#deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.CANCEL_COMPLETE:\n                if (data.success) {\n                  streamController.cancelCall.resolve();\n                } else {\n                  streamController.cancelCall.reject(wrapReason(data.reason));\n                }\n                this.#deleteStreamController(streamController, streamId);\n                break;\n              case StreamKind.CANCEL:\n                if (!streamSink) {\n                  break;\n                }\n                new Promise(function (resolve) {\n                  resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n                }).then(function () {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    success: true\n                  });\n                }, function (reason) {\n                  comObj.postMessage({\n                    sourceName,\n                    targetName,\n                    stream: StreamKind.CANCEL_COMPLETE,\n                    streamId,\n                    reason: wrapReason(reason)\n                  });\n                });\n                streamSink.sinkCapability.reject(wrapReason(data.reason));\n                streamSink.isCancelled = true;\n                delete this.streamSinks[streamId];\n                break;\n              default:\n                throw new Error(\"Unexpected stream case\");\n            }\n          }\n          async #deleteStreamController(streamController, streamId) {\n            await Promise.allSettled([streamController.startCall?.promise, streamController.pullCall?.promise, streamController.cancelCall?.promise]);\n            delete this.streamControllers[streamId];\n          }\n          destroy() {\n            this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n          }\n        }\n        exports.MessageHandler = MessageHandler;\n\n        /***/\n      }, /* 16 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.Metadata = void 0;\n        var _util = __w_pdfjs_require__(1);\n        class Metadata {\n          #metadataMap;\n          #data;\n          constructor(_ref34) {\n            let {\n              parsedData,\n              rawData\n            } = _ref34;\n            this.#metadataMap = parsedData;\n            this.#data = rawData;\n          }\n          getRaw() {\n            return this.#data;\n          }\n          get(name) {\n            return this.#metadataMap.get(name) ?? null;\n          }\n          getAll() {\n            return (0, _util.objectFromMap)(this.#metadataMap);\n          }\n          has(name) {\n            return this.#metadataMap.has(name);\n          }\n        }\n        exports.Metadata = Metadata;\n\n        /***/\n      }, /* 17 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.OptionalContentConfig = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _murmurhash = __w_pdfjs_require__(8);\n        const INTERNAL = Symbol(\"INTERNAL\");\n        class OptionalContentGroup {\n          #visible = true;\n          constructor(name, intent) {\n            this.name = name;\n            this.intent = intent;\n          }\n          get visible() {\n            return this.#visible;\n          }\n          _setVisible(internal, visible) {\n            if (internal !== INTERNAL) {\n              (0, _util.unreachable)(\"Internal method `_setVisible` called.\");\n            }\n            this.#visible = visible;\n          }\n        }\n        class OptionalContentConfig {\n          #cachedGetHash = null;\n          #groups = new Map();\n          #initialHash = null;\n          #order = null;\n          constructor(data) {\n            this.name = null;\n            this.creator = null;\n            if (data === null) {\n              return;\n            }\n            this.name = data.name;\n            this.creator = data.creator;\n            this.#order = data.order;\n            for (const group of data.groups) {\n              this.#groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n            }\n            if (data.baseState === \"OFF\") {\n              for (const group of this.#groups.values()) {\n                group._setVisible(INTERNAL, false);\n              }\n            }\n            for (const on of data.on) {\n              this.#groups.get(on)._setVisible(INTERNAL, true);\n            }\n            for (const off of data.off) {\n              this.#groups.get(off)._setVisible(INTERNAL, false);\n            }\n            this.#initialHash = this.getHash();\n          }\n          #evaluateVisibilityExpression(array) {\n            const length = array.length;\n            if (length < 2) {\n              return true;\n            }\n            const operator = array[0];\n            for (let i = 1; i < length; i++) {\n              const element = array[i];\n              let state;\n              if (Array.isArray(element)) {\n                state = this.#evaluateVisibilityExpression(element);\n              } else if (this.#groups.has(element)) {\n                state = this.#groups.get(element).visible;\n              } else {\n                (0, _util.warn)(`Optional content group not found: ${element}`);\n                return true;\n              }\n              switch (operator) {\n                case \"And\":\n                  if (!state) {\n                    return false;\n                  }\n                  break;\n                case \"Or\":\n                  if (state) {\n                    return true;\n                  }\n                  break;\n                case \"Not\":\n                  return !state;\n                default:\n                  return true;\n              }\n            }\n            return operator === \"And\";\n          }\n          isVisible(group) {\n            if (this.#groups.size === 0) {\n              return true;\n            }\n            if (!group) {\n              (0, _util.warn)(\"Optional content group not defined.\");\n              return true;\n            }\n            if (group.type === \"OCG\") {\n              if (!this.#groups.has(group.id)) {\n                (0, _util.warn)(`Optional content group not found: ${group.id}`);\n                return true;\n              }\n              return this.#groups.get(group.id).visible;\n            } else if (group.type === \"OCMD\") {\n              if (group.expression) {\n                return this.#evaluateVisibilityExpression(group.expression);\n              }\n              if (!group.policy || group.policy === \"AnyOn\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n                  if (this.#groups.get(id).visible) {\n                    return true;\n                  }\n                }\n                return false;\n              } else if (group.policy === \"AllOn\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n                  if (!this.#groups.get(id).visible) {\n                    return false;\n                  }\n                }\n                return true;\n              } else if (group.policy === \"AnyOff\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n                  if (!this.#groups.get(id).visible) {\n                    return true;\n                  }\n                }\n                return false;\n              } else if (group.policy === \"AllOff\") {\n                for (const id of group.ids) {\n                  if (!this.#groups.has(id)) {\n                    (0, _util.warn)(`Optional content group not found: ${id}`);\n                    return true;\n                  }\n                  if (this.#groups.get(id).visible) {\n                    return false;\n                  }\n                }\n                return true;\n              }\n              (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n              return true;\n            }\n            (0, _util.warn)(`Unknown group type ${group.type}.`);\n            return true;\n          }\n          setVisibility(id) {\n            let visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            if (!this.#groups.has(id)) {\n              (0, _util.warn)(`Optional content group not found: ${id}`);\n              return;\n            }\n            this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n            this.#cachedGetHash = null;\n          }\n          get hasInitialVisibility() {\n            return this.#initialHash === null || this.getHash() === this.#initialHash;\n          }\n          getOrder() {\n            if (!this.#groups.size) {\n              return null;\n            }\n            if (this.#order) {\n              return this.#order.slice();\n            }\n            return [...this.#groups.keys()];\n          }\n          getGroups() {\n            return this.#groups.size > 0 ? (0, _util.objectFromMap)(this.#groups) : null;\n          }\n          getGroup(id) {\n            return this.#groups.get(id) || null;\n          }\n          getHash() {\n            if (this.#cachedGetHash !== null) {\n              return this.#cachedGetHash;\n            }\n            const hash = new _murmurhash.MurmurHash3_64();\n            for (const [id, group] of this.#groups) {\n              hash.update(`${id}:${group.visible}`);\n            }\n            return this.#cachedGetHash = hash.hexdigest();\n          }\n        }\n        exports.OptionalContentConfig = OptionalContentConfig;\n\n        /***/\n      }, /* 18 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFDataTransportStream = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        class PDFDataTransportStream {\n          constructor(_ref35, pdfDataRangeTransport) {\n            let {\n              length,\n              initialData,\n              progressiveDone = false,\n              contentDispositionFilename = null,\n              disableRange = false,\n              disableStream = false\n            } = _ref35;\n            (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n            this._queuedChunks = [];\n            this._progressiveDone = progressiveDone;\n            this._contentDispositionFilename = contentDispositionFilename;\n            if (initialData?.length > 0) {\n              const buffer = initialData instanceof Uint8Array && initialData.byteLength === initialData.buffer.byteLength ? initialData.buffer : new Uint8Array(initialData).buffer;\n              this._queuedChunks.push(buffer);\n            }\n            this._pdfDataRangeTransport = pdfDataRangeTransport;\n            this._isStreamingSupported = !disableStream;\n            this._isRangeSupported = !disableRange;\n            this._contentLength = length;\n            this._fullRequestReader = null;\n            this._rangeReaders = [];\n            this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n              this._onReceiveData({\n                begin,\n                chunk\n              });\n            });\n            this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n              this._onProgress({\n                loaded,\n                total\n              });\n            });\n            this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n              this._onReceiveData({\n                chunk\n              });\n            });\n            this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n              this._onProgressiveDone();\n            });\n            this._pdfDataRangeTransport.transportReady();\n          }\n          _onReceiveData(_ref36) {\n            let {\n              begin,\n              chunk\n            } = _ref36;\n            const buffer = chunk instanceof Uint8Array && chunk.byteLength === chunk.buffer.byteLength ? chunk.buffer : new Uint8Array(chunk).buffer;\n            if (begin === undefined) {\n              if (this._fullRequestReader) {\n                this._fullRequestReader._enqueue(buffer);\n              } else {\n                this._queuedChunks.push(buffer);\n              }\n            } else {\n              const found = this._rangeReaders.some(function (rangeReader) {\n                if (rangeReader._begin !== begin) {\n                  return false;\n                }\n                rangeReader._enqueue(buffer);\n                return true;\n              });\n              (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n            }\n          }\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n          _onProgress(evt) {\n            if (evt.total === undefined) {\n              this._rangeReaders[0]?.onProgress?.({\n                loaded: evt.loaded\n              });\n            } else {\n              this._fullRequestReader?.onProgress?.({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          }\n          _onProgressiveDone() {\n            this._fullRequestReader?.progressiveDone();\n            this._progressiveDone = true;\n          }\n          _removeRangeReader(reader) {\n            const i = this._rangeReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeReaders.splice(i, 1);\n            }\n          }\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n            const queuedChunks = this._queuedChunks;\n            this._queuedChunks = null;\n            return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone, this._contentDispositionFilename);\n          }\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n            this._pdfDataRangeTransport.requestDataRange(begin, end);\n            this._rangeReaders.push(reader);\n            return reader;\n          }\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n            for (const reader of this._rangeReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n            this._pdfDataRangeTransport.abort();\n          }\n        }\n        exports.PDFDataTransportStream = PDFDataTransportStream;\n        class PDFDataTransportStreamReader {\n          constructor(stream, queuedChunks) {\n            let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            let contentDispositionFilename = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n            this._stream = stream;\n            this._done = progressiveDone || false;\n            this._filename = (0, _display_utils.isPdfFile)(contentDispositionFilename) ? contentDispositionFilename : null;\n            this._queuedChunks = queuedChunks || [];\n            this._loaded = 0;\n            for (const chunk of this._queuedChunks) {\n              this._loaded += chunk.byteLength;\n            }\n            this._requests = [];\n            this._headersReady = Promise.resolve();\n            stream._fullRequestReader = this;\n            this.onProgress = null;\n          }\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunks.push(chunk);\n            }\n            this._loaded += chunk.byteLength;\n          }\n          get headersReady() {\n            return this._headersReady;\n          }\n          get filename() {\n            return this._filename;\n          }\n          get isRangeSupported() {\n            return this._stream._isRangeSupported;\n          }\n          get isStreamingSupported() {\n            return this._stream._isStreamingSupported;\n          }\n          get contentLength() {\n            return this._stream._contentLength;\n          }\n          async read() {\n            if (this._queuedChunks.length > 0) {\n              const chunk = this._queuedChunks.shift();\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            const requestCapability = new _util.PromiseCapability();\n            this._requests.push(requestCapability);\n            return requestCapability.promise;\n          }\n          cancel(reason) {\n            this._done = true;\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n          }\n          progressiveDone() {\n            if (this._done) {\n              return;\n            }\n            this._done = true;\n          }\n        }\n        class PDFDataTransportStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._begin = begin;\n            this._end = end;\n            this._queuedChunk = null;\n            this._requests = [];\n            this._done = false;\n            this.onProgress = null;\n          }\n          _enqueue(chunk) {\n            if (this._done) {\n              return;\n            }\n            if (this._requests.length === 0) {\n              this._queuedChunk = chunk;\n            } else {\n              const requestsCapability = this._requests.shift();\n              requestsCapability.resolve({\n                value: chunk,\n                done: false\n              });\n              for (const requestCapability of this._requests) {\n                requestCapability.resolve({\n                  value: undefined,\n                  done: true\n                });\n              }\n              this._requests.length = 0;\n            }\n            this._done = true;\n            this._stream._removeRangeReader(this);\n          }\n          get isStreamingSupported() {\n            return false;\n          }\n          async read() {\n            if (this._queuedChunk) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            const requestCapability = new _util.PromiseCapability();\n            this._requests.push(requestCapability);\n            return requestCapability.promise;\n          }\n          cancel(reason) {\n            this._done = true;\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n            this._stream._removeRangeReader(this);\n          }\n        }\n\n        /***/\n      }, /* 19 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFFetchStream = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _network_utils = __w_pdfjs_require__(20);\n        ;\n        function createFetchOptions(headers, withCredentials, abortController) {\n          return {\n            method: \"GET\",\n            headers,\n            signal: abortController.signal,\n            mode: \"cors\",\n            credentials: withCredentials ? \"include\" : \"same-origin\",\n            redirect: \"follow\"\n          };\n        }\n        function createHeaders(httpHeaders) {\n          const headers = new Headers();\n          for (const property in httpHeaders) {\n            const value = httpHeaders[property];\n            if (value === undefined) {\n              continue;\n            }\n            headers.append(property, value);\n          }\n          return headers;\n        }\n        function getArrayBuffer(val) {\n          if (val instanceof Uint8Array) {\n            return val.buffer;\n          }\n          if (val instanceof ArrayBuffer) {\n            return val;\n          }\n          (0, _util.warn)(`getArrayBuffer - unexpected data format: ${val}`);\n          return new Uint8Array(val).buffer;\n        }\n        class PDFFetchStream {\n          constructor(source) {\n            this.source = source;\n            this.isHttp = /^https?:/i.test(source.url);\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFFetchStreamReader(this);\n            return this._fullRequestReader;\n          }\n          getRangeReader(begin, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            const reader = new PDFFetchStreamRangeReader(this, begin, end);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n        }\n        exports.PDFFetchStream = PDFFetchStream;\n        class PDFFetchStreamReader {\n          constructor(stream) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            this._filename = null;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._contentLength = source.length;\n            this._headersCapability = new _util.PromiseCapability();\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n            this._abortController = new AbortController();\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._headers = createHeaders(this._stream.httpHeaders);\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n              this._reader = response.body.getReader();\n              this._headersCapability.resolve();\n              const getResponseHeader = name => {\n                return response.headers.get(name);\n              };\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: this._stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n              if (!this._isStreamingSupported && this._isRangeSupported) {\n                this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n              }\n            }).catch(this._headersCapability.reject);\n            this.onProgress = null;\n          }\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n          get filename() {\n            return this._filename;\n          }\n          get contentLength() {\n            return this._contentLength;\n          }\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          async read() {\n            await this._headersCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n            this._loaded += value.byteLength;\n            this.onProgress?.({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n            return {\n              value: getArrayBuffer(value),\n              done: false\n            };\n          }\n          cancel(reason) {\n            this._reader?.cancel(reason);\n            this._abortController.abort();\n          }\n        }\n        class PDFFetchStreamRangeReader {\n          constructor(stream, begin, end) {\n            this._stream = stream;\n            this._reader = null;\n            this._loaded = 0;\n            const source = stream.source;\n            this._withCredentials = source.withCredentials || false;\n            this._readCapability = new _util.PromiseCapability();\n            this._isStreamingSupported = !source.disableStream;\n            this._abortController = new AbortController();\n            this._headers = createHeaders(this._stream.httpHeaders);\n            this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n            const url = source.url;\n            fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n              if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n                throw (0, _network_utils.createResponseStatusError)(response.status, url);\n              }\n              this._readCapability.resolve();\n              this._reader = response.body.getReader();\n            }).catch(this._readCapability.reject);\n            this.onProgress = null;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          async read() {\n            await this._readCapability.promise;\n            const {\n              value,\n              done\n            } = await this._reader.read();\n            if (done) {\n              return {\n                value,\n                done\n              };\n            }\n            this._loaded += value.byteLength;\n            this.onProgress?.({\n              loaded: this._loaded\n            });\n            return {\n              value: getArrayBuffer(value),\n              done: false\n            };\n          }\n          cancel(reason) {\n            this._reader?.cancel(reason);\n            this._abortController.abort();\n          }\n        }\n\n        /***/\n      }, /* 20 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.createResponseStatusError = createResponseStatusError;\n        exports.extractFilenameFromHeader = extractFilenameFromHeader;\n        exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n        exports.validateResponseStatus = validateResponseStatus;\n        var _util = __w_pdfjs_require__(1);\n        var _content_disposition = __w_pdfjs_require__(21);\n        var _display_utils = __w_pdfjs_require__(6);\n        function validateRangeRequestCapabilities(_ref37) {\n          let {\n            getResponseHeader,\n            isHttp,\n            rangeChunkSize,\n            disableRange\n          } = _ref37;\n          const returnValues = {\n            allowRangeRequests: false,\n            suggestedLength: undefined\n          };\n          const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n          if (!Number.isInteger(length)) {\n            return returnValues;\n          }\n          returnValues.suggestedLength = length;\n          if (length <= 2 * rangeChunkSize) {\n            return returnValues;\n          }\n          if (disableRange || !isHttp) {\n            return returnValues;\n          }\n          if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n            return returnValues;\n          }\n          const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n          if (contentEncoding !== \"identity\") {\n            return returnValues;\n          }\n          returnValues.allowRangeRequests = true;\n          return returnValues;\n        }\n        function extractFilenameFromHeader(getResponseHeader) {\n          const contentDisposition = getResponseHeader(\"Content-Disposition\");\n          if (contentDisposition) {\n            let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n            if (filename.includes(\"%\")) {\n              try {\n                filename = decodeURIComponent(filename);\n              } catch {}\n            }\n            if ((0, _display_utils.isPdfFile)(filename)) {\n              return filename;\n            }\n          }\n          return null;\n        }\n        function createResponseStatusError(status, url) {\n          if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n            return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n          }\n          return new _util.UnexpectedResponseException(`Unexpected server response (${status}) while retrieving PDF \"${url}\".`, status);\n        }\n        function validateResponseStatus(status) {\n          return status === 200 || status === 206;\n        }\n\n        /***/\n      }, /* 21 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n        var _util = __w_pdfjs_require__(1);\n        function getFilenameFromContentDispositionHeader(contentDisposition) {\n          let needsEncodingFixup = true;\n          let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = unescape(filename);\n            filename = rfc5987decode(filename);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n          tmp = rfc2231getparam(contentDisposition);\n          if (tmp) {\n            const filename = rfc2047decode(tmp);\n            return fixupEncoding(filename);\n          }\n          tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n          if (tmp) {\n            tmp = tmp[1];\n            let filename = rfc2616unquote(tmp);\n            filename = rfc2047decode(filename);\n            return fixupEncoding(filename);\n          }\n          function toParamRegExp(attributePattern, flags) {\n            return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n          }\n          function textdecode(encoding, value) {\n            if (encoding) {\n              if (!/^[\\x00-\\xFF]+$/.test(value)) {\n                return value;\n              }\n              try {\n                const decoder = new TextDecoder(encoding, {\n                  fatal: true\n                });\n                const buffer = (0, _util.stringToBytes)(value);\n                value = decoder.decode(buffer);\n                needsEncodingFixup = false;\n              } catch {}\n            }\n            return value;\n          }\n          function fixupEncoding(value) {\n            if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n              value = textdecode(\"utf-8\", value);\n              if (needsEncodingFixup) {\n                value = textdecode(\"iso-8859-1\", value);\n              }\n            }\n            return value;\n          }\n          function rfc2231getparam(contentDispositionStr) {\n            const matches = [];\n            let match;\n            const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n            while ((match = iter.exec(contentDispositionStr)) !== null) {\n              let [, n, quot, part] = match;\n              n = parseInt(n, 10);\n              if (n in matches) {\n                if (n === 0) {\n                  break;\n                }\n                continue;\n              }\n              matches[n] = [quot, part];\n            }\n            const parts = [];\n            for (let n = 0; n < matches.length; ++n) {\n              if (!(n in matches)) {\n                break;\n              }\n              let [quot, part] = matches[n];\n              part = rfc2616unquote(part);\n              if (quot) {\n                part = unescape(part);\n                if (n === 0) {\n                  part = rfc5987decode(part);\n                }\n              }\n              parts.push(part);\n            }\n            return parts.join(\"\");\n          }\n          function rfc2616unquote(value) {\n            if (value.startsWith('\"')) {\n              const parts = value.slice(1).split('\\\\\"');\n              for (let i = 0; i < parts.length; ++i) {\n                const quotindex = parts[i].indexOf('\"');\n                if (quotindex !== -1) {\n                  parts[i] = parts[i].slice(0, quotindex);\n                  parts.length = i + 1;\n                }\n                parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n              }\n              value = parts.join('\"');\n            }\n            return value;\n          }\n          function rfc5987decode(extvalue) {\n            const encodingend = extvalue.indexOf(\"'\");\n            if (encodingend === -1) {\n              return extvalue;\n            }\n            const encoding = extvalue.slice(0, encodingend);\n            const langvalue = extvalue.slice(encodingend + 1);\n            const value = langvalue.replace(/^[^']*'/, \"\");\n            return textdecode(encoding, value);\n          }\n          function rfc2047decode(value) {\n            if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n              return value;\n            }\n            return value.replaceAll(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n              if (encoding === \"q\" || encoding === \"Q\") {\n                text = text.replaceAll(\"_\", \" \");\n                text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                  return String.fromCharCode(parseInt(hex, 16));\n                });\n                return textdecode(charset, text);\n              }\n              try {\n                text = atob(text);\n              } catch {}\n              return textdecode(charset, text);\n            });\n          }\n          return \"\";\n        }\n\n        /***/\n      }, /* 22 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNetworkStream = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _network_utils = __w_pdfjs_require__(20);\n        ;\n        const OK_RESPONSE = 200;\n        const PARTIAL_CONTENT_RESPONSE = 206;\n        function getArrayBuffer(xhr) {\n          const data = xhr.response;\n          if (typeof data !== \"string\") {\n            return data;\n          }\n          return (0, _util.stringToBytes)(data).buffer;\n        }\n        class NetworkManager {\n          constructor(url) {\n            let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.url = url;\n            this.isHttp = /^https?:/i.test(url);\n            this.httpHeaders = this.isHttp && args.httpHeaders || Object.create(null);\n            this.withCredentials = args.withCredentials || false;\n            this.currXhrId = 0;\n            this.pendingRequests = Object.create(null);\n          }\n          requestRange(begin, end, listeners) {\n            const args = {\n              begin,\n              end\n            };\n            for (const prop in listeners) {\n              args[prop] = listeners[prop];\n            }\n            return this.request(args);\n          }\n          requestFull(listeners) {\n            return this.request(listeners);\n          }\n          request(args) {\n            const xhr = new XMLHttpRequest();\n            const xhrId = this.currXhrId++;\n            const pendingRequest = this.pendingRequests[xhrId] = {\n              xhr\n            };\n            xhr.open(\"GET\", this.url);\n            xhr.withCredentials = this.withCredentials;\n            for (const property in this.httpHeaders) {\n              const value = this.httpHeaders[property];\n              if (value === undefined) {\n                continue;\n              }\n              xhr.setRequestHeader(property, value);\n            }\n            if (this.isHttp && \"begin\" in args && \"end\" in args) {\n              xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n              pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n            } else {\n              pendingRequest.expectedStatus = OK_RESPONSE;\n            }\n            xhr.responseType = \"arraybuffer\";\n            if (args.onError) {\n              xhr.onerror = function (evt) {\n                args.onError(xhr.status);\n              };\n            }\n            xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n            xhr.onprogress = this.onProgress.bind(this, xhrId);\n            pendingRequest.onHeadersReceived = args.onHeadersReceived;\n            pendingRequest.onDone = args.onDone;\n            pendingRequest.onError = args.onError;\n            pendingRequest.onProgress = args.onProgress;\n            xhr.send(null);\n            return xhrId;\n          }\n          onProgress(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            pendingRequest.onProgress?.(evt);\n          }\n          onStateChange(xhrId, evt) {\n            const pendingRequest = this.pendingRequests[xhrId];\n            if (!pendingRequest) {\n              return;\n            }\n            const xhr = pendingRequest.xhr;\n            if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n              pendingRequest.onHeadersReceived();\n              delete pendingRequest.onHeadersReceived;\n            }\n            if (xhr.readyState !== 4) {\n              return;\n            }\n            if (!(xhrId in this.pendingRequests)) {\n              return;\n            }\n            delete this.pendingRequests[xhrId];\n            if (xhr.status === 0 && this.isHttp) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n            const xhrStatus = xhr.status || OK_RESPONSE;\n            const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n            if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n              pendingRequest.onError?.(xhr.status);\n              return;\n            }\n            const chunk = getArrayBuffer(xhr);\n            if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n              const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n              const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n              pendingRequest.onDone({\n                begin: parseInt(matches[1], 10),\n                chunk\n              });\n            } else if (chunk) {\n              pendingRequest.onDone({\n                begin: 0,\n                chunk\n              });\n            } else {\n              pendingRequest.onError?.(xhr.status);\n            }\n          }\n          getRequestXhr(xhrId) {\n            return this.pendingRequests[xhrId].xhr;\n          }\n          isPendingRequest(xhrId) {\n            return xhrId in this.pendingRequests;\n          }\n          abortRequest(xhrId) {\n            const xhr = this.pendingRequests[xhrId].xhr;\n            delete this.pendingRequests[xhrId];\n            xhr.abort();\n          }\n        }\n        class PDFNetworkStream {\n          constructor(source) {\n            this._source = source;\n            this._manager = new NetworkManager(source.url, {\n              httpHeaders: source.httpHeaders,\n              withCredentials: source.withCredentials\n            });\n            this._rangeChunkSize = source.rangeChunkSize;\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n          _onRangeRequestReaderClosed(reader) {\n            const i = this._rangeRequestReaders.indexOf(reader);\n            if (i >= 0) {\n              this._rangeRequestReaders.splice(i, 1);\n            }\n          }\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n            this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n            return this._fullRequestReader;\n          }\n          getRangeReader(begin, end) {\n            const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n            reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n            this._rangeRequestReaders.push(reader);\n            return reader;\n          }\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n        }\n        exports.PDFNetworkStream = PDFNetworkStream;\n        class PDFNetworkStreamFullRequestReader {\n          constructor(manager, source) {\n            this._manager = manager;\n            const args = {\n              onHeadersReceived: this._onHeadersReceived.bind(this),\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = source.url;\n            this._fullRequestId = manager.requestFull(args);\n            this._headersReceivedCapability = new _util.PromiseCapability();\n            this._disableRange = source.disableRange || false;\n            this._contentLength = source.length;\n            this._rangeChunkSize = source.rangeChunkSize;\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n            this._isStreamingSupported = false;\n            this._isRangeSupported = false;\n            this._cachedChunks = [];\n            this._requests = [];\n            this._done = false;\n            this._storedError = undefined;\n            this._filename = null;\n            this.onProgress = null;\n          }\n          _onHeadersReceived() {\n            const fullRequestXhrId = this._fullRequestId;\n            const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n            const getResponseHeader = name => {\n              return fullRequestXhr.getResponseHeader(name);\n            };\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: this._manager.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n            if (allowRangeRequests) {\n              this._isRangeSupported = true;\n            }\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            if (this._isRangeSupported) {\n              this._manager.abortRequest(fullRequestXhrId);\n            }\n            this._headersReceivedCapability.resolve();\n          }\n          _onDone(data) {\n            if (data) {\n              if (this._requests.length > 0) {\n                const requestCapability = this._requests.shift();\n                requestCapability.resolve({\n                  value: data.chunk,\n                  done: false\n                });\n              } else {\n                this._cachedChunks.push(data.chunk);\n              }\n            }\n            this._done = true;\n            if (this._cachedChunks.length > 0) {\n              return;\n            }\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n          }\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n            this._headersReceivedCapability.reject(this._storedError);\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n            this._requests.length = 0;\n            this._cachedChunks.length = 0;\n          }\n          _onProgress(evt) {\n            this.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.lengthComputable ? evt.total : this._contentLength\n            });\n          }\n          get filename() {\n            return this._filename;\n          }\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          get contentLength() {\n            return this._contentLength;\n          }\n          get headersReady() {\n            return this._headersReceivedCapability.promise;\n          }\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n            if (this._cachedChunks.length > 0) {\n              const chunk = this._cachedChunks.shift();\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            const requestCapability = new _util.PromiseCapability();\n            this._requests.push(requestCapability);\n            return requestCapability.promise;\n          }\n          cancel(reason) {\n            this._done = true;\n            this._headersReceivedCapability.reject(reason);\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n            if (this._manager.isPendingRequest(this._fullRequestId)) {\n              this._manager.abortRequest(this._fullRequestId);\n            }\n            this._fullRequestReader = null;\n          }\n        }\n        class PDFNetworkStreamRangeRequestReader {\n          constructor(manager, begin, end) {\n            this._manager = manager;\n            const args = {\n              onDone: this._onDone.bind(this),\n              onError: this._onError.bind(this),\n              onProgress: this._onProgress.bind(this)\n            };\n            this._url = manager.url;\n            this._requestId = manager.requestRange(begin, end, args);\n            this._requests = [];\n            this._queuedChunk = null;\n            this._done = false;\n            this._storedError = undefined;\n            this.onProgress = null;\n            this.onClosed = null;\n          }\n          _close() {\n            this.onClosed?.(this);\n          }\n          _onDone(data) {\n            const chunk = data.chunk;\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n              requestCapability.resolve({\n                value: chunk,\n                done: false\n              });\n            } else {\n              this._queuedChunk = chunk;\n            }\n            this._done = true;\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n            this._close();\n          }\n          _onError(status) {\n            this._storedError = (0, _network_utils.createResponseStatusError)(status, this._url);\n            for (const requestCapability of this._requests) {\n              requestCapability.reject(this._storedError);\n            }\n            this._requests.length = 0;\n            this._queuedChunk = null;\n          }\n          _onProgress(evt) {\n            if (!this.isStreamingSupported) {\n              this.onProgress?.({\n                loaded: evt.loaded\n              });\n            }\n          }\n          get isStreamingSupported() {\n            return false;\n          }\n          async read() {\n            if (this._storedError) {\n              throw this._storedError;\n            }\n            if (this._queuedChunk !== null) {\n              const chunk = this._queuedChunk;\n              this._queuedChunk = null;\n              return {\n                value: chunk,\n                done: false\n              };\n            }\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            const requestCapability = new _util.PromiseCapability();\n            this._requests.push(requestCapability);\n            return requestCapability.promise;\n          }\n          cancel(reason) {\n            this._done = true;\n            for (const requestCapability of this._requests) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            }\n            this._requests.length = 0;\n            if (this._manager.isPendingRequest(this._requestId)) {\n              this._manager.abortRequest(this._requestId);\n            }\n            this._close();\n          }\n        }\n\n        /***/\n      }, /* 23 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.PDFNodeStream = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _network_utils = __w_pdfjs_require__(20);\n        ;\n        const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n        function parseUrl(sourceUrl) {\n          const url = require(\"url\");\n          const parsedUrl = url.parse(sourceUrl);\n          if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n            return parsedUrl;\n          }\n          if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n            return url.parse(`file:///${sourceUrl}`);\n          }\n          if (!parsedUrl.host) {\n            parsedUrl.protocol = \"file:\";\n          }\n          return parsedUrl;\n        }\n        class PDFNodeStream {\n          constructor(source) {\n            this.source = source;\n            this.url = parseUrl(source.url);\n            this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n            this.isFsUrl = this.url.protocol === \"file:\";\n            this.httpHeaders = this.isHttp && source.httpHeaders || {};\n            this._fullRequestReader = null;\n            this._rangeRequestReaders = [];\n          }\n          get _progressiveDataLength() {\n            return this._fullRequestReader?._loaded ?? 0;\n          }\n          getFullReader() {\n            (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n            this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n            return this._fullRequestReader;\n          }\n          getRangeReader(start, end) {\n            if (end <= this._progressiveDataLength) {\n              return null;\n            }\n            const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n            this._rangeRequestReaders.push(rangeReader);\n            return rangeReader;\n          }\n          cancelAllRequests(reason) {\n            this._fullRequestReader?.cancel(reason);\n            for (const reader of this._rangeRequestReaders.slice(0)) {\n              reader.cancel(reason);\n            }\n          }\n        }\n        exports.PDFNodeStream = PDFNodeStream;\n        class BaseFullReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            const source = stream.source;\n            this._contentLength = source.length;\n            this._loaded = 0;\n            this._filename = null;\n            this._disableRange = source.disableRange || false;\n            this._rangeChunkSize = source.rangeChunkSize;\n            if (!this._rangeChunkSize && !this._disableRange) {\n              this._disableRange = true;\n            }\n            this._isStreamingSupported = !source.disableStream;\n            this._isRangeSupported = !source.disableRange;\n            this._readableStream = null;\n            this._readCapability = new _util.PromiseCapability();\n            this._headersCapability = new _util.PromiseCapability();\n          }\n          get headersReady() {\n            return this._headersCapability.promise;\n          }\n          get filename() {\n            return this._filename;\n          }\n          get contentLength() {\n            return this._contentLength;\n          }\n          get isRangeSupported() {\n            return this._isRangeSupported;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          async read() {\n            await this._readCapability.promise;\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            if (this._storedError) {\n              throw this._storedError;\n            }\n            const chunk = this._readableStream.read();\n            if (chunk === null) {\n              this._readCapability = new _util.PromiseCapability();\n              return this.read();\n            }\n            this._loaded += chunk.length;\n            this.onProgress?.({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n          _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this._error(new _util.AbortException(\"streaming is disabled\"));\n            }\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }\n        class BaseRangeReader {\n          constructor(stream) {\n            this._url = stream.url;\n            this._done = false;\n            this._storedError = null;\n            this.onProgress = null;\n            this._loaded = 0;\n            this._readableStream = null;\n            this._readCapability = new _util.PromiseCapability();\n            const source = stream.source;\n            this._isStreamingSupported = !source.disableStream;\n          }\n          get isStreamingSupported() {\n            return this._isStreamingSupported;\n          }\n          async read() {\n            await this._readCapability.promise;\n            if (this._done) {\n              return {\n                value: undefined,\n                done: true\n              };\n            }\n            if (this._storedError) {\n              throw this._storedError;\n            }\n            const chunk = this._readableStream.read();\n            if (chunk === null) {\n              this._readCapability = new _util.PromiseCapability();\n              return this.read();\n            }\n            this._loaded += chunk.length;\n            this.onProgress?.({\n              loaded: this._loaded\n            });\n            const buffer = new Uint8Array(chunk).buffer;\n            return {\n              value: buffer,\n              done: false\n            };\n          }\n          cancel(reason) {\n            if (!this._readableStream) {\n              this._error(reason);\n              return;\n            }\n            this._readableStream.destroy(reason);\n          }\n          _error(reason) {\n            this._storedError = reason;\n            this._readCapability.resolve();\n          }\n          _setReadableStream(readableStream) {\n            this._readableStream = readableStream;\n            readableStream.on(\"readable\", () => {\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"end\", () => {\n              readableStream.destroy();\n              this._done = true;\n              this._readCapability.resolve();\n            });\n            readableStream.on(\"error\", reason => {\n              this._error(reason);\n            });\n            if (this._storedError) {\n              this._readableStream.destroy(this._storedError);\n            }\n          }\n        }\n        function createRequestOptions(parsedUrl, headers) {\n          return {\n            protocol: parsedUrl.protocol,\n            auth: parsedUrl.auth,\n            host: parsedUrl.hostname,\n            port: parsedUrl.port,\n            path: parsedUrl.path,\n            method: \"GET\",\n            headers\n          };\n        }\n        class PDFNodeStreamFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n                this._headersCapability.reject(error);\n                return;\n              }\n              this._headersCapability.resolve();\n              this._setReadableStream(response);\n              const getResponseHeader = name => {\n                return this._readableStream.headers[name.toLowerCase()];\n              };\n              const {\n                allowRangeRequests,\n                suggestedLength\n              } = (0, _network_utils.validateRangeRequestCapabilities)({\n                getResponseHeader,\n                isHttp: stream.isHttp,\n                rangeChunkSize: this._rangeChunkSize,\n                disableRange: this._disableRange\n              });\n              this._isRangeSupported = allowRangeRequests;\n              this._contentLength = suggestedLength || this._contentLength;\n              this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n            };\n            this._request = null;\n            if (this._url.protocol === \"http:\") {\n              const http = require(\"http\");\n              this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            } else {\n              const https = require(\"https\");\n              this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n            }\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n              this._headersCapability.reject(reason);\n            });\n            this._request.end();\n          }\n        }\n        class PDFNodeStreamRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            this._httpHeaders = {};\n            for (const property in stream.httpHeaders) {\n              const value = stream.httpHeaders[property];\n              if (value === undefined) {\n                continue;\n              }\n              this._httpHeaders[property] = value;\n            }\n            this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n            const handleResponse = response => {\n              if (response.statusCode === 404) {\n                const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n                this._storedError = error;\n                return;\n              }\n              this._setReadableStream(response);\n            };\n            this._request = null;\n            if (this._url.protocol === \"http:\") {\n              const http = require(\"http\");\n              this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            } else {\n              const https = require(\"https\");\n              this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n            }\n            this._request.on(\"error\", reason => {\n              this._storedError = reason;\n            });\n            this._request.end();\n          }\n        }\n        class PDFNodeStreamFsFullReader extends BaseFullReader {\n          constructor(stream) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n            const fs = require(\"fs\");\n            fs.lstat(path, (error, stat) => {\n              if (error) {\n                if (error.code === \"ENOENT\") {\n                  error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n                }\n                this._storedError = error;\n                this._headersCapability.reject(error);\n                return;\n              }\n              this._contentLength = stat.size;\n              this._setReadableStream(fs.createReadStream(path));\n              this._headersCapability.resolve();\n            });\n          }\n        }\n        class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n          constructor(stream, start, end) {\n            super(stream);\n            let path = decodeURIComponent(this._url.path);\n            if (fileUriRegex.test(this._url.href)) {\n              path = path.replace(/^\\//, \"\");\n            }\n            const fs = require(\"fs\");\n            this._setReadableStream(fs.createReadStream(path, {\n              start,\n              end: end - 1\n            }));\n          }\n        }\n\n        /***/\n      }, /* 24 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.SVGGraphics = void 0;\n        var _display_utils = __w_pdfjs_require__(6);\n        var _util = __w_pdfjs_require__(1);\n        ;\n        const SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        const createObjectURL = function (data) {\n          let contentType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n          let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n            return URL.createObjectURL(new Blob([data], {\n              type: contentType\n            }));\n          }\n          const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n          let buffer = `data:${contentType};base64,`;\n          for (let i = 0, ii = data.length; i < ii; i += 3) {\n            const b1 = data[i] & 0xff;\n            const b2 = data[i + 1] & 0xff;\n            const b3 = data[i + 2] & 0xff;\n            const d1 = b1 >> 2,\n              d2 = (b1 & 3) << 4 | b2 >> 4;\n            const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n          return buffer;\n        };\n        const convertImgDataToPng = function () {\n          const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          const CHUNK_WRAPPER_SIZE = 12;\n          const crcTable = new Int32Array(256);\n          for (let i = 0; i < 256; i++) {\n            let c = i;\n            for (let h = 0; h < 8; h++) {\n              c = c & 1 ? 0xedb88320 ^ c >> 1 & 0x7fffffff : c >> 1 & 0x7fffffff;\n            }\n            crcTable[i] = c;\n          }\n          function crc32(data, start, end) {\n            let crc = -1;\n            for (let i = start; i < end; i++) {\n              const a = (crc ^ data[i]) & 0xff;\n              const b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n            return crc ^ -1;\n          }\n          function writePngChunk(type, body, data, offset) {\n            let p = offset;\n            const len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            const crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n          function adler32(data, start, end) {\n            let a = 1;\n            let b = 0;\n            for (let i = start; i < end; ++i) {\n              a = (a + (data[i] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n            return b << 16 | a;\n          }\n          function deflateSync(literals) {\n            if (!_util.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n            try {\n              const input = parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n              const output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n            return deflateSyncUncompressed(literals);\n          }\n          function deflateSyncUncompressed(literals) {\n            let len = literals.length;\n            const maxBlockLength = 0xffff;\n            const deflateBlocks = Math.ceil(len / maxBlockLength);\n            const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            let pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            let pos = 0;\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            const adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            let bitDepth, colorType, lineSize;\n            const bytes = imgData.data;\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n              default:\n                throw new Error(\"invalid format\");\n            }\n            const literals = new Uint8Array((1 + lineSize) * height);\n            let offsetLiterals = 0,\n              offsetBytes = 0;\n            for (let y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n              for (let y = 0; y < height; y++) {\n                offsetLiterals++;\n                for (let i = 0; i < lineSize; i++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n            const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            const idat = deflateSync(literals);\n            const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            const data = new Uint8Array(pngLength);\n            let offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return createObjectURL(data, \"image/png\", forceDataSchema);\n          }\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n        class SVGExtraState {\n          constructor() {\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n          clone() {\n            return Object.create(this);\n          }\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        }\n        function opListToTree(opList) {\n          let opTree = [];\n          const tmp = [];\n          for (const opListElement of opList) {\n            if (opListElement.fn === \"save\") {\n              opTree.push({\n                fnId: 92,\n                fn: \"group\",\n                items: []\n              });\n              tmp.push(opTree);\n              opTree = opTree.at(-1).items;\n              continue;\n            }\n            if (opListElement.fn === \"restore\") {\n              opTree = tmp.pop();\n            } else {\n              opTree.push(opListElement);\n            }\n          }\n          return opTree;\n        }\n        function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n          const s = value.toFixed(10);\n          let i = s.length - 1;\n          if (s[i] !== \"0\") {\n            return s;\n          }\n          do {\n            i--;\n          } while (s[i] === \"0\");\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        }\n        function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n              return `scale(${pf(m[0])} ${pf(m[3])})`;\n            }\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              const a = Math.acos(m[0]) * 180 / Math.PI;\n              return `rotate(${pf(a)})`;\n            }\n          } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n            return `translate(${pf(m[4])} ${pf(m[5])})`;\n          }\n          return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n        }\n        let clipCount = 0;\n        let maskCount = 0;\n        let shadingCount = 0;\n        class SVGGraphics {\n          constructor(commonObjs, objs) {\n            let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            (0, _display_utils.deprecated)(\"The SVG back-end is no longer maintained and *may* be removed in the future.\");\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n            for (const op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n          getObject(data) {\n            let fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (typeof data === \"string\") {\n              return data.startsWith(\"g_\") ? this.commonObjs.get(data) : this.objs.get(data);\n            }\n            return fallback;\n          }\n          save() {\n            this.transformStack.push(this.transformMatrix);\n            const old = this.current;\n            this.extraStack.push(old);\n            this.current = old.clone();\n          }\n          restore() {\n            this.transformMatrix = this.transformStack.pop();\n            this.current = this.extraStack.pop();\n            this.pendingClip = null;\n            this.tgrp = null;\n          }\n          group(items) {\n            this.save();\n            this.executeOpTree(items);\n            this.restore();\n          }\n          loadDependencies(operatorList) {\n            const fnArray = operatorList.fnArray;\n            const argsArray = operatorList.argsArray;\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              if (fnArray[i] !== _util.OPS.dependency) {\n                continue;\n              }\n              for (const obj of argsArray[i]) {\n                const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                const promise = new Promise(resolve => {\n                  objsPool.get(obj, resolve);\n                });\n                this.current.dependencies.push(promise);\n              }\n            }\n            return Promise.all(this.current.dependencies);\n          }\n          transform(a, b, c, d, e, f) {\n            const transformMatrix = [a, b, c, d, e, f];\n            this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n            this.tgrp = null;\n          }\n          getSVG(operatorList, viewport) {\n            this.viewport = viewport;\n            const svgElement = this._initialize(viewport);\n            return this.loadDependencies(operatorList).then(() => {\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.executeOpTree(this.convertOpList(operatorList));\n              return svgElement;\n            });\n          }\n          convertOpList(operatorList) {\n            const operatorIdMapping = this._operatorIdMapping;\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            const opList = [];\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              const fnId = fnArray[i];\n              opList.push({\n                fnId,\n                fn: operatorIdMapping[fnId],\n                args: argsArray[i]\n              });\n            }\n            return opListToTree(opList);\n          }\n          executeOpTree(opTree) {\n            for (const opTreeElement of opTree) {\n              const fn = opTreeElement.fn;\n              const fnId = opTreeElement.fnId;\n              const args = opTreeElement.args;\n              switch (fnId | 0) {\n                case _util.OPS.beginText:\n                  this.beginText();\n                  break;\n                case _util.OPS.dependency:\n                  break;\n                case _util.OPS.setLeading:\n                  this.setLeading(args);\n                  break;\n                case _util.OPS.setLeadingMoveText:\n                  this.setLeadingMoveText(args[0], args[1]);\n                  break;\n                case _util.OPS.setFont:\n                  this.setFont(args);\n                  break;\n                case _util.OPS.showText:\n                  this.showText(args[0]);\n                  break;\n                case _util.OPS.showSpacedText:\n                  this.showText(args[0]);\n                  break;\n                case _util.OPS.endText:\n                  this.endText();\n                  break;\n                case _util.OPS.moveText:\n                  this.moveText(args[0], args[1]);\n                  break;\n                case _util.OPS.setCharSpacing:\n                  this.setCharSpacing(args[0]);\n                  break;\n                case _util.OPS.setWordSpacing:\n                  this.setWordSpacing(args[0]);\n                  break;\n                case _util.OPS.setHScale:\n                  this.setHScale(args[0]);\n                  break;\n                case _util.OPS.setTextMatrix:\n                  this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n                case _util.OPS.setTextRise:\n                  this.setTextRise(args[0]);\n                  break;\n                case _util.OPS.setTextRenderingMode:\n                  this.setTextRenderingMode(args[0]);\n                  break;\n                case _util.OPS.setLineWidth:\n                  this.setLineWidth(args[0]);\n                  break;\n                case _util.OPS.setLineJoin:\n                  this.setLineJoin(args[0]);\n                  break;\n                case _util.OPS.setLineCap:\n                  this.setLineCap(args[0]);\n                  break;\n                case _util.OPS.setMiterLimit:\n                  this.setMiterLimit(args[0]);\n                  break;\n                case _util.OPS.setFillRGBColor:\n                  this.setFillRGBColor(args[0], args[1], args[2]);\n                  break;\n                case _util.OPS.setStrokeRGBColor:\n                  this.setStrokeRGBColor(args[0], args[1], args[2]);\n                  break;\n                case _util.OPS.setStrokeColorN:\n                  this.setStrokeColorN(args);\n                  break;\n                case _util.OPS.setFillColorN:\n                  this.setFillColorN(args);\n                  break;\n                case _util.OPS.shadingFill:\n                  this.shadingFill(args[0]);\n                  break;\n                case _util.OPS.setDash:\n                  this.setDash(args[0], args[1]);\n                  break;\n                case _util.OPS.setRenderingIntent:\n                  this.setRenderingIntent(args[0]);\n                  break;\n                case _util.OPS.setFlatness:\n                  this.setFlatness(args[0]);\n                  break;\n                case _util.OPS.setGState:\n                  this.setGState(args[0]);\n                  break;\n                case _util.OPS.fill:\n                  this.fill();\n                  break;\n                case _util.OPS.eoFill:\n                  this.eoFill();\n                  break;\n                case _util.OPS.stroke:\n                  this.stroke();\n                  break;\n                case _util.OPS.fillStroke:\n                  this.fillStroke();\n                  break;\n                case _util.OPS.eoFillStroke:\n                  this.eoFillStroke();\n                  break;\n                case _util.OPS.clip:\n                  this.clip(\"nonzero\");\n                  break;\n                case _util.OPS.eoClip:\n                  this.clip(\"evenodd\");\n                  break;\n                case _util.OPS.paintSolidColorImageMask:\n                  this.paintSolidColorImageMask();\n                  break;\n                case _util.OPS.paintImageXObject:\n                  this.paintImageXObject(args[0]);\n                  break;\n                case _util.OPS.paintInlineImageXObject:\n                  this.paintInlineImageXObject(args[0]);\n                  break;\n                case _util.OPS.paintImageMaskXObject:\n                  this.paintImageMaskXObject(args[0]);\n                  break;\n                case _util.OPS.paintFormXObjectBegin:\n                  this.paintFormXObjectBegin(args[0], args[1]);\n                  break;\n                case _util.OPS.paintFormXObjectEnd:\n                  this.paintFormXObjectEnd();\n                  break;\n                case _util.OPS.closePath:\n                  this.closePath();\n                  break;\n                case _util.OPS.closeStroke:\n                  this.closeStroke();\n                  break;\n                case _util.OPS.closeFillStroke:\n                  this.closeFillStroke();\n                  break;\n                case _util.OPS.closeEOFillStroke:\n                  this.closeEOFillStroke();\n                  break;\n                case _util.OPS.nextLine:\n                  this.nextLine();\n                  break;\n                case _util.OPS.transform:\n                  this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n                case _util.OPS.constructPath:\n                  this.constructPath(args[0], args[1]);\n                  break;\n                case _util.OPS.endPath:\n                  this.endPath();\n                  break;\n                case 92:\n                  this.group(opTreeElement.items);\n                  break;\n                default:\n                  (0, _util.warn)(`Unimplemented operator ${fn}`);\n                  break;\n              }\n            }\n          }\n          setWordSpacing(wordSpacing) {\n            this.current.wordSpacing = wordSpacing;\n          }\n          setCharSpacing(charSpacing) {\n            this.current.charSpacing = charSpacing;\n          }\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n          setTextMatrix(a, b, c, d, e, f) {\n            const current = this.current;\n            current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n            current.textMatrixScale = Math.hypot(a, b);\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtElement.append(current.tspan);\n          }\n          beginText() {\n            const current = this.current;\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.textMatrix = _util.IDENTITY_MATRIX;\n            current.lineMatrix = _util.IDENTITY_MATRIX;\n            current.textMatrixScale = 1;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n          moveText(x, y) {\n            const current = this.current;\n            current.x = current.lineX += x;\n            current.y = current.lineY += y;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          }\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n            if (fontSize === 0) {\n              return;\n            }\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            let x = 0;\n            for (const glyph of glyphs) {\n              if (glyph === null) {\n                x += fontDirection * wordSpacing;\n                continue;\n              } else if (typeof glyph === \"number\") {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              let scaledX, scaledY;\n              let width = glyph.width;\n              if (vertical) {\n                let vx;\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n              if (glyph.isInFont || font.missingFile) {\n                current.xcoords.push(current.x + scaledX);\n                if (vertical) {\n                  current.ycoords.push(-current.y + scaledY);\n                }\n                current.tspan.textContent += character;\n              } else {}\n              const charWidth = vertical ? width * widthAdvanceScale - spacing * fontDirection : width * widthAdvanceScale + spacing * fontDirection;\n              x += charWidth;\n            }\n            current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n            if (vertical) {\n              current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n            } else {\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n              current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n            }\n            if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n              current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n            }\n            const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n              }\n              if (current.fillAlpha < 1) {\n                current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              }\n            } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n              current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n            } else {\n              current.tspan.setAttributeNS(null, \"fill\", \"none\");\n            }\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              const lineWidthScale = 1 / (current.textMatrixScale || 1);\n              this._setStrokeAttributes(current.tspan, lineWidthScale);\n            }\n            let textMatrix = current.textMatrix;\n            if (current.textRise !== 0) {\n              textMatrix = textMatrix.slice();\n              textMatrix[5] += current.textRise;\n            }\n            current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n            current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n            current.txtElement.append(current.tspan);\n            current.txtgrp.append(current.txtElement);\n            this._ensureTransformGroup().append(current.txtElement);\n          }\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n          addFontStyle(fontObj) {\n            if (!fontObj.data) {\n              throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n            }\n            if (!this.cssStyle) {\n              this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n              this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n              this.defs.append(this.cssStyle);\n            }\n            const url = createObjectURL(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n            this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n          }\n          setFont(details) {\n            const current = this.current;\n            const fontObj = this.commonObjs.get(details[0]);\n            let size = details[1];\n            current.font = fontObj;\n            if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n              this.addFontStyle(fontObj);\n              this.embeddedFonts[fontObj.loadedName] = fontObj;\n            }\n            current.fontMatrix = fontObj.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            let bold = \"normal\";\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n            current.fontSize = size;\n            current.fontFamily = fontObj.loadedName;\n            current.fontWeight = bold;\n            current.fontStyle = italic;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n          endText() {\n            const current = this.current;\n            if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement?.hasChildNodes()) {\n              current.element = current.txtElement;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n          setLineWidth(width) {\n            if (width > 0) {\n              this.current.lineWidth = width;\n            }\n          }\n          setLineCap(style) {\n            this.current.lineCap = LINE_CAP_STYLES[style];\n          }\n          setLineJoin(style) {\n            this.current.lineJoin = LINE_JOIN_STYLES[style];\n          }\n          setMiterLimit(limit) {\n            this.current.miterLimit = limit;\n          }\n          setStrokeAlpha(strokeAlpha) {\n            this.current.strokeAlpha = strokeAlpha;\n          }\n          setStrokeRGBColor(r, g, b) {\n            this.current.strokeColor = _util.Util.makeHexColor(r, g, b);\n          }\n          setFillAlpha(fillAlpha) {\n            this.current.fillAlpha = fillAlpha;\n          }\n          setFillRGBColor(r, g, b) {\n            this.current.fillColor = _util.Util.makeHexColor(r, g, b);\n            this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            this.current.xcoords = [];\n            this.current.ycoords = [];\n          }\n          setStrokeColorN(args) {\n            this.current.strokeColor = this._makeColorN_Pattern(args);\n          }\n          setFillColorN(args) {\n            this.current.fillColor = this._makeColorN_Pattern(args);\n          }\n          shadingFill(args) {\n            const {\n              width,\n              height\n            } = this.viewport;\n            const inv = _util.Util.inverseTransform(this.transformMatrix);\n            const [x0, y0, x1, y1] = _util.Util.getAxialAlignedBoundingBox([0, 0, width, height], inv);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", x0);\n            rect.setAttributeNS(null, \"y\", y0);\n            rect.setAttributeNS(null, \"width\", x1 - x0);\n            rect.setAttributeNS(null, \"height\", y1 - y0);\n            rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n            if (this.current.fillAlpha < 1) {\n              rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n            }\n            this._ensureTransformGroup().append(rect);\n          }\n          _makeColorN_Pattern(args) {\n            if (args[0] === \"TilingPattern\") {\n              return this._makeTilingPattern(args);\n            }\n            return this._makeShadingPattern(args);\n          }\n          _makeTilingPattern(args) {\n            const color = args[1];\n            const operatorList = args[2];\n            const matrix = args[3] || _util.IDENTITY_MATRIX;\n            const [x0, y0, x1, y1] = args[4];\n            const xstep = args[5];\n            const ystep = args[6];\n            const paintType = args[7];\n            const tilingId = `shading${shadingCount++}`;\n            const [tx0, ty0, tx1, ty1] = _util.Util.normalizeRect([..._util.Util.applyTransform([x0, y0], matrix), ..._util.Util.applyTransform([x1, y1], matrix)]);\n            const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n            const txstep = xstep * xscale;\n            const tystep = ystep * yscale;\n            const tiling = this.svgFactory.createElement(\"svg:pattern\");\n            tiling.setAttributeNS(null, \"id\", tilingId);\n            tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n            tiling.setAttributeNS(null, \"width\", txstep);\n            tiling.setAttributeNS(null, \"height\", tystep);\n            tiling.setAttributeNS(null, \"x\", `${tx0}`);\n            tiling.setAttributeNS(null, \"y\", `${ty0}`);\n            const svg = this.svg;\n            const transformMatrix = this.transformMatrix;\n            const fillColor = this.current.fillColor;\n            const strokeColor = this.current.strokeColor;\n            const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n            this.svg = bbox;\n            this.transformMatrix = matrix;\n            if (paintType === 2) {\n              const cssColor = _util.Util.makeHexColor(...color);\n              this.current.fillColor = cssColor;\n              this.current.strokeColor = cssColor;\n            }\n            this.executeOpTree(this.convertOpList(operatorList));\n            this.svg = svg;\n            this.transformMatrix = transformMatrix;\n            this.current.fillColor = fillColor;\n            this.current.strokeColor = strokeColor;\n            tiling.append(bbox.childNodes[0]);\n            this.defs.append(tiling);\n            return `url(#${tilingId})`;\n          }\n          _makeShadingPattern(args) {\n            if (typeof args === \"string\") {\n              args = this.objs.get(args);\n            }\n            switch (args[0]) {\n              case \"RadialAxial\":\n                const shadingId = `shading${shadingCount++}`;\n                const colorStops = args[3];\n                let gradient;\n                switch (args[1]) {\n                  case \"axial\":\n                    const point0 = args[4];\n                    const point1 = args[5];\n                    gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"x1\", point0[0]);\n                    gradient.setAttributeNS(null, \"y1\", point0[1]);\n                    gradient.setAttributeNS(null, \"x2\", point1[0]);\n                    gradient.setAttributeNS(null, \"y2\", point1[1]);\n                    break;\n                  case \"radial\":\n                    const focalPoint = args[4];\n                    const circlePoint = args[5];\n                    const focalRadius = args[6];\n                    const circleRadius = args[7];\n                    gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                    gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                    gradient.setAttributeNS(null, \"r\", circleRadius);\n                    gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                    gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                    gradient.setAttributeNS(null, \"fr\", focalRadius);\n                    break;\n                  default:\n                    throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                }\n                for (const colorStop of colorStops) {\n                  const stop = this.svgFactory.createElement(\"svg:stop\");\n                  stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                  stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                  gradient.append(stop);\n                }\n                this.defs.append(gradient);\n                return `url(#${shadingId})`;\n              case \"Mesh\":\n                (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                return null;\n              case \"Dummy\":\n                return \"hotpink\";\n              default:\n                throw new Error(`Unknown IR type: ${args[0]}`);\n            }\n          }\n          setDash(dashArray, dashPhase) {\n            this.current.dashArray = dashArray;\n            this.current.dashPhase = dashPhase;\n          }\n          constructPath(ops, args) {\n            const current = this.current;\n            let x = current.x,\n              y = current.y;\n            let d = [];\n            let j = 0;\n            for (const op of ops) {\n              switch (op | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                  break;\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"M\", pf(x), pf(y));\n                  break;\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"L\", pf(x), pf(y));\n                  break;\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                  j += 6;\n                  break;\n                case _util.OPS.curveTo2:\n                  d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                  j += 4;\n                  break;\n                case _util.OPS.closePath:\n                  d.push(\"Z\");\n                  break;\n              }\n            }\n            d = d.join(\" \");\n            if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n              d = current.path.getAttributeNS(null, \"d\") + d;\n            } else {\n              current.path = this.svgFactory.createElement(\"svg:path\");\n              this._ensureTransformGroup().append(current.path);\n            }\n            current.path.setAttributeNS(null, \"d\", d);\n            current.path.setAttributeNS(null, \"fill\", \"none\");\n            current.element = current.path;\n            current.setCurrentPoint(x, y);\n          }\n          endPath() {\n            const current = this.current;\n            current.path = null;\n            if (!this.pendingClip) {\n              return;\n            }\n            if (!current.element) {\n              this.pendingClip = null;\n              return;\n            }\n            const clipId = `clippath${clipCount++}`;\n            const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n            clipPath.setAttributeNS(null, \"id\", clipId);\n            clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            const clipElement = current.element.cloneNode(true);\n            if (this.pendingClip === \"evenodd\") {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n            } else {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n            }\n            this.pendingClip = null;\n            clipPath.append(clipElement);\n            this.defs.append(clipPath);\n            if (current.activeClipUrl) {\n              current.clipGroup = null;\n              for (const prev of this.extraStack) {\n                prev.clipGroup = null;\n              }\n              clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n            }\n            current.activeClipUrl = `url(#${clipId})`;\n            this.tgrp = null;\n          }\n          clip(type) {\n            this.pendingClip = type;\n          }\n          closePath() {\n            const current = this.current;\n            if (current.path) {\n              const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n              current.path.setAttributeNS(null, \"d\", d);\n            }\n          }\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n          setTextRise(textRise) {\n            this.current.textRise = textRise;\n          }\n          setTextRenderingMode(textRenderingMode) {\n            this.current.textRenderingMode = textRenderingMode;\n          }\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n          setRenderingIntent(intent) {}\n          setFlatness(flatness) {}\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n                case \"Font\":\n                  this.setFont(value);\n                  break;\n                case \"CA\":\n                  this.setStrokeAlpha(value);\n                  break;\n                case \"ca\":\n                  this.setFillAlpha(value);\n                  break;\n                default:\n                  (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                  break;\n              }\n            }\n          }\n          fill() {\n            const current = this.current;\n            if (current.element) {\n              current.element.setAttributeNS(null, \"fill\", current.fillColor);\n              current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              this.endPath();\n            }\n          }\n          stroke() {\n            const current = this.current;\n            if (current.element) {\n              this._setStrokeAttributes(current.element);\n              current.element.setAttributeNS(null, \"fill\", \"none\");\n              this.endPath();\n            }\n          }\n          _setStrokeAttributes(element) {\n            let lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            const current = this.current;\n            let dashArray = current.dashArray;\n            if (lineWidthScale !== 1 && dashArray.length > 0) {\n              dashArray = dashArray.map(function (value) {\n                return lineWidthScale * value;\n              });\n            }\n            element.setAttributeNS(null, \"stroke\", current.strokeColor);\n            element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n            element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n            element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n            element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n            element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n            element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n            element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n          }\n          eoFill() {\n            this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            this.fill();\n          }\n          fillStroke() {\n            this.stroke();\n            this.fill();\n          }\n          eoFillStroke() {\n            this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            this.fillStroke();\n          }\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n          closeEOFillStroke() {\n            this.closePath();\n            this.eoFillStroke();\n          }\n          paintSolidColorImageMask() {\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", \"1px\");\n            rect.setAttributeNS(null, \"height\", \"1px\");\n            rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n            this._ensureTransformGroup().append(rect);\n          }\n          paintImageXObject(objId) {\n            const imgData = this.getObject(objId);\n            if (!imgData) {\n              (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n              return;\n            }\n            this.paintInlineImageXObject(imgData);\n          }\n          paintInlineImageXObject(imgData, mask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", \"0\");\n            cliprect.setAttributeNS(null, \"y\", \"0\");\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            const imgEl = this.svgFactory.createElement(\"svg:image\");\n            imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n            imgEl.setAttributeNS(null, \"x\", \"0\");\n            imgEl.setAttributeNS(null, \"y\", pf(-height));\n            imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n            imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n            imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n            if (mask) {\n              mask.append(imgEl);\n            } else {\n              this._ensureTransformGroup().append(imgEl);\n            }\n          }\n          paintImageMaskXObject(img) {\n            const imgData = this.getObject(img.data, img);\n            if (imgData.bitmap) {\n              (0, _util.warn)(\"paintImageMaskXObject: ImageBitmap support is not implemented, \" + \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\");\n              return;\n            }\n            const current = this.current;\n            const width = imgData.width;\n            const height = imgData.height;\n            const fillColor = current.fillColor;\n            current.maskId = `mask${maskCount++}`;\n            const mask = this.svgFactory.createElement(\"svg:mask\");\n            mask.setAttributeNS(null, \"id\", current.maskId);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", pf(width));\n            rect.setAttributeNS(null, \"height\", pf(height));\n            rect.setAttributeNS(null, \"fill\", fillColor);\n            rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n            this.defs.append(mask);\n            this._ensureTransformGroup().append(rect);\n            this.paintInlineImageXObject(imgData, mask);\n          }\n          paintFormXObjectBegin(matrix, bbox) {\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n            }\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              const cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", bbox[0]);\n              cliprect.setAttributeNS(null, \"y\", bbox[1]);\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n          paintFormXObjectEnd() {}\n          _initialize(viewport) {\n            const svg = this.svgFactory.create(viewport.width, viewport.height);\n            const definitions = this.svgFactory.createElement(\"svg:defs\");\n            svg.append(definitions);\n            this.defs = definitions;\n            const rootGroup = this.svgFactory.createElement(\"svg:g\");\n            rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n            svg.append(rootGroup);\n            this.svg = rootGroup;\n            return svg;\n          }\n          _ensureClipGroup() {\n            if (!this.current.clipGroup) {\n              const clipGroup = this.svgFactory.createElement(\"svg:g\");\n              clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n              this.svg.append(clipGroup);\n              this.current.clipGroup = clipGroup;\n            }\n            return this.current.clipGroup;\n          }\n          _ensureTransformGroup() {\n            if (!this.tgrp) {\n              this.tgrp = this.svgFactory.createElement(\"svg:g\");\n              this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n              if (this.current.activeClipUrl) {\n                this._ensureClipGroup().append(this.tgrp);\n              } else {\n                this.svg.append(this.tgrp);\n              }\n            }\n            return this.tgrp;\n          }\n        }\n        exports.SVGGraphics = SVGGraphics;\n\n        /***/\n      }, /* 25 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaText = void 0;\n        class XfaText {\n          static textContent(xfa) {\n            const items = [];\n            const output = {\n              items,\n              styles: Object.create(null)\n            };\n            function walk(node) {\n              if (!node) {\n                return;\n              }\n              let str = null;\n              const name = node.name;\n              if (name === \"#text\") {\n                str = node.value;\n              } else if (!XfaText.shouldBuildText(name)) {\n                return;\n              } else if (node?.attributes?.textContent) {\n                str = node.attributes.textContent;\n              } else if (node.value) {\n                str = node.value;\n              }\n              if (str !== null) {\n                items.push({\n                  str\n                });\n              }\n              if (!node.children) {\n                return;\n              }\n              for (const child of node.children) {\n                walk(child);\n              }\n            }\n            walk(xfa);\n            return output;\n          }\n          static shouldBuildText(name) {\n            return !(name === \"textarea\" || name === \"input\" || name === \"option\" || name === \"select\");\n          }\n        }\n        exports.XfaText = XfaText;\n\n        /***/\n      }, /* 26 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.TextLayerRenderTask = void 0;\n        exports.renderTextLayer = renderTextLayer;\n        exports.updateTextLayer = updateTextLayer;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        const MAX_TEXT_DIVS_TO_RENDER = 100000;\n        const DEFAULT_FONT_SIZE = 30;\n        const DEFAULT_FONT_ASCENT = 0.8;\n        const ascentCache = new Map();\n        function getCtx(size, isOffscreenCanvasSupported) {\n          let ctx;\n          if (isOffscreenCanvasSupported && _util.FeatureTest.isOffscreenCanvasSupported) {\n            ctx = new OffscreenCanvas(size, size).getContext(\"2d\", {\n              alpha: false\n            });\n          } else {\n            const canvas = document.createElement(\"canvas\");\n            canvas.width = canvas.height = size;\n            ctx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n          }\n          return ctx;\n        }\n        function getAscent(fontFamily, isOffscreenCanvasSupported) {\n          const cachedAscent = ascentCache.get(fontFamily);\n          if (cachedAscent) {\n            return cachedAscent;\n          }\n          const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n          ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n          const metrics = ctx.measureText(\"\");\n          let ascent = metrics.fontBoundingBoxAscent;\n          let descent = Math.abs(metrics.fontBoundingBoxDescent);\n          if (ascent) {\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            ctx.canvas.width = ctx.canvas.height = 0;\n            return ratio;\n          }\n          ctx.strokeStyle = \"red\";\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"g\", 0, 0);\n          let pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          descent = 0;\n          for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n            if (pixels[i] > 0) {\n              descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n          ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n          ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n          pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n          ascent = 0;\n          for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n            if (pixels[i] > 0) {\n              ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n              break;\n            }\n          }\n          ctx.canvas.width = ctx.canvas.height = 0;\n          if (ascent) {\n            const ratio = ascent / (ascent + descent);\n            ascentCache.set(fontFamily, ratio);\n            return ratio;\n          }\n          ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n          return DEFAULT_FONT_ASCENT;\n        }\n        function appendText(task, geom, styles) {\n          const textDiv = document.createElement(\"span\");\n          const textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            hasText: geom.str !== \"\",\n            hasEOL: geom.hasEOL,\n            fontSize: 0\n          };\n          task._textDivs.push(textDiv);\n          const tx = _util.Util.transform(task._transform, geom.transform);\n          let angle = Math.atan2(tx[1], tx[0]);\n          const style = styles[geom.fontName];\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n          const fontHeight = Math.hypot(tx[2], tx[3]);\n          const fontAscent = fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n          let left, top;\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n          const scaleFactorStr = \"calc(var(--scale-factor)*\";\n          const divStyle = textDiv.style;\n          if (task._container === task._rootContainer) {\n            divStyle.left = `${(100 * left / task._pageWidth).toFixed(2)}%`;\n            divStyle.top = `${(100 * top / task._pageHeight).toFixed(2)}%`;\n          } else {\n            divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n            divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n          }\n          divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n          divStyle.fontFamily = style.fontFamily;\n          textDivProperties.fontSize = fontHeight;\n          textDiv.setAttribute(\"role\", \"presentation\");\n          textDiv.textContent = geom.str;\n          textDiv.dir = geom.dir;\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n          let shouldScaleText = false;\n          if (geom.str.length > 1) {\n            shouldScaleText = true;\n          } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n            const absScaleX = Math.abs(geom.transform[0]),\n              absScaleY = Math.abs(geom.transform[3]);\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n          if (shouldScaleText) {\n            textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n          }\n          task._textDivProperties.set(textDiv, textDivProperties);\n          if (task._isReadableStream) {\n            task._layoutText(textDiv);\n          }\n        }\n        function layout(params) {\n          const {\n            div,\n            scale,\n            properties,\n            ctx,\n            prevFontSize,\n            prevFontFamily\n          } = params;\n          const {\n            style\n          } = div;\n          let transform = \"\";\n          if (properties.canvasWidth !== 0 && properties.hasText) {\n            const {\n              fontFamily\n            } = style;\n            const {\n              canvasWidth,\n              fontSize\n            } = properties;\n            if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n              ctx.font = `${fontSize * scale}px ${fontFamily}`;\n              params.prevFontSize = fontSize;\n              params.prevFontFamily = fontFamily;\n            }\n            const {\n              width\n            } = ctx.measureText(div.textContent);\n            if (width > 0) {\n              transform = `scaleX(${canvasWidth * scale / width})`;\n            }\n          }\n          if (properties.angle !== 0) {\n            transform = `rotate(${properties.angle}deg) ${transform}`;\n          }\n          if (transform.length > 0) {\n            style.transform = transform;\n          }\n        }\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n          const textDivs = task._textDivs;\n          const capability = task._capability;\n          const textDivsLength = textDivs.length;\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            capability.resolve();\n            return;\n          }\n          if (!task._isReadableStream) {\n            for (const textDiv of textDivs) {\n              task._layoutText(textDiv);\n            }\n          }\n          capability.resolve();\n        }\n        class TextLayerRenderTask {\n          constructor(_ref38) {\n            let {\n              textContentSource,\n              container,\n              viewport,\n              textDivs,\n              textDivProperties,\n              textContentItemsStr,\n              isOffscreenCanvasSupported\n            } = _ref38;\n            this._textContentSource = textContentSource;\n            this._isReadableStream = textContentSource instanceof ReadableStream;\n            this._container = this._rootContainer = container;\n            this._textDivs = textDivs || [];\n            this._textContentItemsStr = textContentItemsStr || [];\n            this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n            this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n            this._reader = null;\n            this._textDivProperties = textDivProperties || new WeakMap();\n            this._canceled = false;\n            this._capability = new _util.PromiseCapability();\n            this._layoutTextParams = {\n              prevFontSize: null,\n              prevFontFamily: null,\n              div: null,\n              scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n              properties: null,\n              ctx: getCtx(0, isOffscreenCanvasSupported)\n            };\n            const {\n              pageWidth,\n              pageHeight,\n              pageX,\n              pageY\n            } = viewport.rawDims;\n            this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n            this._pageWidth = pageWidth;\n            this._pageHeight = pageHeight;\n            (0, _display_utils.setLayerDimensions)(container, viewport);\n            this._capability.promise.finally(() => {\n              this._layoutTextParams = null;\n            }).catch(() => {});\n          }\n          get promise() {\n            return this._capability.promise;\n          }\n          cancel() {\n            this._canceled = true;\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\")).catch(() => {});\n              this._reader = null;\n            }\n            this._capability.reject(new _util.AbortException(\"TextLayer task cancelled.\"));\n          }\n          _processItems(items, styleCache) {\n            for (const item of items) {\n              if (item.str === undefined) {\n                if (item.type === \"beginMarkedContentProps\" || item.type === \"beginMarkedContent\") {\n                  const parent = this._container;\n                  this._container = document.createElement(\"span\");\n                  this._container.classList.add(\"markedContent\");\n                  if (item.id !== null) {\n                    this._container.setAttribute(\"id\", `${item.id}`);\n                  }\n                  parent.append(this._container);\n                } else if (item.type === \"endMarkedContent\") {\n                  this._container = this._container.parentNode;\n                }\n                continue;\n              }\n              this._textContentItemsStr.push(item.str);\n              appendText(this, item, styleCache);\n            }\n          }\n          _layoutText(textDiv) {\n            const textDivProperties = this._layoutTextParams.properties = this._textDivProperties.get(textDiv);\n            this._layoutTextParams.div = textDiv;\n            layout(this._layoutTextParams);\n            if (textDivProperties.hasText) {\n              this._container.append(textDiv);\n            }\n            if (textDivProperties.hasEOL) {\n              const br = document.createElement(\"br\");\n              br.setAttribute(\"role\", \"presentation\");\n              this._container.append(br);\n            }\n          }\n          _render() {\n            const capability = new _util.PromiseCapability();\n            let styleCache = Object.create(null);\n            if (this._isReadableStream) {\n              const pump = () => {\n                this._reader.read().then(_ref39 => {\n                  let {\n                    value,\n                    done\n                  } = _ref39;\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n                  Object.assign(styleCache, value.styles);\n                  this._processItems(value.items, styleCache);\n                  pump();\n                }, capability.reject);\n              };\n              this._reader = this._textContentSource.getReader();\n              pump();\n            } else if (this._textContentSource) {\n              const {\n                items,\n                styles\n              } = this._textContentSource;\n              this._processItems(items, styles);\n              capability.resolve();\n            } else {\n              throw new Error('No \"textContentSource\" parameter specified.');\n            }\n            capability.promise.then(() => {\n              styleCache = null;\n              render(this);\n            }, this._capability.reject);\n          }\n        }\n        exports.TextLayerRenderTask = TextLayerRenderTask;\n        function renderTextLayer(params) {\n          if (!params.textContentSource && (params.textContent || params.textContentStream)) {\n            (0, _display_utils.deprecated)(\"The TextLayerRender `textContent`/`textContentStream` parameters \" + \"will be removed in the future, please use `textContentSource` instead.\");\n            params.textContentSource = params.textContent || params.textContentStream;\n          }\n          const {\n            container,\n            viewport\n          } = params;\n          const style = getComputedStyle(container);\n          const visibility = style.getPropertyValue(\"visibility\");\n          const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n          if (visibility === \"visible\" && (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)) {\n            console.error(\"The `--scale-factor` CSS-variable must be set, \" + \"to the same value as `viewport.scale`, \" + \"either on the `container`-element itself or higher up in the DOM.\");\n          }\n          const task = new TextLayerRenderTask(params);\n          task._render();\n          return task;\n        }\n        function updateTextLayer(_ref40) {\n          let {\n            container,\n            viewport,\n            textDivs,\n            textDivProperties,\n            isOffscreenCanvasSupported,\n            mustRotate = true,\n            mustRescale = true\n          } = _ref40;\n          if (mustRotate) {\n            (0, _display_utils.setLayerDimensions)(container, {\n              rotation: viewport.rotation\n            });\n          }\n          if (mustRescale) {\n            const ctx = getCtx(0, isOffscreenCanvasSupported);\n            const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n            const params = {\n              prevFontSize: null,\n              prevFontFamily: null,\n              div: null,\n              scale,\n              properties: null,\n              ctx\n            };\n            for (const div of textDivs) {\n              params.properties = textDivProperties.get(div);\n              params.div = div;\n              layout(params);\n            }\n          }\n        }\n\n        /***/\n      }, /* 27 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.AnnotationEditorLayer = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _editor = __w_pdfjs_require__(4);\n        var _freetext = __w_pdfjs_require__(28);\n        var _ink = __w_pdfjs_require__(33);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _stamp = __w_pdfjs_require__(34);\n        class AnnotationEditorLayer {\n          #accessibilityManager;\n          #allowClick = false;\n          #annotationLayer = null;\n          #boundPointerup = this.pointerup.bind(this);\n          #boundPointerdown = this.pointerdown.bind(this);\n          #editors = new Map();\n          #hadPointerDown = false;\n          #isCleaningUp = false;\n          #isDisabling = false;\n          #uiManager;\n          static _initialized = false;\n          constructor(_ref41) {\n            let {\n              uiManager,\n              pageIndex,\n              div,\n              accessibilityManager,\n              annotationLayer,\n              viewport,\n              l10n\n            } = _ref41;\n            const editorTypes = [_freetext.FreeTextEditor, _ink.InkEditor, _stamp.StampEditor];\n            if (!AnnotationEditorLayer._initialized) {\n              AnnotationEditorLayer._initialized = true;\n              for (const editorType of editorTypes) {\n                editorType.initialize(l10n);\n              }\n            }\n            uiManager.registerEditorTypes(editorTypes);\n            this.#uiManager = uiManager;\n            this.pageIndex = pageIndex;\n            this.div = div;\n            this.#accessibilityManager = accessibilityManager;\n            this.#annotationLayer = annotationLayer;\n            this.viewport = viewport;\n            this.#uiManager.addLayer(this);\n          }\n          get isEmpty() {\n            return this.#editors.size === 0;\n          }\n          updateToolbar(mode) {\n            this.#uiManager.updateToolbar(mode);\n          }\n          updateMode() {\n            let mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.#uiManager.getMode();\n            this.#cleanup();\n            if (mode === _util.AnnotationEditorType.INK) {\n              this.addInkEditorIfNeeded(false);\n              this.disableClick();\n            } else {\n              this.enableClick();\n            }\n            if (mode !== _util.AnnotationEditorType.NONE) {\n              this.div.classList.toggle(\"freeTextEditing\", mode === _util.AnnotationEditorType.FREETEXT);\n              this.div.classList.toggle(\"inkEditing\", mode === _util.AnnotationEditorType.INK);\n              this.div.classList.toggle(\"stampEditing\", mode === _util.AnnotationEditorType.STAMP);\n              this.div.hidden = false;\n            }\n          }\n          addInkEditorIfNeeded(isCommitting) {\n            if (!isCommitting && this.#uiManager.getMode() !== _util.AnnotationEditorType.INK) {\n              return;\n            }\n            if (!isCommitting) {\n              for (const editor of this.#editors.values()) {\n                if (editor.isEmpty()) {\n                  editor.setInBackground();\n                  return;\n                }\n              }\n            }\n            const editor = this.#createAndAddNewEditor({\n              offsetX: 0,\n              offsetY: 0\n            }, false);\n            editor.setInBackground();\n          }\n          setEditingState(isEditing) {\n            this.#uiManager.setEditingState(isEditing);\n          }\n          addCommands(params) {\n            this.#uiManager.addCommands(params);\n          }\n          enable() {\n            this.div.style.pointerEvents = \"auto\";\n            const annotationElementIds = new Set();\n            for (const editor of this.#editors.values()) {\n              editor.enableEditing();\n              if (editor.annotationElementId) {\n                annotationElementIds.add(editor.annotationElementId);\n              }\n            }\n            if (!this.#annotationLayer) {\n              return;\n            }\n            const editables = this.#annotationLayer.getEditableAnnotations();\n            for (const editable of editables) {\n              editable.hide();\n              if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n                continue;\n              }\n              if (annotationElementIds.has(editable.data.id)) {\n                continue;\n              }\n              const editor = this.deserialize(editable);\n              if (!editor) {\n                continue;\n              }\n              this.addOrRebuild(editor);\n              editor.enableEditing();\n            }\n          }\n          disable() {\n            this.#isDisabling = true;\n            this.div.style.pointerEvents = \"none\";\n            const hiddenAnnotationIds = new Set();\n            for (const editor of this.#editors.values()) {\n              editor.disableEditing();\n              if (!editor.annotationElementId || editor.serialize() !== null) {\n                hiddenAnnotationIds.add(editor.annotationElementId);\n                continue;\n              }\n              this.getEditableAnnotation(editor.annotationElementId)?.show();\n              editor.remove();\n            }\n            if (this.#annotationLayer) {\n              const editables = this.#annotationLayer.getEditableAnnotations();\n              for (const editable of editables) {\n                const {\n                  id\n                } = editable.data;\n                if (hiddenAnnotationIds.has(id) || this.#uiManager.isDeletedAnnotationElement(id)) {\n                  continue;\n                }\n                editable.show();\n              }\n            }\n            this.#cleanup();\n            if (this.isEmpty) {\n              this.div.hidden = true;\n            }\n            this.#isDisabling = false;\n          }\n          getEditableAnnotation(id) {\n            return this.#annotationLayer?.getEditableAnnotation(id) || null;\n          }\n          setActiveEditor(editor) {\n            const currentActive = this.#uiManager.getActive();\n            if (currentActive === editor) {\n              return;\n            }\n            this.#uiManager.setActiveEditor(editor);\n          }\n          enableClick() {\n            this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n            this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n          }\n          disableClick() {\n            this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n            this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n          }\n          attach(editor) {\n            this.#editors.set(editor.id, editor);\n            const {\n              annotationElementId\n            } = editor;\n            if (annotationElementId && this.#uiManager.isDeletedAnnotationElement(annotationElementId)) {\n              this.#uiManager.removeDeletedAnnotationElement(editor);\n            }\n          }\n          detach(editor) {\n            this.#editors.delete(editor.id);\n            this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n            if (!this.#isDisabling && editor.annotationElementId) {\n              this.#uiManager.addDeletedAnnotationElement(editor);\n            }\n          }\n          remove(editor) {\n            this.detach(editor);\n            this.#uiManager.removeEditor(editor);\n            if (editor.div.contains(document.activeElement)) {\n              setTimeout(() => {\n                this.#uiManager.focusMainContainer();\n              }, 0);\n            }\n            editor.div.remove();\n            editor.isAttachedToDOM = false;\n            if (!this.#isCleaningUp) {\n              this.addInkEditorIfNeeded(false);\n            }\n          }\n          changeParent(editor) {\n            if (editor.parent === this) {\n              return;\n            }\n            if (editor.annotationElementId) {\n              this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n              _editor.AnnotationEditor.deleteAnnotationElement(editor);\n              editor.annotationElementId = null;\n            }\n            this.attach(editor);\n            editor.parent?.detach(editor);\n            editor.setParent(this);\n            if (editor.div && editor.isAttachedToDOM) {\n              editor.div.remove();\n              this.div.append(editor.div);\n            }\n          }\n          add(editor) {\n            this.changeParent(editor);\n            this.#uiManager.addEditor(editor);\n            this.attach(editor);\n            if (!editor.isAttachedToDOM) {\n              const div = editor.render();\n              this.div.append(div);\n              editor.isAttachedToDOM = true;\n            }\n            editor.fixAndSetPosition();\n            editor.onceAdded();\n            this.#uiManager.addToAnnotationStorage(editor);\n          }\n          moveEditorInDOM(editor) {\n            if (!editor.isAttachedToDOM) {\n              return;\n            }\n            const {\n              activeElement\n            } = document;\n            if (editor.div.contains(activeElement)) {\n              editor._focusEventsAllowed = false;\n              setTimeout(() => {\n                if (!editor.div.contains(document.activeElement)) {\n                  editor.div.addEventListener(\"focusin\", () => {\n                    editor._focusEventsAllowed = true;\n                  }, {\n                    once: true\n                  });\n                  activeElement.focus();\n                } else {\n                  editor._focusEventsAllowed = true;\n                }\n              }, 0);\n            }\n            editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(this.div, editor.div, editor.contentDiv, true);\n          }\n          addOrRebuild(editor) {\n            if (editor.needsToBeRebuilt()) {\n              editor.rebuild();\n            } else {\n              this.add(editor);\n            }\n          }\n          addUndoableEditor(editor) {\n            const cmd = () => editor._uiManager.rebuild(editor);\n            const undo = () => {\n              editor.remove();\n            };\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: false\n            });\n          }\n          getNextId() {\n            return this.#uiManager.getId();\n          }\n          #createNewEditor(params) {\n            switch (this.#uiManager.getMode()) {\n              case _util.AnnotationEditorType.FREETEXT:\n                return new _freetext.FreeTextEditor(params);\n              case _util.AnnotationEditorType.INK:\n                return new _ink.InkEditor(params);\n              case _util.AnnotationEditorType.STAMP:\n                return new _stamp.StampEditor(params);\n            }\n            return null;\n          }\n          pasteEditor(mode, params) {\n            this.#uiManager.updateToolbar(mode);\n            this.#uiManager.updateMode(mode);\n            const {\n              offsetX,\n              offsetY\n            } = this.#getCenterPoint();\n            const id = this.getNextId();\n            const editor = this.#createNewEditor({\n              parent: this,\n              id,\n              x: offsetX,\n              y: offsetY,\n              uiManager: this.#uiManager,\n              isCentered: true,\n              ...params\n            });\n            if (editor) {\n              this.add(editor);\n            }\n          }\n          deserialize(data) {\n            switch (data.annotationType ?? data.annotationEditorType) {\n              case _util.AnnotationEditorType.FREETEXT:\n                return _freetext.FreeTextEditor.deserialize(data, this, this.#uiManager);\n              case _util.AnnotationEditorType.INK:\n                return _ink.InkEditor.deserialize(data, this, this.#uiManager);\n              case _util.AnnotationEditorType.STAMP:\n                return _stamp.StampEditor.deserialize(data, this, this.#uiManager);\n            }\n            return null;\n          }\n          #createAndAddNewEditor(event, isCentered) {\n            const id = this.getNextId();\n            const editor = this.#createNewEditor({\n              parent: this,\n              id,\n              x: event.offsetX,\n              y: event.offsetY,\n              uiManager: this.#uiManager,\n              isCentered\n            });\n            if (editor) {\n              this.add(editor);\n            }\n            return editor;\n          }\n          #getCenterPoint() {\n            const {\n              x,\n              y,\n              width,\n              height\n            } = this.div.getBoundingClientRect();\n            const tlX = Math.max(0, x);\n            const tlY = Math.max(0, y);\n            const brX = Math.min(window.innerWidth, x + width);\n            const brY = Math.min(window.innerHeight, y + height);\n            const centerX = (tlX + brX) / 2 - x;\n            const centerY = (tlY + brY) / 2 - y;\n            const [offsetX, offsetY] = this.viewport.rotation % 180 === 0 ? [centerX, centerY] : [centerY, centerX];\n            return {\n              offsetX,\n              offsetY\n            };\n          }\n          addNewEditor() {\n            this.#createAndAddNewEditor(this.#getCenterPoint(), true);\n          }\n          setSelected(editor) {\n            this.#uiManager.setSelected(editor);\n          }\n          toggleSelected(editor) {\n            this.#uiManager.toggleSelected(editor);\n          }\n          isSelected(editor) {\n            return this.#uiManager.isSelected(editor);\n          }\n          unselect(editor) {\n            this.#uiManager.unselect(editor);\n          }\n          pointerup(event) {\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n            if (event.target !== this.div) {\n              return;\n            }\n            if (!this.#hadPointerDown) {\n              return;\n            }\n            this.#hadPointerDown = false;\n            if (!this.#allowClick) {\n              this.#allowClick = true;\n              return;\n            }\n            if (this.#uiManager.getMode() === _util.AnnotationEditorType.STAMP) {\n              this.#uiManager.unselectAll();\n              return;\n            }\n            this.#createAndAddNewEditor(event, false);\n          }\n          pointerdown(event) {\n            if (this.#hadPointerDown) {\n              this.#hadPointerDown = false;\n              return;\n            }\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            if (event.button !== 0 || event.ctrlKey && isMac) {\n              return;\n            }\n            if (event.target !== this.div) {\n              return;\n            }\n            this.#hadPointerDown = true;\n            const editor = this.#uiManager.getActive();\n            this.#allowClick = !editor || editor.isEmpty();\n          }\n          findNewParent(editor, x, y) {\n            const layer = this.#uiManager.findParent(x, y);\n            if (layer === null || layer === this) {\n              return false;\n            }\n            layer.changeParent(editor);\n            return true;\n          }\n          destroy() {\n            if (this.#uiManager.getActive()?.parent === this) {\n              this.#uiManager.commitOrRemove();\n              this.#uiManager.setActiveEditor(null);\n            }\n            for (const editor of this.#editors.values()) {\n              this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n              editor.setParent(null);\n              editor.isAttachedToDOM = false;\n              editor.div.remove();\n            }\n            this.div = null;\n            this.#editors.clear();\n            this.#uiManager.removeLayer(this);\n          }\n          #cleanup() {\n            this.#isCleaningUp = true;\n            for (const editor of this.#editors.values()) {\n              if (editor.isEmpty()) {\n                editor.remove();\n              }\n            }\n            this.#isCleaningUp = false;\n          }\n          render(_ref42) {\n            let {\n              viewport\n            } = _ref42;\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(this.div, viewport);\n            for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n              this.add(editor);\n            }\n            this.updateMode();\n          }\n          update(_ref43) {\n            let {\n              viewport\n            } = _ref43;\n            this.#uiManager.commitOrRemove();\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(this.div, {\n              rotation: viewport.rotation\n            });\n            this.updateMode();\n          }\n          get pageDimensions() {\n            const {\n              pageWidth,\n              pageHeight\n            } = this.viewport.rawDims;\n            return [pageWidth, pageHeight];\n          }\n        }\n        exports.AnnotationEditorLayer = AnnotationEditorLayer;\n\n        /***/\n      }, /* 28 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.FreeTextEditor = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _tools = __w_pdfjs_require__(5);\n        var _editor = __w_pdfjs_require__(4);\n        var _annotation_layer = __w_pdfjs_require__(29);\n        class FreeTextEditor extends _editor.AnnotationEditor {\n          #boundEditorDivBlur = this.editorDivBlur.bind(this);\n          #boundEditorDivFocus = this.editorDivFocus.bind(this);\n          #boundEditorDivInput = this.editorDivInput.bind(this);\n          #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n          #color;\n          #content = \"\";\n          #editorDivId = `${this.id}-editor`;\n          #fontSize;\n          #initialData = null;\n          static _freeTextDefaultContent = \"\";\n          static _internalPadding = 0;\n          static _defaultColor = null;\n          static _defaultFontSize = 10;\n          static get _keyboardManager() {\n            const proto = FreeTextEditor.prototype;\n            const arrowChecker = self => self.isEmpty();\n            const small = _tools.AnnotationEditorUIManager.TRANSLATE_SMALL;\n            const big = _tools.AnnotationEditorUIManager.TRANSLATE_BIG;\n            return (0, _util.shadow)(this, \"_keyboardManager\", new _tools.KeyboardManager([[[\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"], proto.commitOrRemove, {\n              bubbles: true\n            }], [[\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"], proto.commitOrRemove], [[\"ArrowLeft\", \"mac+ArrowLeft\"], proto._translateEmpty, {\n              args: [-small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"], proto._translateEmpty, {\n              args: [-big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowRight\", \"mac+ArrowRight\"], proto._translateEmpty, {\n              args: [small, 0],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"], proto._translateEmpty, {\n              args: [big, 0],\n              checker: arrowChecker\n            }], [[\"ArrowUp\", \"mac+ArrowUp\"], proto._translateEmpty, {\n              args: [0, -small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"], proto._translateEmpty, {\n              args: [0, -big],\n              checker: arrowChecker\n            }], [[\"ArrowDown\", \"mac+ArrowDown\"], proto._translateEmpty, {\n              args: [0, small],\n              checker: arrowChecker\n            }], [[\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"], proto._translateEmpty, {\n              args: [0, big],\n              checker: arrowChecker\n            }]]));\n          }\n          static _type = \"freetext\";\n          constructor(params) {\n            super({\n              ...params,\n              name: \"freeTextEditor\"\n            });\n            this.#color = params.color || FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n            this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n          }\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n, {\n              strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"]\n            });\n            const style = getComputedStyle(document.documentElement);\n            this._internalPadding = parseFloat(style.getPropertyValue(\"--freetext-padding\"));\n          }\n          static updateDefaultParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                FreeTextEditor._defaultFontSize = value;\n                break;\n              case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                FreeTextEditor._defaultColor = value;\n                break;\n            }\n          }\n          updateParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.FREETEXT_SIZE:\n                this.#updateFontSize(value);\n                break;\n              case _util.AnnotationEditorParamsType.FREETEXT_COLOR:\n                this.#updateColor(value);\n                break;\n            }\n          }\n          static get defaultPropertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, FreeTextEditor._defaultFontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, FreeTextEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor]];\n          }\n          get propertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize], [_util.AnnotationEditorParamsType.FREETEXT_COLOR, this.#color]];\n          }\n          #updateFontSize(fontSize) {\n            const setFontsize = size => {\n              this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n              this.translate(0, -(size - this.#fontSize) * this.parentScale);\n              this.#fontSize = size;\n              this.#setEditorDimensions();\n            };\n            const savedFontsize = this.#fontSize;\n            this.addCommands({\n              cmd: () => {\n                setFontsize(fontSize);\n              },\n              undo: () => {\n                setFontsize(savedFontsize);\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.FREETEXT_SIZE,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          #updateColor(color) {\n            const savedColor = this.#color;\n            this.addCommands({\n              cmd: () => {\n                this.#color = this.editorDiv.style.color = color;\n              },\n              undo: () => {\n                this.#color = this.editorDiv.style.color = savedColor;\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.FREETEXT_COLOR,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          _translateEmpty(x, y) {\n            this._uiManager.translateSelectedEditors(x, y, true);\n          }\n          getInitialTranslation() {\n            const scale = this.parentScale;\n            return [-FreeTextEditor._internalPadding * scale, -(FreeTextEditor._internalPadding + this.#fontSize) * scale];\n          }\n          rebuild() {\n            if (!this.parent) {\n              return;\n            }\n            super.rebuild();\n            if (this.div === null) {\n              return;\n            }\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n            }\n          }\n          enableEditMode() {\n            if (this.isInEditMode()) {\n              return;\n            }\n            this.parent.setEditingState(false);\n            this.parent.updateToolbar(_util.AnnotationEditorType.FREETEXT);\n            super.enableEditMode();\n            this.overlayDiv.classList.remove(\"enabled\");\n            this.editorDiv.contentEditable = true;\n            this._isDraggable = false;\n            this.div.removeAttribute(\"aria-activedescendant\");\n            this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n            this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n            this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n            this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n          }\n          disableEditMode() {\n            if (!this.isInEditMode()) {\n              return;\n            }\n            this.parent.setEditingState(true);\n            super.disableEditMode();\n            this.overlayDiv.classList.add(\"enabled\");\n            this.editorDiv.contentEditable = false;\n            this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n            this._isDraggable = true;\n            this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n            this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n            this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n            this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n            this.div.focus({\n              preventScroll: true\n            });\n            this.isEditing = false;\n            this.parent.div.classList.add(\"freeTextEditing\");\n          }\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n            super.focusin(event);\n            if (event.target !== this.editorDiv) {\n              this.editorDiv.focus();\n            }\n          }\n          onceAdded() {\n            if (this.width) {\n              this.#cheatInitialRect();\n              return;\n            }\n            this.enableEditMode();\n            this.editorDiv.focus();\n            if (this._initialOptions?.isCentered) {\n              this.center();\n            }\n            this._initialOptions = null;\n          }\n          isEmpty() {\n            return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n          }\n          remove() {\n            this.isEditing = false;\n            if (this.parent) {\n              this.parent.setEditingState(true);\n              this.parent.div.classList.add(\"freeTextEditing\");\n            }\n            super.remove();\n          }\n          #extractText() {\n            const divs = this.editorDiv.getElementsByTagName(\"div\");\n            if (divs.length === 0) {\n              return this.editorDiv.innerText;\n            }\n            const buffer = [];\n            for (const div of divs) {\n              buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n            }\n            return buffer.join(\"\\n\");\n          }\n          #setEditorDimensions() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            let rect;\n            if (this.isAttachedToDOM) {\n              rect = this.div.getBoundingClientRect();\n            } else {\n              const {\n                currentLayer,\n                div\n              } = this;\n              const savedDisplay = div.style.display;\n              div.style.display = \"hidden\";\n              currentLayer.div.append(this.div);\n              rect = div.getBoundingClientRect();\n              div.remove();\n              div.style.display = savedDisplay;\n            }\n            if (this.rotation % 180 === this.parentRotation % 180) {\n              this.width = rect.width / parentWidth;\n              this.height = rect.height / parentHeight;\n            } else {\n              this.width = rect.height / parentWidth;\n              this.height = rect.width / parentHeight;\n            }\n            this.fixAndSetPosition();\n          }\n          commit() {\n            if (!this.isInEditMode()) {\n              return;\n            }\n            super.commit();\n            this.disableEditMode();\n            const savedText = this.#content;\n            const newText = this.#content = this.#extractText().trimEnd();\n            if (savedText === newText) {\n              return;\n            }\n            const setText = text => {\n              this.#content = text;\n              if (!text) {\n                this.remove();\n                return;\n              }\n              this.#setContent();\n              this._uiManager.rebuild(this);\n              this.#setEditorDimensions();\n            };\n            this.addCommands({\n              cmd: () => {\n                setText(newText);\n              },\n              undo: () => {\n                setText(savedText);\n              },\n              mustExec: false\n            });\n            this.#setEditorDimensions();\n          }\n          shouldGetKeyboardEvents() {\n            return this.isInEditMode();\n          }\n          enterInEditMode() {\n            this.enableEditMode();\n            this.editorDiv.focus();\n          }\n          dblclick(event) {\n            this.enterInEditMode();\n          }\n          keydown(event) {\n            if (event.target === this.div && event.key === \"Enter\") {\n              this.enterInEditMode();\n              event.preventDefault();\n            }\n          }\n          editorDivKeydown(event) {\n            FreeTextEditor._keyboardManager.exec(this, event);\n          }\n          editorDivFocus(event) {\n            this.isEditing = true;\n          }\n          editorDivBlur(event) {\n            this.isEditing = false;\n          }\n          editorDivInput(event) {\n            this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n          }\n          disableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"comment\");\n            this.editorDiv.removeAttribute(\"aria-multiline\");\n          }\n          enableEditing() {\n            this.editorDiv.setAttribute(\"role\", \"textbox\");\n            this.editorDiv.setAttribute(\"aria-multiline\", true);\n          }\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n            let baseX, baseY;\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n            super.render();\n            this.editorDiv = document.createElement(\"div\");\n            this.editorDiv.className = \"internal\";\n            this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n            this.enableEditing();\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_free_text2_aria_label\").then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n            _editor.AnnotationEditor._l10nPromise.get(\"free_text2_default_content\").then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n            this.editorDiv.contentEditable = true;\n            const {\n              style\n            } = this.editorDiv;\n            style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n            style.color = this.#color;\n            this.div.append(this.editorDiv);\n            this.overlayDiv = document.createElement(\"div\");\n            this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n            this.div.append(this.overlayDiv);\n            (0, _tools.bindEvents)(this, this.div, [\"dblclick\", \"keydown\"]);\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              if (this.annotationElementId) {\n                const {\n                  position\n                } = this.#initialData;\n                let [tx, ty] = this.getInitialTranslation();\n                [tx, ty] = this.pageTranslationToScreen(tx, ty);\n                const [pageWidth, pageHeight] = this.pageDimensions;\n                const [pageX, pageY] = this.pageTranslation;\n                let posX, posY;\n                switch (this.rotation) {\n                  case 0:\n                    posX = baseX + (position[0] - pageX) / pageWidth;\n                    posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n                    break;\n                  case 90:\n                    posX = baseX + (position[0] - pageX) / pageWidth;\n                    posY = baseY - (position[1] - pageY) / pageHeight;\n                    [tx, ty] = [ty, -tx];\n                    break;\n                  case 180:\n                    posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n                    posY = baseY - (position[1] - pageY) / pageHeight;\n                    [tx, ty] = [-tx, -ty];\n                    break;\n                  case 270:\n                    posX = baseX + (position[0] - pageX - this.height * pageHeight) / pageWidth;\n                    posY = baseY + (position[1] - pageY - this.width * pageWidth) / pageHeight;\n                    [tx, ty] = [-ty, tx];\n                    break;\n                }\n                this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n              } else {\n                this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              }\n              this.#setContent();\n              this._isDraggable = true;\n              this.editorDiv.contentEditable = false;\n            } else {\n              this._isDraggable = false;\n              this.editorDiv.contentEditable = true;\n            }\n            return this.div;\n          }\n          #setContent() {\n            this.editorDiv.replaceChildren();\n            if (!this.#content) {\n              return;\n            }\n            for (const line of this.#content.split(\"\\n\")) {\n              const div = document.createElement(\"div\");\n              div.append(line ? document.createTextNode(line) : document.createElement(\"br\"));\n              this.editorDiv.append(div);\n            }\n          }\n          get contentDiv() {\n            return this.editorDiv;\n          }\n          static deserialize(data, parent, uiManager) {\n            let initialData = null;\n            if (data instanceof _annotation_layer.FreeTextAnnotationElement) {\n              const {\n                data: {\n                  defaultAppearanceData: {\n                    fontSize,\n                    fontColor\n                  },\n                  rect,\n                  rotation,\n                  id\n                },\n                textContent,\n                textPosition,\n                parent: {\n                  page: {\n                    pageNumber\n                  }\n                }\n              } = data;\n              if (!textContent || textContent.length === 0) {\n                return null;\n              }\n              initialData = data = {\n                annotationType: _util.AnnotationEditorType.FREETEXT,\n                color: Array.from(fontColor),\n                fontSize,\n                value: textContent.join(\"\\n\"),\n                position: textPosition,\n                pageIndex: pageNumber - 1,\n                rect,\n                rotation,\n                id,\n                deleted: false\n              };\n            }\n            const editor = super.deserialize(data, parent, uiManager);\n            editor.#fontSize = data.fontSize;\n            editor.#color = _util.Util.makeHexColor(...data.color);\n            editor.#content = data.value;\n            editor.annotationElementId = data.id || null;\n            editor.#initialData = initialData;\n            return editor;\n          }\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.isEmpty()) {\n              return null;\n            }\n            if (this.deleted) {\n              return {\n                pageIndex: this.pageIndex,\n                id: this.annotationElementId,\n                deleted: true\n              };\n            }\n            const padding = FreeTextEditor._internalPadding * this.parentScale;\n            const rect = this.getRect(padding, padding);\n            const color = _editor.AnnotationEditor._colorManager.convert(this.isAttachedToDOM ? getComputedStyle(this.editorDiv).color : this.#color);\n            const serialized = {\n              annotationType: _util.AnnotationEditorType.FREETEXT,\n              color,\n              fontSize: this.#fontSize,\n              value: this.#content,\n              pageIndex: this.pageIndex,\n              rect,\n              rotation: this.rotation,\n              structTreeParentId: this._structTreeParentId\n            };\n            if (isForCopying) {\n              return serialized;\n            }\n            if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n              return null;\n            }\n            serialized.id = this.annotationElementId;\n            return serialized;\n          }\n          #hasElementChanged(serialized) {\n            const {\n              value,\n              fontSize,\n              color,\n              rect,\n              pageIndex\n            } = this.#initialData;\n            return serialized.value !== value || serialized.fontSize !== fontSize || serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) || serialized.color.some((c, i) => c !== color[i]) || serialized.pageIndex !== pageIndex;\n          }\n          #cheatInitialRect() {\n            let delayed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (!this.annotationElementId) {\n              return;\n            }\n            this.#setEditorDimensions();\n            if (!delayed && (this.width === 0 || this.height === 0)) {\n              setTimeout(() => this.#cheatInitialRect(true), 0);\n              return;\n            }\n            const padding = FreeTextEditor._internalPadding * this.parentScale;\n            this.#initialData.rect = this.getRect(padding, padding);\n          }\n        }\n        exports.FreeTextEditor = FreeTextEditor;\n\n        /***/\n      }, /* 29 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StampAnnotationElement = exports.InkAnnotationElement = exports.FreeTextAnnotationElement = exports.AnnotationLayer = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _annotation_storage = __w_pdfjs_require__(3);\n        var _scripting_utils = __w_pdfjs_require__(30);\n        var _displayL10n_utils = __w_pdfjs_require__(31);\n        var _xfa_layer = __w_pdfjs_require__(32);\n        const DEFAULT_TAB_INDEX = 1000;\n        const DEFAULT_FONT_SIZE = 9;\n        const GetElementsByNameSet = new WeakSet();\n        function getRectDims(rect) {\n          return {\n            width: rect[2] - rect[0],\n            height: rect[3] - rect[1]\n          };\n        }\n        class AnnotationElementFactory {\n          static create(parameters) {\n            const subtype = parameters.data.annotationType;\n            switch (subtype) {\n              case _util.AnnotationType.LINK:\n                return new LinkAnnotationElement(parameters);\n              case _util.AnnotationType.TEXT:\n                return new TextAnnotationElement(parameters);\n              case _util.AnnotationType.WIDGET:\n                const fieldType = parameters.data.fieldType;\n                switch (fieldType) {\n                  case \"Tx\":\n                    return new TextWidgetAnnotationElement(parameters);\n                  case \"Btn\":\n                    if (parameters.data.radioButton) {\n                      return new RadioButtonWidgetAnnotationElement(parameters);\n                    } else if (parameters.data.checkBox) {\n                      return new CheckboxWidgetAnnotationElement(parameters);\n                    }\n                    return new PushButtonWidgetAnnotationElement(parameters);\n                  case \"Ch\":\n                    return new ChoiceWidgetAnnotationElement(parameters);\n                  case \"Sig\":\n                    return new SignatureWidgetAnnotationElement(parameters);\n                }\n                return new WidgetAnnotationElement(parameters);\n              case _util.AnnotationType.POPUP:\n                return new PopupAnnotationElement(parameters);\n              case _util.AnnotationType.FREETEXT:\n                return new FreeTextAnnotationElement(parameters);\n              case _util.AnnotationType.LINE:\n                return new LineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUARE:\n                return new SquareAnnotationElement(parameters);\n              case _util.AnnotationType.CIRCLE:\n                return new CircleAnnotationElement(parameters);\n              case _util.AnnotationType.POLYLINE:\n                return new PolylineAnnotationElement(parameters);\n              case _util.AnnotationType.CARET:\n                return new CaretAnnotationElement(parameters);\n              case _util.AnnotationType.INK:\n                return new InkAnnotationElement(parameters);\n              case _util.AnnotationType.POLYGON:\n                return new PolygonAnnotationElement(parameters);\n              case _util.AnnotationType.HIGHLIGHT:\n                return new HighlightAnnotationElement(parameters);\n              case _util.AnnotationType.UNDERLINE:\n                return new UnderlineAnnotationElement(parameters);\n              case _util.AnnotationType.SQUIGGLY:\n                return new SquigglyAnnotationElement(parameters);\n              case _util.AnnotationType.STRIKEOUT:\n                return new StrikeOutAnnotationElement(parameters);\n              case _util.AnnotationType.STAMP:\n                return new StampAnnotationElement(parameters);\n              case _util.AnnotationType.FILEATTACHMENT:\n                return new FileAttachmentAnnotationElement(parameters);\n              default:\n                return new AnnotationElement(parameters);\n            }\n          }\n        }\n        class AnnotationElement {\n          #hasBorder = false;\n          constructor(parameters) {\n            let {\n              isRenderable = false,\n              ignoreBorder = false,\n              createQuadrilaterals = false\n            } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            this.isRenderable = isRenderable;\n            this.data = parameters.data;\n            this.layer = parameters.layer;\n            this.linkService = parameters.linkService;\n            this.downloadManager = parameters.downloadManager;\n            this.imageResourcesPath = parameters.imageResourcesPath;\n            this.renderForms = parameters.renderForms;\n            this.svgFactory = parameters.svgFactory;\n            this.annotationStorage = parameters.annotationStorage;\n            this.enableScripting = parameters.enableScripting;\n            this.hasJSActions = parameters.hasJSActions;\n            this._fieldObjects = parameters.fieldObjects;\n            this.parent = parameters.parent;\n            if (isRenderable) {\n              this.container = this._createContainer(ignoreBorder);\n            }\n            if (createQuadrilaterals) {\n              this._createQuadrilaterals();\n            }\n          }\n          static _hasPopupData(_ref44) {\n            let {\n              titleObj,\n              contentsObj,\n              richText\n            } = _ref44;\n            return !!(titleObj?.str || contentsObj?.str || richText?.str);\n          }\n          get hasPopupData() {\n            return AnnotationElement._hasPopupData(this.data);\n          }\n          _createContainer(ignoreBorder) {\n            const {\n              data,\n              parent: {\n                page,\n                viewport\n              }\n            } = this;\n            const container = document.createElement(\"section\");\n            container.setAttribute(\"data-annotation-id\", data.id);\n            if (!(this instanceof WidgetAnnotationElement)) {\n              container.tabIndex = DEFAULT_TAB_INDEX;\n            }\n            container.style.zIndex = this.parent.zIndex++;\n            if (this.data.popupRef) {\n              container.setAttribute(\"aria-haspopup\", \"dialog\");\n            }\n            if (data.noRotate) {\n              container.classList.add(\"norotate\");\n            }\n            const {\n              pageWidth,\n              pageHeight,\n              pageX,\n              pageY\n            } = viewport.rawDims;\n            if (!data.rect || this instanceof PopupAnnotationElement) {\n              const {\n                rotation\n              } = data;\n              if (!data.hasOwnCanvas && rotation !== 0) {\n                this.setRotation(rotation, container);\n              }\n              return container;\n            }\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n            if (!ignoreBorder && data.borderStyle.width > 0) {\n              container.style.borderWidth = `${data.borderStyle.width}px`;\n              const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n              const verticalRadius = data.borderStyle.verticalCornerRadius;\n              if (horizontalRadius > 0 || verticalRadius > 0) {\n                const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n                container.style.borderRadius = radius;\n              } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n                const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n                container.style.borderRadius = radius;\n              }\n              switch (data.borderStyle.style) {\n                case _util.AnnotationBorderStyleType.SOLID:\n                  container.style.borderStyle = \"solid\";\n                  break;\n                case _util.AnnotationBorderStyleType.DASHED:\n                  container.style.borderStyle = \"dashed\";\n                  break;\n                case _util.AnnotationBorderStyleType.BEVELED:\n                  (0, _util.warn)(\"Unimplemented border style: beveled\");\n                  break;\n                case _util.AnnotationBorderStyleType.INSET:\n                  (0, _util.warn)(\"Unimplemented border style: inset\");\n                  break;\n                case _util.AnnotationBorderStyleType.UNDERLINE:\n                  container.style.borderBottomStyle = \"solid\";\n                  break;\n                default:\n                  break;\n              }\n              const borderColor = data.borderColor || null;\n              if (borderColor) {\n                this.#hasBorder = true;\n                container.style.borderColor = _util.Util.makeHexColor(borderColor[0] | 0, borderColor[1] | 0, borderColor[2] | 0);\n              } else {\n                container.style.borderWidth = 0;\n              }\n            }\n            container.style.left = `${100 * (rect[0] - pageX) / pageWidth}%`;\n            container.style.top = `${100 * (rect[1] - pageY) / pageHeight}%`;\n            const {\n              rotation\n            } = data;\n            if (data.hasOwnCanvas || rotation === 0) {\n              container.style.width = `${100 * width / pageWidth}%`;\n              container.style.height = `${100 * height / pageHeight}%`;\n            } else {\n              this.setRotation(rotation, container);\n            }\n            return container;\n          }\n          setRotation(angle) {\n            let container = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.container;\n            if (!this.data.rect) {\n              return;\n            }\n            const {\n              pageWidth,\n              pageHeight\n            } = this.parent.viewport.rawDims;\n            const {\n              width,\n              height\n            } = getRectDims(this.data.rect);\n            let elementWidth, elementHeight;\n            if (angle % 180 === 0) {\n              elementWidth = 100 * width / pageWidth;\n              elementHeight = 100 * height / pageHeight;\n            } else {\n              elementWidth = 100 * height / pageWidth;\n              elementHeight = 100 * width / pageHeight;\n            }\n            container.style.width = `${elementWidth}%`;\n            container.style.height = `${elementHeight}%`;\n            container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n          }\n          get _commonActions() {\n            const setColor = (jsName, styleName, event) => {\n              const color = event.detail[jsName];\n              const colorType = color[0];\n              const colorArray = color.slice(1);\n              event.target.style[styleName] = _scripting_utils.ColorConverters[`${colorType}_HTML`](colorArray);\n              this.annotationStorage.setValue(this.data.id, {\n                [styleName]: _scripting_utils.ColorConverters[`${colorType}_rgb`](colorArray)\n              });\n            };\n            return (0, _util.shadow)(this, \"_commonActions\", {\n              display: event => {\n                const {\n                  display\n                } = event.detail;\n                const hidden = display % 2 === 1;\n                this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  noView: hidden,\n                  noPrint: display === 1 || display === 2\n                });\n              },\n              print: event => {\n                this.annotationStorage.setValue(this.data.id, {\n                  noPrint: !event.detail.print\n                });\n              },\n              hidden: event => {\n                const {\n                  hidden\n                } = event.detail;\n                this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n                this.annotationStorage.setValue(this.data.id, {\n                  noPrint: hidden,\n                  noView: hidden\n                });\n              },\n              focus: event => {\n                setTimeout(() => event.target.focus({\n                  preventScroll: false\n                }), 0);\n              },\n              userName: event => {\n                event.target.title = event.detail.userName;\n              },\n              readonly: event => {\n                event.target.disabled = event.detail.readonly;\n              },\n              required: event => {\n                this._setRequired(event.target, event.detail.required);\n              },\n              bgColor: event => {\n                setColor(\"bgColor\", \"backgroundColor\", event);\n              },\n              fillColor: event => {\n                setColor(\"fillColor\", \"backgroundColor\", event);\n              },\n              fgColor: event => {\n                setColor(\"fgColor\", \"color\", event);\n              },\n              textColor: event => {\n                setColor(\"textColor\", \"color\", event);\n              },\n              borderColor: event => {\n                setColor(\"borderColor\", \"borderColor\", event);\n              },\n              strokeColor: event => {\n                setColor(\"strokeColor\", \"borderColor\", event);\n              },\n              rotation: event => {\n                const angle = event.detail.rotation;\n                this.setRotation(angle);\n                this.annotationStorage.setValue(this.data.id, {\n                  rotation: angle\n                });\n              }\n            });\n          }\n          _dispatchEventFromSandbox(actions, jsEvent) {\n            const commonActions = this._commonActions;\n            for (const name of Object.keys(jsEvent.detail)) {\n              const action = actions[name] || commonActions[name];\n              action?.(jsEvent);\n            }\n          }\n          _setDefaultPropertiesFromJS(element) {\n            if (!this.enableScripting) {\n              return;\n            }\n            const storedData = this.annotationStorage.getRawValue(this.data.id);\n            if (!storedData) {\n              return;\n            }\n            const commonActions = this._commonActions;\n            for (const [actionName, detail] of Object.entries(storedData)) {\n              const action = commonActions[actionName];\n              if (action) {\n                const eventProxy = {\n                  detail: {\n                    [actionName]: detail\n                  },\n                  target: element\n                };\n                action(eventProxy);\n                delete storedData[actionName];\n              }\n            }\n          }\n          _createQuadrilaterals() {\n            if (!this.container) {\n              return;\n            }\n            const {\n              quadPoints\n            } = this.data;\n            if (!quadPoints) {\n              return;\n            }\n            const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n            if (quadPoints.length === 1) {\n              const [, {\n                x: trX,\n                y: trY\n              }, {\n                x: blX,\n                y: blY\n              }] = quadPoints[0];\n              if (rectTrX === trX && rectTrY === trY && rectBlX === blX && rectBlY === blY) {\n                return;\n              }\n            }\n            const {\n              style\n            } = this.container;\n            let svgBuffer;\n            if (this.#hasBorder) {\n              const {\n                borderColor,\n                borderWidth\n              } = style;\n              style.borderWidth = 0;\n              svgBuffer = [\"url('data:image/svg+xml;utf8,\", `<svg xmlns=\"http://www.w3.org/2000/svg\"`, ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`, `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`];\n              this.container.classList.add(\"hasBorder\");\n            }\n            const width = rectTrX - rectBlX;\n            const height = rectTrY - rectBlY;\n            const {\n              svgFactory\n            } = this;\n            const svg = svgFactory.createElement(\"svg\");\n            svg.classList.add(\"quadrilateralsContainer\");\n            svg.setAttribute(\"width\", 0);\n            svg.setAttribute(\"height\", 0);\n            const defs = svgFactory.createElement(\"defs\");\n            svg.append(defs);\n            const clipPath = svgFactory.createElement(\"clipPath\");\n            const id = `clippath_${this.data.id}`;\n            clipPath.setAttribute(\"id\", id);\n            clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n            defs.append(clipPath);\n            for (const [, {\n              x: trX,\n              y: trY\n            }, {\n              x: blX,\n              y: blY\n            }] of quadPoints) {\n              const rect = svgFactory.createElement(\"rect\");\n              const x = (blX - rectBlX) / width;\n              const y = (rectTrY - trY) / height;\n              const rectWidth = (trX - blX) / width;\n              const rectHeight = (trY - blY) / height;\n              rect.setAttribute(\"x\", x);\n              rect.setAttribute(\"y\", y);\n              rect.setAttribute(\"width\", rectWidth);\n              rect.setAttribute(\"height\", rectHeight);\n              clipPath.append(rect);\n              svgBuffer?.push(`<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`);\n            }\n            if (this.#hasBorder) {\n              svgBuffer.push(`</g></svg>')`);\n              style.backgroundImage = svgBuffer.join(\"\");\n            }\n            this.container.append(svg);\n            this.container.style.clipPath = `url(#${id})`;\n          }\n          _createPopup() {\n            const {\n              container,\n              data\n            } = this;\n            container.setAttribute(\"aria-haspopup\", \"dialog\");\n            const popup = new PopupAnnotationElement({\n              data: {\n                color: data.color,\n                titleObj: data.titleObj,\n                modificationDate: data.modificationDate,\n                contentsObj: data.contentsObj,\n                richText: data.richText,\n                parentRect: data.rect,\n                borderStyle: 0,\n                id: `popup_${data.id}`,\n                rotation: data.rotation\n              },\n              parent: this.parent,\n              elements: [this]\n            });\n            this.parent.div.append(popup.render());\n          }\n          render() {\n            (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n          }\n          _getElementsByName(name) {\n            let skipId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            const fields = [];\n            if (this._fieldObjects) {\n              const fieldObj = this._fieldObjects[name];\n              if (fieldObj) {\n                for (const {\n                  page,\n                  id,\n                  exportValues\n                } of fieldObj) {\n                  if (page === -1) {\n                    continue;\n                  }\n                  if (id === skipId) {\n                    continue;\n                  }\n                  const exportValue = typeof exportValues === \"string\" ? exportValues : null;\n                  const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                  if (domElement && !GetElementsByNameSet.has(domElement)) {\n                    (0, _util.warn)(`_getElementsByName - element not allowed: ${id}`);\n                    continue;\n                  }\n                  fields.push({\n                    id,\n                    exportValue,\n                    domElement\n                  });\n                }\n              }\n              return fields;\n            }\n            for (const domElement of document.getElementsByName(name)) {\n              const {\n                exportValue\n              } = domElement;\n              const id = domElement.getAttribute(\"data-element-id\");\n              if (id === skipId) {\n                continue;\n              }\n              if (!GetElementsByNameSet.has(domElement)) {\n                continue;\n              }\n              fields.push({\n                id,\n                exportValue,\n                domElement\n              });\n            }\n            return fields;\n          }\n          show() {\n            if (this.container) {\n              this.container.hidden = false;\n            }\n            this.popup?.maybeShow();\n          }\n          hide() {\n            if (this.container) {\n              this.container.hidden = true;\n            }\n            this.popup?.forceHide();\n          }\n          getElementsToTriggerPopup() {\n            return this.container;\n          }\n          addHighlightArea() {\n            const triggers = this.getElementsToTriggerPopup();\n            if (Array.isArray(triggers)) {\n              for (const element of triggers) {\n                element.classList.add(\"highlightArea\");\n              }\n            } else {\n              triggers.classList.add(\"highlightArea\");\n            }\n          }\n          _editOnDoubleClick() {\n            const {\n              annotationEditorType: mode,\n              data: {\n                id: editId\n              }\n            } = this;\n            this.container.addEventListener(\"dblclick\", () => {\n              this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n                source: this,\n                mode,\n                editId\n              });\n            });\n          }\n        }\n        class LinkAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: !!options?.ignoreBorder,\n              createQuadrilaterals: true\n            });\n            this.isTooltipOnly = parameters.data.isTooltipOnly;\n          }\n          render() {\n            const {\n              data,\n              linkService\n            } = this;\n            const link = document.createElement(\"a\");\n            link.setAttribute(\"data-element-id\", data.id);\n            let isBound = false;\n            if (data.url) {\n              linkService.addLinkAttributes(link, data.url, data.newWindow);\n              isBound = true;\n            } else if (data.action) {\n              this._bindNamedAction(link, data.action);\n              isBound = true;\n            } else if (data.attachment) {\n              this._bindAttachment(link, data.attachment);\n              isBound = true;\n            } else if (data.setOCGState) {\n              this.#bindSetOCGState(link, data.setOCGState);\n              isBound = true;\n            } else if (data.dest) {\n              this._bindLink(link, data.dest);\n              isBound = true;\n            } else {\n              if (data.actions && (data.actions.Action || data.actions[\"Mouse Up\"] || data.actions[\"Mouse Down\"]) && this.enableScripting && this.hasJSActions) {\n                this._bindJSAction(link, data);\n                isBound = true;\n              }\n              if (data.resetForm) {\n                this._bindResetFormAction(link, data.resetForm);\n                isBound = true;\n              } else if (this.isTooltipOnly && !isBound) {\n                this._bindLink(link, \"\");\n                isBound = true;\n              }\n            }\n            this.container.classList.add(\"linkAnnotation\");\n            if (isBound) {\n              this.container.append(link);\n            }\n            return this.container;\n          }\n          #setInternalLink() {\n            this.container.setAttribute(\"data-internal-link\", \"\");\n          }\n          _bindLink(link, destination) {\n            link.href = this.linkService.getDestinationHash(destination);\n            link.onclick = () => {\n              if (destination) {\n                this.linkService.goToDestination(destination);\n              }\n              return false;\n            };\n            if (destination || destination === \"\") {\n              this.#setInternalLink();\n            }\n          }\n          _bindNamedAction(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = () => {\n              this.linkService.executeNamedAction(action);\n              return false;\n            };\n            this.#setInternalLink();\n          }\n          _bindAttachment(link, attachment) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = () => {\n              this.downloadManager?.openOrDownloadData(this.container, attachment.content, attachment.filename);\n              return false;\n            };\n            this.#setInternalLink();\n          }\n          #bindSetOCGState(link, action) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            link.onclick = () => {\n              this.linkService.executeSetOCGState(action);\n              return false;\n            };\n            this.#setInternalLink();\n          }\n          _bindJSAction(link, data) {\n            link.href = this.linkService.getAnchorUrl(\"\");\n            const map = new Map([[\"Action\", \"onclick\"], [\"Mouse Up\", \"onmouseup\"], [\"Mouse Down\", \"onmousedown\"]]);\n            for (const name of Object.keys(data.actions)) {\n              const jsName = map.get(name);\n              if (!jsName) {\n                continue;\n              }\n              link[jsName] = () => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: data.id,\n                    name\n                  }\n                });\n                return false;\n              };\n            }\n            if (!link.onclick) {\n              link.onclick = () => false;\n            }\n            this.#setInternalLink();\n          }\n          _bindResetFormAction(link, resetForm) {\n            const otherClickAction = link.onclick;\n            if (!otherClickAction) {\n              link.href = this.linkService.getAnchorUrl(\"\");\n            }\n            this.#setInternalLink();\n            if (!this._fieldObjects) {\n              (0, _util.warn)(`_bindResetFormAction - \"resetForm\" action not supported, ` + \"ensure that the `fieldObjects` parameter is provided.\");\n              if (!otherClickAction) {\n                link.onclick = () => false;\n              }\n              return;\n            }\n            link.onclick = () => {\n              otherClickAction?.();\n              const {\n                fields: resetFormFields,\n                refs: resetFormRefs,\n                include\n              } = resetForm;\n              const allFields = [];\n              if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n                const fieldIds = new Set(resetFormRefs);\n                for (const fieldName of resetFormFields) {\n                  const fields = this._fieldObjects[fieldName] || [];\n                  for (const {\n                    id\n                  } of fields) {\n                    fieldIds.add(id);\n                  }\n                }\n                for (const fields of Object.values(this._fieldObjects)) {\n                  for (const field of fields) {\n                    if (fieldIds.has(field.id) === include) {\n                      allFields.push(field);\n                    }\n                  }\n                }\n              } else {\n                for (const fields of Object.values(this._fieldObjects)) {\n                  allFields.push(...fields);\n                }\n              }\n              const storage = this.annotationStorage;\n              const allIds = [];\n              for (const field of allFields) {\n                const {\n                  id\n                } = field;\n                allIds.push(id);\n                switch (field.type) {\n                  case \"text\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n                  case \"checkbox\":\n                  case \"radiobutton\":\n                    {\n                      const value = field.defaultValue === field.exportValues;\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n                  case \"combobox\":\n                  case \"listbox\":\n                    {\n                      const value = field.defaultValue || \"\";\n                      storage.setValue(id, {\n                        value\n                      });\n                      break;\n                    }\n                  default:\n                    continue;\n                }\n                const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n                if (!domElement) {\n                  continue;\n                } else if (!GetElementsByNameSet.has(domElement)) {\n                  (0, _util.warn)(`_bindResetFormAction - element not allowed: ${id}`);\n                  continue;\n                }\n                domElement.dispatchEvent(new Event(\"resetform\"));\n              }\n              if (this.enableScripting) {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: \"app\",\n                    ids: allIds,\n                    name: \"ResetForm\"\n                  }\n                });\n              }\n              return false;\n            };\n          }\n        }\n        class TextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"textAnnotation\");\n            const image = document.createElement(\"img\");\n            image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n            image.alt = \"[{{type}} Annotation]\";\n            image.dataset.l10nId = \"text_annotation_type\";\n            image.dataset.l10nArgs = JSON.stringify({\n              type: this.data.name\n            });\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.append(image);\n            return this.container;\n          }\n        }\n        class WidgetAnnotationElement extends AnnotationElement {\n          render() {\n            if (this.data.alternativeText) {\n              this.container.title = this.data.alternativeText;\n            }\n            return this.container;\n          }\n          showElementAndHideCanvas(element) {\n            if (this.data.hasOwnCanvas) {\n              if (element.previousSibling?.nodeName === \"CANVAS\") {\n                element.previousSibling.hidden = true;\n              }\n              element.hidden = false;\n            }\n          }\n          _getKeyModifier(event) {\n            const {\n              isWin,\n              isMac\n            } = _util.FeatureTest.platform;\n            return isWin && event.ctrlKey || isMac && event.metaKey;\n          }\n          _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n            if (baseName.includes(\"mouse\")) {\n              element.addEventListener(baseName, event => {\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event),\n                    shift: event.shiftKey,\n                    modifier: this._getKeyModifier(event)\n                  }\n                });\n              });\n            } else {\n              element.addEventListener(baseName, event => {\n                if (baseName === \"blur\") {\n                  if (!elementData.focused || !event.relatedTarget) {\n                    return;\n                  }\n                  elementData.focused = false;\n                } else if (baseName === \"focus\") {\n                  if (elementData.focused) {\n                    return;\n                  }\n                  elementData.focused = true;\n                }\n                if (!valueGetter) {\n                  return;\n                }\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id: this.data.id,\n                    name: eventName,\n                    value: valueGetter(event)\n                  }\n                });\n              });\n            }\n          }\n          _setEventListeners(element, elementData, names, getter) {\n            for (const [baseName, eventName] of names) {\n              if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n                if (eventName === \"Focus\" || eventName === \"Blur\") {\n                  elementData ||= {\n                    focused: false\n                  };\n                }\n                this._setEventListener(element, elementData, baseName, eventName, getter);\n                if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n                  this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n                } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n                  this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n                }\n              }\n            }\n          }\n          _setBackgroundColor(element) {\n            const color = this.data.backgroundColor || null;\n            element.style.backgroundColor = color === null ? \"transparent\" : _util.Util.makeHexColor(color[0], color[1], color[2]);\n          }\n          _setTextStyle(element) {\n            const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n            const {\n              fontColor\n            } = this.data.defaultAppearanceData;\n            const fontSize = this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n            const style = element.style;\n            let computedFontSize;\n            const BORDER_SIZE = 2;\n            const roundToOneDecimal = x => Math.round(10 * x) / 10;\n            if (this.data.multiLine) {\n              const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n              const numberOfLines = Math.round(height / (_util.LINE_FACTOR * fontSize)) || 1;\n              const lineHeight = height / numberOfLines;\n              computedFontSize = Math.min(fontSize, roundToOneDecimal(lineHeight / _util.LINE_FACTOR));\n            } else {\n              const height = Math.abs(this.data.rect[3] - this.data.rect[1] - BORDER_SIZE);\n              computedFontSize = Math.min(fontSize, roundToOneDecimal(height / _util.LINE_FACTOR));\n            }\n            style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n            style.color = _util.Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n            if (this.data.textAlignment !== null) {\n              style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n            }\n          }\n          _setRequired(element, isRequired) {\n            if (isRequired) {\n              element.setAttribute(\"required\", true);\n            } else {\n              element.removeAttribute(\"required\");\n            }\n            element.setAttribute(\"aria-required\", isRequired);\n          }\n        }\n        class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            const isRenderable = parameters.renderForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n            super(parameters, {\n              isRenderable\n            });\n          }\n          setPropertyOnSiblings(base, key, value, keyInStorage) {\n            const storage = this.annotationStorage;\n            for (const element of this._getElementsByName(base.name, base.id)) {\n              if (element.domElement) {\n                element.domElement[key] = value;\n              }\n              storage.setValue(element.id, {\n                [keyInStorage]: value\n              });\n            }\n          }\n          render() {\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            this.container.classList.add(\"textWidgetAnnotation\");\n            let element = null;\n            if (this.renderForms) {\n              const storedData = storage.getValue(id, {\n                value: this.data.fieldValue\n              });\n              let textContent = storedData.value || \"\";\n              const maxLen = storage.getValue(id, {\n                charLimit: this.data.maxLen\n              }).charLimit;\n              if (maxLen && textContent.length > maxLen) {\n                textContent = textContent.slice(0, maxLen);\n              }\n              let fieldFormattedValues = storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n              if (fieldFormattedValues && this.data.comb) {\n                fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n              }\n              const elementData = {\n                userValue: textContent,\n                formattedValue: fieldFormattedValues,\n                lastCommittedValue: null,\n                commitKey: 1,\n                focused: false\n              };\n              if (this.data.multiLine) {\n                element = document.createElement(\"textarea\");\n                element.textContent = fieldFormattedValues ?? textContent;\n                if (this.data.doNotScroll) {\n                  element.style.overflowY = \"hidden\";\n                }\n              } else {\n                element = document.createElement(\"input\");\n                element.type = \"text\";\n                element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n                if (this.data.doNotScroll) {\n                  element.style.overflowX = \"hidden\";\n                }\n              }\n              if (this.data.hasOwnCanvas) {\n                element.hidden = true;\n              }\n              GetElementsByNameSet.add(element);\n              element.setAttribute(\"data-element-id\", id);\n              element.disabled = this.data.readOnly;\n              element.name = this.data.fieldName;\n              element.tabIndex = DEFAULT_TAB_INDEX;\n              this._setRequired(element, this.data.required);\n              if (maxLen) {\n                element.maxLength = maxLen;\n              }\n              element.addEventListener(\"input\", event => {\n                storage.setValue(id, {\n                  value: event.target.value\n                });\n                this.setPropertyOnSiblings(element, \"value\", event.target.value, \"value\");\n                elementData.formattedValue = null;\n              });\n              element.addEventListener(\"resetform\", event => {\n                const defaultValue = this.data.defaultFieldValue ?? \"\";\n                element.value = elementData.userValue = defaultValue;\n                elementData.formattedValue = null;\n              });\n              let blurListener = event => {\n                const {\n                  formattedValue\n                } = elementData;\n                if (formattedValue !== null && formattedValue !== undefined) {\n                  event.target.value = formattedValue;\n                }\n                event.target.scrollLeft = 0;\n              };\n              if (this.enableScripting && this.hasJSActions) {\n                element.addEventListener(\"focus\", event => {\n                  if (elementData.focused) {\n                    return;\n                  }\n                  const {\n                    target\n                  } = event;\n                  if (elementData.userValue) {\n                    target.value = elementData.userValue;\n                  }\n                  elementData.lastCommittedValue = target.value;\n                  elementData.commitKey = 1;\n                  elementData.focused = true;\n                });\n                element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                  this.showElementAndHideCanvas(jsEvent.target);\n                  const actions = {\n                    value(event) {\n                      elementData.userValue = event.detail.value ?? \"\";\n                      storage.setValue(id, {\n                        value: elementData.userValue.toString()\n                      });\n                      event.target.value = elementData.userValue;\n                    },\n                    formattedValue(event) {\n                      const {\n                        formattedValue\n                      } = event.detail;\n                      elementData.formattedValue = formattedValue;\n                      if (formattedValue !== null && formattedValue !== undefined && event.target !== document.activeElement) {\n                        event.target.value = formattedValue;\n                      }\n                      storage.setValue(id, {\n                        formattedValue\n                      });\n                    },\n                    selRange(event) {\n                      event.target.setSelectionRange(...event.detail.selRange);\n                    },\n                    charLimit: event => {\n                      const {\n                        charLimit\n                      } = event.detail;\n                      const {\n                        target\n                      } = event;\n                      if (charLimit === 0) {\n                        target.removeAttribute(\"maxLength\");\n                        return;\n                      }\n                      target.setAttribute(\"maxLength\", charLimit);\n                      let value = elementData.userValue;\n                      if (!value || value.length <= charLimit) {\n                        return;\n                      }\n                      value = value.slice(0, charLimit);\n                      target.value = elementData.userValue = value;\n                      storage.setValue(id, {\n                        value\n                      });\n                      this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                        source: this,\n                        detail: {\n                          id,\n                          name: \"Keystroke\",\n                          value,\n                          willCommit: true,\n                          commitKey: 1,\n                          selStart: target.selectionStart,\n                          selEnd: target.selectionEnd\n                        }\n                      });\n                    }\n                  };\n                  this._dispatchEventFromSandbox(actions, jsEvent);\n                });\n                element.addEventListener(\"keydown\", event => {\n                  elementData.commitKey = 1;\n                  let commitKey = -1;\n                  if (event.key === \"Escape\") {\n                    commitKey = 0;\n                  } else if (event.key === \"Enter\" && !this.data.multiLine) {\n                    commitKey = 2;\n                  } else if (event.key === \"Tab\") {\n                    elementData.commitKey = 3;\n                  }\n                  if (commitKey === -1) {\n                    return;\n                  }\n                  const {\n                    value\n                  } = event.target;\n                  if (elementData.lastCommittedValue === value) {\n                    return;\n                  }\n                  elementData.lastCommittedValue = value;\n                  elementData.userValue = value;\n                  this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                    source: this,\n                    detail: {\n                      id,\n                      name: \"Keystroke\",\n                      value,\n                      willCommit: true,\n                      commitKey,\n                      selStart: event.target.selectionStart,\n                      selEnd: event.target.selectionEnd\n                    }\n                  });\n                });\n                const _blurListener = blurListener;\n                blurListener = null;\n                element.addEventListener(\"blur\", event => {\n                  if (!elementData.focused || !event.relatedTarget) {\n                    return;\n                  }\n                  elementData.focused = false;\n                  const {\n                    value\n                  } = event.target;\n                  elementData.userValue = value;\n                  if (elementData.lastCommittedValue !== value) {\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        willCommit: true,\n                        commitKey: elementData.commitKey,\n                        selStart: event.target.selectionStart,\n                        selEnd: event.target.selectionEnd\n                      }\n                    });\n                  }\n                  _blurListener(event);\n                });\n                if (this.data.actions?.Keystroke) {\n                  element.addEventListener(\"beforeinput\", event => {\n                    elementData.lastCommittedValue = null;\n                    const {\n                      data,\n                      target\n                    } = event;\n                    const {\n                      value,\n                      selectionStart,\n                      selectionEnd\n                    } = target;\n                    let selStart = selectionStart,\n                      selEnd = selectionEnd;\n                    switch (event.inputType) {\n                      case \"deleteWordBackward\":\n                        {\n                          const match = value.substring(0, selectionStart).match(/\\w*[^\\w]*$/);\n                          if (match) {\n                            selStart -= match[0].length;\n                          }\n                          break;\n                        }\n                      case \"deleteWordForward\":\n                        {\n                          const match = value.substring(selectionStart).match(/^[^\\w]*\\w*/);\n                          if (match) {\n                            selEnd += match[0].length;\n                          }\n                          break;\n                        }\n                      case \"deleteContentBackward\":\n                        if (selectionStart === selectionEnd) {\n                          selStart -= 1;\n                        }\n                        break;\n                      case \"deleteContentForward\":\n                        if (selectionStart === selectionEnd) {\n                          selEnd += 1;\n                        }\n                        break;\n                    }\n                    event.preventDefault();\n                    this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                      source: this,\n                      detail: {\n                        id,\n                        name: \"Keystroke\",\n                        value,\n                        change: data || \"\",\n                        willCommit: false,\n                        selStart,\n                        selEnd\n                      }\n                    });\n                  });\n                }\n                this._setEventListeners(element, elementData, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.value);\n              }\n              if (blurListener) {\n                element.addEventListener(\"blur\", blurListener);\n              }\n              if (this.data.comb) {\n                const fieldWidth = this.data.rect[2] - this.data.rect[0];\n                const combWidth = fieldWidth / maxLen;\n                element.classList.add(\"comb\");\n                element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n              }\n            } else {\n              element = document.createElement(\"div\");\n              element.textContent = this.data.fieldValue;\n              element.style.verticalAlign = \"middle\";\n              element.style.display = \"table-cell\";\n            }\n            this._setTextStyle(element);\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }\n        class SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: !!parameters.data.hasOwnCanvas\n            });\n          }\n        }\n        class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n          render() {\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.exportValue === data.fieldValue\n            }).value;\n            if (typeof value === \"string\") {\n              value = value !== \"Off\";\n              storage.setValue(id, {\n                value\n              });\n            }\n            this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n            this._setRequired(element, this.data.required);\n            element.type = \"checkbox\";\n            element.name = data.fieldName;\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n            element.setAttribute(\"exportValue\", data.exportValue);\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n              for (const checkbox of this._getElementsByName(name, id)) {\n                const curChecked = checked && checkbox.exportValue === data.exportValue;\n                if (checkbox.domElement) {\n                  checkbox.domElement.checked = curChecked;\n                }\n                storage.setValue(checkbox.id, {\n                  value: curChecked\n                });\n              }\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue || \"Off\";\n              event.target.checked = defaultValue === data.exportValue;\n            });\n            if (this.enableScripting && this.hasJSActions) {\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    event.target.checked = event.detail.value !== \"Off\";\n                    storage.setValue(id, {\n                      value: event.target.checked\n                    });\n                  }\n                };\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }\n        class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n          render() {\n            this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n            const storage = this.annotationStorage;\n            const data = this.data;\n            const id = data.id;\n            let value = storage.getValue(id, {\n              value: data.fieldValue === data.buttonValue\n            }).value;\n            if (typeof value === \"string\") {\n              value = value !== data.buttonValue;\n              storage.setValue(id, {\n                value\n              });\n            }\n            const element = document.createElement(\"input\");\n            GetElementsByNameSet.add(element);\n            element.setAttribute(\"data-element-id\", id);\n            element.disabled = data.readOnly;\n            this._setRequired(element, this.data.required);\n            element.type = \"radio\";\n            element.name = data.fieldName;\n            if (value) {\n              element.setAttribute(\"checked\", true);\n            }\n            element.tabIndex = DEFAULT_TAB_INDEX;\n            element.addEventListener(\"change\", event => {\n              const {\n                name,\n                checked\n              } = event.target;\n              for (const radio of this._getElementsByName(name, id)) {\n                storage.setValue(radio.id, {\n                  value: false\n                });\n              }\n              storage.setValue(id, {\n                value: checked\n              });\n            });\n            element.addEventListener(\"resetform\", event => {\n              const defaultValue = data.defaultFieldValue;\n              event.target.checked = defaultValue !== null && defaultValue !== undefined && defaultValue === data.buttonValue;\n            });\n            if (this.enableScripting && this.hasJSActions) {\n              const pdfButtonValue = data.buttonValue;\n              element.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value: event => {\n                    const checked = pdfButtonValue === event.detail.value;\n                    for (const radio of this._getElementsByName(event.target.name)) {\n                      const curChecked = checked && radio.id === id;\n                      if (radio.domElement) {\n                        radio.domElement.checked = curChecked;\n                      }\n                      storage.setValue(radio.id, {\n                        value: curChecked\n                      });\n                    }\n                  }\n                };\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              this._setEventListeners(element, null, [[\"change\", \"Validate\"], [\"change\", \"Action\"], [\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"]], event => event.target.checked);\n            }\n            this._setBackgroundColor(element);\n            this._setDefaultPropertiesFromJS(element);\n            this.container.append(element);\n            return this.container;\n          }\n        }\n        class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              ignoreBorder: parameters.data.hasAppearance\n            });\n          }\n          render() {\n            const container = super.render();\n            container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n            if (this.data.alternativeText) {\n              container.title = this.data.alternativeText;\n            }\n            const linkElement = container.lastChild;\n            if (this.enableScripting && this.hasJSActions && linkElement) {\n              this._setDefaultPropertiesFromJS(linkElement);\n              linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                this._dispatchEventFromSandbox({}, jsEvent);\n              });\n            }\n            return container;\n          }\n        }\n        class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: parameters.renderForms\n            });\n          }\n          render() {\n            this.container.classList.add(\"choiceWidgetAnnotation\");\n            const storage = this.annotationStorage;\n            const id = this.data.id;\n            const storedData = storage.getValue(id, {\n              value: this.data.fieldValue\n            });\n            const selectElement = document.createElement(\"select\");\n            GetElementsByNameSet.add(selectElement);\n            selectElement.setAttribute(\"data-element-id\", id);\n            selectElement.disabled = this.data.readOnly;\n            this._setRequired(selectElement, this.data.required);\n            selectElement.name = this.data.fieldName;\n            selectElement.tabIndex = DEFAULT_TAB_INDEX;\n            let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n            if (!this.data.combo) {\n              selectElement.size = this.data.options.length;\n              if (this.data.multiSelect) {\n                selectElement.multiple = true;\n              }\n            }\n            selectElement.addEventListener(\"resetform\", event => {\n              const defaultValue = this.data.defaultFieldValue;\n              for (const option of selectElement.options) {\n                option.selected = option.value === defaultValue;\n              }\n            });\n            for (const option of this.data.options) {\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = option.displayValue;\n              optionElement.value = option.exportValue;\n              if (storedData.value.includes(option.exportValue)) {\n                optionElement.setAttribute(\"selected\", true);\n                addAnEmptyEntry = false;\n              }\n              selectElement.append(optionElement);\n            }\n            let removeEmptyEntry = null;\n            if (addAnEmptyEntry) {\n              const noneOptionElement = document.createElement(\"option\");\n              noneOptionElement.value = \" \";\n              noneOptionElement.setAttribute(\"hidden\", true);\n              noneOptionElement.setAttribute(\"selected\", true);\n              selectElement.prepend(noneOptionElement);\n              removeEmptyEntry = () => {\n                noneOptionElement.remove();\n                selectElement.removeEventListener(\"input\", removeEmptyEntry);\n                removeEmptyEntry = null;\n              };\n              selectElement.addEventListener(\"input\", removeEmptyEntry);\n            }\n            const getValue = isExport => {\n              const name = isExport ? \"value\" : \"textContent\";\n              const {\n                options,\n                multiple\n              } = selectElement;\n              if (!multiple) {\n                return options.selectedIndex === -1 ? null : options[options.selectedIndex][name];\n              }\n              return Array.prototype.filter.call(options, option => option.selected).map(option => option[name]);\n            };\n            let selectedValues = getValue(false);\n            const getItems = event => {\n              const options = event.target.options;\n              return Array.prototype.map.call(options, option => {\n                return {\n                  displayValue: option.textContent,\n                  exportValue: option.value\n                };\n              });\n            };\n            if (this.enableScripting && this.hasJSActions) {\n              selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n                const actions = {\n                  value(event) {\n                    removeEmptyEntry?.();\n                    const value = event.detail.value;\n                    const values = new Set(Array.isArray(value) ? value : [value]);\n                    for (const option of selectElement.options) {\n                      option.selected = values.has(option.value);\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  multipleSelection(event) {\n                    selectElement.multiple = true;\n                  },\n                  remove(event) {\n                    const options = selectElement.options;\n                    const index = event.detail.remove;\n                    options[index].selected = false;\n                    selectElement.remove(index);\n                    if (options.length > 0) {\n                      const i = Array.prototype.findIndex.call(options, option => option.selected);\n                      if (i === -1) {\n                        options[0].selected = true;\n                      }\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  clear(event) {\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n                    storage.setValue(id, {\n                      value: null,\n                      items: []\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  insert(event) {\n                    const {\n                      index,\n                      displayValue,\n                      exportValue\n                    } = event.detail.insert;\n                    const selectChild = selectElement.children[index];\n                    const optionElement = document.createElement(\"option\");\n                    optionElement.textContent = displayValue;\n                    optionElement.value = exportValue;\n                    if (selectChild) {\n                      selectChild.before(optionElement);\n                    } else {\n                      selectElement.append(optionElement);\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  items(event) {\n                    const {\n                      items\n                    } = event.detail;\n                    while (selectElement.length !== 0) {\n                      selectElement.remove(0);\n                    }\n                    for (const item of items) {\n                      const {\n                        displayValue,\n                        exportValue\n                      } = item;\n                      const optionElement = document.createElement(\"option\");\n                      optionElement.textContent = displayValue;\n                      optionElement.value = exportValue;\n                      selectElement.append(optionElement);\n                    }\n                    if (selectElement.options.length > 0) {\n                      selectElement.options[0].selected = true;\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true),\n                      items: getItems(event)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  indices(event) {\n                    const indices = new Set(event.detail.indices);\n                    for (const option of event.target.options) {\n                      option.selected = indices.has(option.index);\n                    }\n                    storage.setValue(id, {\n                      value: getValue(true)\n                    });\n                    selectedValues = getValue(false);\n                  },\n                  editable(event) {\n                    event.target.disabled = !event.detail.editable;\n                  }\n                };\n                this._dispatchEventFromSandbox(actions, jsEvent);\n              });\n              selectElement.addEventListener(\"input\", event => {\n                const exportValue = getValue(true);\n                storage.setValue(id, {\n                  value: exportValue\n                });\n                event.preventDefault();\n                this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                  source: this,\n                  detail: {\n                    id,\n                    name: \"Keystroke\",\n                    value: selectedValues,\n                    changeEx: exportValue,\n                    willCommit: false,\n                    commitKey: 1,\n                    keyDown: false\n                  }\n                });\n              });\n              this._setEventListeners(selectElement, null, [[\"focus\", \"Focus\"], [\"blur\", \"Blur\"], [\"mousedown\", \"Mouse Down\"], [\"mouseenter\", \"Mouse Enter\"], [\"mouseleave\", \"Mouse Exit\"], [\"mouseup\", \"Mouse Up\"], [\"input\", \"Action\"], [\"input\", \"Validate\"]], event => event.target.value);\n            } else {\n              selectElement.addEventListener(\"input\", function (event) {\n                storage.setValue(id, {\n                  value: getValue(true)\n                });\n              });\n            }\n            if (this.data.combo) {\n              this._setTextStyle(selectElement);\n            } else {}\n            this._setBackgroundColor(selectElement);\n            this._setDefaultPropertiesFromJS(selectElement);\n            this.container.append(selectElement);\n            return this.container;\n          }\n        }\n        class PopupAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            const {\n              data,\n              elements\n            } = parameters;\n            super(parameters, {\n              isRenderable: AnnotationElement._hasPopupData(data)\n            });\n            this.elements = elements;\n          }\n          render() {\n            this.container.classList.add(\"popupAnnotation\");\n            const popup = new PopupElement({\n              container: this.container,\n              color: this.data.color,\n              titleObj: this.data.titleObj,\n              modificationDate: this.data.modificationDate,\n              contentsObj: this.data.contentsObj,\n              richText: this.data.richText,\n              rect: this.data.rect,\n              parentRect: this.data.parentRect || null,\n              parent: this.parent,\n              elements: this.elements,\n              open: this.data.open\n            });\n            const elementIds = [];\n            for (const element of this.elements) {\n              element.popup = popup;\n              elementIds.push(element.data.id);\n              element.addHighlightArea();\n            }\n            this.container.setAttribute(\"aria-controls\", elementIds.map(id => `${_util.AnnotationPrefix}${id}`).join(\",\"));\n            return this.container;\n          }\n        }\n        class PopupElement {\n          #dateTimePromise = null;\n          #boundKeyDown = this.#keyDown.bind(this);\n          #boundHide = this.#hide.bind(this);\n          #boundShow = this.#show.bind(this);\n          #boundToggle = this.#toggle.bind(this);\n          #color = null;\n          #container = null;\n          #contentsObj = null;\n          #elements = null;\n          #parent = null;\n          #parentRect = null;\n          #pinned = false;\n          #popup = null;\n          #rect = null;\n          #richText = null;\n          #titleObj = null;\n          #wasVisible = false;\n          constructor(_ref45) {\n            let {\n              container,\n              color,\n              elements,\n              titleObj,\n              modificationDate,\n              contentsObj,\n              richText,\n              parent,\n              rect,\n              parentRect,\n              open\n            } = _ref45;\n            this.#container = container;\n            this.#titleObj = titleObj;\n            this.#contentsObj = contentsObj;\n            this.#richText = richText;\n            this.#parent = parent;\n            this.#color = color;\n            this.#rect = rect;\n            this.#parentRect = parentRect;\n            this.#elements = elements;\n            const dateObject = _display_utils.PDFDateString.toDateObject(modificationDate);\n            if (dateObject) {\n              this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n                date: dateObject.toLocaleDateString(),\n                time: dateObject.toLocaleTimeString()\n              });\n            }\n            this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n            for (const element of this.trigger) {\n              element.addEventListener(\"click\", this.#boundToggle);\n              element.addEventListener(\"mouseenter\", this.#boundShow);\n              element.addEventListener(\"mouseleave\", this.#boundHide);\n              element.classList.add(\"popupTriggerArea\");\n            }\n            for (const element of elements) {\n              element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n            }\n            this.#container.hidden = true;\n            if (open) {\n              this.#toggle();\n            }\n          }\n          render() {\n            if (this.#popup) {\n              return;\n            }\n            const {\n              page: {\n                view\n              },\n              viewport: {\n                rawDims: {\n                  pageWidth,\n                  pageHeight,\n                  pageX,\n                  pageY\n                }\n              }\n            } = this.#parent;\n            const popup = this.#popup = document.createElement(\"div\");\n            popup.className = \"popup\";\n            if (this.#color) {\n              const baseColor = popup.style.outlineColor = _util.Util.makeHexColor(...this.#color);\n              if (CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")) {\n                popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n              } else {\n                const BACKGROUND_ENLIGHT = 0.7;\n                popup.style.backgroundColor = _util.Util.makeHexColor(...this.#color.map(c => Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)));\n              }\n            }\n            const header = document.createElement(\"span\");\n            header.className = \"header\";\n            const title = document.createElement(\"h1\");\n            header.append(title);\n            ({\n              dir: title.dir,\n              str: title.textContent\n            } = this.#titleObj);\n            popup.append(header);\n            if (this.#dateTimePromise) {\n              const modificationDate = document.createElement(\"span\");\n              modificationDate.classList.add(\"popupDate\");\n              this.#dateTimePromise.then(localized => {\n                modificationDate.textContent = localized;\n              });\n              header.append(modificationDate);\n            }\n            const contentsObj = this.#contentsObj;\n            const richText = this.#richText;\n            if (richText?.str && (!contentsObj?.str || contentsObj.str === richText.str)) {\n              _xfa_layer.XfaLayer.render({\n                xfaHtml: richText.html,\n                intent: \"richText\",\n                div: popup\n              });\n              popup.lastChild.classList.add(\"richText\", \"popupContent\");\n            } else {\n              const contents = this._formatContents(contentsObj);\n              popup.append(contents);\n            }\n            let useParentRect = !!this.#parentRect;\n            let rect = useParentRect ? this.#parentRect : this.#rect;\n            for (const element of this.#elements) {\n              if (!rect || _util.Util.intersect(element.data.rect, rect) !== null) {\n                rect = element.data.rect;\n                useParentRect = true;\n                break;\n              }\n            }\n            const normalizedRect = _util.Util.normalizeRect([rect[0], view[3] - rect[1] + view[1], rect[2], view[3] - rect[3] + view[1]]);\n            const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n            const parentWidth = useParentRect ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION : 0;\n            const popupLeft = normalizedRect[0] + parentWidth;\n            const popupTop = normalizedRect[1];\n            const {\n              style\n            } = this.#container;\n            style.left = `${100 * (popupLeft - pageX) / pageWidth}%`;\n            style.top = `${100 * (popupTop - pageY) / pageHeight}%`;\n            this.#container.append(popup);\n          }\n          _formatContents(_ref46) {\n            let {\n              str,\n              dir\n            } = _ref46;\n            const p = document.createElement(\"p\");\n            p.classList.add(\"popupContent\");\n            p.dir = dir;\n            const lines = str.split(/(?:\\r\\n?|\\n)/);\n            for (let i = 0, ii = lines.length; i < ii; ++i) {\n              const line = lines[i];\n              p.append(document.createTextNode(line));\n              if (i < ii - 1) {\n                p.append(document.createElement(\"br\"));\n              }\n            }\n            return p;\n          }\n          #keyDown(event) {\n            if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n              return;\n            }\n            if (event.key === \"Enter\" || event.key === \"Escape\" && this.#pinned) {\n              this.#toggle();\n            }\n          }\n          #toggle() {\n            this.#pinned = !this.#pinned;\n            if (this.#pinned) {\n              this.#show();\n              this.#container.addEventListener(\"click\", this.#boundToggle);\n              this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n            } else {\n              this.#hide();\n              this.#container.removeEventListener(\"click\", this.#boundToggle);\n              this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n            }\n          }\n          #show() {\n            if (!this.#popup) {\n              this.render();\n            }\n            if (!this.isVisible) {\n              this.#container.hidden = false;\n              this.#container.style.zIndex = parseInt(this.#container.style.zIndex) + 1000;\n            } else if (this.#pinned) {\n              this.#container.classList.add(\"focused\");\n            }\n          }\n          #hide() {\n            this.#container.classList.remove(\"focused\");\n            if (this.#pinned || !this.isVisible) {\n              return;\n            }\n            this.#container.hidden = true;\n            this.#container.style.zIndex = parseInt(this.#container.style.zIndex) - 1000;\n          }\n          forceHide() {\n            this.#wasVisible = this.isVisible;\n            if (!this.#wasVisible) {\n              return;\n            }\n            this.#container.hidden = true;\n          }\n          maybeShow() {\n            if (!this.#wasVisible) {\n              return;\n            }\n            this.#wasVisible = false;\n            this.#container.hidden = false;\n          }\n          get isVisible() {\n            return this.#container.hidden === false;\n          }\n        }\n        class FreeTextAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.textContent = parameters.data.textContent;\n            this.textPosition = parameters.data.textPosition;\n            this.annotationEditorType = _util.AnnotationEditorType.FREETEXT;\n          }\n          render() {\n            this.container.classList.add(\"freeTextAnnotation\");\n            if (this.textContent) {\n              const content = document.createElement(\"div\");\n              content.classList.add(\"annotationTextContent\");\n              content.setAttribute(\"role\", \"comment\");\n              for (const line of this.textContent) {\n                const lineSpan = document.createElement(\"span\");\n                lineSpan.textContent = line;\n                content.append(lineSpan);\n              }\n              this.container.append(content);\n            }\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this._editOnDoubleClick();\n            return this.container;\n          }\n        }\n        exports.FreeTextAnnotationElement = FreeTextAnnotationElement;\n        class LineAnnotationElement extends AnnotationElement {\n          #line = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"lineAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const line = this.#line = this.svgFactory.createElement(\"svg:line\");\n            line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n            line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n            line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n            line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n            line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            line.setAttribute(\"stroke\", \"transparent\");\n            line.setAttribute(\"fill\", \"transparent\");\n            svg.append(line);\n            this.container.append(svg);\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#line;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        class SquareAnnotationElement extends AnnotationElement {\n          #square = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"squareAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const borderWidth = data.borderStyle.width;\n            const square = this.#square = this.svgFactory.createElement(\"svg:rect\");\n            square.setAttribute(\"x\", borderWidth / 2);\n            square.setAttribute(\"y\", borderWidth / 2);\n            square.setAttribute(\"width\", width - borderWidth);\n            square.setAttribute(\"height\", height - borderWidth);\n            square.setAttribute(\"stroke-width\", borderWidth || 1);\n            square.setAttribute(\"stroke\", \"transparent\");\n            square.setAttribute(\"fill\", \"transparent\");\n            svg.append(square);\n            this.container.append(svg);\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#square;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        class CircleAnnotationElement extends AnnotationElement {\n          #circle = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"circleAnnotation\");\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            const borderWidth = data.borderStyle.width;\n            const circle = this.#circle = this.svgFactory.createElement(\"svg:ellipse\");\n            circle.setAttribute(\"cx\", width / 2);\n            circle.setAttribute(\"cy\", height / 2);\n            circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n            circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n            circle.setAttribute(\"stroke-width\", borderWidth || 1);\n            circle.setAttribute(\"stroke\", \"transparent\");\n            circle.setAttribute(\"fill\", \"transparent\");\n            svg.append(circle);\n            this.container.append(svg);\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#circle;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        class PolylineAnnotationElement extends AnnotationElement {\n          #polyline = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"polylineAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n          }\n          render() {\n            this.container.classList.add(this.containerClassName);\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            let points = [];\n            for (const coordinate of data.vertices) {\n              const x = coordinate.x - data.rect[0];\n              const y = data.rect[3] - coordinate.y;\n              points.push(x + \",\" + y);\n            }\n            points = points.join(\" \");\n            const polyline = this.#polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"transparent\");\n            svg.append(polyline);\n            this.container.append(svg);\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#polyline;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        class PolygonAnnotationElement extends PolylineAnnotationElement {\n          constructor(parameters) {\n            super(parameters);\n            this.containerClassName = \"polygonAnnotation\";\n            this.svgElementName = \"svg:polygon\";\n          }\n        }\n        class CaretAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"caretAnnotation\");\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n        }\n        class InkAnnotationElement extends AnnotationElement {\n          #polylines = [];\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n            this.containerClassName = \"inkAnnotation\";\n            this.svgElementName = \"svg:polyline\";\n            this.annotationEditorType = _util.AnnotationEditorType.INK;\n          }\n          render() {\n            this.container.classList.add(this.containerClassName);\n            const data = this.data;\n            const {\n              width,\n              height\n            } = getRectDims(data.rect);\n            const svg = this.svgFactory.create(width, height, true);\n            for (const inkList of data.inkLists) {\n              let points = [];\n              for (const coordinate of inkList) {\n                const x = coordinate.x - data.rect[0];\n                const y = data.rect[3] - coordinate.y;\n                points.push(`${x},${y}`);\n              }\n              points = points.join(\" \");\n              const polyline = this.svgFactory.createElement(this.svgElementName);\n              this.#polylines.push(polyline);\n              polyline.setAttribute(\"points\", points);\n              polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n              polyline.setAttribute(\"stroke\", \"transparent\");\n              polyline.setAttribute(\"fill\", \"transparent\");\n              if (!data.popupRef && this.hasPopupData) {\n                this._createPopup();\n              }\n              svg.append(polyline);\n            }\n            this.container.append(svg);\n            return this.container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#polylines;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n        }\n        exports.InkAnnotationElement = InkAnnotationElement;\n        class HighlightAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.classList.add(\"highlightAnnotation\");\n            return this.container;\n          }\n        }\n        class UnderlineAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.classList.add(\"underlineAnnotation\");\n            return this.container;\n          }\n        }\n        class SquigglyAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.classList.add(\"squigglyAnnotation\");\n            return this.container;\n          }\n        }\n        class StrikeOutAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true,\n              createQuadrilaterals: true\n            });\n          }\n          render() {\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            this.container.classList.add(\"strikeoutAnnotation\");\n            return this.container;\n          }\n        }\n        class StampAnnotationElement extends AnnotationElement {\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true,\n              ignoreBorder: true\n            });\n          }\n          render() {\n            this.container.classList.add(\"stampAnnotation\");\n            if (!this.data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            }\n            return this.container;\n          }\n        }\n        exports.StampAnnotationElement = StampAnnotationElement;\n        class FileAttachmentAnnotationElement extends AnnotationElement {\n          #trigger = null;\n          constructor(parameters) {\n            super(parameters, {\n              isRenderable: true\n            });\n            const {\n              filename,\n              content\n            } = this.data.file;\n            this.filename = (0, _display_utils.getFilenameFromUrl)(filename, true);\n            this.content = content;\n            this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n              source: this,\n              filename,\n              content\n            });\n          }\n          render() {\n            this.container.classList.add(\"fileAttachmentAnnotation\");\n            const {\n              container,\n              data\n            } = this;\n            let trigger;\n            if (data.hasAppearance || data.fillAlpha === 0) {\n              trigger = document.createElement(\"div\");\n            } else {\n              trigger = document.createElement(\"img\");\n              trigger.src = `${this.imageResourcesPath}annotation-${/paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"}.svg`;\n              if (data.fillAlpha && data.fillAlpha < 1) {\n                trigger.style = `filter: opacity(${Math.round(data.fillAlpha * 100)}%);`;\n              }\n            }\n            trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n            this.#trigger = trigger;\n            const {\n              isMac\n            } = _util.FeatureTest.platform;\n            container.addEventListener(\"keydown\", evt => {\n              if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n                this.#download();\n              }\n            });\n            if (!data.popupRef && this.hasPopupData) {\n              this._createPopup();\n            } else {\n              trigger.classList.add(\"popupTriggerArea\");\n            }\n            container.append(trigger);\n            return container;\n          }\n          getElementsToTriggerPopup() {\n            return this.#trigger;\n          }\n          addHighlightArea() {\n            this.container.classList.add(\"highlightArea\");\n          }\n          #download() {\n            this.downloadManager?.openOrDownloadData(this.container, this.content, this.filename);\n          }\n        }\n        class AnnotationLayer {\n          #accessibilityManager = null;\n          #annotationCanvasMap = null;\n          #editableAnnotations = new Map();\n          constructor(_ref47) {\n            let {\n              div,\n              accessibilityManager,\n              annotationCanvasMap,\n              l10n,\n              page,\n              viewport\n            } = _ref47;\n            this.div = div;\n            this.#accessibilityManager = accessibilityManager;\n            this.#annotationCanvasMap = annotationCanvasMap;\n            this.l10n = l10n;\n            this.page = page;\n            this.viewport = viewport;\n            this.zIndex = 0;\n            this.l10n ||= _displayL10n_utils.NullL10n;\n          }\n          #appendElement(element, id) {\n            const contentElement = element.firstChild || element;\n            contentElement.id = `${_util.AnnotationPrefix}${id}`;\n            this.div.append(element);\n            this.#accessibilityManager?.moveElementInDOM(this.div, element, contentElement, false);\n          }\n          async render(params) {\n            const {\n              annotations\n            } = params;\n            const layer = this.div;\n            (0, _display_utils.setLayerDimensions)(layer, this.viewport);\n            const popupToElements = new Map();\n            const elementParams = {\n              data: null,\n              layer,\n              linkService: params.linkService,\n              downloadManager: params.downloadManager,\n              imageResourcesPath: params.imageResourcesPath || \"\",\n              renderForms: params.renderForms !== false,\n              svgFactory: new _display_utils.DOMSVGFactory(),\n              annotationStorage: params.annotationStorage || new _annotation_storage.AnnotationStorage(),\n              enableScripting: params.enableScripting === true,\n              hasJSActions: params.hasJSActions,\n              fieldObjects: params.fieldObjects,\n              parent: this,\n              elements: null\n            };\n            for (const data of annotations) {\n              if (data.noHTML) {\n                continue;\n              }\n              const isPopupAnnotation = data.annotationType === _util.AnnotationType.POPUP;\n              if (!isPopupAnnotation) {\n                const {\n                  width,\n                  height\n                } = getRectDims(data.rect);\n                if (width <= 0 || height <= 0) {\n                  continue;\n                }\n              } else {\n                const elements = popupToElements.get(data.id);\n                if (!elements) {\n                  continue;\n                }\n                elementParams.elements = elements;\n              }\n              elementParams.data = data;\n              const element = AnnotationElementFactory.create(elementParams);\n              if (!element.isRenderable) {\n                continue;\n              }\n              if (!isPopupAnnotation && data.popupRef) {\n                const elements = popupToElements.get(data.popupRef);\n                if (!elements) {\n                  popupToElements.set(data.popupRef, [element]);\n                } else {\n                  elements.push(element);\n                }\n              }\n              if (element.annotationEditorType > 0) {\n                this.#editableAnnotations.set(element.data.id, element);\n              }\n              const rendered = element.render();\n              if (data.hidden) {\n                rendered.style.visibility = \"hidden\";\n              }\n              this.#appendElement(rendered, data.id);\n            }\n            this.#setAnnotationCanvasMap();\n            await this.l10n.translate(layer);\n          }\n          update(_ref48) {\n            let {\n              viewport\n            } = _ref48;\n            const layer = this.div;\n            this.viewport = viewport;\n            (0, _display_utils.setLayerDimensions)(layer, {\n              rotation: viewport.rotation\n            });\n            this.#setAnnotationCanvasMap();\n            layer.hidden = false;\n          }\n          #setAnnotationCanvasMap() {\n            if (!this.#annotationCanvasMap) {\n              return;\n            }\n            const layer = this.div;\n            for (const [id, canvas] of this.#annotationCanvasMap) {\n              const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n              if (!element) {\n                continue;\n              }\n              const {\n                firstChild\n              } = element;\n              if (!firstChild) {\n                element.append(canvas);\n              } else if (firstChild.nodeName === \"CANVAS\") {\n                firstChild.replaceWith(canvas);\n              } else {\n                firstChild.before(canvas);\n              }\n            }\n            this.#annotationCanvasMap.clear();\n          }\n          getEditableAnnotations() {\n            return Array.from(this.#editableAnnotations.values());\n          }\n          getEditableAnnotation(id) {\n            return this.#editableAnnotations.get(id);\n          }\n        }\n        exports.AnnotationLayer = AnnotationLayer;\n\n        /***/\n      }, /* 30 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.ColorConverters = void 0;\n        function makeColorComp(n) {\n          return Math.floor(Math.max(0, Math.min(1, n)) * 255).toString(16).padStart(2, \"0\");\n        }\n        function scaleAndClamp(x) {\n          return Math.max(0, Math.min(255, 255 * x));\n        }\n        class ColorConverters {\n          static CMYK_G(_ref49) {\n            let [c, y, m, k] = _ref49;\n            return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n          }\n          static G_CMYK(_ref50) {\n            let [g] = _ref50;\n            return [\"CMYK\", 0, 0, 0, 1 - g];\n          }\n          static G_RGB(_ref51) {\n            let [g] = _ref51;\n            return [\"RGB\", g, g, g];\n          }\n          static G_rgb(_ref52) {\n            let [g] = _ref52;\n            g = scaleAndClamp(g);\n            return [g, g, g];\n          }\n          static G_HTML(_ref53) {\n            let [g] = _ref53;\n            const G = makeColorComp(g);\n            return `#${G}${G}${G}`;\n          }\n          static RGB_G(_ref54) {\n            let [r, g, b] = _ref54;\n            return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n          }\n          static RGB_rgb(color) {\n            return color.map(scaleAndClamp);\n          }\n          static RGB_HTML(color) {\n            return `#${color.map(makeColorComp).join(\"\")}`;\n          }\n          static T_HTML() {\n            return \"#00000000\";\n          }\n          static T_rgb() {\n            return [null];\n          }\n          static CMYK_RGB(_ref55) {\n            let [c, y, m, k] = _ref55;\n            return [\"RGB\", 1 - Math.min(1, c + k), 1 - Math.min(1, m + k), 1 - Math.min(1, y + k)];\n          }\n          static CMYK_rgb(_ref56) {\n            let [c, y, m, k] = _ref56;\n            return [scaleAndClamp(1 - Math.min(1, c + k)), scaleAndClamp(1 - Math.min(1, m + k)), scaleAndClamp(1 - Math.min(1, y + k))];\n          }\n          static CMYK_HTML(components) {\n            const rgb = this.CMYK_RGB(components).slice(1);\n            return this.RGB_HTML(rgb);\n          }\n          static RGB_CMYK(_ref57) {\n            let [r, g, b] = _ref57;\n            const c = 1 - r;\n            const m = 1 - g;\n            const y = 1 - b;\n            const k = Math.min(c, m, y);\n            return [\"CMYK\", c, m, y, k];\n          }\n        }\n        exports.ColorConverters = ColorConverters;\n\n        /***/\n      }, /* 31 */\n      /***/(__unused_webpack_module, exports) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.NullL10n = void 0;\n        exports.getL10nFallback = getL10nFallback;\n        const DEFAULT_L10N_STRINGS = {\n          of_pages: \"of {{pagesCount}}\",\n          page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n          document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n          document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n          document_properties_date_string: \"{{date}}, {{time}}\",\n          document_properties_page_size_unit_inches: \"in\",\n          document_properties_page_size_unit_millimeters: \"mm\",\n          document_properties_page_size_orientation_portrait: \"portrait\",\n          document_properties_page_size_orientation_landscape: \"landscape\",\n          document_properties_page_size_name_a3: \"A3\",\n          document_properties_page_size_name_a4: \"A4\",\n          document_properties_page_size_name_letter: \"Letter\",\n          document_properties_page_size_name_legal: \"Legal\",\n          document_properties_page_size_dimension_string: \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n          document_properties_page_size_dimension_name_string: \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n          document_properties_linearized_yes: \"Yes\",\n          document_properties_linearized_no: \"No\",\n          additional_layers: \"Additional Layers\",\n          page_landmark: \"Page {{page}}\",\n          thumb_page_title: \"Page {{page}}\",\n          thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n          find_reached_top: \"Reached top of document, continued from bottom\",\n          find_reached_bottom: \"Reached end of document, continued from top\",\n          \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n          \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n          \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n          \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n          find_not_found: \"Phrase not found\",\n          page_scale_width: \"Page Width\",\n          page_scale_fit: \"Page Fit\",\n          page_scale_auto: \"Automatic Zoom\",\n          page_scale_actual: \"Actual Size\",\n          page_scale_percent: \"{{scale}}%\",\n          loading_error: \"An error occurred while loading the PDF.\",\n          invalid_file_error: \"Invalid or corrupted PDF file.\",\n          missing_file_error: \"Missing PDF file.\",\n          unexpected_response_error: \"Unexpected server response.\",\n          rendering_error: \"An error occurred while rendering the page.\",\n          annotation_date_string: \"{{date}}, {{time}}\",\n          printing_not_supported: \"Warning: Printing is not fully supported by this browser.\",\n          printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n          web_fonts_disabled: \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n          free_text2_default_content: \"Start typing…\",\n          editor_free_text2_aria_label: \"Text Editor\",\n          editor_ink2_aria_label: \"Draw Editor\",\n          editor_ink_canvas_aria_label: \"User-created image\",\n          editor_alt_text_button_label: \"Alt text\",\n          editor_alt_text_edit_button_label: \"Edit alt text\",\n          editor_alt_text_decorative_tooltip: \"Marked as decorative\"\n        };\n        {\n          DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n        }\n        function getL10nFallback(key, args) {\n          switch (key) {\n            case \"find_match_count\":\n              key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n              break;\n            case \"find_match_count_limit\":\n              key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n              break;\n          }\n          return DEFAULT_L10N_STRINGS[key] || \"\";\n        }\n        function formatL10nValue(text, args) {\n          if (!args) {\n            return text;\n          }\n          return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n            return name in args ? args[name] : \"{{\" + name + \"}}\";\n          });\n        }\n        const NullL10n = {\n          async getLanguage() {\n            return \"en-us\";\n          },\n          async getDirection() {\n            return \"ltr\";\n          },\n          async get(key) {\n            let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            let fallback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getL10nFallback(key, args);\n            return formatL10nValue(fallback, args);\n          },\n          async translate(element) {}\n        };\n        exports.NullL10n = NullL10n;\n\n        /***/\n      }, /* 32 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.XfaLayer = void 0;\n        var _xfa_text = __w_pdfjs_require__(25);\n        class XfaLayer {\n          static setupStorage(html, id, element, storage, intent) {\n            const storedData = storage.getValue(id, {\n              value: null\n            });\n            switch (element.name) {\n              case \"textarea\":\n                if (storedData.value !== null) {\n                  html.textContent = storedData.value;\n                }\n                if (intent === \"print\") {\n                  break;\n                }\n                html.addEventListener(\"input\", event => {\n                  storage.setValue(id, {\n                    value: event.target.value\n                  });\n                });\n                break;\n              case \"input\":\n                if (element.attributes.type === \"radio\" || element.attributes.type === \"checkbox\") {\n                  if (storedData.value === element.attributes.xfaOn) {\n                    html.setAttribute(\"checked\", true);\n                  } else if (storedData.value === element.attributes.xfaOff) {\n                    html.removeAttribute(\"checked\");\n                  }\n                  if (intent === \"print\") {\n                    break;\n                  }\n                  html.addEventListener(\"change\", event => {\n                    storage.setValue(id, {\n                      value: event.target.checked ? event.target.getAttribute(\"xfaOn\") : event.target.getAttribute(\"xfaOff\")\n                    });\n                  });\n                } else {\n                  if (storedData.value !== null) {\n                    html.setAttribute(\"value\", storedData.value);\n                  }\n                  if (intent === \"print\") {\n                    break;\n                  }\n                  html.addEventListener(\"input\", event => {\n                    storage.setValue(id, {\n                      value: event.target.value\n                    });\n                  });\n                }\n                break;\n              case \"select\":\n                if (storedData.value !== null) {\n                  html.setAttribute(\"value\", storedData.value);\n                  for (const option of element.children) {\n                    if (option.attributes.value === storedData.value) {\n                      option.attributes.selected = true;\n                    } else if (option.attributes.hasOwnProperty(\"selected\")) {\n                      delete option.attributes.selected;\n                    }\n                  }\n                }\n                html.addEventListener(\"input\", event => {\n                  const options = event.target.options;\n                  const value = options.selectedIndex === -1 ? \"\" : options[options.selectedIndex].value;\n                  storage.setValue(id, {\n                    value\n                  });\n                });\n                break;\n            }\n          }\n          static setAttributes(_ref58) {\n            let {\n              html,\n              element,\n              storage = null,\n              intent,\n              linkService\n            } = _ref58;\n            const {\n              attributes\n            } = element;\n            const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n            if (attributes.type === \"radio\") {\n              attributes.name = `${attributes.name}-${intent}`;\n            }\n            for (const [key, value] of Object.entries(attributes)) {\n              if (value === null || value === undefined) {\n                continue;\n              }\n              switch (key) {\n                case \"class\":\n                  if (value.length) {\n                    html.setAttribute(key, value.join(\" \"));\n                  }\n                  break;\n                case \"dataId\":\n                  break;\n                case \"id\":\n                  html.setAttribute(\"data-element-id\", value);\n                  break;\n                case \"style\":\n                  Object.assign(html.style, value);\n                  break;\n                case \"textContent\":\n                  html.textContent = value;\n                  break;\n                default:\n                  if (!isHTMLAnchorElement || key !== \"href\" && key !== \"newWindow\") {\n                    html.setAttribute(key, value);\n                  }\n              }\n            }\n            if (isHTMLAnchorElement) {\n              linkService.addLinkAttributes(html, attributes.href, attributes.newWindow);\n            }\n            if (storage && attributes.dataId) {\n              this.setupStorage(html, attributes.dataId, element, storage);\n            }\n          }\n          static render(parameters) {\n            const storage = parameters.annotationStorage;\n            const linkService = parameters.linkService;\n            const root = parameters.xfaHtml;\n            const intent = parameters.intent || \"display\";\n            const rootHtml = document.createElement(root.name);\n            if (root.attributes) {\n              this.setAttributes({\n                html: rootHtml,\n                element: root,\n                intent,\n                linkService\n              });\n            }\n            const stack = [[root, -1, rootHtml]];\n            const rootDiv = parameters.div;\n            rootDiv.append(rootHtml);\n            if (parameters.viewport) {\n              const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n              rootDiv.style.transform = transform;\n            }\n            if (intent !== \"richText\") {\n              rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n            }\n            const textDivs = [];\n            while (stack.length > 0) {\n              const [parent, i, html] = stack.at(-1);\n              if (i + 1 === parent.children.length) {\n                stack.pop();\n                continue;\n              }\n              const child = parent.children[++stack.at(-1)[1]];\n              if (child === null) {\n                continue;\n              }\n              const {\n                name\n              } = child;\n              if (name === \"#text\") {\n                const node = document.createTextNode(child.value);\n                textDivs.push(node);\n                html.append(node);\n                continue;\n              }\n              const childHtml = child?.attributes?.xmlns ? document.createElementNS(child.attributes.xmlns, name) : document.createElement(name);\n              html.append(childHtml);\n              if (child.attributes) {\n                this.setAttributes({\n                  html: childHtml,\n                  element: child,\n                  storage,\n                  intent,\n                  linkService\n                });\n              }\n              if (child.children && child.children.length > 0) {\n                stack.push([child, -1, childHtml]);\n              } else if (child.value) {\n                const node = document.createTextNode(child.value);\n                if (_xfa_text.XfaText.shouldBuildText(name)) {\n                  textDivs.push(node);\n                }\n                childHtml.append(node);\n              }\n            }\n            for (const el of rootDiv.querySelectorAll(\".xfaNonInteractive input, .xfaNonInteractive textarea\")) {\n              el.setAttribute(\"readOnly\", true);\n            }\n            return {\n              textDivs\n            };\n          }\n          static update(parameters) {\n            const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n            parameters.div.style.transform = transform;\n            parameters.div.hidden = false;\n          }\n        }\n        exports.XfaLayer = XfaLayer;\n\n        /***/\n      }, /* 33 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.InkEditor = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _editor = __w_pdfjs_require__(4);\n        var _annotation_layer = __w_pdfjs_require__(29);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _tools = __w_pdfjs_require__(5);\n        class InkEditor extends _editor.AnnotationEditor {\n          #baseHeight = 0;\n          #baseWidth = 0;\n          #boundCanvasPointermove = this.canvasPointermove.bind(this);\n          #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n          #boundCanvasPointerup = this.canvasPointerup.bind(this);\n          #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n          #currentPath2D = new Path2D();\n          #disableEditing = false;\n          #hasSomethingToDraw = false;\n          #isCanvasInitialized = false;\n          #observer = null;\n          #realWidth = 0;\n          #realHeight = 0;\n          #requestFrameCallback = null;\n          static _defaultColor = null;\n          static _defaultOpacity = 1;\n          static _defaultThickness = 1;\n          static _type = \"ink\";\n          constructor(params) {\n            super({\n              ...params,\n              name: \"inkEditor\"\n            });\n            this.color = params.color || null;\n            this.thickness = params.thickness || null;\n            this.opacity = params.opacity || null;\n            this.paths = [];\n            this.bezierPath2D = [];\n            this.allRawPaths = [];\n            this.currentPath = [];\n            this.scaleFactor = 1;\n            this.translationX = this.translationY = 0;\n            this.x = 0;\n            this.y = 0;\n            this._willKeepAspectRatio = true;\n          }\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n, {\n              strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"]\n            });\n          }\n          static updateDefaultParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                InkEditor._defaultThickness = value;\n                break;\n              case _util.AnnotationEditorParamsType.INK_COLOR:\n                InkEditor._defaultColor = value;\n                break;\n              case _util.AnnotationEditorParamsType.INK_OPACITY:\n                InkEditor._defaultOpacity = value / 100;\n                break;\n            }\n          }\n          updateParams(type, value) {\n            switch (type) {\n              case _util.AnnotationEditorParamsType.INK_THICKNESS:\n                this.#updateThickness(value);\n                break;\n              case _util.AnnotationEditorParamsType.INK_COLOR:\n                this.#updateColor(value);\n                break;\n              case _util.AnnotationEditorParamsType.INK_OPACITY:\n                this.#updateOpacity(value);\n                break;\n            }\n          }\n          static get defaultPropertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(InkEditor._defaultOpacity * 100)]];\n          }\n          get propertiesToUpdate() {\n            return [[_util.AnnotationEditorParamsType.INK_THICKNESS, this.thickness || InkEditor._defaultThickness], [_util.AnnotationEditorParamsType.INK_COLOR, this.color || InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor], [_util.AnnotationEditorParamsType.INK_OPACITY, Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity))]];\n          }\n          #updateThickness(thickness) {\n            const savedThickness = this.thickness;\n            this.addCommands({\n              cmd: () => {\n                this.thickness = thickness;\n                this.#fitToContent();\n              },\n              undo: () => {\n                this.thickness = savedThickness;\n                this.#fitToContent();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_THICKNESS,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          #updateColor(color) {\n            const savedColor = this.color;\n            this.addCommands({\n              cmd: () => {\n                this.color = color;\n                this.#redraw();\n              },\n              undo: () => {\n                this.color = savedColor;\n                this.#redraw();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_COLOR,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          #updateOpacity(opacity) {\n            opacity /= 100;\n            const savedOpacity = this.opacity;\n            this.addCommands({\n              cmd: () => {\n                this.opacity = opacity;\n                this.#redraw();\n              },\n              undo: () => {\n                this.opacity = savedOpacity;\n                this.#redraw();\n              },\n              mustExec: true,\n              type: _util.AnnotationEditorParamsType.INK_OPACITY,\n              overwriteIfSameType: true,\n              keepUndo: true\n            });\n          }\n          rebuild() {\n            if (!this.parent) {\n              return;\n            }\n            super.rebuild();\n            if (this.div === null) {\n              return;\n            }\n            if (!this.canvas) {\n              this.#createCanvas();\n              this.#createObserver();\n            }\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n              this.#setCanvasDims();\n            }\n            this.#fitToContent();\n          }\n          remove() {\n            if (this.canvas === null) {\n              return;\n            }\n            if (!this.isEmpty()) {\n              this.commit();\n            }\n            this.canvas.width = this.canvas.height = 0;\n            this.canvas.remove();\n            this.canvas = null;\n            this.#observer.disconnect();\n            this.#observer = null;\n            super.remove();\n          }\n          setParent(parent) {\n            if (!this.parent && parent) {\n              this._uiManager.removeShouldRescale(this);\n            } else if (this.parent && parent === null) {\n              this._uiManager.addShouldRescale(this);\n            }\n            super.setParent(parent);\n          }\n          onScaleChanging() {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            const width = this.width * parentWidth;\n            const height = this.height * parentHeight;\n            this.setDimensions(width, height);\n          }\n          enableEditMode() {\n            if (this.#disableEditing || this.canvas === null) {\n              return;\n            }\n            super.enableEditMode();\n            this._isDraggable = false;\n            this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n          }\n          disableEditMode() {\n            if (!this.isInEditMode() || this.canvas === null) {\n              return;\n            }\n            super.disableEditMode();\n            this._isDraggable = !this.isEmpty();\n            this.div.classList.remove(\"editing\");\n            this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n          }\n          onceAdded() {\n            this._isDraggable = !this.isEmpty();\n          }\n          isEmpty() {\n            return this.paths.length === 0 || this.paths.length === 1 && this.paths[0].length === 0;\n          }\n          #getInitialBBox() {\n            const {\n              parentRotation,\n              parentDimensions: [width, height]\n            } = this;\n            switch (parentRotation) {\n              case 90:\n                return [0, height, height, width];\n              case 180:\n                return [width, height, width, height];\n              case 270:\n                return [width, 0, height, width];\n              default:\n                return [0, 0, width, height];\n            }\n          }\n          #setStroke() {\n            const {\n              ctx,\n              color,\n              opacity,\n              thickness,\n              parentScale,\n              scaleFactor\n            } = this;\n            ctx.lineWidth = thickness * parentScale / scaleFactor;\n            ctx.lineCap = \"round\";\n            ctx.lineJoin = \"round\";\n            ctx.miterLimit = 10;\n            ctx.strokeStyle = `${color}${(0, _tools.opacityToHex)(opacity)}`;\n          }\n          #startDrawing(x, y) {\n            this.canvas.addEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n            this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n            this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n            this.canvas.removeEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n            this.isEditing = true;\n            if (!this.#isCanvasInitialized) {\n              this.#isCanvasInitialized = true;\n              this.#setCanvasDims();\n              this.thickness ||= InkEditor._defaultThickness;\n              this.color ||= InkEditor._defaultColor || _editor.AnnotationEditor._defaultLineColor;\n              this.opacity ??= InkEditor._defaultOpacity;\n            }\n            this.currentPath.push([x, y]);\n            this.#hasSomethingToDraw = false;\n            this.#setStroke();\n            this.#requestFrameCallback = () => {\n              this.#drawPoints();\n              if (this.#requestFrameCallback) {\n                window.requestAnimationFrame(this.#requestFrameCallback);\n              }\n            };\n            window.requestAnimationFrame(this.#requestFrameCallback);\n          }\n          #draw(x, y) {\n            const [lastX, lastY] = this.currentPath.at(-1);\n            if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n              return;\n            }\n            const currentPath = this.currentPath;\n            let path2D = this.#currentPath2D;\n            currentPath.push([x, y]);\n            this.#hasSomethingToDraw = true;\n            if (currentPath.length <= 2) {\n              path2D.moveTo(...currentPath[0]);\n              path2D.lineTo(x, y);\n              return;\n            }\n            if (currentPath.length === 3) {\n              this.#currentPath2D = path2D = new Path2D();\n              path2D.moveTo(...currentPath[0]);\n            }\n            this.#makeBezierCurve(path2D, ...currentPath.at(-3), ...currentPath.at(-2), x, y);\n          }\n          #endPath() {\n            if (this.currentPath.length === 0) {\n              return;\n            }\n            const lastPoint = this.currentPath.at(-1);\n            this.#currentPath2D.lineTo(...lastPoint);\n          }\n          #stopDrawing(x, y) {\n            this.#requestFrameCallback = null;\n            x = Math.min(Math.max(x, 0), this.canvas.width);\n            y = Math.min(Math.max(y, 0), this.canvas.height);\n            this.#draw(x, y);\n            this.#endPath();\n            let bezier;\n            if (this.currentPath.length !== 1) {\n              bezier = this.#generateBezierPoints();\n            } else {\n              const xy = [x, y];\n              bezier = [[xy, xy.slice(), xy.slice(), xy]];\n            }\n            const path2D = this.#currentPath2D;\n            const currentPath = this.currentPath;\n            this.currentPath = [];\n            this.#currentPath2D = new Path2D();\n            const cmd = () => {\n              this.allRawPaths.push(currentPath);\n              this.paths.push(bezier);\n              this.bezierPath2D.push(path2D);\n              this.rebuild();\n            };\n            const undo = () => {\n              this.allRawPaths.pop();\n              this.paths.pop();\n              this.bezierPath2D.pop();\n              if (this.paths.length === 0) {\n                this.remove();\n              } else {\n                if (!this.canvas) {\n                  this.#createCanvas();\n                  this.#createObserver();\n                }\n                this.#fitToContent();\n              }\n            };\n            this.addCommands({\n              cmd,\n              undo,\n              mustExec: true\n            });\n          }\n          #drawPoints() {\n            if (!this.#hasSomethingToDraw) {\n              return;\n            }\n            this.#hasSomethingToDraw = false;\n            const thickness = Math.ceil(this.thickness * this.parentScale);\n            const lastPoints = this.currentPath.slice(-3);\n            const x = lastPoints.map(xy => xy[0]);\n            const y = lastPoints.map(xy => xy[1]);\n            const xMin = Math.min(...x) - thickness;\n            const xMax = Math.max(...x) + thickness;\n            const yMin = Math.min(...y) - thickness;\n            const yMax = Math.max(...y) + thickness;\n            const {\n              ctx\n            } = this;\n            ctx.save();\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            for (const path of this.bezierPath2D) {\n              ctx.stroke(path);\n            }\n            ctx.stroke(this.#currentPath2D);\n            ctx.restore();\n          }\n          #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n            const prevX = (x0 + x1) / 2;\n            const prevY = (y0 + y1) / 2;\n            const x3 = (x1 + x2) / 2;\n            const y3 = (y1 + y2) / 2;\n            path2D.bezierCurveTo(prevX + 2 * (x1 - prevX) / 3, prevY + 2 * (y1 - prevY) / 3, x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3, x3, y3);\n          }\n          #generateBezierPoints() {\n            const path = this.currentPath;\n            if (path.length <= 2) {\n              return [[path[0], path[0], path.at(-1), path.at(-1)]];\n            }\n            const bezierPoints = [];\n            let i;\n            let [x0, y0] = path[0];\n            for (i = 1; i < path.length - 2; i++) {\n              const [x1, y1] = path[i];\n              const [x2, y2] = path[i + 1];\n              const x3 = (x1 + x2) / 2;\n              const y3 = (y1 + y2) / 2;\n              const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n              const control2 = [x3 + 2 * (x1 - x3) / 3, y3 + 2 * (y1 - y3) / 3];\n              bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n              [x0, y0] = [x3, y3];\n            }\n            const [x1, y1] = path[i];\n            const [x2, y2] = path[i + 1];\n            const control1 = [x0 + 2 * (x1 - x0) / 3, y0 + 2 * (y1 - y0) / 3];\n            const control2 = [x2 + 2 * (x1 - x2) / 3, y2 + 2 * (y1 - y2) / 3];\n            bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n            return bezierPoints;\n          }\n          #redraw() {\n            if (this.isEmpty()) {\n              this.#updateTransform();\n              return;\n            }\n            this.#setStroke();\n            const {\n              canvas,\n              ctx\n            } = this;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            this.#updateTransform();\n            for (const path of this.bezierPath2D) {\n              ctx.stroke(path);\n            }\n          }\n          commit() {\n            if (this.#disableEditing) {\n              return;\n            }\n            super.commit();\n            this.isEditing = false;\n            this.disableEditMode();\n            this.setInForeground();\n            this.#disableEditing = true;\n            this.div.classList.add(\"disabled\");\n            this.#fitToContent(true);\n            this.makeResizable();\n            this.parent.addInkEditorIfNeeded(true);\n            this.moveInDOM();\n            this.div.focus({\n              preventScroll: true\n            });\n          }\n          focusin(event) {\n            if (!this._focusEventsAllowed) {\n              return;\n            }\n            super.focusin(event);\n            this.enableEditMode();\n          }\n          canvasPointerdown(event) {\n            if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n              return;\n            }\n            this.setInForeground();\n            event.preventDefault();\n            if (event.type !== \"mouse\") {\n              this.div.focus();\n            }\n            this.#startDrawing(event.offsetX, event.offsetY);\n          }\n          canvasPointermove(event) {\n            event.preventDefault();\n            this.#draw(event.offsetX, event.offsetY);\n          }\n          canvasPointerup(event) {\n            event.preventDefault();\n            this.#endDrawing(event);\n          }\n          canvasPointerleave(event) {\n            this.#endDrawing(event);\n          }\n          #endDrawing(event) {\n            this.canvas.removeEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n            this.canvas.removeEventListener(\"pointermove\", this.#boundCanvasPointermove);\n            this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n            this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n            setTimeout(() => {\n              this.canvas.removeEventListener(\"contextmenu\", _display_utils.noContextMenu);\n            }, 10);\n            this.#stopDrawing(event.offsetX, event.offsetY);\n            this.addToAnnotationStorage();\n            this.setInBackground();\n          }\n          #createCanvas() {\n            this.canvas = document.createElement(\"canvas\");\n            this.canvas.width = this.canvas.height = 0;\n            this.canvas.className = \"inkEditorCanvas\";\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_ink_canvas_aria_label\").then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n            this.div.append(this.canvas);\n            this.ctx = this.canvas.getContext(\"2d\");\n          }\n          #createObserver() {\n            this.#observer = new ResizeObserver(entries => {\n              const rect = entries[0].contentRect;\n              if (rect.width && rect.height) {\n                this.setDimensions(rect.width, rect.height);\n              }\n            });\n            this.#observer.observe(this.div);\n          }\n          get isResizable() {\n            return !this.isEmpty() && this.#disableEditing;\n          }\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n            let baseX, baseY;\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n            super.render();\n            _editor.AnnotationEditor._l10nPromise.get(\"editor_ink2_aria_label\").then(msg => this.div?.setAttribute(\"aria-label\", msg));\n            const [x, y, w, h] = this.#getInitialBBox();\n            this.setAt(x, y, 0, 0);\n            this.setDims(w, h);\n            this.#createCanvas();\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n              this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n              this.#isCanvasInitialized = true;\n              this.#setCanvasDims();\n              this.setDims(this.width * parentWidth, this.height * parentHeight);\n              this.#redraw();\n              this.div.classList.add(\"disabled\");\n            } else {\n              this.div.classList.add(\"editing\");\n              this.enableEditMode();\n            }\n            this.#createObserver();\n            return this.div;\n          }\n          #setCanvasDims() {\n            if (!this.#isCanvasInitialized) {\n              return;\n            }\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.canvas.width = Math.ceil(this.width * parentWidth);\n            this.canvas.height = Math.ceil(this.height * parentHeight);\n            this.#updateTransform();\n          }\n          setDimensions(width, height) {\n            const roundedWidth = Math.round(width);\n            const roundedHeight = Math.round(height);\n            if (this.#realWidth === roundedWidth && this.#realHeight === roundedHeight) {\n              return;\n            }\n            this.#realWidth = roundedWidth;\n            this.#realHeight = roundedHeight;\n            this.canvas.style.visibility = \"hidden\";\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.fixAndSetPosition();\n            if (this.#disableEditing) {\n              this.#setScaleFactor(width, height);\n            }\n            this.#setCanvasDims();\n            this.#redraw();\n            this.canvas.style.visibility = \"visible\";\n            this.fixDims();\n          }\n          #setScaleFactor(width, height) {\n            const padding = this.#getPadding();\n            const scaleFactorW = (width - padding) / this.#baseWidth;\n            const scaleFactorH = (height - padding) / this.#baseHeight;\n            this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n          }\n          #updateTransform() {\n            const padding = this.#getPadding() / 2;\n            this.ctx.setTransform(this.scaleFactor, 0, 0, this.scaleFactor, this.translationX * this.scaleFactor + padding, this.translationY * this.scaleFactor + padding);\n          }\n          static #buildPath2D(bezier) {\n            const path2D = new Path2D();\n            for (let i = 0, ii = bezier.length; i < ii; i++) {\n              const [first, control1, control2, second] = bezier[i];\n              if (i === 0) {\n                path2D.moveTo(...first);\n              }\n              path2D.bezierCurveTo(control1[0], control1[1], control2[0], control2[1], second[0], second[1]);\n            }\n            return path2D;\n          }\n          static #toPDFCoordinates(points, rect, rotation) {\n            const [blX, blY, trX, trY] = rect;\n            switch (rotation) {\n              case 0:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] += blX;\n                  points[i + 1] = trY - points[i + 1];\n                }\n                break;\n              case 90:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = points[i + 1] + blX;\n                  points[i + 1] = x + blY;\n                }\n                break;\n              case 180:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] = trX - points[i];\n                  points[i + 1] += blY;\n                }\n                break;\n              case 270:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = trX - points[i + 1];\n                  points[i + 1] = trY - x;\n                }\n                break;\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n            return points;\n          }\n          static #fromPDFCoordinates(points, rect, rotation) {\n            const [blX, blY, trX, trY] = rect;\n            switch (rotation) {\n              case 0:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] -= blX;\n                  points[i + 1] = trY - points[i + 1];\n                }\n                break;\n              case 90:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = points[i + 1] - blY;\n                  points[i + 1] = x - blX;\n                }\n                break;\n              case 180:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  points[i] = trX - points[i];\n                  points[i + 1] -= blY;\n                }\n                break;\n              case 270:\n                for (let i = 0, ii = points.length; i < ii; i += 2) {\n                  const x = points[i];\n                  points[i] = trY - points[i + 1];\n                  points[i + 1] = trX - x;\n                }\n                break;\n              default:\n                throw new Error(\"Invalid rotation\");\n            }\n            return points;\n          }\n          #serializePaths(s, tx, ty, rect) {\n            const paths = [];\n            const padding = this.thickness / 2;\n            const shiftX = s * tx + padding;\n            const shiftY = s * ty + padding;\n            for (const bezier of this.paths) {\n              const buffer = [];\n              const points = [];\n              for (let j = 0, jj = bezier.length; j < jj; j++) {\n                const [first, control1, control2, second] = bezier[j];\n                const p10 = s * first[0] + shiftX;\n                const p11 = s * first[1] + shiftY;\n                const p20 = s * control1[0] + shiftX;\n                const p21 = s * control1[1] + shiftY;\n                const p30 = s * control2[0] + shiftX;\n                const p31 = s * control2[1] + shiftY;\n                const p40 = s * second[0] + shiftX;\n                const p41 = s * second[1] + shiftY;\n                if (j === 0) {\n                  buffer.push(p10, p11);\n                  points.push(p10, p11);\n                }\n                buffer.push(p20, p21, p30, p31, p40, p41);\n                points.push(p20, p21);\n                if (j === jj - 1) {\n                  points.push(p40, p41);\n                }\n              }\n              paths.push({\n                bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n                points: InkEditor.#toPDFCoordinates(points, rect, this.rotation)\n              });\n            }\n            return paths;\n          }\n          #getBbox() {\n            let xMin = Infinity;\n            let xMax = -Infinity;\n            let yMin = Infinity;\n            let yMax = -Infinity;\n            for (const path of this.paths) {\n              for (const [first, control1, control2, second] of path) {\n                const bbox = _util.Util.bezierBoundingBox(...first, ...control1, ...control2, ...second);\n                xMin = Math.min(xMin, bbox[0]);\n                yMin = Math.min(yMin, bbox[1]);\n                xMax = Math.max(xMax, bbox[2]);\n                yMax = Math.max(yMax, bbox[3]);\n              }\n            }\n            return [xMin, yMin, xMax, yMax];\n          }\n          #getPadding() {\n            return this.#disableEditing ? Math.ceil(this.thickness * this.parentScale) : 0;\n          }\n          #fitToContent() {\n            let firstTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            if (this.isEmpty()) {\n              return;\n            }\n            if (!this.#disableEditing) {\n              this.#redraw();\n              return;\n            }\n            const bbox = this.#getBbox();\n            const padding = this.#getPadding();\n            this.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n            this.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n            const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n            const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.setAspectRatio(width, height);\n            const prevTranslationX = this.translationX;\n            const prevTranslationY = this.translationY;\n            this.translationX = -bbox[0];\n            this.translationY = -bbox[1];\n            this.#setCanvasDims();\n            this.#redraw();\n            this.#realWidth = width;\n            this.#realHeight = height;\n            this.setDims(width, height);\n            const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n            this.translate(prevTranslationX - this.translationX - unscaledPadding, prevTranslationY - this.translationY - unscaledPadding);\n          }\n          static deserialize(data, parent, uiManager) {\n            if (data instanceof _annotation_layer.InkAnnotationElement) {\n              return null;\n            }\n            const editor = super.deserialize(data, parent, uiManager);\n            editor.thickness = data.thickness;\n            editor.color = _util.Util.makeHexColor(...data.color);\n            editor.opacity = data.opacity;\n            const [pageWidth, pageHeight] = editor.pageDimensions;\n            const width = editor.width * pageWidth;\n            const height = editor.height * pageHeight;\n            const scaleFactor = editor.parentScale;\n            const padding = data.thickness / 2;\n            editor.#disableEditing = true;\n            editor.#realWidth = Math.round(width);\n            editor.#realHeight = Math.round(height);\n            const {\n              paths,\n              rect,\n              rotation\n            } = data;\n            for (let {\n              bezier\n            } of paths) {\n              bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n              const path = [];\n              editor.paths.push(path);\n              let p0 = scaleFactor * (bezier[0] - padding);\n              let p1 = scaleFactor * (bezier[1] - padding);\n              for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n                const p10 = scaleFactor * (bezier[i] - padding);\n                const p11 = scaleFactor * (bezier[i + 1] - padding);\n                const p20 = scaleFactor * (bezier[i + 2] - padding);\n                const p21 = scaleFactor * (bezier[i + 3] - padding);\n                const p30 = scaleFactor * (bezier[i + 4] - padding);\n                const p31 = scaleFactor * (bezier[i + 5] - padding);\n                path.push([[p0, p1], [p10, p11], [p20, p21], [p30, p31]]);\n                p0 = p30;\n                p1 = p31;\n              }\n              const path2D = this.#buildPath2D(path);\n              editor.bezierPath2D.push(path2D);\n            }\n            const bbox = editor.#getBbox();\n            editor.#baseWidth = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n            editor.#baseHeight = Math.max(_editor.AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n            editor.#setScaleFactor(width, height);\n            return editor;\n          }\n          serialize() {\n            if (this.isEmpty()) {\n              return null;\n            }\n            const rect = this.getRect(0, 0);\n            const color = _editor.AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n            return {\n              annotationType: _util.AnnotationEditorType.INK,\n              color,\n              thickness: this.thickness,\n              opacity: this.opacity,\n              paths: this.#serializePaths(this.scaleFactor / this.parentScale, this.translationX, this.translationY, rect),\n              pageIndex: this.pageIndex,\n              rect,\n              rotation: this.rotation,\n              structTreeParentId: this._structTreeParentId\n            };\n          }\n        }\n        exports.InkEditor = InkEditor;\n\n        /***/\n      }, /* 34 */\n      /***/(__unused_webpack_module, exports, __w_pdfjs_require__) => {\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        exports.StampEditor = void 0;\n        var _util = __w_pdfjs_require__(1);\n        var _editor = __w_pdfjs_require__(4);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _annotation_layer = __w_pdfjs_require__(29);\n        class StampEditor extends _editor.AnnotationEditor {\n          #bitmap = null;\n          #bitmapId = null;\n          #bitmapPromise = null;\n          #bitmapUrl = null;\n          #bitmapFile = null;\n          #canvas = null;\n          #observer = null;\n          #resizeTimeoutId = null;\n          #isSvg = false;\n          #hasBeenAddedInUndoStack = false;\n          static _type = \"stamp\";\n          constructor(params) {\n            super({\n              ...params,\n              name: \"stampEditor\"\n            });\n            this.#bitmapUrl = params.bitmapUrl;\n            this.#bitmapFile = params.bitmapFile;\n          }\n          static initialize(l10n) {\n            _editor.AnnotationEditor.initialize(l10n);\n          }\n          static get supportedTypes() {\n            const types = [\"apng\", \"avif\", \"bmp\", \"gif\", \"jpeg\", \"png\", \"svg+xml\", \"webp\", \"x-icon\"];\n            return (0, _util.shadow)(this, \"supportedTypes\", types.map(type => `image/${type}`));\n          }\n          static get supportedTypesStr() {\n            return (0, _util.shadow)(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n          }\n          static isHandlingMimeForPasting(mime) {\n            return this.supportedTypes.includes(mime);\n          }\n          static paste(item, parent) {\n            parent.pasteEditor(_util.AnnotationEditorType.STAMP, {\n              bitmapFile: item.getAsFile()\n            });\n          }\n          #getBitmapFetched(data) {\n            let fromId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            if (!data) {\n              this.remove();\n              return;\n            }\n            this.#bitmap = data.bitmap;\n            if (!fromId) {\n              this.#bitmapId = data.id;\n              this.#isSvg = data.isSvg;\n            }\n            this.#createCanvas();\n          }\n          #getBitmapDone() {\n            this.#bitmapPromise = null;\n            this._uiManager.enableWaiting(false);\n            if (this.#canvas) {\n              this.div.focus();\n            }\n          }\n          #getBitmap() {\n            if (this.#bitmapId) {\n              this._uiManager.enableWaiting(true);\n              this._uiManager.imageManager.getFromId(this.#bitmapId).then(data => this.#getBitmapFetched(data, true)).finally(() => this.#getBitmapDone());\n              return;\n            }\n            if (this.#bitmapUrl) {\n              const url = this.#bitmapUrl;\n              this.#bitmapUrl = null;\n              this._uiManager.enableWaiting(true);\n              this.#bitmapPromise = this._uiManager.imageManager.getFromUrl(url).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n              return;\n            }\n            if (this.#bitmapFile) {\n              const file = this.#bitmapFile;\n              this.#bitmapFile = null;\n              this._uiManager.enableWaiting(true);\n              this.#bitmapPromise = this._uiManager.imageManager.getFromFile(file).then(data => this.#getBitmapFetched(data)).finally(() => this.#getBitmapDone());\n              return;\n            }\n            const input = document.createElement(\"input\");\n            input.type = \"file\";\n            input.accept = StampEditor.supportedTypesStr;\n            this.#bitmapPromise = new Promise(resolve => {\n              input.addEventListener(\"change\", async () => {\n                if (!input.files || input.files.length === 0) {\n                  this.remove();\n                } else {\n                  this._uiManager.enableWaiting(true);\n                  const data = await this._uiManager.imageManager.getFromFile(input.files[0]);\n                  this.#getBitmapFetched(data);\n                }\n                resolve();\n              });\n              input.addEventListener(\"cancel\", () => {\n                this.remove();\n                resolve();\n              });\n            }).finally(() => this.#getBitmapDone());\n            input.click();\n          }\n          remove() {\n            if (this.#bitmapId) {\n              this.#bitmap = null;\n              this._uiManager.imageManager.deleteId(this.#bitmapId);\n              this.#canvas?.remove();\n              this.#canvas = null;\n              this.#observer?.disconnect();\n              this.#observer = null;\n            }\n            super.remove();\n          }\n          rebuild() {\n            if (!this.parent) {\n              if (this.#bitmapId) {\n                this.#getBitmap();\n              }\n              return;\n            }\n            super.rebuild();\n            if (this.div === null) {\n              return;\n            }\n            if (this.#bitmapId) {\n              this.#getBitmap();\n            }\n            if (!this.isAttachedToDOM) {\n              this.parent.add(this);\n            }\n          }\n          onceAdded() {\n            this._isDraggable = true;\n            this.div.focus();\n          }\n          isEmpty() {\n            return !(this.#bitmapPromise || this.#bitmap || this.#bitmapUrl || this.#bitmapFile);\n          }\n          get isResizable() {\n            return true;\n          }\n          render() {\n            if (this.div) {\n              return this.div;\n            }\n            let baseX, baseY;\n            if (this.width) {\n              baseX = this.x;\n              baseY = this.y;\n            }\n            super.render();\n            this.div.hidden = true;\n            if (this.#bitmap) {\n              this.#createCanvas();\n            } else {\n              this.#getBitmap();\n            }\n            if (this.width) {\n              const [parentWidth, parentHeight] = this.parentDimensions;\n              this.setAt(baseX * parentWidth, baseY * parentHeight, this.width * parentWidth, this.height * parentHeight);\n            }\n            return this.div;\n          }\n          #createCanvas() {\n            const {\n              div\n            } = this;\n            let {\n              width,\n              height\n            } = this.#bitmap;\n            const [pageWidth, pageHeight] = this.pageDimensions;\n            const MAX_RATIO = 0.75;\n            if (this.width) {\n              width = this.width * pageWidth;\n              height = this.height * pageHeight;\n            } else if (width > MAX_RATIO * pageWidth || height > MAX_RATIO * pageHeight) {\n              const factor = Math.min(MAX_RATIO * pageWidth / width, MAX_RATIO * pageHeight / height);\n              width *= factor;\n              height *= factor;\n            }\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.setDims(width * parentWidth / pageWidth, height * parentHeight / pageHeight);\n            this._uiManager.enableWaiting(false);\n            const canvas = this.#canvas = document.createElement(\"canvas\");\n            div.append(canvas);\n            div.hidden = false;\n            this.#drawBitmap(width, height);\n            this.#createObserver();\n            if (!this.#hasBeenAddedInUndoStack) {\n              this.parent.addUndoableEditor(this);\n              this.#hasBeenAddedInUndoStack = true;\n            }\n            this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n              source: this,\n              details: {\n                type: \"editing\",\n                subtype: this.editorType,\n                data: {\n                  action: \"inserted_image\"\n                }\n              }\n            });\n            this.addAltTextButton();\n          }\n          #setDimensions(width, height) {\n            const [parentWidth, parentHeight] = this.parentDimensions;\n            this.width = width / parentWidth;\n            this.height = height / parentHeight;\n            this.setDims(width, height);\n            if (this._initialOptions?.isCentered) {\n              this.center();\n            } else {\n              this.fixAndSetPosition();\n            }\n            this._initialOptions = null;\n            if (this.#resizeTimeoutId !== null) {\n              clearTimeout(this.#resizeTimeoutId);\n            }\n            const TIME_TO_WAIT = 200;\n            this.#resizeTimeoutId = setTimeout(() => {\n              this.#resizeTimeoutId = null;\n              this.#drawBitmap(width, height);\n            }, TIME_TO_WAIT);\n          }\n          #scaleBitmap(width, height) {\n            const {\n              width: bitmapWidth,\n              height: bitmapHeight\n            } = this.#bitmap;\n            let newWidth = bitmapWidth;\n            let newHeight = bitmapHeight;\n            let bitmap = this.#bitmap;\n            while (newWidth > 2 * width || newHeight > 2 * height) {\n              const prevWidth = newWidth;\n              const prevHeight = newHeight;\n              if (newWidth > 2 * width) {\n                newWidth = newWidth >= 16384 ? Math.floor(newWidth / 2) - 1 : Math.ceil(newWidth / 2);\n              }\n              if (newHeight > 2 * height) {\n                newHeight = newHeight >= 16384 ? Math.floor(newHeight / 2) - 1 : Math.ceil(newHeight / 2);\n              }\n              const offscreen = new OffscreenCanvas(newWidth, newHeight);\n              const ctx = offscreen.getContext(\"2d\");\n              ctx.drawImage(bitmap, 0, 0, prevWidth, prevHeight, 0, 0, newWidth, newHeight);\n              bitmap = offscreen.transferToImageBitmap();\n            }\n            return bitmap;\n          }\n          #drawBitmap(width, height) {\n            width = Math.ceil(width);\n            height = Math.ceil(height);\n            const canvas = this.#canvas;\n            if (!canvas || canvas.width === width && canvas.height === height) {\n              return;\n            }\n            canvas.width = width;\n            canvas.height = height;\n            const bitmap = this.#isSvg ? this.#bitmap : this.#scaleBitmap(width, height);\n            const ctx = canvas.getContext(\"2d\");\n            ctx.filter = this._uiManager.hcmFilter;\n            ctx.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height, 0, 0, width, height);\n          }\n          #serializeBitmap(toUrl) {\n            if (toUrl) {\n              if (this.#isSvg) {\n                const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n                if (url) {\n                  return url;\n                }\n              }\n              const canvas = document.createElement(\"canvas\");\n              ({\n                width: canvas.width,\n                height: canvas.height\n              } = this.#bitmap);\n              const ctx = canvas.getContext(\"2d\");\n              ctx.drawImage(this.#bitmap, 0, 0);\n              return canvas.toDataURL();\n            }\n            if (this.#isSvg) {\n              const [pageWidth, pageHeight] = this.pageDimensions;\n              const width = Math.round(this.width * pageWidth * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n              const height = Math.round(this.height * pageHeight * _display_utils.PixelsPerInch.PDF_TO_CSS_UNITS);\n              const offscreen = new OffscreenCanvas(width, height);\n              const ctx = offscreen.getContext(\"2d\");\n              ctx.drawImage(this.#bitmap, 0, 0, this.#bitmap.width, this.#bitmap.height, 0, 0, width, height);\n              return offscreen.transferToImageBitmap();\n            }\n            return structuredClone(this.#bitmap);\n          }\n          #createObserver() {\n            this.#observer = new ResizeObserver(entries => {\n              const rect = entries[0].contentRect;\n              if (rect.width && rect.height) {\n                this.#setDimensions(rect.width, rect.height);\n              }\n            });\n            this.#observer.observe(this.div);\n          }\n          static deserialize(data, parent, uiManager) {\n            if (data instanceof _annotation_layer.StampAnnotationElement) {\n              return null;\n            }\n            const editor = super.deserialize(data, parent, uiManager);\n            const {\n              rect,\n              bitmapUrl,\n              bitmapId,\n              isSvg,\n              accessibilityData\n            } = data;\n            if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n              editor.#bitmapId = bitmapId;\n            } else {\n              editor.#bitmapUrl = bitmapUrl;\n            }\n            editor.#isSvg = isSvg;\n            const [parentWidth, parentHeight] = editor.pageDimensions;\n            editor.width = (rect[2] - rect[0]) / parentWidth;\n            editor.height = (rect[3] - rect[1]) / parentHeight;\n            if (accessibilityData) {\n              editor.altTextData = accessibilityData;\n            }\n            return editor;\n          }\n          serialize() {\n            let isForCopying = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            let context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n            if (this.isEmpty()) {\n              return null;\n            }\n            const serialized = {\n              annotationType: _util.AnnotationEditorType.STAMP,\n              bitmapId: this.#bitmapId,\n              pageIndex: this.pageIndex,\n              rect: this.getRect(0, 0),\n              rotation: this.rotation,\n              isSvg: this.#isSvg,\n              structTreeParentId: this._structTreeParentId\n            };\n            if (isForCopying) {\n              serialized.bitmapUrl = this.#serializeBitmap(true);\n              serialized.accessibilityData = this.altTextData;\n              return serialized;\n            }\n            const {\n              decorative,\n              altText\n            } = this.altTextData;\n            if (!decorative && altText) {\n              serialized.accessibilityData = {\n                type: \"Figure\",\n                alt: altText\n              };\n            }\n            if (context === null) {\n              return serialized;\n            }\n            context.stamps ||= new Map();\n            const area = this.#isSvg ? (serialized.rect[2] - serialized.rect[0]) * (serialized.rect[3] - serialized.rect[1]) : null;\n            if (!context.stamps.has(this.#bitmapId)) {\n              context.stamps.set(this.#bitmapId, {\n                area,\n                serialized\n              });\n              serialized.bitmap = this.#serializeBitmap(false);\n            } else if (this.#isSvg) {\n              const prevData = context.stamps.get(this.#bitmapId);\n              if (area > prevData.area) {\n                prevData.area = area;\n                prevData.serialized.bitmap.close();\n                prevData.serialized.bitmap = this.#serializeBitmap(false);\n              }\n            }\n            return serialized;\n          }\n        }\n        exports.StampEditor = StampEditor;\n\n        /***/\n      }\n      /******/];\n      /************************************************************************/\n      /******/ // The module cache\n      /******/\n      var __webpack_module_cache__ = {};\n      /******/\n      /******/ // The require function\n      /******/\n      function __w_pdfjs_require__(moduleId) {\n        /******/ // Check if module is in cache\n        /******/var cachedModule = __webpack_module_cache__[moduleId];\n        /******/\n        if (cachedModule !== undefined) {\n          /******/return cachedModule.exports;\n          /******/\n        }\n        /******/ // Create a new module (and put it into the cache)\n        /******/\n        var module = __webpack_module_cache__[moduleId] = {\n          /******/ // no module.id needed\n          /******/ // no module.loaded needed\n          /******/exports: {}\n          /******/\n        };\n        /******/\n        /******/ // Execute the module function\n        /******/\n        __webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n        /******/\n        /******/ // Return the exports of the module\n        /******/\n        return module.exports;\n        /******/\n      }\n      /******/\n      /************************************************************************/\n      var __webpack_exports__ = {};\n      // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.\n      (() => {\n        var exports = __webpack_exports__;\n        Object.defineProperty(exports, \"__esModule\", {\n          value: true\n        });\n        Object.defineProperty(exports, \"AbortException\", {\n          enumerable: true,\n          get: function () {\n            return _util.AbortException;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorLayer\", {\n          enumerable: true,\n          get: function () {\n            return _annotation_editor_layer.AnnotationEditorLayer;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorParamsType\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationEditorParamsType;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorType\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationEditorType;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationEditorUIManager\", {\n          enumerable: true,\n          get: function () {\n            return _tools.AnnotationEditorUIManager;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationLayer\", {\n          enumerable: true,\n          get: function () {\n            return _annotation_layer.AnnotationLayer;\n          }\n        });\n        Object.defineProperty(exports, \"AnnotationMode\", {\n          enumerable: true,\n          get: function () {\n            return _util.AnnotationMode;\n          }\n        });\n        Object.defineProperty(exports, \"CMapCompressionType\", {\n          enumerable: true,\n          get: function () {\n            return _util.CMapCompressionType;\n          }\n        });\n        Object.defineProperty(exports, \"DOMSVGFactory\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.DOMSVGFactory;\n          }\n        });\n        Object.defineProperty(exports, \"FeatureTest\", {\n          enumerable: true,\n          get: function () {\n            return _util.FeatureTest;\n          }\n        });\n        Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n          enumerable: true,\n          get: function () {\n            return _worker_options.GlobalWorkerOptions;\n          }\n        });\n        Object.defineProperty(exports, \"ImageKind\", {\n          enumerable: true,\n          get: function () {\n            return _util.ImageKind;\n          }\n        });\n        Object.defineProperty(exports, \"InvalidPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.InvalidPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"MissingPDFException\", {\n          enumerable: true,\n          get: function () {\n            return _util.MissingPDFException;\n          }\n        });\n        Object.defineProperty(exports, \"OPS\", {\n          enumerable: true,\n          get: function () {\n            return _util.OPS;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFDataRangeTransport;\n          }\n        });\n        Object.defineProperty(exports, \"PDFDateString\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PDFDateString;\n          }\n        });\n        Object.defineProperty(exports, \"PDFWorker\", {\n          enumerable: true,\n          get: function () {\n            return _api.PDFWorker;\n          }\n        });\n        Object.defineProperty(exports, \"PasswordResponses\", {\n          enumerable: true,\n          get: function () {\n            return _util.PasswordResponses;\n          }\n        });\n        Object.defineProperty(exports, \"PermissionFlag\", {\n          enumerable: true,\n          get: function () {\n            return _util.PermissionFlag;\n          }\n        });\n        Object.defineProperty(exports, \"PixelsPerInch\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.PixelsPerInch;\n          }\n        });\n        Object.defineProperty(exports, \"PromiseCapability\", {\n          enumerable: true,\n          get: function () {\n            return _util.PromiseCapability;\n          }\n        });\n        Object.defineProperty(exports, \"RenderingCancelledException\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.RenderingCancelledException;\n          }\n        });\n        Object.defineProperty(exports, \"SVGGraphics\", {\n          enumerable: true,\n          get: function () {\n            return _api.SVGGraphics;\n          }\n        });\n        Object.defineProperty(exports, \"UnexpectedResponseException\", {\n          enumerable: true,\n          get: function () {\n            return _util.UnexpectedResponseException;\n          }\n        });\n        Object.defineProperty(exports, \"Util\", {\n          enumerable: true,\n          get: function () {\n            return _util.Util;\n          }\n        });\n        Object.defineProperty(exports, \"VerbosityLevel\", {\n          enumerable: true,\n          get: function () {\n            return _util.VerbosityLevel;\n          }\n        });\n        Object.defineProperty(exports, \"XfaLayer\", {\n          enumerable: true,\n          get: function () {\n            return _xfa_layer.XfaLayer;\n          }\n        });\n        Object.defineProperty(exports, \"build\", {\n          enumerable: true,\n          get: function () {\n            return _api.build;\n          }\n        });\n        Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n          enumerable: true,\n          get: function () {\n            return _util.createValidAbsoluteUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getDocument\", {\n          enumerable: true,\n          get: function () {\n            return _api.getDocument;\n          }\n        });\n        Object.defineProperty(exports, \"getFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getPdfFilenameFromUrl\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getPdfFilenameFromUrl;\n          }\n        });\n        Object.defineProperty(exports, \"getXfaPageViewport\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.getXfaPageViewport;\n          }\n        });\n        Object.defineProperty(exports, \"isDataScheme\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.isDataScheme;\n          }\n        });\n        Object.defineProperty(exports, \"isPdfFile\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.isPdfFile;\n          }\n        });\n        Object.defineProperty(exports, \"loadScript\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.loadScript;\n          }\n        });\n        Object.defineProperty(exports, \"noContextMenu\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.noContextMenu;\n          }\n        });\n        Object.defineProperty(exports, \"normalizeUnicode\", {\n          enumerable: true,\n          get: function () {\n            return _util.normalizeUnicode;\n          }\n        });\n        Object.defineProperty(exports, \"renderTextLayer\", {\n          enumerable: true,\n          get: function () {\n            return _text_layer.renderTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"setLayerDimensions\", {\n          enumerable: true,\n          get: function () {\n            return _display_utils.setLayerDimensions;\n          }\n        });\n        Object.defineProperty(exports, \"shadow\", {\n          enumerable: true,\n          get: function () {\n            return _util.shadow;\n          }\n        });\n        Object.defineProperty(exports, \"updateTextLayer\", {\n          enumerable: true,\n          get: function () {\n            return _text_layer.updateTextLayer;\n          }\n        });\n        Object.defineProperty(exports, \"version\", {\n          enumerable: true,\n          get: function () {\n            return _api.version;\n          }\n        });\n        var _util = __w_pdfjs_require__(1);\n        var _api = __w_pdfjs_require__(2);\n        var _display_utils = __w_pdfjs_require__(6);\n        var _text_layer = __w_pdfjs_require__(26);\n        var _annotation_editor_layer = __w_pdfjs_require__(27);\n        var _tools = __w_pdfjs_require__(5);\n        var _annotation_layer = __w_pdfjs_require__(29);\n        var _worker_options = __w_pdfjs_require__(14);\n        var _xfa_layer = __w_pdfjs_require__(32);\n        const pdfjsVersion = '3.11.174';\n        const pdfjsBuild = 'ce8716743';\n      })();\n\n      /******/\n      return __webpack_exports__;\n      /******/\n    })()\n  );\n});","map":{"version":3,"names":["webpackUniversalModuleDefinition","root","factory","exports","module","pdfjsLib","define","amd","globalThis","isNodeJS","process","versions","nw","electron","type","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","MAX_IMAGE_SIZE_TO_CACHE","LINE_FACTOR","LINE_DESCENT_FACTOR","BASELINE_FACTOR","RenderingIntentFlag","ANY","DISPLAY","PRINT","SAVE","ANNOTATIONS_FORMS","ANNOTATIONS_STORAGE","ANNOTATIONS_DISABLE","OPLIST","AnnotationMode","DISABLE","ENABLE","ENABLE_FORMS","ENABLE_STORAGE","AnnotationEditorPrefix","AnnotationEditorType","NONE","FREETEXT","STAMP","INK","AnnotationEditorParamsType","RESIZE","CREATE","FREETEXT_SIZE","FREETEXT_COLOR","FREETEXT_OPACITY","INK_COLOR","INK_THICKNESS","INK_OPACITY","PermissionFlag","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","CARET","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","AnnotationActionEventType","E","X","D","U","Fo","Bl","PO","PC","PV","PI","K","F","V","C","DocumentActionEventType","WC","WS","DS","WP","DP","PageActionEventType","O","VerbosityLevel","ERRORS","WARNINGS","INFOS","CMapCompressionType","BINARY","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotation","endAnnotation","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","setVerbosityLevel","level","Number","isInteger","getVerbosityLevel","info","msg","console","log","warn","unreachable","Error","assert","cond","_isValidProtocol","url","protocol","createValidAbsoluteUrl","baseUrl","arguments","length","undefined","options","addDefaultProtocol","startsWith","dots","match","tryConvertEncoding","stringToUTF8String","absoluteUrl","URL","shadow","obj","prop","value","nonSerializable","Object","defineProperty","enumerable","configurable","writable","BaseException","BaseExceptionClosure","message","name","constructor","prototype","PasswordException","code","UnknownErrorException","details","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","FormatError","AbortException","bytesToString","bytes","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","i","chunkEnd","Math","min","chunk","subarray","push","join","stringToBytes","str","Uint8Array","charCodeAt","string32","objectSize","keys","objectFromMap","map","create","key","isLittleEndian","buffer8","view32","Uint32Array","buffer","isEvalSupported","Function","FeatureTest","isOffscreenCanvasSupported","OffscreenCanvas","platform","navigator","isWin","isMac","includes","isCSSRoundSupported","CSS","supports","hexNumbers","Array","n","toString","padStart","Util","makeHexColor","r","g","b","scaleMinMax","minMax","temp","m1","m2","applyTransform","p","m","xt","yt","applyInverseTransform","d","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","max","inverseTransform","singularValueDecompose2dScale","transpose","a","c","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","xLow","xHigh","yLow","yHigh","bezierBoundingBox","x0","y0","x1","y1","x2","y2","x3","y3","tvalues","bounds","t","t1","t2","b2ac","sqrtb2ac","abs","j","mt","jlen","PDFStringTranslateTable","stringToPDFString","encoding","decoder","TextDecoder","fatal","decode","ex","ii","charAt","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isArrayBuffer","v","byteLength","isArrayEqual","arr1","arr2","getModificationDate","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","PromiseCapability","settled","promise","Promise","resolve","reject","data","reason","NormalizeRegex","NormalizationMap","normalizeUnicode","Map","replaceAll","_","normalize","get","getUuid","crypto","randomUUID","buf","getRandomValues","floor","random","AnnotationPrefix","_util","__w_pdfjs_require__","_annotation_storage","_display_utils","_font_loader","_displayNode_utils","_canvas","_worker_options","_message_handler","_metadata","_optional_content_config","_transport_stream","_displayFetch_stream","_displayNetwork","_displayNode_stream","_displaySvg","_xfa_text","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DELAYED_CLEANUP_TIMEOUT","DefaultCanvasFactory","NodeCanvasFactory","DOMCanvasFactory","DefaultCMapReaderFactory","NodeCMapReaderFactory","DOMCMapReaderFactory","DefaultFilterFactory","NodeFilterFactory","DOMFilterFactory","DefaultStandardFontDataFactory","NodeStandardFontDataFactory","DOMStandardFontDataFactory","getDocument","src","range","task","PDFDocumentLoadingTask","docId","getUrlProp","getDataProp","httpHeaders","withCredentials","password","rangeTransport","PDFDataRangeTransport","rangeChunkSize","worker","PDFWorker","docBaseUrl","isDataScheme","cMapUrl","cMapPacked","CMapReaderFactory","standardFontDataUrl","StandardFontDataFactory","ignoreErrors","stopAtErrors","maxImageSize","canvasMaxAreaInBytes","disableFontFace","fontExtraProperties","enableXfa","ownerDocument","document","disableRange","disableStream","disableAutoFetch","pdfBug","NaN","useSystemFonts","useWorkerFetch","isValidFetchUrl","baseURI","canvasFactory","filterFactory","styleElement","transportFactory","cMapReaderFactory","isCompressed","standardFontDataFactory","workerParams","port","GlobalWorkerOptions","workerPort","fromPort","_worker","fetchDocParams","apiVersion","evaluatorOptions","transportParams","then","destroyed","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","PDFDataTransportStream","initialData","progressiveDone","contentDispositionFilename","createPDFNetworkStream","params","PDFNodeStream","PDFFetchStream","PDFNetworkStream","all","_ref","workerId","messageHandler","MessageHandler","transport","WorkerTransport","_transport","send","catch","_capability","source","sendWithPromise","val","href","window","location","Buffer","isNaN","onPassword","onProgress","destroy","_pendingDestroy","_rangeListeners","_progressListeners","_progressiveReadListeners","_progressiveDoneListeners","_readyCapability","addRangeListener","listener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","begin","onDataProgress","loaded","total","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","end","abort","PDFDocumentProxy","pdfInfo","_pdfInfo","deprecated","getJSActions","js","jsArr","annotationStorage","numPages","fingerprints","isPureXfa","_htmlForXfa","allXfaHtml","getPage","pageNumber","getPageIndex","ref","getDestinations","getDestination","id","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getDocJSActions","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getMarkInfo","getData","saveDocument","getDownloadInfo","downloadInfoCapability","cleanup","keepLoadedFonts","startCleanup","loadingTask","loadingParams","getFieldObjects","hasJSActions","getCalculationOrderIds","PDFPageProxy","delayedCleanupTimeout","pendingCleanup","pageIndex","pageInfo","_pageIndex","_pageInfo","_stats","StatTimer","_pdfBug","commonObjs","objs","PDFObjects","_maybeCleanupAfterRender","_intentStates","rotate","userUnit","view","getViewport","scale","rotation","offsetX","offsetY","dontFlip","PageViewport","viewBox","getAnnotations","intent","intentArgs","getRenderingIntent","renderingIntent","getPageJSActions","getXfa","children","render","_ref2","canvasContext","viewport","annotationMode","background","optionalContentConfigPromise","annotationCanvasMap","pageColors","printAnnotationStorage","time","abortDelayedCleanup","intentState","cacheKey","set","streamReaderCancelTimeout","clearTimeout","intentPrint","displayReadyCapability","operatorList","fnArray","argsArray","lastChunk","separateAnnots","_pumpOperatorList","complete","error","renderTasks","delete","internalRenderTask","tryCleanup","capability","_abortOperatorList","timeEnd","InternalRenderTask","callback","useRequestAnimationFrame","Set","add","renderTask","_ref3","transparency","optionalContentConfig","initializeGraphics","operatorListChanged","getOperatorList","opListReadCapability","opListTask","streamTextContent","includeMarkedContent","disableNormalization","TEXT_CONTENT_CHUNK_SIZE","sendWithStream","highWaterMark","size","textContent","items","getTextContent","xfa","XfaText","readableStream","pump","reader","read","_ref4","done","assign","styles","getReader","getStructTree","_destroy","waitOn","values","force","completed","cancel","clear","resetStats","success","#tryCleanup","delayed","setTimeout","#abortDelayedCleanup","_startRenderPage","_renderPageChunk","operatorListChunk","_ref5","annotationStorageSerializable","transfers","streamReader","_ref6","_ref7","RenderingCancelledException","delay","extraDelay","curCacheKey","curIntentState","stats","LoopbackPort","listeners","deferred","postMessage","transfer","event","structuredClone","call","addEventListener","removeEventListener","terminate","PDFWorkerUtil","isWorkerDisabled","fallbackWorkerSrc","fakeWorkerId","require","pdfjsFilePath","currentScript","replace","isSameOrigin","otherUrl","base","origin","other","createCDNWrapper","wrapper","createObjectURL","Blob","workerPorts","_port","_webWorker","_messageHandler","has","WeakMap","_initializeFromPort","_initialize","on","_mainThreadWorkerMessageHandler","workerSrc","Worker","terminateEarly","onWorkerError","_setupFakeWorker","sendTest","testObj","_setupFakeWorkerGlobal","WorkerMessageHandler","workerHandler","setup","cachedPort","pdfjsWorker","loader","mainWorkerMessageHandler","eval","loadScript","methodPromises","pageCache","pagePromises","passwordCapability","fontLoader","FontLoader","_params","destroyCapability","_networkStream","_fullReader","_lastProgress","setupMessageHandler","cacheSimpleMethod","#cacheSimpleMethod","cachedPromise","AnnotationStorage","isOpList","SerializableEmpty","PrintAnnotationStorage","serializable","hash","page","hasOwnProperty","resetModified","terminated","cancelAllRequests","sink","getFullReader","evt","onPull","_ref8","close","ArrayBuffer","enqueue","onCancel","ready","readyReason","headersCapability","fullReader","headersReady","isStreamingSupported","isRangeSupported","contentLength","rangeReader","getRangeReader","_ref9","_ref10","_numPages","htmlForXfa","exception","updatePassword","_ref11","exportedData","exportedError","inspectFont","FontInspector","enabled","font","fontAdded","FontFaceObject","bind","finally","_ref12","imageData","pageProxy","bitmap","width","height","fetch","filename","num","gen","results","OptionalContentConfig","metadata","Metadata","cleanupSuccessful","ensureObj","#ensureObj","objId","RenderTask","onContinue","form","canvas","canvasInUse","WeakSet","_ref13","operatorListIdx","running","graphicsReadyCallback","graphicsReady","_useRequestAnimationFrame","cancelled","_cancelBound","_continueBound","_continue","_scheduleNextBound","_scheduleNext","_nextBound","_next","_ref14","StepperManager","stepper","init","nextBreakPoint","getNextBreakPoint","gfx","CanvasGraphics","beginDrawing","endDrawing","updateOperatorList","requestAnimationFrame","executeOperatorList","version","build","_editor","_murmurhash","freeze","modified","storage","onSetModified","onResetModified","onAnnotationEditor","getValue","defaultValue","getRawValue","remove","AnnotationEditor","setValue","entry","entries","setModified","_type","getAll","setAll","#setModified","print","MurmurHash3_64","context","hasBitmap","serialized","serialize","update","JSON","stringify","hexdigest","parent","clone","_tools","altText","altTextDecorative","altTextButton","altTextTooltip","altTextTooltipTimeout","keepAspectRatio","resizersDiv","boundFocusin","focusin","boundFocusout","focusout","hasBeenClicked","isEditing","isInEditMode","_initialOptions","_uiManager","_focusEventsAllowed","_l10nPromise","isDraggable","zIndex","_zIndex","_borderLineWidth","_colorManager","ColorManager","SMALL_EDITOR_SIZE","parameters","div","uiManager","annotationElementId","_willKeepAspectRatio","isCentered","_structTreeParentId","rawDims","pageWidth","pageHeight","pageX","pageY","pageRotation","viewParameters","pageDimensions","pageTranslation","parentDimensions","x","y","isAttachedToDOM","deleted","editorType","getPrototypeOf","_defaultLineColor","getHexCode","deleteAnnotationElement","editor","fakeEditor","FakeEditor","getNextId","addToAnnotationStorage","initialize","l10n","strings","style","getComputedStyle","documentElement","parseFloat","getPropertyValue","updateDefaultParams","_value","defaultPropertiesToUpdate","isHandlingMimeForPasting","mime","paste","item","propertiesToUpdate","_isDraggable","classList","toggle","center","parentRotation","fixAndSetPosition","addCommands","currentLayer","setInBackground","setInForeground","setParent","setSelected","target","relatedTarget","closest","preventDefault","isMultipleSelection","commitOrRemove","isEmpty","commit","setAt","tx","ty","screenToPageTranslation","translate","#translate","_ref15","translateInPage","scrollIntoView","block","drag","parentWidth","parentHeight","getBoundingClientRect","findNewParent","bx","by","getBaseTranslation","left","toFixed","top","#getBaseTranslation","moveInDOM","rotatePoint","#rotatePoint","angle","pageTranslationToScreen","getRotationMatrix","#getRotationMatrix","parentScale","realScale","scaledWidth","scaledHeight","round","setDims","fixDims","widthPercent","endsWith","heightPercent","getInitialTranslation","createResizers","#createResizers","createElement","classes","append","resizerPointerdown","noContextMenu","prepend","#resizerPointerdown","button","ctrlKey","boundResizerPointermove","resizerPointermove","savedDraggable","pointerMoveOptions","passive","capture","savedX","savedY","savedWidth","savedHeight","savedParentCursor","cursor","savedCursor","pointerUpCallback","newX","newY","newWidth","newHeight","cmd","undo","mustExec","#resizerPointermove","minWidth","MIN_SIZE","minHeight","rotationMatrix","transf","invRotationMatrix","invTransf","getPoint","getOpposite","isDiagonal","isHorizontal","w","h","point","oppositePoint","transfOppositePoint","oppositeX","oppositeY","ratioX","ratioY","deltaX","deltaY","movementX","movementY","oldDiag","hypot","addAltTextButton","className","setAttribute","tabIndex","stopPropagation","editAltText","setAltTextButtonState","PERCENT","#setAltTextButtonState","tooltip","DELAY_TO_SHOW_TOOLTIP","_eventBus","dispatch","subtype","action","innerText","parentNode","getClientDimensions","altTextData","decorative","_ref16","maxWidth","maxHeight","bindEvents","pointerdown","setUpDragSession","#setUpDragSession","isSelected","pointerMoveCallback","e","dragSelectedEditors","endDragSession","shiftKey","metaKey","toggleSelected","moveEditorInDOM","_setParentAndPosition","changeParent","getRect","shiftX","shiftY","getRectInCurrentCoords","onceAdded","enableEditMode","disableEditMode","shouldGetKeyboardEvents","needsToBeRebuilt","rebuild","isForCopying","deserialize","removeEditor","isResizable","makeResizable","select","unselect","contains","activeElement","focus","updateParams","disableEditing","hidden","enableEditing","enterInEditMode","contentDiv","setActiveEditor","setAspectRatio","aspectRatio","element","names","opacityToHex","opacity","IdManager","getId","ImageManager","baseId","cache","_isSVGFittingCanvas","svg","ctx","getContext","image","Image","drawImage","getImageData","#get","rawData","refCounter","isSvg","response","ok","statusText","blob","file","mustRemoveAspectRatioPromise","fileReader","FileReader","imageElement","imagePromise","onload","svgUrl","result","onerror","readAsDataURL","createImageBitmap","getFromFile","lastModified","getFromUrl","getFromId","getSvgUrl","deleteId","isValidId","CommandManager","commands","locked","maxSize","position","_ref17","overwriteIfSameType","keepUndo","next","splice","redo","hasSomethingToUndo","hasSomethingToRedo","KeyboardManager","callbacks","allKeys","isMacKey","split","at","#serialize","altKey","exec","self","bubbles","args","checker","_colorsMapping","_colors","colors","getColorValues","convert","color","rgb","getRGB","matchMedia","matches","RGB","every","AnnotationEditorUIManager","activeEditor","allEditors","allLayers","altTextManager","commandManager","currentPageIndex","deletedAnnotationsElementIds","draggingEditors","editorTypes","editorsToRescale","idManager","isEnabled","isWaiting","lastActiveElement","mode","selectedEditors","boundBlur","blur","boundFocus","boundCopy","copy","boundCut","cut","boundPaste","boundKeydown","keydown","boundOnEditingAction","onEditingAction","boundOnPageChanging","onPageChanging","boundOnScaleChanging","onScaleChanging","boundOnRotationChanging","onRotationChanging","previousStates","hasSelectedEditor","translation","translationTimeoutId","container","viewer","TRANSLATE_SMALL","TRANSLATE_BIG","_keyboardManager","proto","arrowChecker","hasSomethingToControl","small","big","selectAll","unselectAll","translateSelectedEditors","eventBus","pdfDocument","_on","PixelsPerInch","PDF_TO_CSS_UNITS","removeKeyboardManager","removeFocusManager","_off","layer","hcmFilter","addHCMFilter","foreground","direction","_ref18","focusMainContainer","findParent","layerX","layerY","disableUserSelect","addShouldRescale","removeShouldRescale","_ref19","_ref20","pagesRotation","addFocusManager","#addFocusManager","#removeFocusManager","hasSelection","lastEditor","once","addKeyboardManager","#addKeyboardManager","#removeKeyboardManager","addCopyPasteListeners","#addCopyPasteListeners","removeCopyPasteListeners","#removeCopyPasteListeners","addEditListeners","removeEditListeners","editors","clipboardData","setData","parse","isArray","newEditors","deserializedEditor","addEditorToLayer","selectEditors","getActive","dispatchUpdateStates","#dispatchUpdateStates","hasChanged","some","_ref21","dispatchUpdateUI","#dispatchUpdateUI","setEditingState","registerEditorTypes","types","getLayer","addLayer","enable","disable","removeLayer","updateMode","editId","disableAll","enableAll","updateToolbar","addNewEditor","enableWaiting","mustWait","disableClick","enableClick","#enableAll","#disableAll","getEditors","getEditor","addEditor","addDeletedAnnotationElement","isDeletedAnnotationElement","removeDeletedAnnotationElement","#addEditorToLayer","addOrRebuild","ed","#isEmpty","#selectEditors","noCommit","totalX","totalY","TIME_TO_WAIT","savedPageIndex","newPageIndex","mustBeAddedInUndoStack","move","isActive","getMode","imageManager","_base_factory","SVG_NS","PDF","BaseFilterFactory","_cache","_defs","hcmKey","hcmUrl","hcmHighlightFilter","hcmHighlightKey","hcmHighlightUrl","#cache","defs","#defs","visibility","contain","createElementNS","body","addFilter","maps","tableR","tableG","tableB","mapR","mapG","mapB","bufferR","bufferG","bufferB","filter","createFilter","addTransferMapConversion","fgColor","bgColor","fgRGB","bgRGB","table","addGrayConversion","getSteps","start","arr","addHighlightHCMFilter","newFgColor","newBgColor","fgGray","bgGray","newFgRGB","newBgRGB","fg","bg","step","newStart","newStep","prev","k","keepHCM","#addGrayConversion","feColorMatrix","#createFilter","appendFeFunc","#appendFeFunc","feComponentTransfer","func","feFunc","#addTransferMapConversion","rTable","gTable","bTable","#getRGB","BaseCanvasFactory","_document","_createCanvas","fetchData","asTypedArray","arrayBuffer","text","request","XMLHttpRequest","open","responseType","onreadystatechange","readyState","DONE","responseText","BaseCMapReaderFactory","_fetchData","compressionType","cMapData","BaseStandardFontDataFactory","DOMSVGFactory","BaseSVGFactory","_createSVG","_ref22","centerX","centerY","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","convertToViewportPoint","convertToViewportRectangle","topLeft","bottomRight","convertToPdfPoint","trim","substring","toLowerCase","isPdfFile","test","getFilenameFromUrl","onlyStripPath","lastIndexOf","getPdfFilenameFromUrl","defaultFilename","reURI","reFilename","splitURI","suggestedFilename","started","times","now","outBuf","longest","padEnd","removeScriptElement","script","head","pdfDateStringRegex","PDFDateString","toDateObject","input","RegExp","year","parseInt","month","day","hour","minute","universalTimeRelation","offsetHour","offsetMinute","UTC","getXfaPageViewport","xfaPage","_ref23","attributes","colorRGB","span","computedColor","getCurrentTransform","f","getTransform","getCurrentTransformInverse","invertSelf","setLayerDimensions","mustFlip","mustRotate","useRound","widthStr","heightStr","reset","canvasAndContext","_ref24","_ref25","_ref26","_ref27","skipDimensions","SEED","MASK_HIGH","MASK_LOW","seed","h1","h2","blockCounts","tailLength","dataUint32","k1","k2","C1","C2","C1_LOW","C2_LOW","systemFonts","_ref28","nativeFontFaces","loadingRequests","loadTestFontId","addNativeFontFace","nativeFontFace","fonts","removeNativeFontFace","insertRule","rule","getElementsByTagName","styleSheet","sheet","cssRules","loadSystemFont","loadedName","isFontLoadingAPISupported","fontFace","FontFace","load","baseFontName","attached","missingFile","systemFontInfo","createNativeFontFace","family","createFontFaceRule","isSyncFontLoadingSupported","_queueLoadingCallback","_prepareFontLoadEvent","hasFonts","supported","userAgent","completeRequest","otherRequest","shift","_loadTestFont","testFont","atob","int32","offset","spliceString","s","insert","chunk1","chunk2","called","isFontReady","fillText","COMMENT_OFFSET","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","btoa","fontFamily","translatedData","_ref29","compiledGlyphs","_inspectFont","cssFontInfo","css","weight","fontWeight","italicAngle","mimetype","getPathGenerator","character","cmds","jsBuf","current","fs","readFile","Canvas","createCanvas","_pattern_helper","_image_utils","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","EXECUTION_TIME","EXECUTION_STEPS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","mirrorContextOperations","destCtx","_removeMirroring","__originalSave","__originalRestore","__originalRotate","__originalScale","__originalTranslate","__originalTransform","__originalSetTransform","setTransform","__originalResetTransform","resetTransform","__originalClip","__originalMoveTo","__originalLineTo","__originalBezierCurveTo","bezierCurveTo","__originalRect","__originalClosePath","__originalBeginPath","beginPath","ctxSave","ctxRestore","ctxTranslate","ctxScale","ctxTransform","ctxSetTransform","ctxResetTransform","ctxRotate","cp1x","cp1y","cp2x","cp2y","CachedCanvases","getCanvas","canvasEntry","drawImageAtIntegerCoords","srcImg","srcX","srcY","srcW","srcH","destX","destY","destW","destH","tlX","rTlX","tlY","rTlY","brX","rWidth","brY","rHeight","sign","scaleX","scaleY","compileType3Glyph","imgData","POINT_TO_PROCESS_LIMIT","POINT_TYPES","width1","points","j0","lineSize","pos","elem","mask","count","sum","steps","Int32Array","path","Path2D","p0","pp","drawOutline","CanvasExtraState","alphaIsShape","fontSize","fontSizeScale","textMatrix","textMatrixScale","fontMatrix","leading","lineX","lineY","charSpacing","wordSpacing","textHScale","textRenderingMode","textRise","fillColor","strokeColor","patternFill","fillAlpha","strokeAlpha","lineWidth","activeSMask","transferMaps","startNewPathAndClipBox","clipBox","setCurrentPoint","updatePathMinMax","minX","minY","maxX","maxY","updateRectMinMax","updateScalingPathMinMax","updateCurvePathMinMax","box","getPathBoundingBox","pathType","PathType","xStrokePad","yStrokePad","updateClipFromPath","isEmptyClip","Infinity","getClippedPathBoundingBox","putBinaryImageData","ImageData","putImageData","partialChunkHeight","fullChunks","totalChunks","chunkImgData","createImageData","srcPos","destPos","dest","thisChunkHeight","elemsInThisChunk","kind","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","srcDiff","kEnd","kEndUnrolled","srcByte","putBinaryImageMask","convertBlackAndWhiteToRGBA","nonBlackColor","copyCtxState","sourceCtx","properties","property","setLineDash","getLineDash","lineDashOffset","resetCtxToDefault","strokeStyle","fillStyle","fillRule","globalAlpha","lineCap","lineJoin","miterLimit","globalCompositeOperation","composeSMaskBackdrop","r0","g0","b0","alpha","alpha_","composeSMaskAlpha","maskData","layerData","transferMap","composeSMaskLuminosity","genericComposeSMask","maskCtx","layerCtx","backdrop","layerOffsetX","layerOffsetY","maskOffsetX","maskOffsetY","hasBackdrop","composeFn","PIXELS_TO_PROCESS","chunkSize","ceil","row","chunkHeight","composeSMask","smask","layerBox","layerWidth","layerHeight","getImageSmoothingEnabled","interpolate","fround","actualScale","devicePixelRatio","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","canvasCtx","_ref30","markedContentStack","stateStack","pendingClip","pendingEOFill","res","xobjs","groupStack","processingType3","baseTransform","baseTransformStack","groupLevel","smaskStack","smaskCounter","tempSMask","suspendedCtx","contentVisible","cachedCanvases","cachedPatterns","viewportScale","outputScaleX","outputScaleY","_cachedScaleForStroking","_cachedGetSinglePixelWidth","_cachedBitmapsMap","getObject","fallback","_ref31","savedFillStyle","fillRect","transparentCanvas","compositeCtx","executionStartIdx","continueCallback","argsArrayLen","chunkOperations","endTime","fnId","breakIt","depObjId","objsPool","restoreInitialState","#restoreInitialState","inSMaskMode","HTMLCanvasElement","drawFilter","#drawFilter","hcmFilterId","savedFilter","_scaleImage","img","widthScale","heightScale","paintWidth","paintHeight","tmpCanvasId","tmpCanvas","tmpCtx","clearRect","_createMaskCanvas","isPatternFill","currentTransform","scaled","maskCanvas","mainKey","cachedImage","maskToCanvas","cord1","cord2","drawnWidth","drawnHeight","fillCanvas","fillCtx","imageSmoothingEnabled","inverse","getPattern","limit","dashArray","dashPhase","flatness","states","checkSMaskState","beginSMaskMode","endSMaskMode","cacheId","scratchCanvas","compose","dirtyBox","old","pop","ops","startX","startY","isScalingMatrix","minMaxForBezier","xw","yh","consumePath","rescaleAndStroke","needRestore","paths","pendingTextPaths","addToPath","spacing","fontRefName","fontObj","fontDirection","isType3Font","typeface","fallbackName","bold","italic","browserFontSize","rise","paintChar","patternTransform","fillStrokeMode","isAddToPathSet","strokeText","isFontSubpixelAAEnabled","glyphs","showType3Text","glyphsLength","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","getSinglePixelWidth","isInvalidPDFjsFont","chars","glyph","unicode","restoreNeeded","isSpace","fontChar","accent","scaledX","scaledY","vmetric","vx","vy","remeasure","measuredWidth","measureText","characterScaleX","isInFont","scaledAccentX","scaledAccentY","charWidth","isTextInvisible","spacingLength","charProcOperatorList","operatorListId","transformed","xWidth","yWidth","llx","lly","urx","ury","getColorN_Pattern","IR","canvasGraphicsFactory","createCanvasGraphics","TilingPattern","_getPattern","matrix","getShadingPattern","SHADING","inv","bbox","group","currentCtx","isolated","knockout","canvasBounds","groupCtx","startTransformInverse","currentMtx","hasOwnCanvas","canvasWidth","canvasHeight","annotationCanvas","savedCtx","compiled","skewX","skewY","positions","trans","images","applyTransferMapsToCanvas","applyTransferMapsToBitmap","imgToPaint","HTMLElement","tag","visible","isVisible","isContentVisible","absDet","normX","normY","getScaleForStroking","scaledLineWidth","scaledXLineWidth","scaledYLineWidth","baseArea","saveRestore","dashes","op","applyBoundingBox","region","BaseShadingPattern","RadialAxialShadingPattern","_bbox","_colorStops","_p0","_p1","_r0","_r1","_createGradient","grad","createLinearGradient","createRadialGradient","colorStop","addColorStop","owner","ownerBBox","createPattern","domMatrix","DOMMatrix","drawTriangle","c1","c2","c3","coords","rowSize","tmp","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","drawFigure","figure","ps","cs","verticesPerRow","rows","cols","q","MeshShadingPattern","_coords","_figures","_bounds","_background","_createMeshCanvas","combinedScale","backgroundColor","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","paddedWidth","paddedHeight","matrixScale","temporaryPatternCanvas","DummyShadingPattern","PaintType","COLORED","UNCOLORED","xstep","ystep","paintType","tilingType","createPatternCanvas","curMatrixScale","dimx","getSizeAndScale","dimy","graphics","setFillAndStrokeStyleToContext","adjustedX0","adjustedY0","adjustedX1","adjustedY1","clipBbox","realOutputSize","bboxWidth","bboxHeight","cssColor","convertToRGBA","convertRGBToRGBA","_ref32","inverseDecode","zeroMapping","oneMapping","widthInSource","widthRemainder","_ref33","len32","src32","s1","s2","s3","jj","grayToRGBA","CallbackKind","UNKNOWN","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","wrapReason","sourceName","targetName","comObj","callbackId","streamId","streamSinks","streamControllers","callbackCapabilities","actionHandler","_onComObjOnMessage","stream","processStreamMessage","cbSourceName","cbTargetName","createStreamSink","actionName","handler","ah","queueingStrategy","ReadableStream","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","cancelCapability","#createStreamSink","streamSink","isCancelled","lastDesiredSize","sinkCapability","#processStreamMessage","streamController","deleteStreamController","#deleteStreamController","allSettled","metadataMap","_ref34","parsedData","getRaw","INTERNAL","Symbol","OptionalContentGroup","_setVisible","internal","cachedGetHash","groups","initialHash","order","creator","baseState","off","getHash","evaluateVisibilityExpression","#evaluateVisibilityExpression","array","operator","state","expression","policy","ids","setVisibility","hasInitialVisibility","getOrder","getGroups","getGroup","_ref35","pdfDataRangeTransport","_queuedChunks","_progressiveDone","_contentDispositionFilename","_pdfDataRangeTransport","_isStreamingSupported","_isRangeSupported","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","_onProgressiveDone","_ref36","_enqueue","found","_begin","_progressiveDataLength","_loaded","_removeRangeReader","indexOf","queuedChunks","PDFDataTransportStreamReader","PDFDataTransportStreamRangeReader","_stream","_done","_filename","_requests","_headersReady","requestCapability","_end","_queuedChunk","requestsCapability","_network_utils","createFetchOptions","headers","abortController","method","signal","credentials","redirect","createHeaders","Headers","getArrayBuffer","isHttp","_rangeRequestReaders","PDFFetchStreamReader","PDFFetchStreamRangeReader","_reader","_withCredentials","_headersCapability","_disableRange","_rangeChunkSize","_abortController","AbortController","_headers","validateResponseStatus","createResponseStatusError","getResponseHeader","allowRangeRequests","suggestedLength","validateRangeRequestCapabilities","extractFilenameFromHeader","_readCapability","_content_disposition","_ref37","returnValues","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","attributePattern","flags","textdecode","contentDispositionStr","iter","quot","part","parts","quotindex","extvalue","encodingend","langvalue","charset","hex","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","NetworkManager","currXhrId","pendingRequests","requestRange","requestFull","xhrId","pendingRequest","setRequestHeader","expectedStatus","onError","onStateChange","onprogress","onHeadersReceived","onDone","xhrStatus","ok_response_on_range_request","rangeHeader","getRequestXhr","isPendingRequest","abortRequest","_source","_manager","_onRangeRequestReaderClosed","PDFNetworkStreamFullRequestReader","PDFNetworkStreamRangeRequestReader","onClosed","manager","_onHeadersReceived","_onDone","_onError","_url","_fullRequestId","_headersReceivedCapability","_cachedChunks","_storedError","fullRequestXhrId","fullRequestXhr","lengthComputable","_requestId","_close","fileUriRegex","parseUrl","sourceUrl","parsedUrl","host","isFsUrl","PDFNodeStreamFsFullReader","PDFNodeStreamFullReader","PDFNodeStreamFsRangeReader","PDFNodeStreamRangeReader","BaseFullReader","_readableStream","_error","_setReadableStream","BaseRangeReader","createRequestOptions","auth","hostname","handleResponse","statusCode","_request","http","https","_httpHeaders","Range","lstat","stat","createReadStream","SVG_DEFAULTS","fontStyle","XML_NS","XLINK_NS","contentType","forceDataSchema","digits","b1","b2","b3","d1","d2","d3","d4","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc32","crc","writePngChunk","len","adler32","deflateSync","literals","deflateSyncUncompressed","node","from","output","maxBlockLength","deflateBlocks","idat","pi","adler","encode","isMask","bitDepth","colorType","offsetLiterals","offsetBytes","ihdr","pngLength","SVGExtraState","dependencies","activeClipUrl","clipGroup","maskId","opListToTree","opList","opTree","opListElement","fn","pf","pm","acos","clipCount","maskCount","shadingCount","SVGGraphics","svgFactory","transformMatrix","transformStack","extraStack","embedFonts","embeddedFonts","cssStyle","_operatorIdMapping","tgrp","executeOpTree","loadDependencies","getSVG","svgElement","convertOpList","operatorIdMapping","opTreeElement","lineMatrix","xcoords","ycoords","tspan","setAttributeNS","txtElement","txtgrp","lineWidthScale","_setStrokeAttributes","_ensureTransformGroup","addFontStyle","hasChildNodes","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeShadingPattern","_makeTilingPattern","tilingId","tx0","ty0","tx1","ty1","xscale","yscale","txstep","tystep","tiling","childNodes","shadingId","colorStops","gradient","point0","point1","focalPoint","circlePoint","focalRadius","circleRadius","stop","getAttributeNS","clipId","clipPath","clipElement","cloneNode","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","walk","shouldBuildText","child","MAX_TEXT_DIVS_TO_RENDER","DEFAULT_FONT_SIZE","DEFAULT_FONT_ASCENT","ascentCache","getCtx","getAscent","cachedAscent","metrics","ascent","fontBoundingBoxAscent","descent","fontBoundingBoxDescent","ratio","pixels","appendText","geom","textDiv","textDivProperties","hasText","hasEOL","_textDivs","_transform","atan2","fontName","fontHeight","fontAscent","_isOffscreenCanvasSupported","sin","cos","scaleFactorStr","divStyle","_container","_rootContainer","_pageWidth","_pageHeight","dir","_fontInspectorEnabled","dataset","shouldScaleText","absScaleX","absScaleY","_textDivProperties","_isReadableStream","_layoutText","layout","prevFontSize","prevFontFamily","_canceled","textDivs","textDivsLength","TextLayerRenderTask","_ref38","textContentSource","textContentItemsStr","_textContentSource","_textContentItemsStr","_layoutTextParams","_processItems","styleCache","br","_render","_ref39","renderTextLayer","textContentStream","scaleFactor","updateTextLayer","_ref40","mustRescale","_freetext","_ink","_stamp","AnnotationEditorLayer","accessibilityManager","allowClick","annotationLayer","boundPointerup","pointerup","boundPointerdown","hadPointerDown","isCleaningUp","isDisabling","_initialized","_ref41","FreeTextEditor","InkEditor","StampEditor","addInkEditorIfNeeded","isCommitting","createAndAddNewEditor","pointerEvents","annotationElementIds","editables","getEditableAnnotations","editable","hide","hiddenAnnotationIds","getEditableAnnotation","show","currentActive","attach","detach","removePointerInTextLayer","moveElementInDOM","addUndoableEditor","createNewEditor","#createNewEditor","pasteEditor","getCenterPoint","annotationType","annotationEditorType","#createAndAddNewEditor","#getCenterPoint","innerWidth","innerHeight","#cleanup","_ref42","_ref43","_annotation_layer","boundEditorDivBlur","editorDivBlur","boundEditorDivFocus","editorDivFocus","boundEditorDivInput","editorDivInput","boundEditorDivKeydown","editorDivKeydown","content","editorDivId","_freeTextDefaultContent","_internalPadding","_defaultColor","_defaultFontSize","_translateEmpty","updateFontSize","updateColor","#updateFontSize","setFontsize","editorDiv","setEditorDimensions","savedFontsize","#updateColor","savedColor","overlayDiv","contentEditable","removeAttribute","preventScroll","cheatInitialRect","extractText","#extractText","divs","#setEditorDimensions","savedDisplay","display","savedText","newText","trimEnd","setText","setContent","dblclick","baseX","baseY","posX","posY","#setContent","replaceChildren","line","createTextNode","FreeTextAnnotationElement","defaultAppearanceData","fontColor","textPosition","padding","structTreeParentId","hasElementChanged","#hasElementChanged","#cheatInitialRect","_scripting_utils","_displayL10n_utils","_xfa_layer","DEFAULT_TAB_INDEX","GetElementsByNameSet","getRectDims","AnnotationElementFactory","LinkAnnotationElement","TextAnnotationElement","fieldType","TextWidgetAnnotationElement","radioButton","RadioButtonWidgetAnnotationElement","checkBox","CheckboxWidgetAnnotationElement","PushButtonWidgetAnnotationElement","ChoiceWidgetAnnotationElement","SignatureWidgetAnnotationElement","WidgetAnnotationElement","PopupAnnotationElement","LineAnnotationElement","SquareAnnotationElement","CircleAnnotationElement","PolylineAnnotationElement","CaretAnnotationElement","InkAnnotationElement","PolygonAnnotationElement","HighlightAnnotationElement","UnderlineAnnotationElement","SquigglyAnnotationElement","StrikeOutAnnotationElement","StampAnnotationElement","FileAttachmentAnnotationElement","AnnotationElement","hasBorder","isRenderable","ignoreBorder","createQuadrilaterals","linkService","downloadManager","imageResourcesPath","renderForms","enableScripting","_fieldObjects","fieldObjects","_createContainer","_createQuadrilaterals","_hasPopupData","_ref44","titleObj","contentsObj","richText","hasPopupData","popupRef","noRotate","setRotation","borderStyle","borderWidth","horizontalRadius","horizontalCornerRadius","verticalRadius","verticalCornerRadius","radius","borderRadius","borderBottomStyle","borderColor","elementWidth","elementHeight","_commonActions","setColor","jsName","styleName","detail","colorArray","ColorConverters","noView","noPrint","userName","title","readonly","disabled","required","_setRequired","textColor","_dispatchEventFromSandbox","actions","jsEvent","commonActions","_setDefaultPropertiesFromJS","storedData","eventProxy","quadPoints","rectBlX","rectBlY","rectTrX","rectTrY","trX","trY","blX","blY","svgBuffer","rectWidth","rectHeight","backgroundImage","_createPopup","popup","modificationDate","parentRect","elements","_getElementsByName","skipId","fields","fieldObj","exportValues","exportValue","domElement","querySelector","getElementsByName","getAttribute","maybeShow","forceHide","getElementsToTriggerPopup","addHighlightArea","triggers","_editOnDoubleClick","isTooltipOnly","link","isBound","addLinkAttributes","newWindow","_bindNamedAction","attachment","_bindAttachment","setOCGState","bindSetOCGState","_bindLink","Action","_bindJSAction","resetForm","_bindResetFormAction","setInternalLink","#setInternalLink","destination","getDestinationHash","onclick","goToDestination","getAnchorUrl","executeNamedAction","openOrDownloadData","#bindSetOCGState","executeSetOCGState","otherClickAction","resetFormFields","refs","resetFormRefs","include","allFields","fieldIds","fieldName","field","allIds","dispatchEvent","Event","alt","l10nId","l10nArgs","alternativeText","showElementAndHideCanvas","previousSibling","nodeName","_getKeyModifier","_setEventListener","elementData","baseName","eventName","valueGetter","modifier","focused","_setEventListeners","getter","Blur","Focus","_setBackgroundColor","_setTextStyle","TEXT_ALIGNMENT","computedFontSize","roundToOneDecimal","multiLine","numberOfLines","lineHeight","textAlignment","textAlign","isRequired","hasAppearance","fieldValue","setPropertyOnSiblings","keyInStorage","maxLen","charLimit","fieldFormattedValues","formattedValue","comb","userValue","lastCommittedValue","commitKey","doNotScroll","overflowY","overflowX","readOnly","maxLength","defaultFieldValue","blurListener","scrollLeft","selRange","setSelectionRange","willCommit","selStart","selectionStart","selEnd","selectionEnd","_blurListener","Keystroke","inputType","change","fieldWidth","combWidth","letterSpacing","verticalAlign","checked","checkbox","curChecked","buttonValue","radio","pdfButtonValue","linkElement","lastChild","selectElement","addAnEmptyEntry","combo","multiSelect","multiple","option","selected","optionElement","displayValue","removeEmptyEntry","noneOptionElement","isExport","selectedIndex","selectedValues","getItems","multipleSelection","index","findIndex","selectChild","before","indices","changeEx","keyDown","PopupElement","elementIds","dateTimePromise","boundKeyDown","boundHide","boundShow","boundToggle","pinned","wasVisible","_ref45","dateObject","toLocaleDateString","toLocaleTimeString","trigger","flatMap","baseColor","outlineColor","BACKGROUND_ENLIGHT","header","localized","XfaLayer","xfaHtml","html","contents","_formatContents","useParentRect","normalizedRect","HORIZONTAL_SPACE_AFTER_ANNOTATION","popupLeft","popupTop","_ref46","lines","#keyDown","#toggle","#show","#hide","lineSpan","lineCoordinates","square","circle","polyline","containerClassName","svgElementName","coordinate","vertices","polylines","inkList","inkLists","download","#download","AnnotationLayer","editableAnnotations","_ref47","NullL10n","appendElement","#appendElement","contentElement","firstChild","annotations","popupToElements","elementParams","noHTML","isPopupAnnotation","rendered","setAnnotationCanvasMap","_ref48","#setAnnotationCanvasMap","replaceWith","makeColorComp","scaleAndClamp","CMYK_G","_ref49","G_CMYK","_ref50","G_RGB","_ref51","G_rgb","_ref52","G_HTML","_ref53","G","RGB_G","_ref54","RGB_rgb","RGB_HTML","T_HTML","T_rgb","CMYK_RGB","_ref55","CMYK_rgb","_ref56","CMYK_HTML","components","RGB_CMYK","_ref57","DEFAULT_L10N_STRINGS","of_pages","page_of_pages","document_properties_kb","document_properties_mb","document_properties_date_string","document_properties_page_size_unit_inches","document_properties_page_size_unit_millimeters","document_properties_page_size_orientation_portrait","document_properties_page_size_orientation_landscape","document_properties_page_size_name_a3","document_properties_page_size_name_a4","document_properties_page_size_name_letter","document_properties_page_size_name_legal","document_properties_page_size_dimension_string","document_properties_page_size_dimension_name_string","document_properties_linearized_yes","document_properties_linearized_no","additional_layers","page_landmark","thumb_page_title","thumb_page_canvas","find_reached_top","find_reached_bottom","find_not_found","page_scale_width","page_scale_fit","page_scale_auto","page_scale_actual","page_scale_percent","loading_error","invalid_file_error","missing_file_error","unexpected_response_error","rendering_error","annotation_date_string","printing_not_supported","printing_not_ready","web_fonts_disabled","free_text2_default_content","editor_free_text2_aria_label","editor_ink2_aria_label","editor_ink_canvas_aria_label","editor_alt_text_button_label","editor_alt_text_edit_button_label","editor_alt_text_decorative_tooltip","print_progress_percent","getL10nFallback","formatL10nValue","getLanguage","getDirection","setupStorage","xfaOn","xfaOff","setAttributes","_ref58","isHTMLAnchorElement","HTMLAnchorElement","dataId","rootHtml","stack","rootDiv","childHtml","xmlns","el","querySelectorAll","baseHeight","baseWidth","boundCanvasPointermove","canvasPointermove","boundCanvasPointerleave","canvasPointerleave","boundCanvasPointerup","canvasPointerup","boundCanvasPointerdown","canvasPointerdown","currentPath2D","hasSomethingToDraw","isCanvasInitialized","observer","realWidth","realHeight","requestFrameCallback","_defaultOpacity","_defaultThickness","thickness","bezierPath2D","allRawPaths","currentPath","translationX","translationY","updateThickness","updateOpacity","#updateThickness","savedThickness","fitToContent","redraw","#updateOpacity","savedOpacity","createObserver","setCanvasDims","disconnect","setDimensions","getInitialBBox","#getInitialBBox","setStroke","#setStroke","startDrawing","#startDrawing","drawPoints","draw","#draw","lastX","lastY","path2D","makeBezierCurve","#endPath","lastPoint","stopDrawing","#stopDrawing","bezier","generateBezierPoints","xy","#drawPoints","lastPoints","xMin","xMax","yMin","yMax","#makeBezierCurve","prevX","prevY","#generateBezierPoints","bezierPoints","control1","control2","#redraw","updateTransform","#endDrawing","#createCanvas","#createObserver","ResizeObserver","contentRect","observe","#setCanvasDims","roundedWidth","roundedHeight","setScaleFactor","#setScaleFactor","getPadding","scaleFactorW","scaleFactorH","#updateTransform","buildPath2D","#buildPath2D","toPDFCoordinates","#toPDFCoordinates","fromPDFCoordinates","#fromPDFCoordinates","serializePaths","#serializePaths","p10","p11","p20","p21","p30","p31","p40","p41","getBbox","#getBbox","#getPadding","#fitToContent","firstTime","prevTranslationX","prevTranslationY","unscaledPadding","bitmapId","bitmapPromise","bitmapUrl","bitmapFile","resizeTimeoutId","hasBeenAddedInUndoStack","supportedTypes","supportedTypesStr","getAsFile","getBitmapFetched","#getBitmapFetched","fromId","getBitmapDone","#getBitmapDone","getBitmap","#getBitmap","accept","files","click","MAX_RATIO","factor","drawBitmap","#setDimensions","scaleBitmap","#scaleBitmap","bitmapWidth","bitmapHeight","prevWidth","prevHeight","offscreen","transferToImageBitmap","#drawBitmap","serializeBitmap","#serializeBitmap","toUrl","toDataURL","accessibilityData","stamps","area","prevData","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","_api","_text_layer","_annotation_editor_layer","pdfjsVersion","pdfjsBuild"],"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/editor/editor.js","webpack://pdfjs-dist/build/pdf/src/display/editor/tools.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/display/base_factory.js","webpack://pdfjs-dist/build/pdf/src/shared/murmurhash3.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/shared/image_utils.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_text.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/editor/annotation_editor_layer.js","webpack://pdfjs-dist/build/pdf/src/display/editor/freetext.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/shared/scripting_utils.js","webpack://pdfjs-dist/build/pdf/web/l10n_utils.js","webpack://pdfjs-dist/build/pdf/src/display/xfa_layer.js","webpack://pdfjs-dist/build/pdf/src/display/editor/ink.js","webpack://pdfjs-dist/build/pdf/src/display/editor/stamp.js","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = root.pdfjsLib = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(globalThis, () => {\nreturn ","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\nconst MAX_IMAGE_SIZE_TO_CACHE = 10e6; // Ten megabytes.\n\n// Represent the percentage of the height of a single-line field over\n// the font size. Acrobat seems to use this value.\nconst LINE_FACTOR = 1.35;\nconst LINE_DESCENT_FACTOR = 0.35;\nconst BASELINE_FACTOR = LINE_DESCENT_FACTOR / LINE_FACTOR;\n\n/**\n * Refer to the `WorkerTransport.getRenderingIntent`-method in the API, to see\n * how these flags are being used:\n *  - ANY, DISPLAY, and PRINT are the normal rendering intents, note the\n *    `PDFPageProxy.{render, getOperatorList, getAnnotations}`-methods.\n *  - ANNOTATIONS_FORMS, ANNOTATIONS_STORAGE, ANNOTATIONS_DISABLE control which\n *    annotations are rendered onto the canvas (i.e. by being included in the\n *    operatorList), note the `PDFPageProxy.{render, getOperatorList}`-methods\n *    and their `annotationMode`-option.\n *  - OPLIST is used with the `PDFPageProxy.getOperatorList`-method, note the\n *    `OperatorList`-constructor (on the worker-thread).\n */\nconst RenderingIntentFlag = {\n  ANY: 0x01,\n  DISPLAY: 0x02,\n  PRINT: 0x04,\n  SAVE: 0x08,\n  ANNOTATIONS_FORMS: 0x10,\n  ANNOTATIONS_STORAGE: 0x20,\n  ANNOTATIONS_DISABLE: 0x40,\n  OPLIST: 0x100,\n};\n\nconst AnnotationMode = {\n  DISABLE: 0,\n  ENABLE: 1,\n  ENABLE_FORMS: 2,\n  ENABLE_STORAGE: 3,\n};\n\nconst AnnotationEditorPrefix = \"pdfjs_internal_editor_\";\n\nconst AnnotationEditorType = {\n  DISABLE: -1,\n  NONE: 0,\n  FREETEXT: 3,\n  STAMP: 13,\n  INK: 15,\n};\n\nconst AnnotationEditorParamsType = {\n  RESIZE: 1,\n  CREATE: 2,\n  FREETEXT_SIZE: 11,\n  FREETEXT_COLOR: 12,\n  FREETEXT_OPACITY: 13,\n  INK_COLOR: 21,\n  INK_THICKNESS: 22,\n  INK_OPACITY: 23,\n};\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst AnnotationActionEventType = {\n  E: \"Mouse Enter\",\n  X: \"Mouse Exit\",\n  D: \"Mouse Down\",\n  U: \"Mouse Up\",\n  Fo: \"Focus\",\n  Bl: \"Blur\",\n  PO: \"PageOpen\",\n  PC: \"PageClose\",\n  PV: \"PageVisible\",\n  PI: \"PageInvisible\",\n  K: \"Keystroke\",\n  F: \"Format\",\n  V: \"Validate\",\n  C: \"Calculate\",\n};\n\nconst DocumentActionEventType = {\n  WC: \"WillClose\",\n  WS: \"WillSave\",\n  DS: \"DidSave\",\n  WP: \"WillPrint\",\n  DP: \"DidPrint\",\n};\n\nconst PageActionEventType = {\n  O: \"PageOpen\",\n  C: \"PageClose\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  // PLEASE NOTE: We purposely keep any removed operators commented out, since\n  //              re-numbering the list would risk breaking third-party users.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  // beginAnnotations: 78,\n  // endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  // paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  switch (url?.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} [baseUrl] - An absolute URL.\n * @param {Object} [options]\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl = null, options = null) {\n  if (!url) {\n    return null;\n  }\n  try {\n    if (options && typeof url === \"string\") {\n      // Let URLs beginning with \"www.\" default to using the \"http://\" protocol.\n      if (options.addDefaultProtocol && url.startsWith(\"www.\")) {\n        const dots = url.match(/\\./g);\n        // Avoid accidentally matching a *relative* URL pointing to a file named\n        // e.g. \"www.pdf\" or similar.\n        if (dots?.length >= 2) {\n          url = `http://${url}`;\n        }\n      }\n\n      // According to ISO 32000-1:2008, section 12.6.4.7, URIs should be encoded\n      // in 7-bit ASCII. Some bad PDFs use UTF-8 encoding; see bug 1122280.\n      if (options.tryConvertEncoding) {\n        try {\n          url = stringToUTF8String(url);\n        } catch {}\n      }\n    }\n\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value, nonSerializable = false) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      prop in obj,\n      `shadow: Property \"${prop && prop.toString()}\" not found in object.`\n    );\n  }\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: !nonSerializable,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message, name) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg, \"PasswordException\");\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg, \"UnknownErrorException\");\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"InvalidPDFException\");\n  }\n}\n\nclass MissingPDFException extends BaseException {\n  constructor(msg) {\n    super(msg, \"MissingPDFException\");\n  }\n}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg, \"UnexpectedResponseException\");\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {\n  constructor(msg) {\n    super(msg, \"FormatError\");\n  }\n}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {\n  constructor(msg) {\n    super(msg, \"AbortException\");\n  }\n}\n\nfunction bytesToString(bytes) {\n  if (typeof bytes !== \"object\" || bytes?.length === undefined) {\n    unreachable(\"Invalid argument for bytesToString\");\n  }\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  if (typeof str !== \"string\") {\n    unreachable(\"Invalid argument for stringToBytes\");\n  }\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\nfunction string32(value) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      typeof value === \"number\" && Math.abs(value) < 2 ** 32,\n      `string32: Unexpected input \"${value}\".`\n    );\n  }\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\nfunction objectSize(obj) {\n  return Object.keys(obj).length;\n}\n\n// Ensure that the returned Object has a `null` prototype; hence why\n// `Object.fromEntries(...)` is not used.\nfunction objectFromMap(map) {\n  const obj = Object.create(null);\n  for (const [key, value] of map) {\n    obj[key] = value;\n  }\n  return obj;\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch {\n    return false;\n  }\n}\n\nclass FeatureTest {\n  static get isLittleEndian() {\n    return shadow(this, \"isLittleEndian\", isLittleEndian());\n  }\n\n  static get isEvalSupported() {\n    return shadow(this, \"isEvalSupported\", isEvalSupported());\n  }\n\n  static get isOffscreenCanvasSupported() {\n    return shadow(\n      this,\n      \"isOffscreenCanvasSupported\",\n      typeof OffscreenCanvas !== \"undefined\"\n    );\n  }\n\n  static get platform() {\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      typeof navigator === \"undefined\"\n    ) {\n      return shadow(this, \"platform\", { isWin: false, isMac: false });\n    }\n    return shadow(this, \"platform\", {\n      isWin: navigator.platform.includes(\"Win\"),\n      isMac: navigator.platform.includes(\"Mac\"),\n    });\n  }\n\n  static get isCSSRoundSupported() {\n    return shadow(\n      this,\n      \"isCSSRoundSupported\",\n      globalThis.CSS?.supports?.(\"width: round(1.5px, 1px)\")\n    );\n  }\n}\n\nconst hexNumbers = [...Array(256).keys()].map(n =>\n  n.toString(16).padStart(2, \"0\")\n);\n\nclass Util {\n  static makeHexColor(r, g, b) {\n    return `#${hexNumbers[r]}${hexNumbers[g]}${hexNumbers[b]}`;\n  }\n\n  // Apply a scaling matrix to some min/max values.\n  // If a scaling factor is negative then min and max must be\n  // swaped.\n  static scaleMinMax(transform, minMax) {\n    let temp;\n    if (transform[0]) {\n      if (transform[0] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[0];\n      minMax[1] *= transform[0];\n\n      if (transform[3] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[3];\n      minMax[3] *= transform[3];\n    } else {\n      temp = minMax[0];\n      minMax[0] = minMax[2];\n      minMax[2] = temp;\n      temp = minMax[1];\n      minMax[1] = minMax[3];\n      minMax[3] = temp;\n\n      if (transform[1] < 0) {\n        temp = minMax[2];\n        minMax[2] = minMax[3];\n        minMax[3] = temp;\n      }\n      minMax[2] *= transform[1];\n      minMax[3] *= transform[1];\n\n      if (transform[2] < 0) {\n        temp = minMax[0];\n        minMax[0] = minMax[1];\n        minMax[1] = temp;\n      }\n      minMax[0] *= transform[2];\n      minMax[1] *= transform[2];\n    }\n    minMax[0] += transform[4];\n    minMax[1] += transform[4];\n    minMax[2] += transform[5];\n    minMax[3] += transform[5];\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = this.applyTransform(r, m);\n    const p2 = this.applyTransform(r.slice(2, 4), m);\n    const p3 = this.applyTransform([r[0], r[3]], m);\n    const p4 = this.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) ** 2 - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'null'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    const xLow = Math.max(\n      Math.min(rect1[0], rect1[2]),\n      Math.min(rect2[0], rect2[2])\n    );\n    const xHigh = Math.min(\n      Math.max(rect1[0], rect1[2]),\n      Math.max(rect2[0], rect2[2])\n    );\n    if (xLow > xHigh) {\n      return null;\n    }\n    const yLow = Math.max(\n      Math.min(rect1[1], rect1[3]),\n      Math.min(rect2[1], rect2[3])\n    );\n    const yHigh = Math.min(\n      Math.max(rect1[1], rect1[3]),\n      Math.max(rect2[1], rect2[3])\n    );\n    if (yLow > yHigh) {\n      return null;\n    }\n\n    return [xLow, yLow, xHigh, yHigh];\n  }\n\n  // From https://github.com/adobe-webplatform/Snap.svg/blob/b365287722a72526000ac4bfcf0ce4cac2faa015/src/path.js#L852\n  static bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n    const tvalues = [],\n      bounds = [[], []];\n    let a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n    for (let i = 0; i < 2; ++i) {\n      if (i === 0) {\n        b = 6 * x0 - 12 * x1 + 6 * x2;\n        a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n        c = 3 * x1 - 3 * x0;\n      } else {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n      if (Math.abs(a) < 1e-12) {\n        if (Math.abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      sqrtb2ac = Math.sqrt(b2ac);\n      if (b2ac < 0) {\n        continue;\n      }\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    let j = tvalues.length,\n      mt;\n    const jlen = j;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      bounds[0][j] =\n        mt * mt * mt * x0 +\n        3 * mt * mt * t * x1 +\n        3 * mt * t * t * x2 +\n        t * t * t * x3;\n      bounds[1][j] =\n        mt * mt * mt * y0 +\n        3 * mt * mt * t * y1 +\n        3 * mt * t * t * y2 +\n        t * t * t * y3;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    bounds[0].length = bounds[1].length = jlen + 2;\n\n    return [\n      Math.min(...bounds[0]),\n      Math.min(...bounds[1]),\n      Math.max(...bounds[0]),\n      Math.max(...bounds[1]),\n    ];\n  }\n}\n\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2d8,\n  0x2c7, 0x2c6, 0x2d9, 0x2dd, 0x2db, 0x2da, 0x2dc, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192,\n  0x2044, 0x2039, 0x203a, 0x2212, 0x2030, 0x201e, 0x201c, 0x201d, 0x2018,\n  0x2019, 0x201a, 0x2122, 0xfb01, 0xfb02, 0x141, 0x152, 0x160, 0x178, 0x17d,\n  0x131, 0x142, 0x153, 0x161, 0x17e, 0, 0x20ac,\n];\n\nfunction stringToPDFString(str) {\n  if (str[0] >= \"\\xEF\") {\n    let encoding;\n    if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n      encoding = \"utf-16be\";\n    } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n      encoding = \"utf-16le\";\n    } else if (str[0] === \"\\xEF\" && str[1] === \"\\xBB\" && str[2] === \"\\xBF\") {\n      encoding = \"utf-8\";\n    }\n\n    if (encoding) {\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(str);\n        return decoder.decode(buffer);\n      } catch (ex) {\n        warn(`stringToPDFString: \"${ex}\".`);\n      }\n    }\n  }\n  // ISO Latin 1\n  const strBuf = [];\n  for (let i = 0, ii = str.length; i < ii; i++) {\n    const code = PDFStringTranslateTable[str.charCodeAt(i)];\n    strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v?.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (let i = 0, ii = arr1.length; i < ii; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getModificationDate(date = new Date()) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    date.getUTCDate().toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\nclass PromiseCapability {\n  #settled = false;\n\n  constructor() {\n    /**\n     * @type {Promise<any>} The Promise object.\n     */\n    this.promise = new Promise((resolve, reject) => {\n      /**\n       * @type {function} Fulfills the Promise.\n       */\n      this.resolve = data => {\n        this.#settled = true;\n        resolve(data);\n      };\n\n      /**\n       * @type {function} Rejects the Promise.\n       */\n      this.reject = reason => {\n        if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n          assert(reason instanceof Error, 'Expected valid \"reason\" argument.');\n        }\n        this.#settled = true;\n        reject(reason);\n      };\n    });\n  }\n\n  /**\n   * @type {boolean} If the Promise has been fulfilled/rejected.\n   */\n  get settled() {\n    return this.#settled;\n  }\n}\n\nlet NormalizeRegex = null;\nlet NormalizationMap = null;\nfunction normalizeUnicode(str) {\n  if (!NormalizeRegex) {\n    // In order to generate the following regex:\n    //  - create a PDF containing all the chars in the range 0000-FFFF with\n    //    a NFKC which is different of the char.\n    //  - copy and paste all those chars and get the ones where NFKC is\n    //    required.\n    // It appears that most the chars here contain some ligatures.\n    NormalizeRegex =\n      /([\\u00a0\\u00b5\\u037e\\u0eb3\\u2000-\\u200a\\u202f\\u2126\\ufb00-\\ufb04\\ufb06\\ufb20-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufba1\\ufba4-\\ufba9\\ufbae-\\ufbb1\\ufbd3-\\ufbdc\\ufbde-\\ufbe7\\ufbea-\\ufbf8\\ufbfc-\\ufbfd\\ufc00-\\ufc5d\\ufc64-\\ufcf1\\ufcf5-\\ufd3d\\ufd88\\ufdf4\\ufdfa-\\ufdfb\\ufe71\\ufe77\\ufe79\\ufe7b\\ufe7d]+)|(\\ufb05+)/gu;\n    NormalizationMap = new Map([[\"ﬅ\", \"ſt\"]]);\n  }\n  return str.replaceAll(NormalizeRegex, (_, p1, p2) => {\n    return p1 ? p1.normalize(\"NFKC\") : NormalizationMap.get(p2);\n  });\n}\n\nfunction getUuid() {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    (typeof crypto !== \"undefined\" && typeof crypto?.randomUUID === \"function\")\n  ) {\n    return crypto.randomUUID();\n  }\n  const buf = new Uint8Array(32);\n  if (\n    typeof crypto !== \"undefined\" &&\n    typeof crypto?.getRandomValues === \"function\"\n  ) {\n    crypto.getRandomValues(buf);\n  } else {\n    for (let i = 0; i < 32; i++) {\n      buf[i] = Math.floor(Math.random() * 255);\n    }\n  }\n  return bytesToString(buf);\n}\n\nconst AnnotationPrefix = \"pdfjs_internal_id_\";\n\nexport {\n  AbortException,\n  AnnotationActionEventType,\n  AnnotationBorderStyleType,\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMode,\n  AnnotationPrefix,\n  AnnotationReplyType,\n  AnnotationType,\n  assert,\n  BaseException,\n  BASELINE_FACTOR,\n  bytesToString,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DocumentActionEventType,\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  FormatError,\n  getModificationDate,\n  getUuid,\n  getVerbosityLevel,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isArrayEqual,\n  isNodeJS,\n  LINE_DESCENT_FACTOR,\n  LINE_FACTOR,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  normalizeUnicode,\n  objectFromMap,\n  objectSize,\n  OPS,\n  PageActionEventType,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  PromiseCapability,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  utf8StringToString,\n  Util,\n  VerbosityLevel,\n  warn,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  AnnotationMode,\n  assert,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isNodeJS,\n  MAX_IMAGE_SIZE_TO_CACHE,\n  MissingPDFException,\n  PasswordException,\n  PromiseCapability,\n  RenderingIntentFlag,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  AnnotationStorage,\n  PrintAnnotationStorage,\n  SerializableEmpty,\n} from \"./annotation_storage.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMFilterFactory,\n  DOMStandardFontDataFactory,\n  isDataScheme,\n  isValidFetchUrl,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeFilterFactory,\n  NodeStandardFontDataFactory,\n} from \"display-node_utils\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { PDFFetchStream } from \"display-fetch_stream\";\nimport { PDFNetworkStream } from \"display-network\";\nimport { PDFNodeStream } from \"display-node_stream\";\nimport { SVGGraphics } from \"display-svg\";\nimport { XfaText } from \"./xfa_text.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\nconst DELAYED_CLEANUP_TIMEOUT = 5000; // ms\n\nconst DefaultCanvasFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\nconst DefaultFilterFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeFilterFactory\n    : DOMFilterFactory;\nconst DefaultStandardFontDataFactory =\n  typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\") && isNodeJS\n    ? NodeStandardFontDataFactory\n    : DOMStandardFontDataFactory;\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * @typedef { TypedArray | ArrayBuffer | Array<number> | string } BinaryData\n */\n\n/**\n * @typedef {Object} RefProxy\n * @property {number} num\n * @property {number} gen\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string | URL} [url] - The URL of the PDF.\n * @property {BinaryData} [data] - Binary PDF data.\n *   Use TypedArrays (Uint8Array) to improve the memory usage. If PDF data is\n *   BASE64-encoded, use `atob()` to convert it to a binary string first.\n *\n *   NOTE: If TypedArrays are used they will generally be transferred to the\n *   worker-thread. This will help reduce main-thread memory usage, however\n *   it will take ownership of the TypedArrays.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not. The default value is `true`.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [useSystemFonts] - When `true`, fonts that aren't\n *   embedded in the PDF document will fallback to a system font.\n *   The default value is `true` in web environments and `false` in Node.js;\n *   unless `disableFontFace === true` in which case this defaults to `false`\n *   regardless of the environment (to prevent completely broken fonts).\n * @property {string} [standardFontDataUrl] - The URL where the standard font\n *   files are located. Include the trailing slash.\n * @property {Object} [StandardFontDataFactory] - The factory that will be used\n *   when reading the standard font files. Providing a custom factory is useful\n *   for environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMStandardFontDataFactory}.\n * @property {boolean} [useWorkerFetch] - Enable using the Fetch API in the\n *   worker-thread when reading CMap and standard font files. When `true`,\n *   the `CMapReaderFactory` and `StandardFontDataFactory` options are ignored.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [isOffscreenCanvasSupported] - Determines if we can use\n *   `OffscreenCanvas` in the worker. Primarily used to improve performance of\n *   image conversion/rendering.\n *   The default value is `true` in web environments and `false` in Node.js.\n * @property {number} [canvasMaxAreaInBytes] - The integer value is used to\n *   know when an image must be resized (uses `OffscreenCanvas` in the worker).\n *   If it's -1 then a possibly slow algorithm is used to guess the max value.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via the Font Loading API or `@font-face` rules.\n *   If disabled, fonts will be rendered using a built-in font renderer that\n *   constructs the glyphs with primitive path commands.\n *   The default value is `false` in web environments and `true` in Node.js.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {boolean} [enableXfa] - Render Xfa forms if any.\n *   The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object} [filterFactory] - A factory instance that will be used\n *   to create SVG filters when rendering some images on the main canvas.\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string | URL | TypedArray | ArrayBuffer | DocumentInitParameters}\n *   src - Can be a URL where a PDF file is located, a typed array (Uint8Array)\n *         already populated with data, or a parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n    if (typeof src === \"string\" || src instanceof URL) {\n      src = { url: src };\n    } else if (isArrayBuffer(src)) {\n      src = { data: src };\n    }\n  }\n  if (typeof src !== \"object\") {\n    throw new Error(\"Invalid parameter in getDocument, need parameter object.\");\n  }\n  if (!src.url && !src.data && !src.range) {\n    throw new Error(\n      \"Invalid parameter object: need either .data, .range or .url\"\n    );\n  }\n  const task = new PDFDocumentLoadingTask();\n  const { docId } = task;\n\n  const url = src.url ? getUrlProp(src.url) : null;\n  const data = src.data ? getDataProp(src.data) : null;\n  const httpHeaders = src.httpHeaders || null;\n  const withCredentials = src.withCredentials === true;\n  const password = src.password ?? null;\n  const rangeTransport =\n    src.range instanceof PDFDataRangeTransport ? src.range : null;\n  const rangeChunkSize =\n    Number.isInteger(src.rangeChunkSize) && src.rangeChunkSize > 0\n      ? src.rangeChunkSize\n      : DEFAULT_RANGE_CHUNK_SIZE;\n  let worker = src.worker instanceof PDFWorker ? src.worker : null;\n  const verbosity = src.verbosity;\n  // Ignore \"data:\"-URLs, since they can't be used to recover valid absolute\n  // URLs anyway. We want to avoid sending them to the worker-thread, since\n  // they contain the *entire* PDF document and can thus be arbitrarily long.\n  const docBaseUrl =\n    typeof src.docBaseUrl === \"string\" && !isDataScheme(src.docBaseUrl)\n      ? src.docBaseUrl\n      : null;\n  const cMapUrl = typeof src.cMapUrl === \"string\" ? src.cMapUrl : null;\n  const cMapPacked = src.cMapPacked !== false;\n  const CMapReaderFactory = src.CMapReaderFactory || DefaultCMapReaderFactory;\n  const standardFontDataUrl =\n    typeof src.standardFontDataUrl === \"string\"\n      ? src.standardFontDataUrl\n      : null;\n  const StandardFontDataFactory =\n    src.StandardFontDataFactory || DefaultStandardFontDataFactory;\n  const ignoreErrors = src.stopAtErrors !== true;\n  const maxImageSize =\n    Number.isInteger(src.maxImageSize) && src.maxImageSize > -1\n      ? src.maxImageSize\n      : -1;\n  const isEvalSupported = src.isEvalSupported !== false;\n  const isOffscreenCanvasSupported =\n    typeof src.isOffscreenCanvasSupported === \"boolean\"\n      ? src.isOffscreenCanvasSupported\n      : !isNodeJS;\n  const canvasMaxAreaInBytes = Number.isInteger(src.canvasMaxAreaInBytes)\n    ? src.canvasMaxAreaInBytes\n    : -1;\n  const disableFontFace =\n    typeof src.disableFontFace === \"boolean\" ? src.disableFontFace : isNodeJS;\n  const fontExtraProperties = src.fontExtraProperties === true;\n  const enableXfa = src.enableXfa === true;\n  const ownerDocument = src.ownerDocument || globalThis.document;\n  const disableRange = src.disableRange === true;\n  const disableStream = src.disableStream === true;\n  const disableAutoFetch = src.disableAutoFetch === true;\n  const pdfBug = src.pdfBug === true;\n\n  // Parameters whose default values depend on other parameters.\n  const length = rangeTransport ? rangeTransport.length : src.length ?? NaN;\n  const useSystemFonts =\n    typeof src.useSystemFonts === \"boolean\"\n      ? src.useSystemFonts\n      : !isNodeJS && !disableFontFace;\n  const useWorkerFetch =\n    typeof src.useWorkerFetch === \"boolean\"\n      ? src.useWorkerFetch\n      : (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        (CMapReaderFactory === DOMCMapReaderFactory &&\n          StandardFontDataFactory === DOMStandardFontDataFactory &&\n          cMapUrl &&\n          standardFontDataUrl &&\n          isValidFetchUrl(cMapUrl, document.baseURI) &&\n          isValidFetchUrl(standardFontDataUrl, document.baseURI));\n  const canvasFactory =\n    src.canvasFactory || new DefaultCanvasFactory({ ownerDocument });\n  const filterFactory =\n    src.filterFactory || new DefaultFilterFactory({ docId, ownerDocument });\n\n  // Parameters only intended for development/testing purposes.\n  const styleElement =\n    typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")\n      ? src.styleElement\n      : null;\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(verbosity);\n\n  // Ensure that the various factories can be initialized, when necessary,\n  // since the user may provide *custom* ones.\n  const transportFactory = {\n    canvasFactory,\n    filterFactory,\n  };\n  if (!useWorkerFetch) {\n    transportFactory.cMapReaderFactory = new CMapReaderFactory({\n      baseUrl: cMapUrl,\n      isCompressed: cMapPacked,\n    });\n    transportFactory.standardFontDataFactory = new StandardFontDataFactory({\n      baseUrl: standardFontDataUrl,\n    });\n  }\n\n  if (!worker) {\n    const workerParams = {\n      verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n\n  const fetchDocParams = {\n    docId,\n    apiVersion:\n      typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n        ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n        : null,\n    data,\n    password,\n    disableAutoFetch,\n    rangeChunkSize,\n    length,\n    docBaseUrl,\n    enableXfa,\n    evaluatorOptions: {\n      maxImageSize,\n      disableFontFace,\n      ignoreErrors,\n      isEvalSupported,\n      isOffscreenCanvasSupported,\n      canvasMaxAreaInBytes,\n      fontExtraProperties,\n      useSystemFonts,\n      cMapUrl: useWorkerFetch ? cMapUrl : null,\n      standardFontDataUrl: useWorkerFetch ? standardFontDataUrl : null,\n    },\n  };\n  const transportParams = {\n    ignoreErrors,\n    isEvalSupported,\n    disableFontFace,\n    fontExtraProperties,\n    enableXfa,\n    ownerDocument,\n    disableAutoFetch,\n    pdfBug,\n    styleElement,\n  };\n\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(worker, fetchDocParams);\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length,\n              initialData: rangeTransport.initialData,\n              progressiveDone: rangeTransport.progressiveDone,\n              contentDispositionFilename:\n                rangeTransport.contentDispositionFilename,\n              disableRange,\n              disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!data) {\n          if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n            throw new Error(\"Not implemented: createPDFNetworkStream\");\n          }\n          const createPDFNetworkStream = params => {\n            if (\n              typeof PDFJSDev !== \"undefined\" &&\n              PDFJSDev.test(\"GENERIC\") &&\n              isNodeJS\n            ) {\n              return new PDFNodeStream(params);\n            }\n            return isValidFetchUrl(params.url)\n              ? new PDFFetchStream(params)\n              : new PDFNetworkStream(params);\n          };\n\n          networkStream = createPDFNetworkStream({\n            url,\n            length,\n            httpHeaders,\n            withCredentials,\n            rangeChunkSize,\n            disableRange,\n            disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            transportParams,\n            transportFactory\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @returns {Promise<string>} A promise that is resolved when the worker ID of\n *   the `MessageHandler` is known.\n * @private\n */\nasync function _fetchDocument(worker, source) {\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  const workerId = await worker.messageHandler.sendWithPromise(\n    \"GetDocRequest\",\n    source,\n    source.data ? [source.data.buffer] : null\n  );\n\n  if (worker.destroyed) {\n    throw new Error(\"Worker was destroyed\");\n  }\n  return workerId;\n}\n\nfunction getUrlProp(val) {\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    return null; // The 'url' is unused with `PDFDataRangeTransport`.\n  }\n  if (val instanceof URL) {\n    return val.href;\n  }\n  try {\n    // The full path is required in the 'url' field.\n    return new URL(val, window.location).href;\n  } catch {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC\") &&\n      isNodeJS &&\n      typeof val === \"string\"\n    ) {\n      return val; // Use the url as-is in Node.js environments.\n    }\n  }\n  throw new Error(\n    \"Invalid PDF url data: \" +\n      \"either string or URL-object is expected in the url property.\"\n  );\n}\n\nfunction getDataProp(val) {\n  // Converting string or array-like data to Uint8Array.\n  if (\n    typeof PDFJSDev !== \"undefined\" &&\n    PDFJSDev.test(\"GENERIC\") &&\n    isNodeJS &&\n    typeof Buffer !== \"undefined\" && // eslint-disable-line no-undef\n    val instanceof Buffer // eslint-disable-line no-undef\n  ) {\n    throw new Error(\n      \"Please provide binary data as `Uint8Array`, rather than `Buffer`.\"\n    );\n  }\n  if (val instanceof Uint8Array && val.byteLength === val.buffer.byteLength) {\n    // Use the data as-is when it's already a Uint8Array that completely\n    // \"utilizes\" its underlying ArrayBuffer, to prevent any possible\n    // issues when transferring it to the worker-thread.\n    return val;\n  }\n  if (typeof val === \"string\") {\n    return stringToBytes(val);\n  }\n  if ((typeof val === \"object\" && !isNaN(val?.length)) || isArrayBuffer(val)) {\n    return new Uint8Array(val);\n  }\n  throw new Error(\n    \"Invalid PDF binary data: either TypedArray, \" +\n      \"string, or array-like object is expected in the data property.\"\n  );\n}\n\n/**\n * @typedef {Object} OnProgressParameters\n * @property {number} loaded - Currently loaded number of bytes.\n * @property {number} total - Total number of bytes in the PDF file.\n */\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n */\nclass PDFDocumentLoadingTask {\n  static #docId = 0;\n\n  constructor() {\n    this._capability = new PromiseCapability();\n    this._transport = null;\n    this._worker = null;\n\n    /**\n     * Unique identifier for the document loading task.\n     * @type {string}\n     */\n    this.docId = `d${PDFDocumentLoadingTask.#docId++}`;\n\n    /**\n     * Whether the loading task is destroyed or not.\n     * @type {boolean}\n     */\n    this.destroyed = false;\n\n    /**\n     * Callback to request a password if a wrong or no password was provided.\n     * The callback receives two parameters: a function that should be called\n     * with the new password, and a reason (see {@link PasswordResponses}).\n     * @type {function}\n     */\n    this.onPassword = null;\n\n    /**\n     * Callback to be able to monitor the loading progress of the PDF file\n     * (necessary to implement e.g. a loading bar).\n     * The callback receives an {@link OnProgressParameters} argument.\n     * @type {function}\n     */\n    this.onProgress = null;\n  }\n\n  /**\n   * Promise for document loading task completion.\n   * @type {Promise<PDFDocumentProxy>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Abort all network requests and destroy the worker.\n   * @returns {Promise<void>} A promise that is resolved when destruction is\n   *   completed.\n   */\n  async destroy() {\n    this.destroyed = true;\n    try {\n      if (this._worker?.port) {\n        this._worker._pendingDestroy = true;\n      }\n      await this._transport?.destroy();\n    } catch (ex) {\n      if (this._worker?.port) {\n        delete this._worker._pendingDestroy;\n      }\n      throw ex;\n    }\n\n    this._transport = null;\n    if (this._worker) {\n      this._worker.destroy();\n      this._worker = null;\n    }\n  }\n}\n\n/**\n * Abstract class to support range requests file loading.\n *\n * NOTE: The TypedArrays passed to the constructor and relevant methods below\n * will generally be transferred to the worker-thread. This will help reduce\n * main-thread memory usage, however it will take ownership of the TypedArrays.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array|null} initialData\n   * @param {boolean} [progressiveDone]\n   * @param {string} [contentDispositionFilename]\n   */\n  constructor(\n    length,\n    initialData,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n    this.contentDispositionFilename = contentDispositionFilename;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = new PromiseCapability();\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  /**\n   * @param {function} listener\n   */\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  /**\n   * @param {number} begin\n   * @param {Uint8Array|null} chunk\n   */\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  /**\n   * @param {number} loaded\n   * @param {number|undefined} total\n   */\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  /**\n   * @param {Uint8Array|null} chunk\n   */\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  /**\n   * @param {number} begin\n   * @param {number} end\n   */\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n      Object.defineProperty(this, \"getJavaScript\", {\n        value: () => {\n          deprecated(\n            \"`PDFDocumentProxy.getJavaScript`, \" +\n              \"please use `PDFDocumentProxy.getJSActions` instead.\"\n          );\n          return this.getJSActions().then(js => {\n            if (!js) {\n              return js;\n            }\n            const jsArr = [];\n            for (const name in js) {\n              jsArr.push(...js[name]);\n            }\n            return jsArr;\n          });\n        },\n      });\n    }\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"getXFADatasets\", {\n        value: () => {\n          return this._transport.getXFADatasets();\n        },\n      });\n      Object.defineProperty(this, \"getXRefPrevValue\", {\n        value: () => {\n          return this._transport.getXRefPrevValue();\n        },\n      });\n      Object.defineProperty(this, \"getAnnotArray\", {\n        value: pageIndex => {\n          return this._transport.getAnnotArray(pageIndex);\n        },\n      });\n    }\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return this._transport.annotationStorage;\n  }\n\n  /**\n   * @type {Object} The filter factory instance.\n   */\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {Array<string, string|null>} A (not guaranteed to be) unique ID to\n   *   identify the PDF document.\n   *   NOTE: The first element will always be defined for all PDF documents,\n   *   whereas the second element is only defined for *modified* PDF documents.\n   */\n  get fingerprints() {\n    return this._pdfInfo.fingerprints;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n\n  /**\n   * NOTE: This is (mostly) intended to support printing of XFA forms.\n   *\n   * @type {Object | null} An object representing a HTML tree structure\n   *   to render the XFA, or `null` when no XFA form exists.\n   */\n  get allXfaHtml() {\n    return this._transport._htmlForXfa;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {RefProxy} ref - The page reference.\n   * @returns {Promise<number>} A promise that is resolved with the page index,\n   *   starting from zero, that is associated with the reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any> | null>} A promise that is resolved with all\n   *   information of the given named destination, or `null` when the named\n   *   destination is not present in the PDF file.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with the JavaScript actions:\n   *     - from the name tree.\n   *     - from A or AA entries in the catalog dictionary.\n   *   , or `null` if no JavaScript exists.\n   */\n  getJSActions() {\n    return this._transport.getDocJSActions();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @typedef {Object} MarkInfo\n   * Properties correspond to Table 321 of the PDF 32000-1:2008 spec.\n   * @property {boolean} Marked\n   * @property {boolean} UserProperties\n   * @property {boolean} Suspects\n   */\n\n  /**\n   * @returns {Promise<MarkInfo | null>} A promise that is resolved with\n   *   a {MarkInfo} object that contains the MarkInfo flags for the PDF\n   *   document, or `null` when no MarkInfo values are present in the PDF file.\n   */\n  getMarkInfo() {\n    return this._transport.getMarkInfo();\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the raw data of the PDF document.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument() {\n    return this._transport.saveDocument();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @param {boolean} [keepLoadedFonts] - Let fonts remain attached to the DOM.\n   *   NOTE: This will increase persistent memory usage, hence don't use this\n   *   option unless absolutely necessary. The default value is `false`.\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup(keepLoadedFonts = false) {\n    return this._transport.startCleanup(keepLoadedFonts || this.isPureXfa);\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are needed in the viewer.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<Object>> | null>} A promise that is\n   *   resolved with an {Object} containing /AcroForm field data for the JS\n   *   sandbox, or `null` when no field data is present in the PDF file.\n   */\n  getFieldObjects() {\n    return this._transport.getFieldObjects();\n  }\n\n  /**\n   * @returns {Promise<boolean>} A promise that is resolved with `true`\n   *   if some /AcroForm fields have JavaScript actions.\n   */\n  hasJSActions() {\n    return this._transport.hasJSActions();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with an\n   *   {Array<string>} containing IDs of annotations that have a calculation\n   *   action, or `null` when no such annotations are present in the PDF file.\n   */\n  getCalculationOrderIds() {\n    return this._transport.getCalculationOrderIds();\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} [includeMarkedContent] - When true include marked\n *   content items in the items array of TextContent. The default is `false`.\n * @property {boolean} [disableNormalization] - When true the text is *not*\n *   normalized in the worker-thread. The default is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem | TextMarkedContent>} items - Array of\n *   {@link TextItem} and {@link TextMarkedContent} objects. TextMarkedContent\n *   items are included when includeMarkedContent is true.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n * @property {boolean} hasEOL - Indicating if the text content is followed by a\n *   line-break.\n */\n\n/**\n * Page text marked content part.\n *\n * @typedef {Object} TextMarkedContent\n * @property {string} type - Either 'beginMarkedContent',\n *   'beginMarkedContentProps', or 'endMarkedContent'.\n * @property {string} id - The marked content identifier. Only used for type\n *   'beginMarkedContentProps'.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} [intent] - Determines the annotations that are fetched,\n *   can be 'display' (viewable annotations), 'print' (printable annotations),\n *   or 'any' (all annotations). The default value is 'display'.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {CanvasRenderingContext2D} canvasContext - A 2D context of a DOM\n *   Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are rendered\n *   onto the canvas, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {CanvasGradient | CanvasPattern | string} [background] - Background\n *   to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n *\n *   NOTE: This option may be partially, or completely, ignored when the\n *   `pageColors`-option is used.\n * @property {Object} [pageColors] - Overwrites background and foreground colors\n *   with user defined ones in order to improve readability in high contrast\n *   mode.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap] - Map some\n *   annotation ids with canvases used to render them.\n * @property {PrintAnnotationStorage} [printAnnotationStorage]\n */\n\n/**\n * Page getOperatorList parameters.\n *\n * @typedef {Object} GetOperatorListParameters\n * @property {string} [intent] - Rendering intent, can be 'display', 'print',\n *   or 'any'. The default value is 'display'.\n * @property {number} [annotationMode] Controls which annotations are included\n *   in the operatorList, for annotations with appearance-data; the values from\n *   {@link AnnotationMode} should be used. The following values are supported:\n *    - `AnnotationMode.DISABLE`, which disables all annotations.\n *    - `AnnotationMode.ENABLE`, which includes all possible annotations (thus\n *      it also depends on the `intent`-option, see above).\n *    - `AnnotationMode.ENABLE_FORMS`, which excludes annotations that contain\n *      interactive form elements (those will be rendered in the display layer).\n *    - `AnnotationMode.ENABLE_STORAGE`, which includes all possible annotations\n *      (as above) but where interactive form elements are updated with data\n *      from the {@link AnnotationStorage}-instance; useful e.g. for printing.\n *   The default value is `AnnotationMode.ENABLE`.\n * @property {PrintAnnotationStorage} [printAnnotationStorage]\n */\n\n/**\n * Structure tree node. The root node will have a role \"Root\".\n *\n * @typedef {Object} StructTreeNode\n * @property {Array<StructTreeNode | StructTreeContent>} children - Array of\n *   {@link StructTreeNode} and {@link StructTreeContent} objects.\n * @property {string} role - element's role, already mapped if a role map exists\n * in the PDF.\n */\n\n/**\n * Structure tree content.\n *\n * @typedef {Object} StructTreeContent\n * @property {string} type - either \"content\" for page and stream structure\n *   elements or \"object\" for object references.\n * @property {string} id - unique id that will map to the text layer.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  #delayedCleanupTimeout = null;\n\n  #pendingCleanup = false;\n\n  constructor(pageIndex, pageInfo, transport, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    /** @type {PDFObjects} */\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this._maybeCleanupAfterRender = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {RefProxy | null} The reference that points to this page.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = \"display\" } = {}) {\n    const intentArgs = this._transport.getRenderingIntent(intent);\n\n    return this._transport.getAnnotations(\n      this._pageIndex,\n      intentArgs.renderingIntent\n    );\n  }\n\n  /**\n   * @returns {Promise<Object>} A promise that is resolved with an\n   *   {Object} with JS actions.\n   */\n  getJSActions() {\n    return this._transport.getPageJSActions(this._pageIndex);\n  }\n\n  /**\n   * @type {Object} The filter factory instance.\n   */\n  get filterFactory() {\n    return this._transport.filterFactory;\n  }\n\n  /**\n   * @type {boolean} True if only XFA form.\n   */\n  get isPureXfa() {\n    return shadow(this, \"isPureXfa\", !!this._transport._htmlForXfa);\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with\n   *   an {Object} with a fake DOM object (a tree structure where elements\n   *   are {Object} with a name, attributes (class, style, ...), value and\n   *   children, very similar to a HTML DOM tree), or `null` if no XFA exists.\n   */\n  async getXfa() {\n    return this._transport._htmlForXfa?.children[this._pageIndex] || null;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params - Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    transform = null,\n    background = null,\n    optionalContentConfigPromise = null,\n    annotationCanvasMap = null,\n    pageColors = null,\n    printAnnotationStorage = null,\n  }) {\n    this._stats?.time(\"Overall\");\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      printAnnotationStorage\n    );\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render...\n    this.#pendingCleanup = false;\n    // ... and ensure that a delayed cleanup is always aborted.\n    this.#abortDelayedCleanup();\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const intentPrint = !!(\n      intentArgs.renderingIntent & RenderingIntentFlag.PRINT\n    );\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = new PromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null,\n      };\n\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n\n    const complete = error => {\n      intentState.renderTasks.delete(internalRenderTask);\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup immediately once rendering has finished.\n      if (this._maybeCleanupAfterRender || intentPrint) {\n        this.#pendingCleanup = true;\n      }\n      this.#tryCleanup(/* delayed = */ !intentPrint);\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error instanceof Error ? error : new Error(error),\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n\n      this._stats?.timeEnd(\"Rendering\");\n      this._stats?.timeEnd(\"Overall\");\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      annotationCanvasMap,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: this._transport.canvasFactory,\n      filterFactory: this._transport.filterFactory,\n      useRequestAnimationFrame: !intentPrint,\n      pdfBug: this._pdfBug,\n      pageColors,\n    });\n\n    (intentState.renderTasks ||= new Set()).add(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.destroyed) {\n          complete();\n          return;\n        }\n        this._stats?.time(\"Rendering\");\n\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @param {GetOperatorListParameters} params - Page getOperatorList\n   *   parameters.\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents the page's operator list.\n   */\n  getOperatorList({\n    intent = \"display\",\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n  } = {}) {\n    if (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n      throw new Error(\"Not implemented: getOperatorList\");\n    }\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        intentState.renderTasks.delete(opListTask);\n      }\n    }\n\n    const intentArgs = this._transport.getRenderingIntent(\n      intent,\n      annotationMode,\n      printAnnotationStorage,\n      /* isOpList = */ true\n    );\n    let intentState = this._intentStates.get(intentArgs.cacheKey);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(intentArgs.cacheKey, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = new PromiseCapability();\n      (intentState.renderTasks ||= new Set()).add(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n        separateAnnots: null,\n      };\n\n      this._stats?.time(\"Page Request\");\n      this._pumpOperatorList(intentArgs);\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    includeMarkedContent = false,\n    disableNormalization = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        includeMarkedContent: includeMarkedContent === true,\n        disableNormalization: disableNormalization === true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * NOTE: All occurrences of whitespace will be replaced by\n   * standard spaces (0x20).\n   *\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    if (this._transport._htmlForXfa) {\n      // TODO: We need to revisit this once the XFA foreground patch lands and\n      // only do this for non-foreground XFA.\n      return this.getXfa().then(xfa => {\n        return XfaText.textContent(xfa);\n      });\n    }\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * @returns {Promise<StructTreeNode>} A promise that is resolved with a\n   *   {@link StructTreeNode} object that represents the page's structure tree,\n   *   or `null` when no structure tree is present for the current page.\n   */\n  getStructTree() {\n    return this._transport.getStructTree(this._pageIndex);\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n\n    const waitOn = [];\n    for (const intentState of this._intentStates.values()) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intentState.opListReadCapability) {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    this.#abortDelayedCleanup();\n\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.#pendingCleanup = true;\n    const success = this.#tryCleanup(/* delayed = */ false);\n\n    if (resetStats && success) {\n      this._stats &&= new StatTimer();\n    }\n    return success;\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @param {boolean} [delayed] - Delay the cleanup, to e.g. improve zooming\n   *   performance in documents with large images.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  #tryCleanup(delayed = false) {\n    this.#abortDelayedCleanup();\n\n    if (!this.#pendingCleanup || this.destroyed) {\n      return false;\n    }\n    if (delayed) {\n      this.#delayedCleanupTimeout = setTimeout(() => {\n        this.#delayedCleanupTimeout = null;\n        this.#tryCleanup(/* delayed = */ false);\n      }, DELAYED_CLEANUP_TIMEOUT);\n\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.size > 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n    this._intentStates.clear();\n    this.objs.clear();\n    this.#pendingCleanup = false;\n    return true;\n  }\n\n  #abortDelayedCleanup() {\n    if (this.#delayedCleanupTimeout) {\n      clearTimeout(this.#delayedCleanupTimeout);\n      this.#delayedCleanupTimeout = null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, cacheKey) {\n    const intentState = this._intentStates.get(cacheKey);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    this._stats?.timeEnd(\"Page Request\");\n\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    intentState.displayReadyCapability?.resolve(transparency);\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n    intentState.operatorList.separateAnnots = operatorListChunk.separateAnnots;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (const internalRenderTask of intentState.renderTasks) {\n      internalRenderTask.operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this.#tryCleanup(/* delayed = */ true);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList({\n    renderingIntent,\n    cacheKey,\n    annotationStorageSerializable,\n  }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        Number.isInteger(renderingIntent) && renderingIntent > 0,\n        '_pumpOperatorList: Expected valid \"renderingIntent\" argument.'\n      );\n    }\n    const { map, transfers } = annotationStorageSerializable;\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      {\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        cacheKey,\n        annotationStorage: map,\n      },\n      transfers\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(cacheKey);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              internalRenderTask.operatorListChanged();\n            }\n            this.#tryCleanup(/* delayed = */ true);\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        reason instanceof Error,\n        '_abortOperatorList: Expected valid \"reason\" argument.'\n      );\n    }\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.size > 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        let delay = RENDERING_CANCELLED_TIMEOUT;\n        if (reason.extraDelay > 0 && reason.extraDelay < /* ms = */ 1000) {\n          // Above, we prevent the total delay from becoming arbitrarily large.\n          delay += reason.extraDelay;\n        }\n\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          intentState.streamReaderCancelTimeout = null;\n          this._abortOperatorList({ intentState, reason, force: true });\n        }, delay);\n        return;\n      }\n    }\n    intentState.streamReader\n      .cancel(new AbortException(reason.message))\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [curCacheKey, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(curCacheKey);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {StatTimer | null} Returns page stats, if enabled; returns `null`\n   *   otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  #listeners = new Set();\n\n  #deferred = Promise.resolve();\n\n  postMessage(obj, transfer) {\n    const event = {\n      data: structuredClone(\n        obj,\n        (typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"SKIP_BABEL || TESTING\")) &&\n          transfer\n          ? { transfer }\n          : null\n      ),\n    };\n\n    this.#deferred.then(() => {\n      for (const listener of this.#listeners) {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  addEventListener(name, listener) {\n    this.#listeners.add(listener);\n  }\n\n  removeEventListener(name, listener) {\n    this.#listeners.delete(listener);\n  }\n\n  terminate() {\n    this.#listeners.clear();\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Worker} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level;\n *   the constants from {@link VerbosityLevel} should be used.\n */\n\nconst PDFWorkerUtil = {\n  isWorkerDisabled: false,\n  fallbackWorkerSrc: null,\n  fakeWorkerId: 0,\n};\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // eslint-disable-next-line no-undef\n  if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n    // Workers aren't supported in Node.js, force-disabling them there.\n    PDFWorkerUtil.isWorkerDisabled = true;\n\n    PDFWorkerUtil.fallbackWorkerSrc = PDFJSDev.test(\"LIB\")\n      ? \"../pdf.worker.js\"\n      : \"./pdf.worker.js\";\n  } else if (typeof document === \"object\") {\n    const pdfjsFilePath = document?.currentScript?.src;\n    if (pdfjsFilePath) {\n      PDFWorkerUtil.fallbackWorkerSrc = pdfjsFilePath.replace(\n        /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n        \".worker$1$2\"\n      );\n    }\n  }\n\n  // Check if URLs have the same origin. For non-HTTP based URLs, returns false.\n  PDFWorkerUtil.isSameOrigin = function (baseUrl, otherUrl) {\n    let base;\n    try {\n      base = new URL(baseUrl);\n      if (!base.origin || base.origin === \"null\") {\n        return false; // non-HTTP url\n      }\n    } catch {\n      return false;\n    }\n\n    const other = new URL(otherUrl, base);\n    return base.origin === other.origin;\n  };\n\n  PDFWorkerUtil.createCDNWrapper = function (url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = `importScripts(\"${url}\");`;\n    return URL.createObjectURL(new Blob([wrapper]));\n  };\n}\n\n/**\n * PDF.js web worker abstraction that controls the instantiation of PDF\n * documents. Message handlers are used to pass information from the main\n * thread to the worker thread and vice versa. If the creation of a web\n * worker is not possible, a \"fake\" worker will be used instead.\n *\n * @param {PDFWorkerParameters} params - The worker initialization parameters.\n */\nclass PDFWorker {\n  static #workerPorts;\n\n  constructor({\n    name = null,\n    port = null,\n    verbosity = getVerbosityLevel(),\n  } = {}) {\n    this.name = name;\n    this.destroyed = false;\n    this.verbosity = verbosity;\n\n    this._readyCapability = new PromiseCapability();\n    this._port = null;\n    this._webWorker = null;\n    this._messageHandler = null;\n\n    if (\n      (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) &&\n      port\n    ) {\n      if (PDFWorker.#workerPorts?.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port.\");\n      }\n      (PDFWorker.#workerPorts ||= new WeakMap()).set(port, this);\n      this._initializeFromPort(port);\n      return;\n    }\n    this._initialize();\n  }\n\n  /**\n   * Promise for worker initialization completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._readyCapability.promise;\n  }\n\n  /**\n   * The current `workerPort`, when it exists.\n   * @type {Worker}\n   */\n  get port() {\n    return this._port;\n  }\n\n  /**\n   * The current MessageHandler-instance.\n   * @type {MessageHandler}\n   */\n  get messageHandler() {\n    return this._messageHandler;\n  }\n\n  _initializeFromPort(port) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _initializeFromPort\");\n    }\n    this._port = port;\n    this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n    this._messageHandler.on(\"ready\", function () {\n      // Ignoring \"ready\" event -- MessageHandler should already be initialized\n      // and ready to accept messages.\n    });\n    this._readyCapability.resolve();\n    // Send global setting, e.g. verbosity level.\n    this._messageHandler.send(\"configure\", {\n      verbosity: this.verbosity,\n    });\n  }\n\n  _initialize() {\n    // If worker support isn't disabled explicit and the browser has worker\n    // support, create a new web worker and test if it/the browser fulfills\n    // all requirements to run parts of pdf.js in a web worker.\n    // Right now, the requirement is, that an Uint8Array is still an\n    // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n    if (\n      !PDFWorkerUtil.isWorkerDisabled &&\n      !PDFWorker._mainThreadWorkerMessageHandler\n    ) {\n      let { workerSrc } = PDFWorker;\n\n      try {\n        // Wraps workerSrc path into blob URL, if the former does not belong\n        // to the same origin.\n        if (\n          typeof PDFJSDev !== \"undefined\" &&\n          PDFJSDev.test(\"GENERIC\") &&\n          !PDFWorkerUtil.isSameOrigin(window.location.href, workerSrc)\n        ) {\n          workerSrc = PDFWorkerUtil.createCDNWrapper(\n            new URL(workerSrc, window.location).href\n          );\n        }\n\n        const worker =\n          typeof PDFJSDev === \"undefined\" &&\n          !workerSrc.endsWith(\"/build/pdf.worker.js\")\n            ? new Worker(workerSrc, { type: \"module\" })\n            : new Worker(workerSrc);\n        const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n        const terminateEarly = () => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          messageHandler.destroy();\n          worker.terminate();\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          } else {\n            // Fall back to fake worker if the termination is caused by an\n            // error (e.g. NetworkError / SecurityError).\n            this._setupFakeWorker();\n          }\n        };\n\n        const onWorkerError = () => {\n          if (!this._webWorker) {\n            // Worker failed to initialize due to an error. Clean up and fall\n            // back to the fake worker.\n            terminateEarly();\n          }\n        };\n        worker.addEventListener(\"error\", onWorkerError);\n\n        messageHandler.on(\"test\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          if (data) {\n            this._messageHandler = messageHandler;\n            this._port = worker;\n            this._webWorker = worker;\n\n            this._readyCapability.resolve();\n            // Send global setting, e.g. verbosity level.\n            messageHandler.send(\"configure\", {\n              verbosity: this.verbosity,\n            });\n          } else {\n            this._setupFakeWorker();\n            messageHandler.destroy();\n            worker.terminate();\n          }\n        });\n\n        messageHandler.on(\"ready\", data => {\n          worker.removeEventListener(\"error\", onWorkerError);\n          if (this.destroyed) {\n            terminateEarly();\n            return; // worker was destroyed\n          }\n          try {\n            sendTest();\n          } catch {\n            // We need fallback to a faked worker.\n            this._setupFakeWorker();\n          }\n        });\n\n        const sendTest = () => {\n          const testObj = new Uint8Array();\n          // Ensure that we can use `postMessage` transfers.\n          messageHandler.send(\"test\", testObj, [testObj.buffer]);\n        };\n\n        // It might take time for the worker to initialize. We will try to send\n        // the \"test\" message immediately, and once the \"ready\" message arrives.\n        // The worker shall process only the first received \"test\" message.\n        sendTest();\n        return;\n      } catch {\n        info(\"The worker has been disabled.\");\n      }\n    }\n    // Either workers are disabled, not supported or have thrown an exception.\n    // Thus, we fallback to a faked worker.\n    this._setupFakeWorker();\n  }\n\n  _setupFakeWorker() {\n    if (!PDFWorkerUtil.isWorkerDisabled) {\n      warn(\"Setting up fake worker.\");\n      PDFWorkerUtil.isWorkerDisabled = true;\n    }\n\n    PDFWorker._setupFakeWorkerGlobal\n      .then(WorkerMessageHandler => {\n        if (this.destroyed) {\n          this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n          return;\n        }\n        const port = new LoopbackPort();\n        this._port = port;\n\n        // All fake workers use the same port, making id unique.\n        const id = `fake${PDFWorkerUtil.fakeWorkerId++}`;\n\n        // If the main thread is our worker, setup the handling for the\n        // messages -- the main thread sends to it self.\n        const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n        WorkerMessageHandler.setup(workerHandler, port);\n\n        const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n        this._messageHandler = messageHandler;\n        this._readyCapability.resolve();\n        // Send global setting, e.g. verbosity level.\n        messageHandler.send(\"configure\", {\n          verbosity: this.verbosity,\n        });\n      })\n      .catch(reason => {\n        this._readyCapability.reject(\n          new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n        );\n      });\n  }\n\n  /**\n   * Destroys the worker instance.\n   */\n  destroy() {\n    this.destroyed = true;\n    if (this._webWorker) {\n      // We need to terminate only web worker created resource.\n      this._webWorker.terminate();\n      this._webWorker = null;\n    }\n    PDFWorker.#workerPorts?.delete(this._port);\n    this._port = null;\n    if (this._messageHandler) {\n      this._messageHandler.destroy();\n      this._messageHandler = null;\n    }\n  }\n\n  /**\n   * @param {PDFWorkerParameters} params - The worker initialization parameters.\n   */\n  static fromPort(params) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: fromPort\");\n    }\n    if (!params?.port) {\n      throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n    }\n    const cachedPort = this.#workerPorts?.get(params.port);\n    if (cachedPort) {\n      if (cachedPort._pendingDestroy) {\n        throw new Error(\n          \"PDFWorker.fromPort - the worker is being destroyed.\\n\" +\n            \"Please remember to await `PDFDocumentLoadingTask.destroy()`-calls.\"\n        );\n      }\n      return cachedPort;\n    }\n    return new PDFWorker(params);\n  }\n\n  /**\n   * The current `workerSrc`, when it exists.\n   * @type {string}\n   */\n  static get workerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (\n      (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n      PDFWorkerUtil.fallbackWorkerSrc !== null\n    ) {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return PDFWorkerUtil.fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  static get _mainThreadWorkerMessageHandler() {\n    try {\n      return globalThis.pdfjsWorker?.WorkerMessageHandler || null;\n    } catch {\n      return null;\n    }\n  }\n\n  // Loads worker code into the main-thread.\n  static get _setupFakeWorkerGlobal() {\n    const loader = async () => {\n      const mainWorkerMessageHandler = this._mainThreadWorkerMessageHandler;\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\") {\n        const worker = await import(\"pdfjs/pdf.worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(this.workerSrc);\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(this.workerSrc);\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n\n    return shadow(this, \"_setupFakeWorkerGlobal\", loader());\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  #methodPromises = new Map();\n\n  #pageCache = new Map();\n\n  #pagePromises = new Map();\n\n  #passwordCapability = null;\n\n  constructor(messageHandler, loadingTask, networkStream, params, factory) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      ownerDocument: params.ownerDocument,\n      styleElement: params.styleElement,\n    });\n    this._params = params;\n\n    this.canvasFactory = factory.canvasFactory;\n    this.filterFactory = factory.filterFactory;\n    this.cMapReaderFactory = factory.cMapReaderFactory;\n    this.standardFontDataFactory = factory.standardFontDataFactory;\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n    this.downloadInfoCapability = new PromiseCapability();\n\n    this.setupMessageHandler();\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"getXFADatasets\", {\n        value: () => {\n          return this.messageHandler.sendWithPromise(\"GetXFADatasets\", null);\n        },\n      });\n      Object.defineProperty(this, \"getXRefPrevValue\", {\n        value: () => {\n          return this.messageHandler.sendWithPromise(\"GetXRefPrevValue\", null);\n        },\n      });\n      Object.defineProperty(this, \"getAnnotArray\", {\n        value: pageIndex => {\n          return this.messageHandler.sendWithPromise(\"GetAnnotArray\", {\n            pageIndex,\n          });\n        },\n      });\n    }\n  }\n\n  #cacheSimpleMethod(name, data = null) {\n    const cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler.sendWithPromise(name, data);\n\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  getRenderingIntent(\n    intent,\n    annotationMode = AnnotationMode.ENABLE,\n    printAnnotationStorage = null,\n    isOpList = false\n  ) {\n    let renderingIntent = RenderingIntentFlag.DISPLAY; // Default value.\n    let annotationStorageSerializable = SerializableEmpty;\n\n    switch (intent) {\n      case \"any\":\n        renderingIntent = RenderingIntentFlag.ANY;\n        break;\n      case \"display\":\n        break;\n      case \"print\":\n        renderingIntent = RenderingIntentFlag.PRINT;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid intent: ${intent}`);\n    }\n\n    switch (annotationMode) {\n      case AnnotationMode.DISABLE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_DISABLE;\n        break;\n      case AnnotationMode.ENABLE:\n        break;\n      case AnnotationMode.ENABLE_FORMS:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_FORMS;\n        break;\n      case AnnotationMode.ENABLE_STORAGE:\n        renderingIntent += RenderingIntentFlag.ANNOTATIONS_STORAGE;\n\n        const annotationStorage =\n          renderingIntent & RenderingIntentFlag.PRINT &&\n          printAnnotationStorage instanceof PrintAnnotationStorage\n            ? printAnnotationStorage\n            : this.annotationStorage;\n\n        annotationStorageSerializable = annotationStorage.serializable;\n        break;\n      default:\n        warn(`getRenderingIntent - invalid annotationMode: ${annotationMode}`);\n    }\n\n    if (isOpList) {\n      renderingIntent += RenderingIntentFlag.OPLIST;\n    }\n\n    return {\n      renderingIntent,\n      cacheKey: `${renderingIntent}_${annotationStorageSerializable.hash}`,\n      annotationStorageSerializable,\n    };\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = new PromiseCapability();\n\n    this.#passwordCapability?.reject(\n      new Error(\"Worker was destroyed during onPassword callback\")\n    );\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    for (const page of this.#pageCache.values()) {\n      waitOn.push(page._destroy());\n    }\n    this.#pageCache.clear();\n    this.#pagePromises.clear();\n    // Allow `AnnotationStorage`-related clean-up when destroying the document.\n    if (this.hasOwnProperty(\"annotationStorage\")) {\n      this.annotationStorage.resetModified();\n    }\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n\n    Promise.all(waitOn).then(() => {\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n      this.#methodPromises.clear();\n      this.filterFactory.destroy();\n\n      this._networkStream?.cancelAllRequests(\n        new AbortException(\"Worker was terminated.\")\n      );\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              value instanceof ArrayBuffer,\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = new PromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress) {\n            loadingTask.onProgress?.(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            loadingTask.onProgress?.({\n              loaded: evt.loaded,\n              total: evt.total,\n            });\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              value instanceof ArrayBuffer,\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      this._htmlForXfa = pdfInfo.htmlForXfa;\n      delete pdfInfo.htmlForXfa;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n        default:\n          unreachable(\"DocException - expected a valid Error.\");\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this.#passwordCapability = new PromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          if (password instanceof Error) {\n            this.#passwordCapability.reject(password);\n          } else {\n            this.#passwordCapability.resolve({ password });\n          }\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this.#passwordCapability.reject(ex);\n        }\n      } else {\n        this.#passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this.#passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      loadingTask.onProgress?.({\n        loaded: data.length,\n        total: data.length,\n      });\n\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.#pageCache.get(data.pageIndex);\n      page._startRenderPage(data.transparency, data.cacheKey);\n    });\n\n    messageHandler.on(\"commonobj\", ([id, type, exportedData]) => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          const inspectFont =\n            params.pdfBug && globalThis.FontInspector?.enabled\n              ? (font, url) => globalThis.FontInspector.fontAdded(font, url)\n              : null;\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            inspectFont,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n        case \"Pattern\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", ([id, pageIndex, type, imageData]) => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return;\n      }\n\n      const pageProxy = this.#pageCache.get(pageIndex);\n      if (pageProxy.objs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          if (imageData) {\n            let length;\n            if (imageData.bitmap) {\n              const { width, height } = imageData;\n              length = width * height * 4;\n            } else {\n              length = imageData.data?.length || 0;\n            }\n\n            if (length > MAX_IMAGE_SIZE_TO_CACHE) {\n              pageProxy._maybeCleanupAfterRender = true;\n            }\n          }\n          break;\n        case \"Pattern\":\n          pageProxy.objs.resolve(id, imageData);\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n      loadingTask.onProgress?.({\n        loaded: data.loaded,\n        total: data.total,\n      });\n    });\n\n    messageHandler.on(\"FetchBuiltInCMap\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.cMapReaderFactory) {\n        return Promise.reject(\n          new Error(\n            \"CMapReaderFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.cMapReaderFactory.fetch(data);\n    });\n\n    messageHandler.on(\"FetchStandardFontData\", data => {\n      if (this.destroyed) {\n        return Promise.reject(new Error(\"Worker was destroyed.\"));\n      }\n      if (!this.standardFontDataFactory) {\n        return Promise.reject(\n          new Error(\n            \"StandardFontDataFactory not initialized, see the `useWorkerFetch` parameter.\"\n          )\n        );\n      }\n      return this.standardFontDataFactory.fetch(data);\n    });\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  saveDocument() {\n    if (this.annotationStorage.size <= 0) {\n      warn(\n        \"saveDocument called while `annotationStorage` is empty, \" +\n          \"please use the getData-method instead.\"\n      );\n    }\n    const { map, transfers } = this.annotationStorage.serializable;\n\n    return this.messageHandler\n      .sendWithPromise(\n        \"SaveDocument\",\n        {\n          isPureXfa: !!this._htmlForXfa,\n          numPages: this._numPages,\n          annotationStorage: map,\n          filename: this._fullReader?.filename ?? null,\n        },\n        transfers\n      )\n      .finally(() => {\n        this.annotationStorage.resetModified();\n      });\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request.\"));\n    }\n\n    const pageIndex = pageNumber - 1,\n      cachedPromise = this.#pagePromises.get(pageIndex);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.pdfBug\n        );\n        this.#pageCache.set(pageIndex, page);\n        return page;\n      });\n    this.#pagePromises.set(pageIndex, promise);\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    if (\n      typeof ref !== \"object\" ||\n      ref === null ||\n      !Number.isInteger(ref.num) ||\n      ref.num < 0 ||\n      !Number.isInteger(ref.gen) ||\n      ref.gen < 0\n    ) {\n      return Promise.reject(new Error(\"Invalid pageIndex request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n      num: ref.num,\n      gen: ref.gen,\n    });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  getFieldObjects() {\n    return this.#cacheSimpleMethod(\"GetFieldObjects\");\n  }\n\n  hasJSActions() {\n    return this.#cacheSimpleMethod(\"HasJSActions\");\n  }\n\n  getCalculationOrderIds() {\n    return this.messageHandler.sendWithPromise(\"GetCalculationOrderIds\", null);\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getDocJSActions() {\n    return this.#cacheSimpleMethod(\"GetDocJSActions\");\n  }\n\n  getPageJSActions(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetPageJSActions\", {\n      pageIndex,\n    });\n  }\n\n  getStructTree(pageIndex) {\n    return this.messageHandler.sendWithPromise(\"GetStructTree\", {\n      pageIndex,\n    });\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    const name = \"GetMetadata\",\n      cachedPromise = this.#methodPromises.get(name);\n    if (cachedPromise) {\n      return cachedPromise;\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(name, null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader?.filename ?? null,\n          contentLength: this._fullReader?.contentLength ?? null,\n        };\n      });\n    this.#methodPromises.set(name, promise);\n    return promise;\n  }\n\n  getMarkInfo() {\n    return this.messageHandler.sendWithPromise(\"GetMarkInfo\", null);\n  }\n\n  async startCleanup(keepLoadedFonts = false) {\n    if (this.destroyed) {\n      return; // No need to manually clean-up when destruction has started.\n    }\n    await this.messageHandler.sendWithPromise(\"Cleanup\", null);\n\n    for (const page of this.#pageCache.values()) {\n      const cleanupSuccessful = page.cleanup();\n\n      if (!cleanupSuccessful) {\n        throw new Error(\n          `startCleanup: Page ${page.pageNumber} is currently rendering.`\n        );\n      }\n    }\n    this.commonObjs.clear();\n    if (!keepLoadedFonts) {\n      this.fontLoader.clear();\n    }\n    this.#methodPromises.clear();\n    this.filterFactory.destroy(/* keepHCM = */ true);\n  }\n\n  get loadingParams() {\n    const { disableAutoFetch, enableXfa } = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch,\n      enableXfa,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n */\nclass PDFObjects {\n  #objs = Object.create(null);\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   *\n   * @param {string} objId\n   * @returns {Object}\n   */\n  #ensureObj(objId) {\n    return (this.#objs[objId] ||= {\n      capability: new PromiseCapability(),\n      data: null,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   *\n   * @param {string} objId\n   * @param {function} [callback]\n   * @returns {any}\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      const obj = this.#ensureObj(objId);\n      obj.capability.promise.then(() => callback(obj.data));\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this.#objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj?.capability.settled) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  /**\n   * @param {string} objId\n   * @returns {boolean}\n   */\n  has(objId) {\n    const obj = this.#objs[objId];\n    return obj?.capability.settled || false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   *\n   * @param {string} objId\n   * @param {any} [data]\n   */\n  resolve(objId, data = null) {\n    const obj = this.#ensureObj(objId);\n    obj.data = data;\n    obj.capability.resolve();\n  }\n\n  clear() {\n    for (const objId in this.#objs) {\n      const { data } = this.#objs[objId];\n      data?.bitmap?.close(); // Release any `ImageBitmap` data.\n    }\n    this.#objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  #internalRenderTask = null;\n\n  constructor(internalRenderTask) {\n    this.#internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this.#internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   *\n   * @param {number} [extraDelay]\n   */\n  cancel(extraDelay = 0) {\n    this.#internalRenderTask.cancel(/* error = */ null, extraDelay);\n  }\n\n  /**\n   * Whether form fields are rendered separately from the main operatorList.\n   * @type {boolean}\n   */\n  get separateAnnots() {\n    const { separateAnnots } = this.#internalRenderTask.operatorList;\n    if (!separateAnnots) {\n      return false;\n    }\n    const { annotationCanvasMap } = this.#internalRenderTask;\n    return (\n      separateAnnots.form ||\n      (separateAnnots.canvas && annotationCanvasMap?.size > 0)\n    );\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nclass InternalRenderTask {\n  static #canvasInUse = new WeakSet();\n\n  constructor({\n    callback,\n    params,\n    objs,\n    commonObjs,\n    annotationCanvasMap,\n    operatorList,\n    pageIndex,\n    canvasFactory,\n    filterFactory,\n    useRequestAnimationFrame = false,\n    pdfBug = false,\n    pageColors = null,\n  }) {\n    this.callback = callback;\n    this.params = params;\n    this.objs = objs;\n    this.commonObjs = commonObjs;\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.operatorListIdx = null;\n    this.operatorList = operatorList;\n    this._pageIndex = pageIndex;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this._pdfBug = pdfBug;\n    this.pageColors = pageColors;\n\n    this.running = false;\n    this.graphicsReadyCallback = null;\n    this.graphicsReady = false;\n    this._useRequestAnimationFrame =\n      useRequestAnimationFrame === true && typeof window !== \"undefined\";\n    this.cancelled = false;\n    this.capability = new PromiseCapability();\n    this.task = new RenderTask(this);\n    // caching this-bound methods\n    this._cancelBound = this.cancel.bind(this);\n    this._continueBound = this._continue.bind(this);\n    this._scheduleNextBound = this._scheduleNext.bind(this);\n    this._nextBound = this._next.bind(this);\n    this._canvas = params.canvasContext.canvas;\n  }\n\n  get completed() {\n    return this.capability.promise.catch(function () {\n      // Ignoring errors, since we only want to know when rendering is\n      // no longer pending.\n    });\n  }\n\n  initializeGraphics({ transparency = false, optionalContentConfig }) {\n    if (this.cancelled) {\n      return;\n    }\n    if (this._canvas) {\n      if (InternalRenderTask.#canvasInUse.has(this._canvas)) {\n        throw new Error(\n          \"Cannot use the same canvas during multiple render() operations. \" +\n            \"Use different canvas or ensure previous operations were \" +\n            \"cancelled or completed.\"\n        );\n      }\n      InternalRenderTask.#canvasInUse.add(this._canvas);\n    }\n\n    if (this._pdfBug && globalThis.StepperManager?.enabled) {\n      this.stepper = globalThis.StepperManager.create(this._pageIndex);\n      this.stepper.init(this.operatorList);\n      this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n    }\n    const { canvasContext, viewport, transform, background } = this.params;\n\n    this.gfx = new CanvasGraphics(\n      canvasContext,\n      this.commonObjs,\n      this.objs,\n      this.canvasFactory,\n      this.filterFactory,\n      { optionalContentConfig },\n      this.annotationCanvasMap,\n      this.pageColors\n    );\n    this.gfx.beginDrawing({\n      transform,\n      viewport,\n      transparency,\n      background,\n    });\n    this.operatorListIdx = 0;\n    this.graphicsReady = true;\n    this.graphicsReadyCallback?.();\n  }\n\n  cancel(error = null, extraDelay = 0) {\n    this.running = false;\n    this.cancelled = true;\n    this.gfx?.endDrawing();\n    InternalRenderTask.#canvasInUse.delete(this._canvas);\n\n    this.callback(\n      error ||\n        new RenderingCancelledException(\n          `Rendering cancelled, page ${this._pageIndex + 1}`,\n          extraDelay\n        )\n    );\n  }\n\n  operatorListChanged() {\n    if (!this.graphicsReady) {\n      this.graphicsReadyCallback ||= this._continueBound;\n      return;\n    }\n    this.stepper?.updateOperatorList(this.operatorList);\n\n    if (this.running) {\n      return;\n    }\n    this._continue();\n  }\n\n  _continue() {\n    this.running = true;\n    if (this.cancelled) {\n      return;\n    }\n    if (this.task.onContinue) {\n      this.task.onContinue(this._scheduleNextBound);\n    } else {\n      this._scheduleNext();\n    }\n  }\n\n  _scheduleNext() {\n    if (this._useRequestAnimationFrame) {\n      window.requestAnimationFrame(() => {\n        this._nextBound().catch(this._cancelBound);\n      });\n    } else {\n      Promise.resolve().then(this._nextBound).catch(this._cancelBound);\n    }\n  }\n\n  async _next() {\n    if (this.cancelled) {\n      return;\n    }\n    this.operatorListIdx = this.gfx.executeOperatorList(\n      this.operatorList,\n      this.operatorListIdx,\n      this._continueBound,\n      this.stepper\n    );\n    if (this.operatorListIdx === this.operatorList.argsArray.length) {\n      this.running = false;\n      if (this.operatorList.lastChunk) {\n        this.gfx.endDrawing();\n        InternalRenderTask.#canvasInUse.delete(this._canvas);\n\n        this.callback();\n      }\n    }\n  }\n}\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  build,\n  DefaultCanvasFactory,\n  DefaultCMapReaderFactory,\n  DefaultFilterFactory,\n  DefaultStandardFontDataFactory,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFDocumentLoadingTask,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  PDFWorker,\n  PDFWorkerUtil,\n  RenderTask,\n  SVGGraphics,\n  version,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap, unreachable } from \"../shared/util.js\";\nimport { AnnotationEditor } from \"./editor/editor.js\";\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\n\nconst SerializableEmpty = Object.freeze({\n  map: null,\n  hash: \"\",\n  transfers: undefined,\n});\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  #modified = false;\n\n  #storage = new Map();\n\n  constructor() {\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable effects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n    this.onAnnotationEditor = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists, or return the default value.\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getValue(key, defaultValue) {\n    const value = this.#storage.get(key);\n    if (value === undefined) {\n      return defaultValue;\n    }\n\n    return Object.assign(defaultValue, value);\n  }\n\n  /**\n   * Get the value for a given key.\n   * @param {string} key\n   * @returns {Object}\n   */\n  getRawValue(key) {\n    return this.#storage.get(key);\n  }\n\n  /**\n   * Remove a value from the storage.\n   * @param {string} key\n   */\n  remove(key) {\n    this.#storage.delete(key);\n\n    if (this.#storage.size === 0) {\n      this.resetModified();\n    }\n\n    if (typeof this.onAnnotationEditor === \"function\") {\n      for (const value of this.#storage.values()) {\n        if (value instanceof AnnotationEditor) {\n          return;\n        }\n      }\n      this.onAnnotationEditor(null);\n    }\n  }\n\n  /**\n   * Set the value for a given key\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    const obj = this.#storage.get(key);\n    let modified = false;\n    if (obj !== undefined) {\n      for (const [entry, val] of Object.entries(value)) {\n        if (obj[entry] !== val) {\n          modified = true;\n          obj[entry] = val;\n        }\n      }\n    } else {\n      modified = true;\n      this.#storage.set(key, value);\n    }\n    if (modified) {\n      this.#setModified();\n    }\n\n    if (\n      value instanceof AnnotationEditor &&\n      typeof this.onAnnotationEditor === \"function\"\n    ) {\n      this.onAnnotationEditor(value.constructor._type);\n    }\n  }\n\n  /**\n   * Check if the storage contains the given key.\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has(key) {\n    return this.#storage.has(key);\n  }\n\n  /**\n   * @returns {Object | null}\n   */\n  getAll() {\n    return this.#storage.size > 0 ? objectFromMap(this.#storage) : null;\n  }\n\n  /**\n   * @param {Object} obj\n   */\n  setAll(obj) {\n    for (const [key, val] of Object.entries(obj)) {\n      this.setValue(key, val);\n    }\n  }\n\n  get size() {\n    return this.#storage.size;\n  }\n\n  #setModified() {\n    if (!this.#modified) {\n      this.#modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this.#modified) {\n      this.#modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n\n  /**\n   * @returns {PrintAnnotationStorage}\n   */\n  get print() {\n    return new PrintAnnotationStorage(this);\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    if (this.#storage.size === 0) {\n      return SerializableEmpty;\n    }\n    const map = new Map(),\n      hash = new MurmurHash3_64(),\n      transfers = [];\n    const context = Object.create(null);\n    let hasBitmap = false;\n\n    for (const [key, val] of this.#storage) {\n      const serialized =\n        val instanceof AnnotationEditor\n          ? val.serialize(/* isForCopying = */ false, context)\n          : val;\n      if (serialized) {\n        map.set(key, serialized);\n\n        hash.update(`${key}:${JSON.stringify(serialized)}`);\n        hasBitmap ||= !!serialized.bitmap;\n      }\n    }\n\n    if (hasBitmap) {\n      // We must transfer the bitmap data separately, since it can be changed\n      // during serialization with SVG images.\n      for (const value of map.values()) {\n        if (value.bitmap) {\n          transfers.push(value.bitmap);\n        }\n      }\n    }\n\n    return map.size > 0\n      ? { map, hash: hash.hexdigest(), transfers }\n      : SerializableEmpty;\n  }\n}\n\n/**\n * A special `AnnotationStorage` for use during printing, where the serializable\n * data is *frozen* upon initialization, to prevent scripting from modifying its\n * contents. (Necessary since printing is triggered synchronously in browsers.)\n */\nclass PrintAnnotationStorage extends AnnotationStorage {\n  #serializable;\n\n  constructor(parent) {\n    super();\n    const { map, hash, transfers } = parent.serializable;\n    // Create a *copy* of the data, since Objects are passed by reference in JS.\n    const clone = structuredClone(\n      map,\n      (typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"SKIP_BABEL || TESTING\")) &&\n        transfers\n        ? { transfer: transfers }\n        : null\n    );\n    this.#serializable = { map: clone, hash, transfers };\n  }\n\n  /**\n   * @returns {PrintAnnotationStorage}\n   */\n  // eslint-disable-next-line getter-return\n  get print() {\n    unreachable(\"Should not call PrintAnnotationStorage.print\");\n  }\n\n  /**\n   * PLEASE NOTE: Only intended for usage within the API itself.\n   * @ignore\n   */\n  get serializable() {\n    return this.#serializable;\n  }\n}\n\nexport { AnnotationStorage, PrintAnnotationStorage, SerializableEmpty };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./tools.js\").AnnotationEditorUIManager} AnnotationEditorUIManager */\n\nimport { bindEvents, ColorManager } from \"./tools.js\";\nimport { FeatureTest, shadow, unreachable } from \"../../shared/util.js\";\nimport { noContextMenu } from \"../display_utils.js\";\n\n/**\n * @typedef {Object} AnnotationEditorParameters\n * @property {AnnotationEditorUIManager} uiManager - the global manager\n * @property {AnnotationEditorLayer} parent - the layer containing this editor\n * @property {string} id - editor id\n * @property {number} x - x-coordinate\n * @property {number} y - y-coordinate\n */\n\n/**\n * Base class for editors.\n */\nclass AnnotationEditor {\n  #altText = \"\";\n\n  #altTextDecorative = false;\n\n  #altTextButton = null;\n\n  #altTextTooltip = null;\n\n  #altTextTooltipTimeout = null;\n\n  #keepAspectRatio = false;\n\n  #resizersDiv = null;\n\n  #boundFocusin = this.focusin.bind(this);\n\n  #boundFocusout = this.focusout.bind(this);\n\n  #hasBeenClicked = false;\n\n  #isEditing = false;\n\n  #isInEditMode = false;\n\n  _initialOptions = Object.create(null);\n\n  _uiManager = null;\n\n  _focusEventsAllowed = true;\n\n  _l10nPromise = null;\n\n  #isDraggable = false;\n\n  #zIndex = AnnotationEditor._zIndex++;\n\n  static _borderLineWidth = -1;\n\n  static _colorManager = new ColorManager();\n\n  static _zIndex = 1;\n\n  // When one of the dimensions of an editor is smaller than this value, the\n  // button to edit the alt text is visually moved outside of the editor.\n  static SMALL_EDITOR_SIZE = 0;\n\n  /**\n   * @param {AnnotationEditorParameters} parameters\n   */\n  constructor(parameters) {\n    if (this.constructor === AnnotationEditor) {\n      unreachable(\"Cannot initialize AnnotationEditor.\");\n    }\n\n    this.parent = parameters.parent;\n    this.id = parameters.id;\n    this.width = this.height = null;\n    this.pageIndex = parameters.parent.pageIndex;\n    this.name = parameters.name;\n    this.div = null;\n    this._uiManager = parameters.uiManager;\n    this.annotationElementId = null;\n    this._willKeepAspectRatio = false;\n    this._initialOptions.isCentered = parameters.isCentered;\n    this._structTreeParentId = null;\n\n    const {\n      rotation,\n      rawDims: { pageWidth, pageHeight, pageX, pageY },\n    } = this.parent.viewport;\n\n    this.rotation = rotation;\n    this.pageRotation =\n      (360 + rotation - this._uiManager.viewParameters.rotation) % 360;\n    this.pageDimensions = [pageWidth, pageHeight];\n    this.pageTranslation = [pageX, pageY];\n\n    const [width, height] = this.parentDimensions;\n    this.x = parameters.x / width;\n    this.y = parameters.y / height;\n\n    this.isAttachedToDOM = false;\n    this.deleted = false;\n  }\n\n  get editorType() {\n    return Object.getPrototypeOf(this).constructor._type;\n  }\n\n  static get _defaultLineColor() {\n    return shadow(\n      this,\n      \"_defaultLineColor\",\n      this._colorManager.getHexCode(\"CanvasText\")\n    );\n  }\n\n  static deleteAnnotationElement(editor) {\n    const fakeEditor = new FakeEditor({\n      id: editor.parent.getNextId(),\n      parent: editor.parent,\n      uiManager: editor._uiManager,\n    });\n    fakeEditor.annotationElementId = editor.annotationElementId;\n    fakeEditor.deleted = true;\n    fakeEditor._uiManager.addToAnnotationStorage(fakeEditor);\n  }\n\n  /**\n   * Initialize the l10n stuff for this type of editor.\n   * @param {Object} l10n\n   */\n  static initialize(l10n, options = null) {\n    AnnotationEditor._l10nPromise ||= new Map(\n      [\n        \"editor_alt_text_button_label\",\n        \"editor_alt_text_edit_button_label\",\n        \"editor_alt_text_decorative_tooltip\",\n      ].map(str => [str, l10n.get(str)])\n    );\n    if (options?.strings) {\n      for (const str of options.strings) {\n        AnnotationEditor._l10nPromise.set(str, l10n.get(str));\n      }\n    }\n    if (AnnotationEditor._borderLineWidth !== -1) {\n      return;\n    }\n    const style = getComputedStyle(document.documentElement);\n    AnnotationEditor._borderLineWidth =\n      parseFloat(style.getPropertyValue(\"--outline-width\")) || 0;\n  }\n\n  /**\n   * Update the default parameters for this type of editor.\n   * @param {number} _type\n   * @param {*} _value\n   */\n  static updateDefaultParams(_type, _value) {}\n\n  /**\n   * Get the default properties to set in the UI for this type of editor.\n   * @returns {Array}\n   */\n  static get defaultPropertiesToUpdate() {\n    return [];\n  }\n\n  /**\n   * Check if this kind of editor is able to handle the given mime type for\n   * pasting.\n   * @param {string} mime\n   * @returns {boolean}\n   */\n  static isHandlingMimeForPasting(mime) {\n    return false;\n  }\n\n  /**\n   * Extract the data from the clipboard item and delegate the creation of the\n   * editor to the parent.\n   * @param {DataTransferItem} item\n   * @param {AnnotationEditorLayer} parent\n   */\n  static paste(item, parent) {\n    unreachable(\"Not implemented\");\n  }\n\n  /**\n   * Get the properties to update in the UI for this editor.\n   * @returns {Array}\n   */\n  get propertiesToUpdate() {\n    return [];\n  }\n\n  get _isDraggable() {\n    return this.#isDraggable;\n  }\n\n  set _isDraggable(value) {\n    this.#isDraggable = value;\n    this.div?.classList.toggle(\"draggable\", value);\n  }\n\n  center() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    switch (this.parentRotation) {\n      case 90:\n        this.x -= (this.height * pageHeight) / (pageWidth * 2);\n        this.y += (this.width * pageWidth) / (pageHeight * 2);\n        break;\n      case 180:\n        this.x += this.width / 2;\n        this.y += this.height / 2;\n        break;\n      case 270:\n        this.x += (this.height * pageHeight) / (pageWidth * 2);\n        this.y -= (this.width * pageWidth) / (pageHeight * 2);\n        break;\n      default:\n        this.x -= this.width / 2;\n        this.y -= this.height / 2;\n        break;\n    }\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Add some commands into the CommandManager (undo/redo stuff).\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this._uiManager.addCommands(params);\n  }\n\n  get currentLayer() {\n    return this._uiManager.currentLayer;\n  }\n\n  /**\n   * This editor will be behind the others.\n   */\n  setInBackground() {\n    this.div.style.zIndex = 0;\n  }\n\n  /**\n   * This editor will be in the foreground.\n   */\n  setInForeground() {\n    this.div.style.zIndex = this.#zIndex;\n  }\n\n  setParent(parent) {\n    if (parent !== null) {\n      this.pageIndex = parent.pageIndex;\n      this.pageDimensions = parent.pageDimensions;\n    }\n    this.parent = parent;\n  }\n\n  /**\n   * onfocus callback.\n   */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    if (!this.#hasBeenClicked) {\n      this.parent.setSelected(this);\n    } else {\n      this.#hasBeenClicked = false;\n    }\n  }\n\n  /**\n   * onblur callback.\n   * @param {FocusEvent} event\n   */\n  focusout(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n\n    if (!this.isAttachedToDOM) {\n      return;\n    }\n\n    // In case of focusout, the relatedTarget is the element which\n    // is grabbing the focus.\n    // So if the related target is an element under the div for this\n    // editor, then the editor isn't unactive.\n    const target = event.relatedTarget;\n    if (target?.closest(`#${this.id}`)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.parent?.isMultipleSelection) {\n      this.commitOrRemove();\n    }\n  }\n\n  commitOrRemove() {\n    if (this.isEmpty()) {\n      this.remove();\n    } else {\n      this.commit();\n    }\n  }\n\n  /**\n   * Commit the data contained in this editor.\n   */\n  commit() {\n    this.addToAnnotationStorage();\n  }\n\n  addToAnnotationStorage() {\n    this._uiManager.addToAnnotationStorage(this);\n  }\n\n  /**\n   * Set the editor position within its parent.\n   * @param {number} x\n   * @param {number} y\n   * @param {number} tx - x-translation in screen coordinates.\n   * @param {number} ty - y-translation in screen coordinates.\n   */\n  setAt(x, y, tx, ty) {\n    const [width, height] = this.parentDimensions;\n    [tx, ty] = this.screenToPageTranslation(tx, ty);\n\n    this.x = (x + tx) / width;\n    this.y = (y + ty) / height;\n\n    this.fixAndSetPosition();\n  }\n\n  #translate([width, height], x, y) {\n    [x, y] = this.screenToPageTranslation(x, y);\n\n    this.x += x / width;\n    this.y += y / height;\n\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Translate the editor position within its parent.\n   * @param {number} x - x-translation in screen coordinates.\n   * @param {number} y - y-translation in screen coordinates.\n   */\n  translate(x, y) {\n    this.#translate(this.parentDimensions, x, y);\n  }\n\n  /**\n   * Translate the editor position within its page and adjust the scroll\n   * in order to have the editor in the view.\n   * @param {number} x - x-translation in page coordinates.\n   * @param {number} y - y-translation in page coordinates.\n   */\n  translateInPage(x, y) {\n    this.#translate(this.pageDimensions, x, y);\n    this.div.scrollIntoView({ block: \"nearest\" });\n  }\n\n  drag(tx, ty) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.x += tx / parentWidth;\n    this.y += ty / parentHeight;\n    if (this.parent && (this.x < 0 || this.x > 1 || this.y < 0 || this.y > 1)) {\n      // It's possible to not have a parent: for example, when the user is\n      // dragging all the selected editors but this one on a page which has been\n      // destroyed.\n      // It's why we need to check for it. In such a situation, it isn't really\n      // a problem to not find a new parent: it's something which is related to\n      // what the user is seeing, hence it depends on how pages are layed out.\n\n      // The element will be outside of its parent so change the parent.\n      const { x, y } = this.div.getBoundingClientRect();\n      if (this.parent.findNewParent(this, x, y)) {\n        this.x -= Math.floor(this.x);\n        this.y -= Math.floor(this.y);\n      }\n    }\n\n    // The editor can be moved wherever the user wants, so we don't need to fix\n    // the position: it'll be done when the user will release the mouse button.\n\n    let { x, y } = this;\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n\n    this.div.style.left = `${(100 * x).toFixed(2)}%`;\n    this.div.style.top = `${(100 * y).toFixed(2)}%`;\n    this.div.scrollIntoView({ block: \"nearest\" });\n  }\n\n  #getBaseTranslation() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const { _borderLineWidth } = AnnotationEditor;\n    const x = _borderLineWidth / parentWidth;\n    const y = _borderLineWidth / parentHeight;\n    switch (this.rotation) {\n      case 90:\n        return [-x, y];\n      case 180:\n        return [x, y];\n      case 270:\n        return [x, -y];\n      default:\n        return [-x, -y];\n    }\n  }\n\n  fixAndSetPosition() {\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    let { x, y, width, height } = this;\n    width *= pageWidth;\n    height *= pageHeight;\n    x *= pageWidth;\n    y *= pageHeight;\n\n    switch (this.rotation) {\n      case 0:\n        x = Math.max(0, Math.min(pageWidth - width, x));\n        y = Math.max(0, Math.min(pageHeight - height, y));\n        break;\n      case 90:\n        x = Math.max(0, Math.min(pageWidth - height, x));\n        y = Math.min(pageHeight, Math.max(width, y));\n        break;\n      case 180:\n        x = Math.min(pageWidth, Math.max(width, x));\n        y = Math.min(pageHeight, Math.max(height, y));\n        break;\n      case 270:\n        x = Math.min(pageWidth, Math.max(height, x));\n        y = Math.max(0, Math.min(pageHeight - width, y));\n        break;\n    }\n\n    this.x = x /= pageWidth;\n    this.y = y /= pageHeight;\n\n    const [bx, by] = this.#getBaseTranslation();\n    x += bx;\n    y += by;\n\n    const { style } = this.div;\n    style.left = `${(100 * x).toFixed(2)}%`;\n    style.top = `${(100 * y).toFixed(2)}%`;\n\n    this.moveInDOM();\n  }\n\n  static #rotatePoint(x, y, angle) {\n    switch (angle) {\n      case 90:\n        return [y, -x];\n      case 180:\n        return [-x, -y];\n      case 270:\n        return [-y, x];\n      default:\n        return [x, y];\n    }\n  }\n\n  /**\n   * Convert a screen translation into a page one.\n   * @param {number} x\n   * @param {number} y\n   */\n  screenToPageTranslation(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, this.parentRotation);\n  }\n\n  /**\n   * Convert a page translation into a screen one.\n   * @param {number} x\n   * @param {number} y\n   */\n  pageTranslationToScreen(x, y) {\n    return AnnotationEditor.#rotatePoint(x, y, 360 - this.parentRotation);\n  }\n\n  #getRotationMatrix(rotation) {\n    switch (rotation) {\n      case 90: {\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        return [0, -pageWidth / pageHeight, pageHeight / pageWidth, 0];\n      }\n      case 180:\n        return [-1, 0, 0, -1];\n      case 270: {\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        return [0, pageWidth / pageHeight, -pageHeight / pageWidth, 0];\n      }\n      default:\n        return [1, 0, 0, 1];\n    }\n  }\n\n  get parentScale() {\n    return this._uiManager.viewParameters.realScale;\n  }\n\n  get parentRotation() {\n    return (this._uiManager.viewParameters.rotation + this.pageRotation) % 360;\n  }\n\n  get parentDimensions() {\n    const {\n      parentScale,\n      pageDimensions: [pageWidth, pageHeight],\n    } = this;\n    const scaledWidth = pageWidth * parentScale;\n    const scaledHeight = pageHeight * parentScale;\n    return FeatureTest.isCSSRoundSupported\n      ? [Math.round(scaledWidth), Math.round(scaledHeight)]\n      : [scaledWidth, scaledHeight];\n  }\n\n  /**\n   * Set the dimensions of this editor.\n   * @param {number} width\n   * @param {number} height\n   */\n  setDims(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.div.style.width = `${((100 * width) / parentWidth).toFixed(2)}%`;\n    if (!this.#keepAspectRatio) {\n      this.div.style.height = `${((100 * height) / parentHeight).toFixed(2)}%`;\n    }\n    this.#altTextButton?.classList.toggle(\n      \"small\",\n      width < AnnotationEditor.SMALL_EDITOR_SIZE ||\n        height < AnnotationEditor.SMALL_EDITOR_SIZE\n    );\n  }\n\n  fixDims() {\n    const { style } = this.div;\n    const { height, width } = style;\n    const widthPercent = width.endsWith(\"%\");\n    const heightPercent = !this.#keepAspectRatio && height.endsWith(\"%\");\n    if (widthPercent && heightPercent) {\n      return;\n    }\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (!widthPercent) {\n      style.width = `${((100 * parseFloat(width)) / parentWidth).toFixed(2)}%`;\n    }\n    if (!this.#keepAspectRatio && !heightPercent) {\n      style.height = `${((100 * parseFloat(height)) / parentHeight).toFixed(\n        2\n      )}%`;\n    }\n  }\n\n  /**\n   * Get the translation used to position this editor when it's created.\n   * @returns {Array<number>}\n   */\n  getInitialTranslation() {\n    return [0, 0];\n  }\n\n  #createResizers() {\n    if (this.#resizersDiv) {\n      return;\n    }\n    this.#resizersDiv = document.createElement(\"div\");\n    this.#resizersDiv.classList.add(\"resizers\");\n    const classes = [\"topLeft\", \"topRight\", \"bottomRight\", \"bottomLeft\"];\n    if (!this._willKeepAspectRatio) {\n      classes.push(\"topMiddle\", \"middleRight\", \"bottomMiddle\", \"middleLeft\");\n    }\n    for (const name of classes) {\n      const div = document.createElement(\"div\");\n      this.#resizersDiv.append(div);\n      div.classList.add(\"resizer\", name);\n      div.addEventListener(\n        \"pointerdown\",\n        this.#resizerPointerdown.bind(this, name)\n      );\n      div.addEventListener(\"contextmenu\", noContextMenu);\n    }\n    this.div.prepend(this.#resizersDiv);\n  }\n\n  #resizerPointerdown(name, event) {\n    event.preventDefault();\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      return;\n    }\n\n    const boundResizerPointermove = this.#resizerPointermove.bind(this, name);\n    const savedDraggable = this._isDraggable;\n    this._isDraggable = false;\n    const pointerMoveOptions = { passive: true, capture: true };\n    window.addEventListener(\n      \"pointermove\",\n      boundResizerPointermove,\n      pointerMoveOptions\n    );\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const savedParentCursor = this.parent.div.style.cursor;\n    const savedCursor = this.div.style.cursor;\n    this.div.style.cursor = this.parent.div.style.cursor =\n      window.getComputedStyle(event.target).cursor;\n\n    const pointerUpCallback = () => {\n      this._isDraggable = savedDraggable;\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      window.removeEventListener(\n        \"pointermove\",\n        boundResizerPointermove,\n        pointerMoveOptions\n      );\n      this.parent.div.style.cursor = savedParentCursor;\n      this.div.style.cursor = savedCursor;\n\n      const newX = this.x;\n      const newY = this.y;\n      const newWidth = this.width;\n      const newHeight = this.height;\n      if (\n        newX === savedX &&\n        newY === savedY &&\n        newWidth === savedWidth &&\n        newHeight === savedHeight\n      ) {\n        return;\n      }\n\n      this.addCommands({\n        cmd: () => {\n          this.width = newWidth;\n          this.height = newHeight;\n          this.x = newX;\n          this.y = newY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n          this.fixAndSetPosition();\n        },\n        undo: () => {\n          this.width = savedWidth;\n          this.height = savedHeight;\n          this.x = savedX;\n          this.y = savedY;\n          const [parentWidth, parentHeight] = this.parentDimensions;\n          this.setDims(parentWidth * savedWidth, parentHeight * savedHeight);\n          this.fixAndSetPosition();\n        },\n        mustExec: true,\n      });\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    // If the user switches to another window (with alt+tab), then we end the\n    // resize session.\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n\n  #resizerPointermove(name, event) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const savedX = this.x;\n    const savedY = this.y;\n    const savedWidth = this.width;\n    const savedHeight = this.height;\n    const minWidth = AnnotationEditor.MIN_SIZE / parentWidth;\n    const minHeight = AnnotationEditor.MIN_SIZE / parentHeight;\n\n    // 10000 because we multiply by 100 and use toFixed(2) in fixAndSetPosition.\n    // Without rounding, the positions of the corners other than the top left\n    // one can be slightly wrong.\n    const round = x => Math.round(x * 10000) / 10000;\n    const rotationMatrix = this.#getRotationMatrix(this.rotation);\n    const transf = (x, y) => [\n      rotationMatrix[0] * x + rotationMatrix[2] * y,\n      rotationMatrix[1] * x + rotationMatrix[3] * y,\n    ];\n    const invRotationMatrix = this.#getRotationMatrix(360 - this.rotation);\n    const invTransf = (x, y) => [\n      invRotationMatrix[0] * x + invRotationMatrix[2] * y,\n      invRotationMatrix[1] * x + invRotationMatrix[3] * y,\n    ];\n    let getPoint;\n    let getOpposite;\n    let isDiagonal = false;\n    let isHorizontal = false;\n\n    switch (name) {\n      case \"topLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, 0];\n        getOpposite = (w, h) => [w, h];\n        break;\n      case \"topMiddle\":\n        getPoint = (w, h) => [w / 2, 0];\n        getOpposite = (w, h) => [w / 2, h];\n        break;\n      case \"topRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, 0];\n        getOpposite = (w, h) => [0, h];\n        break;\n      case \"middleRight\":\n        isHorizontal = true;\n        getPoint = (w, h) => [w, h / 2];\n        getOpposite = (w, h) => [0, h / 2];\n        break;\n      case \"bottomRight\":\n        isDiagonal = true;\n        getPoint = (w, h) => [w, h];\n        getOpposite = (w, h) => [0, 0];\n        break;\n      case \"bottomMiddle\":\n        getPoint = (w, h) => [w / 2, h];\n        getOpposite = (w, h) => [w / 2, 0];\n        break;\n      case \"bottomLeft\":\n        isDiagonal = true;\n        getPoint = (w, h) => [0, h];\n        getOpposite = (w, h) => [w, 0];\n        break;\n      case \"middleLeft\":\n        isHorizontal = true;\n        getPoint = (w, h) => [0, h / 2];\n        getOpposite = (w, h) => [w, h / 2];\n        break;\n    }\n\n    const point = getPoint(savedWidth, savedHeight);\n    const oppositePoint = getOpposite(savedWidth, savedHeight);\n    let transfOppositePoint = transf(...oppositePoint);\n    const oppositeX = round(savedX + transfOppositePoint[0]);\n    const oppositeY = round(savedY + transfOppositePoint[1]);\n    let ratioX = 1;\n    let ratioY = 1;\n\n    let [deltaX, deltaY] = this.screenToPageTranslation(\n      event.movementX,\n      event.movementY\n    );\n    [deltaX, deltaY] = invTransf(deltaX / parentWidth, deltaY / parentHeight);\n\n    if (isDiagonal) {\n      const oldDiag = Math.hypot(savedWidth, savedHeight);\n      ratioX = ratioY = Math.max(\n        Math.min(\n          Math.hypot(\n            oppositePoint[0] - point[0] - deltaX,\n            oppositePoint[1] - point[1] - deltaY\n          ) / oldDiag,\n          // Avoid the editor to be larger than the page.\n          1 / savedWidth,\n          1 / savedHeight\n        ),\n        // Avoid the editor to be smaller than the minimum size.\n        minWidth / savedWidth,\n        minHeight / savedHeight\n      );\n    } else if (isHorizontal) {\n      ratioX =\n        Math.max(\n          minWidth,\n          Math.min(1, Math.abs(oppositePoint[0] - point[0] - deltaX))\n        ) / savedWidth;\n    } else {\n      ratioY =\n        Math.max(\n          minHeight,\n          Math.min(1, Math.abs(oppositePoint[1] - point[1] - deltaY))\n        ) / savedHeight;\n    }\n\n    const newWidth = round(savedWidth * ratioX);\n    const newHeight = round(savedHeight * ratioY);\n    transfOppositePoint = transf(...getOpposite(newWidth, newHeight));\n    const newX = oppositeX - transfOppositePoint[0];\n    const newY = oppositeY - transfOppositePoint[1];\n\n    this.width = newWidth;\n    this.height = newHeight;\n    this.x = newX;\n    this.y = newY;\n\n    this.setDims(parentWidth * newWidth, parentHeight * newHeight);\n    this.fixAndSetPosition();\n  }\n\n  async addAltTextButton() {\n    if (this.#altTextButton) {\n      return;\n    }\n    const altText = (this.#altTextButton = document.createElement(\"button\"));\n    altText.className = \"altText\";\n    const msg = await AnnotationEditor._l10nPromise.get(\n      \"editor_alt_text_button_label\"\n    );\n    altText.textContent = msg;\n    altText.setAttribute(\"aria-label\", msg);\n    altText.tabIndex = \"0\";\n    altText.addEventListener(\"contextmenu\", noContextMenu);\n    altText.addEventListener(\"pointerdown\", event => event.stopPropagation());\n    altText.addEventListener(\n      \"click\",\n      event => {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      },\n      { capture: true }\n    );\n    altText.addEventListener(\"keydown\", event => {\n      if (event.target === altText && event.key === \"Enter\") {\n        event.preventDefault();\n        this._uiManager.editAltText(this);\n      }\n    });\n    this.#setAltTextButtonState();\n    this.div.append(altText);\n    if (!AnnotationEditor.SMALL_EDITOR_SIZE) {\n      // We take the width of the alt text button and we add 40% to it to be\n      // sure to have enough space for it.\n      const PERCENT = 40;\n      AnnotationEditor.SMALL_EDITOR_SIZE = Math.min(\n        128,\n        Math.round(altText.getBoundingClientRect().width * (1 + PERCENT / 100))\n      );\n    }\n  }\n\n  async #setAltTextButtonState() {\n    const button = this.#altTextButton;\n    if (!button) {\n      return;\n    }\n    if (!this.#altText && !this.#altTextDecorative) {\n      button.classList.remove(\"done\");\n      this.#altTextTooltip?.remove();\n      return;\n    }\n    AnnotationEditor._l10nPromise\n      .get(\"editor_alt_text_edit_button_label\")\n      .then(msg => {\n        button.setAttribute(\"aria-label\", msg);\n      });\n\n    let tooltip = this.#altTextTooltip;\n    if (!tooltip) {\n      this.#altTextTooltip = tooltip = document.createElement(\"span\");\n      tooltip.className = \"tooltip\";\n      tooltip.setAttribute(\"role\", \"tooltip\");\n      const id = (tooltip.id = `alt-text-tooltip-${this.id}`);\n      button.setAttribute(\"aria-describedby\", id);\n\n      const DELAY_TO_SHOW_TOOLTIP = 100;\n      button.addEventListener(\"mouseenter\", () => {\n        this.#altTextTooltipTimeout = setTimeout(() => {\n          this.#altTextTooltipTimeout = null;\n          this.#altTextTooltip.classList.add(\"show\");\n          this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n            source: this,\n            details: {\n              type: \"editing\",\n              subtype: this.editorType,\n              data: {\n                action: \"alt_text_tooltip\",\n              },\n            },\n          });\n        }, DELAY_TO_SHOW_TOOLTIP);\n      });\n      button.addEventListener(\"mouseleave\", () => {\n        clearTimeout(this.#altTextTooltipTimeout);\n        this.#altTextTooltipTimeout = null;\n        this.#altTextTooltip?.classList.remove(\"show\");\n      });\n    }\n    button.classList.add(\"done\");\n    tooltip.innerText = this.#altTextDecorative\n      ? await AnnotationEditor._l10nPromise.get(\n          \"editor_alt_text_decorative_tooltip\"\n        )\n      : this.#altText;\n\n    if (!tooltip.parentNode) {\n      button.append(tooltip);\n    }\n  }\n\n  getClientDimensions() {\n    return this.div.getBoundingClientRect();\n  }\n\n  get altTextData() {\n    return {\n      altText: this.#altText,\n      decorative: this.#altTextDecorative,\n    };\n  }\n\n  set altTextData({ altText, decorative }) {\n    if (this.#altText === altText && this.#altTextDecorative === decorative) {\n      return;\n    }\n    this.#altText = altText;\n    this.#altTextDecorative = decorative;\n    this.#setAltTextButtonState();\n  }\n\n  /**\n   * Render this editor in a div.\n   * @returns {HTMLDivElement}\n   */\n  render() {\n    this.div = document.createElement(\"div\");\n    this.div.setAttribute(\"data-editor-rotation\", (360 - this.rotation) % 360);\n    this.div.className = this.name;\n    this.div.setAttribute(\"id\", this.id);\n    this.div.setAttribute(\"tabIndex\", 0);\n\n    this.setInForeground();\n\n    this.div.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div.addEventListener(\"focusout\", this.#boundFocusout);\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    if (this.parentRotation % 180 !== 0) {\n      this.div.style.maxWidth = `${((100 * parentHeight) / parentWidth).toFixed(\n        2\n      )}%`;\n      this.div.style.maxHeight = `${(\n        (100 * parentWidth) /\n        parentHeight\n      ).toFixed(2)}%`;\n    }\n\n    const [tx, ty] = this.getInitialTranslation();\n    this.translate(tx, ty);\n\n    bindEvents(this, this.div, [\"pointerdown\"]);\n\n    return this.div;\n  }\n\n  /**\n   * Onpointerdown callback.\n   * @param {PointerEvent} event\n   */\n  pointerdown(event) {\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Avoid to focus this editor because of a non-left click.\n      event.preventDefault();\n      return;\n    }\n\n    this.#hasBeenClicked = true;\n\n    this.#setUpDragSession(event);\n  }\n\n  #setUpDragSession(event) {\n    if (!this._isDraggable) {\n      return;\n    }\n\n    const isSelected = this._uiManager.isSelected(this);\n    this._uiManager.setUpDragSession();\n\n    let pointerMoveOptions, pointerMoveCallback;\n    if (isSelected) {\n      pointerMoveOptions = { passive: true, capture: true };\n      pointerMoveCallback = e => {\n        const [tx, ty] = this.screenToPageTranslation(e.movementX, e.movementY);\n        this._uiManager.dragSelectedEditors(tx, ty);\n      };\n      window.addEventListener(\n        \"pointermove\",\n        pointerMoveCallback,\n        pointerMoveOptions\n      );\n    }\n\n    const pointerUpCallback = () => {\n      window.removeEventListener(\"pointerup\", pointerUpCallback);\n      window.removeEventListener(\"blur\", pointerUpCallback);\n      if (isSelected) {\n        window.removeEventListener(\n          \"pointermove\",\n          pointerMoveCallback,\n          pointerMoveOptions\n        );\n      }\n\n      this.#hasBeenClicked = false;\n      if (!this._uiManager.endDragSession()) {\n        const { isMac } = FeatureTest.platform;\n        if (\n          (event.ctrlKey && !isMac) ||\n          event.shiftKey ||\n          (event.metaKey && isMac)\n        ) {\n          this.parent.toggleSelected(this);\n        } else {\n          this.parent.setSelected(this);\n        }\n      }\n    };\n    window.addEventListener(\"pointerup\", pointerUpCallback);\n    // If the user is using alt+tab during the dragging session, the pointerup\n    // event could be not fired, but a blur event is fired so we can use it in\n    // order to interrupt the dragging session.\n    window.addEventListener(\"blur\", pointerUpCallback);\n  }\n\n  moveInDOM() {\n    this.parent?.moveEditorInDOM(this);\n  }\n\n  _setParentAndPosition(parent, x, y) {\n    parent.changeParent(this);\n    this.x = x;\n    this.y = y;\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Convert the current rect into a page one.\n   */\n  getRect(tx, ty) {\n    const scale = this.parentScale;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const [pageX, pageY] = this.pageTranslation;\n    const shiftX = tx / scale;\n    const shiftY = ty / scale;\n    const x = this.x * pageWidth;\n    const y = this.y * pageHeight;\n    const width = this.width * pageWidth;\n    const height = this.height * pageHeight;\n\n    switch (this.rotation) {\n      case 0:\n        return [\n          x + shiftX + pageX,\n          pageHeight - y - shiftY - height + pageY,\n          x + shiftX + width + pageX,\n          pageHeight - y - shiftY + pageY,\n        ];\n      case 90:\n        return [\n          x + shiftY + pageX,\n          pageHeight - y + shiftX + pageY,\n          x + shiftY + height + pageX,\n          pageHeight - y + shiftX + width + pageY,\n        ];\n      case 180:\n        return [\n          x - shiftX - width + pageX,\n          pageHeight - y + shiftY + pageY,\n          x - shiftX + pageX,\n          pageHeight - y + shiftY + height + pageY,\n        ];\n      case 270:\n        return [\n          x - shiftY - height + pageX,\n          pageHeight - y - shiftX - width + pageY,\n          x - shiftY + pageX,\n          pageHeight - y - shiftX + pageY,\n        ];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n\n  getRectInCurrentCoords(rect, pageHeight) {\n    const [x1, y1, x2, y2] = rect;\n\n    const width = x2 - x1;\n    const height = y2 - y1;\n\n    switch (this.rotation) {\n      case 0:\n        return [x1, pageHeight - y2, width, height];\n      case 90:\n        return [x1, pageHeight - y1, height, width];\n      case 180:\n        return [x2, pageHeight - y1, width, height];\n      case 270:\n        return [x2, pageHeight - y2, height, width];\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n  }\n\n  /**\n   * Executed once this editor has been rendered.\n   */\n  onceAdded() {}\n\n  /**\n   * Check if the editor contains something.\n   * @returns {boolean}\n   */\n  isEmpty() {\n    return false;\n  }\n\n  /**\n   * Enable edit mode.\n   */\n  enableEditMode() {\n    this.#isInEditMode = true;\n  }\n\n  /**\n   * Disable edit mode.\n   */\n  disableEditMode() {\n    this.#isInEditMode = false;\n  }\n\n  /**\n   * Check if the editor is edited.\n   * @returns {boolean}\n   */\n  isInEditMode() {\n    return this.#isInEditMode;\n  }\n\n  /**\n   * If it returns true, then this editor handle the keyboard\n   * events itself.\n   * @returns {boolean}\n   */\n  shouldGetKeyboardEvents() {\n    return false;\n  }\n\n  /**\n   * Check if this editor needs to be rebuilt or not.\n   * @returns {boolean}\n   */\n  needsToBeRebuilt() {\n    return this.div && !this.isAttachedToDOM;\n  }\n\n  /**\n   * Rebuild the editor in case it has been removed on undo.\n   *\n   * To implement in subclasses.\n   */\n  rebuild() {\n    this.div?.addEventListener(\"focusin\", this.#boundFocusin);\n    this.div?.addEventListener(\"focusout\", this.#boundFocusout);\n  }\n\n  /**\n   * Serialize the editor.\n   * The result of the serialization will be used to construct a\n   * new annotation to add to the pdf document.\n   *\n   * To implement in subclasses.\n   * @param {boolean} isForCopying\n   * @param {Object} [context]\n   */\n  serialize(isForCopying = false, context = null) {\n    unreachable(\"An editor must be serializable\");\n  }\n\n  /**\n   * Deserialize the editor.\n   * The result of the deserialization is a new editor.\n   *\n   * @param {Object} data\n   * @param {AnnotationEditorLayer} parent\n   * @param {AnnotationEditorUIManager} uiManager\n   * @returns {AnnotationEditor}\n   */\n  static deserialize(data, parent, uiManager) {\n    const editor = new this.prototype.constructor({\n      parent,\n      id: parent.getNextId(),\n      uiManager,\n    });\n    editor.rotation = data.rotation;\n\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const [x, y, width, height] = editor.getRectInCurrentCoords(\n      data.rect,\n      pageHeight\n    );\n    editor.x = x / pageWidth;\n    editor.y = y / pageHeight;\n    editor.width = width / pageWidth;\n    editor.height = height / pageHeight;\n\n    return editor;\n  }\n\n  /**\n   * Remove this editor.\n   * It's used on ctrl+backspace action.\n   */\n  remove() {\n    this.div.removeEventListener(\"focusin\", this.#boundFocusin);\n    this.div.removeEventListener(\"focusout\", this.#boundFocusout);\n\n    if (!this.isEmpty()) {\n      // The editor is removed but it can be back at some point thanks to\n      // undo/redo so we must commit it before.\n      this.commit();\n    }\n    if (this.parent) {\n      this.parent.remove(this);\n    } else {\n      this._uiManager.removeEditor(this);\n    }\n\n    // The editor is removed so we can remove the alt text button and if it's\n    // restored then it's up to the subclass to add it back.\n    this.#altTextButton?.remove();\n    this.#altTextButton = null;\n    this.#altTextTooltip = null;\n  }\n\n  /**\n   * @returns {boolean} true if this editor can be resized.\n   */\n  get isResizable() {\n    return false;\n  }\n\n  /**\n   * Add the resizers to this editor.\n   */\n  makeResizable() {\n    if (this.isResizable) {\n      this.#createResizers();\n      this.#resizersDiv.classList.remove(\"hidden\");\n    }\n  }\n\n  /**\n   * Select this editor.\n   */\n  select() {\n    this.makeResizable();\n    this.div?.classList.add(\"selectedEditor\");\n  }\n\n  /**\n   * Unselect this editor.\n   */\n  unselect() {\n    this.#resizersDiv?.classList.add(\"hidden\");\n    this.div?.classList.remove(\"selectedEditor\");\n    if (this.div?.contains(document.activeElement)) {\n      // Don't use this.div.blur() because we don't know where the focus will\n      // go.\n      this._uiManager.currentLayer.div.focus();\n    }\n  }\n\n  /**\n   * Update some parameters which have been changed through the UI.\n   * @param {number} type\n   * @param {*} value\n   */\n  updateParams(type, value) {}\n\n  /**\n   * When the user disables the editing mode some editors can change some of\n   * their properties.\n   */\n  disableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = true;\n    }\n  }\n\n  /**\n   * When the user enables the editing mode some editors can change some of\n   * their properties.\n   */\n  enableEditing() {\n    if (this.#altTextButton) {\n      this.#altTextButton.hidden = false;\n    }\n  }\n\n  /**\n   * The editor is about to be edited.\n   */\n  enterInEditMode() {}\n\n  /**\n   * Get the div which really contains the displayed content.\n   */\n  get contentDiv() {\n    return this.div;\n  }\n\n  /**\n   * If true then the editor is currently edited.\n   * @type {boolean}\n   */\n  get isEditing() {\n    return this.#isEditing;\n  }\n\n  /**\n   * When set to true, it means that this editor is currently edited.\n   * @param {boolean} value\n   */\n  set isEditing(value) {\n    this.#isEditing = value;\n    if (!this.parent) {\n      return;\n    }\n    if (value) {\n      this.parent.setSelected(this);\n      this.parent.setActiveEditor(this);\n    } else {\n      this.parent.setActiveEditor(null);\n    }\n  }\n\n  /**\n   * Set the aspect ratio to use when resizing.\n   * @param {number} width\n   * @param {number} height\n   */\n  setAspectRatio(width, height) {\n    this.#keepAspectRatio = true;\n    const aspectRatio = width / height;\n    const { style } = this.div;\n    style.aspectRatio = aspectRatio;\n    style.height = \"auto\";\n  }\n\n  static get MIN_SIZE() {\n    return 16;\n  }\n}\n\n// This class is used to fake an editor which has been deleted.\nclass FakeEditor extends AnnotationEditor {\n  constructor(params) {\n    super(params);\n    this.annotationElementId = params.annotationElementId;\n    this.deleted = true;\n  }\n\n  serialize() {\n    return {\n      id: this.annotationElementId,\n      deleted: true,\n      pageIndex: this.pageIndex,\n    };\n  }\n}\n\nexport { AnnotationEditor };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./editor.js\").AnnotationEditor} AnnotationEditor */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorPrefix,\n  AnnotationEditorType,\n  FeatureTest,\n  getUuid,\n  shadow,\n  Util,\n  warn,\n} from \"../../shared/util.js\";\nimport { getColorValues, getRGB, PixelsPerInch } from \"../display_utils.js\";\n\nfunction bindEvents(obj, element, names) {\n  for (const name of names) {\n    element.addEventListener(name, obj[name].bind(obj));\n  }\n}\n\n/**\n * Convert a number between 0 and 100 into an hex number between 0 and 255.\n * @param {number} opacity\n * @return {string}\n */\nfunction opacityToHex(opacity) {\n  return Math.round(Math.min(255, Math.max(1, 255 * opacity)))\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\n/**\n * Class to create some unique ids for the different editors.\n */\nclass IdManager {\n  #id = 0;\n\n  /**\n   * Get a unique id.\n   * @returns {string}\n   */\n  getId() {\n    return `${AnnotationEditorPrefix}${this.#id++}`;\n  }\n}\n\n/**\n * Class to manage the images used by the editors.\n * The main idea is to try to minimize the memory used by the images.\n * The images are cached and reused when possible\n * We use a refCounter to know when an image is not used anymore but we need to\n * be able to restore an image after a remove+undo, so we keep a file reference\n * or an url one.\n */\nclass ImageManager {\n  #baseId = getUuid();\n\n  #id = 0;\n\n  #cache = null;\n\n  static get _isSVGFittingCanvas() {\n    // By default, Firefox doesn't rescale without preserving the aspect ratio\n    // when drawing an SVG image on a canvas, see https://bugzilla.mozilla.org/1547776.\n    // The \"workaround\" is to append \"svgView(preserveAspectRatio(none))\" to the\n    // url, but according to comment #15, it seems that it leads to unexpected\n    // behavior in Safari.\n    const svg = `data:image/svg+xml;charset=UTF-8,<svg viewBox=\"0 0 1 1\" width=\"1\" height=\"1\" xmlns=\"http://www.w3.org/2000/svg\"><rect width=\"1\" height=\"1\" style=\"fill:red;\"/></svg>`;\n    const canvas = new OffscreenCanvas(1, 3);\n    const ctx = canvas.getContext(\"2d\");\n    const image = new Image();\n    image.src = svg;\n    const promise = image.decode().then(() => {\n      ctx.drawImage(image, 0, 0, 1, 1, 0, 0, 1, 3);\n      return new Uint32Array(ctx.getImageData(0, 0, 1, 1).data.buffer)[0] === 0;\n    });\n\n    return shadow(this, \"_isSVGFittingCanvas\", promise);\n  }\n\n  async #get(key, rawData) {\n    this.#cache ||= new Map();\n    let data = this.#cache.get(key);\n    if (data === null) {\n      // We already tried to load the image but it failed.\n      return null;\n    }\n    if (data?.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n    try {\n      data ||= {\n        bitmap: null,\n        id: `image_${this.#baseId}_${this.#id++}`,\n        refCounter: 0,\n        isSvg: false,\n      };\n      let image;\n      if (typeof rawData === \"string\") {\n        data.url = rawData;\n\n        const response = await fetch(rawData);\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        image = await response.blob();\n      } else {\n        image = data.file = rawData;\n      }\n\n      if (image.type === \"image/svg+xml\") {\n        // Unfortunately, createImageBitmap doesn't work with SVG images.\n        // (see https://bugzilla.mozilla.org/1841972).\n        const mustRemoveAspectRatioPromise = ImageManager._isSVGFittingCanvas;\n        const fileReader = new FileReader();\n        const imageElement = new Image();\n        const imagePromise = new Promise((resolve, reject) => {\n          imageElement.onload = () => {\n            data.bitmap = imageElement;\n            data.isSvg = true;\n            resolve();\n          };\n          fileReader.onload = async () => {\n            const url = (data.svgUrl = fileReader.result);\n            // We need to set the preserveAspectRatio to none in order to let\n            // the image fits the canvas when resizing.\n            imageElement.src = (await mustRemoveAspectRatioPromise)\n              ? `${url}#svgView(preserveAspectRatio(none))`\n              : url;\n          };\n          imageElement.onerror = fileReader.onerror = reject;\n        });\n        fileReader.readAsDataURL(image);\n        await imagePromise;\n      } else {\n        data.bitmap = await createImageBitmap(image);\n      }\n      data.refCounter = 1;\n    } catch (e) {\n      console.error(e);\n      data = null;\n    }\n    this.#cache.set(key, data);\n    if (data) {\n      this.#cache.set(data.id, data);\n    }\n    return data;\n  }\n\n  async getFromFile(file) {\n    const { lastModified, name, size, type } = file;\n    return this.#get(`${lastModified}_${name}_${size}_${type}`, file);\n  }\n\n  async getFromUrl(url) {\n    return this.#get(url, url);\n  }\n\n  async getFromId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return null;\n    }\n    if (data.bitmap) {\n      data.refCounter += 1;\n      return data;\n    }\n\n    if (data.file) {\n      return this.getFromFile(data.file);\n    }\n    return this.getFromUrl(data.url);\n  }\n\n  getSvgUrl(id) {\n    const data = this.#cache.get(id);\n    if (!data?.isSvg) {\n      return null;\n    }\n    return data.svgUrl;\n  }\n\n  deleteId(id) {\n    this.#cache ||= new Map();\n    const data = this.#cache.get(id);\n    if (!data) {\n      return;\n    }\n    data.refCounter -= 1;\n    if (data.refCounter !== 0) {\n      return;\n    }\n    data.bitmap = null;\n  }\n\n  // We can use the id only if it belongs this manager.\n  // We must take care of having the right manager because we can copy/paste\n  // some images from other documents, hence it'd be a pity to use an id from an\n  // other manager.\n  isValidId(id) {\n    return id.startsWith(`image_${this.#baseId}_`);\n  }\n}\n\n/**\n * Class to handle undo/redo.\n * Commands are just saved in a buffer.\n * If we hit some memory issues we could likely use a circular buffer.\n * It has to be used as a singleton.\n */\nclass CommandManager {\n  #commands = [];\n\n  #locked = false;\n\n  #maxSize;\n\n  #position = -1;\n\n  constructor(maxSize = 128) {\n    this.#maxSize = maxSize;\n  }\n\n  /**\n   * @typedef {Object} addOptions\n   * @property {function} cmd\n   * @property {function} undo\n   * @property {boolean} mustExec\n   * @property {number} type\n   * @property {boolean} overwriteIfSameType\n   * @property {boolean} keepUndo\n   */\n\n  /**\n   * Add a new couple of commands to be used in case of redo/undo.\n   * @param {addOptions} options\n   */\n  add({\n    cmd,\n    undo,\n    mustExec,\n    type = NaN,\n    overwriteIfSameType = false,\n    keepUndo = false,\n  }) {\n    if (mustExec) {\n      cmd();\n    }\n\n    if (this.#locked) {\n      return;\n    }\n\n    const save = { cmd, undo, type };\n    if (this.#position === -1) {\n      if (this.#commands.length > 0) {\n        // All the commands have been undone and then a new one is added\n        // hence we clear the queue.\n        this.#commands.length = 0;\n      }\n      this.#position = 0;\n      this.#commands.push(save);\n      return;\n    }\n\n    if (overwriteIfSameType && this.#commands[this.#position].type === type) {\n      // For example when we change a color we don't want to\n      // be able to undo all the steps, hence we only want to\n      // keep the last undoable action in this sequence of actions.\n      if (keepUndo) {\n        save.undo = this.#commands[this.#position].undo;\n      }\n      this.#commands[this.#position] = save;\n      return;\n    }\n\n    const next = this.#position + 1;\n    if (next === this.#maxSize) {\n      this.#commands.splice(0, 1);\n    } else {\n      this.#position = next;\n      if (next < this.#commands.length) {\n        this.#commands.splice(next);\n      }\n    }\n\n    this.#commands.push(save);\n  }\n\n  /**\n   * Undo the last command.\n   */\n  undo() {\n    if (this.#position === -1) {\n      // Nothing to undo.\n      return;\n    }\n\n    // Avoid to insert something during the undo execution.\n    this.#locked = true;\n    this.#commands[this.#position].undo();\n    this.#locked = false;\n\n    this.#position -= 1;\n  }\n\n  /**\n   * Redo the last command.\n   */\n  redo() {\n    if (this.#position < this.#commands.length - 1) {\n      this.#position += 1;\n\n      // Avoid to insert something during the redo execution.\n      this.#locked = true;\n      this.#commands[this.#position].cmd();\n      this.#locked = false;\n    }\n  }\n\n  /**\n   * Check if there is something to undo.\n   * @returns {boolean}\n   */\n  hasSomethingToUndo() {\n    return this.#position !== -1;\n  }\n\n  /**\n   * Check if there is something to redo.\n   * @returns {boolean}\n   */\n  hasSomethingToRedo() {\n    return this.#position < this.#commands.length - 1;\n  }\n\n  destroy() {\n    this.#commands = null;\n  }\n}\n\n/**\n * Class to handle the different keyboards shortcuts we can have on mac or\n * non-mac OSes.\n */\nclass KeyboardManager {\n  /**\n   * Create a new keyboard manager class.\n   * @param {Array<Array>} callbacks - an array containing an array of shortcuts\n   * and a callback to call.\n   * A shortcut is a string like `ctrl+c` or `mac+ctrl+c` for mac OS.\n   */\n  constructor(callbacks) {\n    this.buffer = [];\n    this.callbacks = new Map();\n    this.allKeys = new Set();\n\n    const { isMac } = FeatureTest.platform;\n    for (const [keys, callback, options = {}] of callbacks) {\n      for (const key of keys) {\n        const isMacKey = key.startsWith(\"mac+\");\n        if (isMac && isMacKey) {\n          this.callbacks.set(key.slice(4), { callback, options });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        } else if (!isMac && !isMacKey) {\n          this.callbacks.set(key, { callback, options });\n          this.allKeys.add(key.split(\"+\").at(-1));\n        }\n      }\n    }\n  }\n\n  /**\n   * Serialize an event into a string in order to match a\n   * potential key for a callback.\n   * @param {KeyboardEvent} event\n   * @returns {string}\n   */\n  #serialize(event) {\n    if (event.altKey) {\n      this.buffer.push(\"alt\");\n    }\n    if (event.ctrlKey) {\n      this.buffer.push(\"ctrl\");\n    }\n    if (event.metaKey) {\n      this.buffer.push(\"meta\");\n    }\n    if (event.shiftKey) {\n      this.buffer.push(\"shift\");\n    }\n    this.buffer.push(event.key);\n    const str = this.buffer.join(\"+\");\n    this.buffer.length = 0;\n\n    return str;\n  }\n\n  /**\n   * Execute a callback, if any, for a given keyboard event.\n   * The self is used as `this` in the callback.\n   * @param {Object} self\n   * @param {KeyboardEvent} event\n   * @returns\n   */\n  exec(self, event) {\n    if (!this.allKeys.has(event.key)) {\n      return;\n    }\n    const info = this.callbacks.get(this.#serialize(event));\n    if (!info) {\n      return;\n    }\n    const {\n      callback,\n      options: { bubbles = false, args = [], checker = null },\n    } = info;\n\n    if (checker && !checker(self, event)) {\n      return;\n    }\n    callback.bind(self, ...args)();\n\n    // For example, ctrl+s in a FreeText must be handled by the viewer, hence\n    // the event must bubble.\n    if (!bubbles) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n}\n\nclass ColorManager {\n  static _colorsMapping = new Map([\n    [\"CanvasText\", [0, 0, 0]],\n    [\"Canvas\", [255, 255, 255]],\n  ]);\n\n  get _colors() {\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"LIB\") &&\n      typeof document === \"undefined\"\n    ) {\n      return shadow(this, \"_colors\", ColorManager._colorsMapping);\n    }\n\n    const colors = new Map([\n      [\"CanvasText\", null],\n      [\"Canvas\", null],\n    ]);\n    getColorValues(colors);\n    return shadow(this, \"_colors\", colors);\n  }\n\n  /**\n   * In High Contrast Mode, the color on the screen is not always the\n   * real color used in the pdf.\n   * For example in some cases white can appear to be black but when saving\n   * we want to have white.\n   * @param {string} color\n   * @returns {Array<number>}\n   */\n  convert(color) {\n    const rgb = getRGB(color);\n    if (!window.matchMedia(\"(forced-colors: active)\").matches) {\n      return rgb;\n    }\n\n    for (const [name, RGB] of this._colors) {\n      if (RGB.every((x, i) => x === rgb[i])) {\n        return ColorManager._colorsMapping.get(name);\n      }\n    }\n    return rgb;\n  }\n\n  /**\n   * An input element must have its color value as a hex string\n   * and not as color name.\n   * So this function converts a name into an hex string.\n   * @param {string} name\n   * @returns {string}\n   */\n  getHexCode(name) {\n    const rgb = this._colors.get(name);\n    if (!rgb) {\n      return name;\n    }\n    return Util.makeHexColor(...rgb);\n  }\n}\n\n/**\n * A pdf has several pages and each of them when it will rendered\n * will have an AnnotationEditorLayer which will contain the some\n * new Annotations associated to an editor in order to modify them.\n *\n * This class is used to manage all the different layers, editors and\n * some action like copy/paste, undo/redo, ...\n */\nclass AnnotationEditorUIManager {\n  #activeEditor = null;\n\n  #allEditors = new Map();\n\n  #allLayers = new Map();\n\n  #altTextManager = null;\n\n  #annotationStorage = null;\n\n  #commandManager = new CommandManager();\n\n  #currentPageIndex = 0;\n\n  #deletedAnnotationsElementIds = new Set();\n\n  #draggingEditors = null;\n\n  #editorTypes = null;\n\n  #editorsToRescale = new Set();\n\n  #filterFactory = null;\n\n  #idManager = new IdManager();\n\n  #isEnabled = false;\n\n  #isWaiting = false;\n\n  #lastActiveElement = null;\n\n  #mode = AnnotationEditorType.NONE;\n\n  #selectedEditors = new Set();\n\n  #pageColors = null;\n\n  #boundBlur = this.blur.bind(this);\n\n  #boundFocus = this.focus.bind(this);\n\n  #boundCopy = this.copy.bind(this);\n\n  #boundCut = this.cut.bind(this);\n\n  #boundPaste = this.paste.bind(this);\n\n  #boundKeydown = this.keydown.bind(this);\n\n  #boundOnEditingAction = this.onEditingAction.bind(this);\n\n  #boundOnPageChanging = this.onPageChanging.bind(this);\n\n  #boundOnScaleChanging = this.onScaleChanging.bind(this);\n\n  #boundOnRotationChanging = this.onRotationChanging.bind(this);\n\n  #previousStates = {\n    isEditing: false,\n    isEmpty: true,\n    hasSomethingToUndo: false,\n    hasSomethingToRedo: false,\n    hasSelectedEditor: false,\n  };\n\n  #translation = [0, 0];\n\n  #translationTimeoutId = null;\n\n  #container = null;\n\n  #viewer = null;\n\n  static TRANSLATE_SMALL = 1; // page units.\n\n  static TRANSLATE_BIG = 10; // page units.\n\n  static get _keyboardManager() {\n    const proto = AnnotationEditorUIManager.prototype;\n\n    const arrowChecker = self => {\n      // If the focused element is an input, we don't want to handle the arrow.\n      // For example, sliders can be controlled with the arrow keys.\n      const { activeElement } = document;\n      return (\n        activeElement &&\n        self.#container.contains(activeElement) &&\n        self.hasSomethingToControl()\n      );\n    };\n\n    const small = this.TRANSLATE_SMALL;\n    const big = this.TRANSLATE_BIG;\n\n    return shadow(\n      this,\n      \"_keyboardManager\",\n      new KeyboardManager([\n        [[\"ctrl+a\", \"mac+meta+a\"], proto.selectAll],\n        [[\"ctrl+z\", \"mac+meta+z\"], proto.undo],\n        [\n          // On mac, depending of the OS version, the event.key is either \"z\" or\n          // \"Z\" when the user presses \"meta+shift+z\".\n          [\n            \"ctrl+y\",\n            \"ctrl+shift+z\",\n            \"mac+meta+shift+z\",\n            \"ctrl+shift+Z\",\n            \"mac+meta+shift+Z\",\n          ],\n          proto.redo,\n        ],\n        [\n          [\n            \"Backspace\",\n            \"alt+Backspace\",\n            \"ctrl+Backspace\",\n            \"shift+Backspace\",\n            \"mac+Backspace\",\n            \"mac+alt+Backspace\",\n            \"mac+ctrl+Backspace\",\n            \"Delete\",\n            \"ctrl+Delete\",\n            \"shift+Delete\",\n            \"mac+Delete\",\n          ],\n          proto.delete,\n        ],\n        [[\"Escape\", \"mac+Escape\"], proto.unselectAll],\n        [\n          [\"ArrowLeft\", \"mac+ArrowLeft\"],\n          proto.translateSelectedEditors,\n          { args: [-small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n          proto.translateSelectedEditors,\n          { args: [-big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowRight\", \"mac+ArrowRight\"],\n          proto.translateSelectedEditors,\n          { args: [small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n          proto.translateSelectedEditors,\n          { args: [big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowUp\", \"mac+ArrowUp\"],\n          proto.translateSelectedEditors,\n          { args: [0, -small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n          proto.translateSelectedEditors,\n          { args: [0, -big], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowDown\", \"mac+ArrowDown\"],\n          proto.translateSelectedEditors,\n          { args: [0, small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n          proto.translateSelectedEditors,\n          { args: [0, big], checker: arrowChecker },\n        ],\n      ])\n    );\n  }\n\n  constructor(\n    container,\n    viewer,\n    altTextManager,\n    eventBus,\n    pdfDocument,\n    pageColors\n  ) {\n    this.#container = container;\n    this.#viewer = viewer;\n    this.#altTextManager = altTextManager;\n    this._eventBus = eventBus;\n    this._eventBus._on(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._on(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._on(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._on(\"rotationchanging\", this.#boundOnRotationChanging);\n    this.#annotationStorage = pdfDocument.annotationStorage;\n    this.#filterFactory = pdfDocument.filterFactory;\n    this.#pageColors = pageColors;\n    this.viewParameters = {\n      realScale: PixelsPerInch.PDF_TO_CSS_UNITS,\n      rotation: 0,\n    };\n  }\n\n  destroy() {\n    this.#removeKeyboardManager();\n    this.#removeFocusManager();\n    this._eventBus._off(\"editingaction\", this.#boundOnEditingAction);\n    this._eventBus._off(\"pagechanging\", this.#boundOnPageChanging);\n    this._eventBus._off(\"scalechanging\", this.#boundOnScaleChanging);\n    this._eventBus._off(\"rotationchanging\", this.#boundOnRotationChanging);\n    for (const layer of this.#allLayers.values()) {\n      layer.destroy();\n    }\n    this.#allLayers.clear();\n    this.#allEditors.clear();\n    this.#editorsToRescale.clear();\n    this.#activeEditor = null;\n    this.#selectedEditors.clear();\n    this.#commandManager.destroy();\n    this.#altTextManager.destroy();\n  }\n\n  get hcmFilter() {\n    return shadow(\n      this,\n      \"hcmFilter\",\n      this.#pageColors\n        ? this.#filterFactory.addHCMFilter(\n            this.#pageColors.foreground,\n            this.#pageColors.background\n          )\n        : \"none\"\n    );\n  }\n\n  get direction() {\n    return shadow(\n      this,\n      \"direction\",\n      getComputedStyle(this.#container).direction\n    );\n  }\n\n  editAltText(editor) {\n    this.#altTextManager?.editAltText(this, editor);\n  }\n\n  onPageChanging({ pageNumber }) {\n    this.#currentPageIndex = pageNumber - 1;\n  }\n\n  focusMainContainer() {\n    this.#container.focus();\n  }\n\n  findParent(x, y) {\n    for (const layer of this.#allLayers.values()) {\n      const {\n        x: layerX,\n        y: layerY,\n        width,\n        height,\n      } = layer.div.getBoundingClientRect();\n      if (\n        x >= layerX &&\n        x <= layerX + width &&\n        y >= layerY &&\n        y <= layerY + height\n      ) {\n        return layer;\n      }\n    }\n    return null;\n  }\n\n  disableUserSelect(value = false) {\n    this.#viewer.classList.toggle(\"noUserSelect\", value);\n  }\n\n  addShouldRescale(editor) {\n    this.#editorsToRescale.add(editor);\n  }\n\n  removeShouldRescale(editor) {\n    this.#editorsToRescale.delete(editor);\n  }\n\n  onScaleChanging({ scale }) {\n    this.commitOrRemove();\n    this.viewParameters.realScale = scale * PixelsPerInch.PDF_TO_CSS_UNITS;\n    for (const editor of this.#editorsToRescale) {\n      editor.onScaleChanging();\n    }\n  }\n\n  onRotationChanging({ pagesRotation }) {\n    this.commitOrRemove();\n    this.viewParameters.rotation = pagesRotation;\n  }\n\n  /**\n   * Add an editor in the annotation storage.\n   * @param {AnnotationEditor} editor\n   */\n  addToAnnotationStorage(editor) {\n    if (\n      !editor.isEmpty() &&\n      this.#annotationStorage &&\n      !this.#annotationStorage.has(editor.id)\n    ) {\n      this.#annotationStorage.setValue(editor.id, editor);\n    }\n  }\n\n  #addFocusManager() {\n    window.addEventListener(\"focus\", this.#boundFocus);\n    window.addEventListener(\"blur\", this.#boundBlur);\n  }\n\n  #removeFocusManager() {\n    window.removeEventListener(\"focus\", this.#boundFocus);\n    window.removeEventListener(\"blur\", this.#boundBlur);\n  }\n\n  blur() {\n    if (!this.hasSelection) {\n      return;\n    }\n    // When several editors are selected and the window loses focus, we want to\n    // keep the last active element in order to be able to focus it again when\n    // the window gets the focus back but we don't want to trigger any focus\n    // callbacks else only one editor will be selected.\n    const { activeElement } = document;\n    for (const editor of this.#selectedEditors) {\n      if (editor.div.contains(activeElement)) {\n        this.#lastActiveElement = [editor, activeElement];\n        editor._focusEventsAllowed = false;\n        break;\n      }\n    }\n  }\n\n  focus() {\n    if (!this.#lastActiveElement) {\n      return;\n    }\n    const [lastEditor, lastActiveElement] = this.#lastActiveElement;\n    this.#lastActiveElement = null;\n    lastActiveElement.addEventListener(\n      \"focusin\",\n      () => {\n        lastEditor._focusEventsAllowed = true;\n      },\n      { once: true }\n    );\n    lastActiveElement.focus();\n  }\n\n  #addKeyboardManager() {\n    // The keyboard events are caught at the container level in order to be able\n    // to execute some callbacks even if the current page doesn't have focus.\n    window.addEventListener(\"keydown\", this.#boundKeydown, { capture: true });\n  }\n\n  #removeKeyboardManager() {\n    window.removeEventListener(\"keydown\", this.#boundKeydown, {\n      capture: true,\n    });\n  }\n\n  #addCopyPasteListeners() {\n    document.addEventListener(\"copy\", this.#boundCopy);\n    document.addEventListener(\"cut\", this.#boundCut);\n    document.addEventListener(\"paste\", this.#boundPaste);\n  }\n\n  #removeCopyPasteListeners() {\n    document.removeEventListener(\"copy\", this.#boundCopy);\n    document.removeEventListener(\"cut\", this.#boundCut);\n    document.removeEventListener(\"paste\", this.#boundPaste);\n  }\n\n  addEditListeners() {\n    this.#addKeyboardManager();\n    this.#addCopyPasteListeners();\n  }\n\n  removeEditListeners() {\n    this.#removeKeyboardManager();\n    this.#removeCopyPasteListeners();\n  }\n\n  /**\n   * Copy callback.\n   * @param {ClipboardEvent} event\n   */\n  copy(event) {\n    event.preventDefault();\n\n    // An editor is being edited so just commit it.\n    this.#activeEditor?.commitOrRemove();\n\n    if (!this.hasSelection) {\n      return;\n    }\n\n    const editors = [];\n    for (const editor of this.#selectedEditors) {\n      const serialized = editor.serialize(/* isForCopying = */ true);\n      if (serialized) {\n        editors.push(serialized);\n      }\n    }\n    if (editors.length === 0) {\n      return;\n    }\n\n    event.clipboardData.setData(\"application/pdfjs\", JSON.stringify(editors));\n  }\n\n  /**\n   * Cut callback.\n   * @param {ClipboardEvent} event\n   */\n  cut(event) {\n    this.copy(event);\n    this.delete();\n  }\n\n  /**\n   * Paste callback.\n   * @param {ClipboardEvent} event\n   */\n  paste(event) {\n    event.preventDefault();\n    const { clipboardData } = event;\n    for (const item of clipboardData.items) {\n      for (const editorType of this.#editorTypes) {\n        if (editorType.isHandlingMimeForPasting(item.type)) {\n          editorType.paste(item, this.currentLayer);\n          return;\n        }\n      }\n    }\n\n    let data = clipboardData.getData(\"application/pdfjs\");\n    if (!data) {\n      return;\n    }\n\n    try {\n      data = JSON.parse(data);\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n      return;\n    }\n\n    if (!Array.isArray(data)) {\n      return;\n    }\n\n    this.unselectAll();\n    const layer = this.currentLayer;\n\n    try {\n      const newEditors = [];\n      for (const editor of data) {\n        const deserializedEditor = layer.deserialize(editor);\n        if (!deserializedEditor) {\n          return;\n        }\n        newEditors.push(deserializedEditor);\n      }\n\n      const cmd = () => {\n        for (const editor of newEditors) {\n          this.#addEditorToLayer(editor);\n        }\n        this.#selectEditors(newEditors);\n      };\n      const undo = () => {\n        for (const editor of newEditors) {\n          editor.remove();\n        }\n      };\n      this.addCommands({ cmd, undo, mustExec: true });\n    } catch (ex) {\n      warn(`paste: \"${ex.message}\".`);\n    }\n  }\n\n  /**\n   * Keydown callback.\n   * @param {KeyboardEvent} event\n   */\n  keydown(event) {\n    if (!this.getActive()?.shouldGetKeyboardEvents()) {\n      AnnotationEditorUIManager._keyboardManager.exec(this, event);\n    }\n  }\n\n  /**\n   * Execute an action for a given name.\n   * For example, the user can click on the \"Undo\" entry in the context menu\n   * and it'll trigger the undo action.\n   * @param {Object} details\n   */\n  onEditingAction(details) {\n    if ([\"undo\", \"redo\", \"delete\", \"selectAll\"].includes(details.name)) {\n      this[details.name]();\n    }\n  }\n\n  /**\n   * Update the different possible states of this manager, e.g. is there\n   * something to undo, redo, ...\n   * @param {Object} details\n   */\n  #dispatchUpdateStates(details) {\n    const hasChanged = Object.entries(details).some(\n      ([key, value]) => this.#previousStates[key] !== value\n    );\n\n    if (hasChanged) {\n      this._eventBus.dispatch(\"annotationeditorstateschanged\", {\n        source: this,\n        details: Object.assign(this.#previousStates, details),\n      });\n    }\n  }\n\n  #dispatchUpdateUI(details) {\n    this._eventBus.dispatch(\"annotationeditorparamschanged\", {\n      source: this,\n      details,\n    });\n  }\n\n  /**\n   * Set the editing state.\n   * It can be useful to temporarily disable it when the user is editing a\n   * FreeText annotation.\n   * @param {boolean} isEditing\n   */\n  setEditingState(isEditing) {\n    if (isEditing) {\n      this.#addFocusManager();\n      this.#addKeyboardManager();\n      this.#addCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: this.#mode !== AnnotationEditorType.NONE,\n        isEmpty: this.#isEmpty(),\n        hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n        hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n        hasSelectedEditor: false,\n      });\n    } else {\n      this.#removeFocusManager();\n      this.#removeKeyboardManager();\n      this.#removeCopyPasteListeners();\n      this.#dispatchUpdateStates({\n        isEditing: false,\n      });\n      this.disableUserSelect(false);\n    }\n  }\n\n  registerEditorTypes(types) {\n    if (this.#editorTypes) {\n      return;\n    }\n    this.#editorTypes = types;\n    for (const editorType of this.#editorTypes) {\n      this.#dispatchUpdateUI(editorType.defaultPropertiesToUpdate);\n    }\n  }\n\n  /**\n   * Get an id.\n   * @returns {string}\n   */\n  getId() {\n    return this.#idManager.getId();\n  }\n\n  get currentLayer() {\n    return this.#allLayers.get(this.#currentPageIndex);\n  }\n\n  getLayer(pageIndex) {\n    return this.#allLayers.get(pageIndex);\n  }\n\n  get currentPageIndex() {\n    return this.#currentPageIndex;\n  }\n\n  /**\n   * Add a new layer for a page which will contains the editors.\n   * @param {AnnotationEditorLayer} layer\n   */\n  addLayer(layer) {\n    this.#allLayers.set(layer.pageIndex, layer);\n    if (this.#isEnabled) {\n      layer.enable();\n    } else {\n      layer.disable();\n    }\n  }\n\n  /**\n   * Remove a layer.\n   * @param {AnnotationEditorLayer} layer\n   */\n  removeLayer(layer) {\n    this.#allLayers.delete(layer.pageIndex);\n  }\n\n  /**\n   * Change the editor mode (None, FreeText, Ink, ...)\n   * @param {number} mode\n   * @param {string|null} editId\n   */\n  updateMode(mode, editId = null) {\n    if (this.#mode === mode) {\n      return;\n    }\n    this.#mode = mode;\n    if (mode === AnnotationEditorType.NONE) {\n      this.setEditingState(false);\n      this.#disableAll();\n      return;\n    }\n    this.setEditingState(true);\n    this.#enableAll();\n    this.unselectAll();\n    for (const layer of this.#allLayers.values()) {\n      layer.updateMode(mode);\n    }\n    if (!editId) {\n      return;\n    }\n    for (const editor of this.#allEditors.values()) {\n      if (editor.annotationElementId === editId) {\n        this.setSelected(editor);\n        editor.enterInEditMode();\n        break;\n      }\n    }\n  }\n\n  /**\n   * Update the toolbar if it's required to reflect the tool currently used.\n   * @param {number} mode\n   * @returns {undefined}\n   */\n  updateToolbar(mode) {\n    if (mode === this.#mode) {\n      return;\n    }\n    this._eventBus.dispatch(\"switchannotationeditormode\", {\n      source: this,\n      mode,\n    });\n  }\n\n  /**\n   * Update a parameter in the current editor or globally.\n   * @param {number} type\n   * @param {*} value\n   */\n  updateParams(type, value) {\n    if (!this.#editorTypes) {\n      return;\n    }\n    if (type === AnnotationEditorParamsType.CREATE) {\n      this.currentLayer.addNewEditor(type);\n      return;\n    }\n\n    for (const editor of this.#selectedEditors) {\n      editor.updateParams(type, value);\n    }\n\n    for (const editorType of this.#editorTypes) {\n      editorType.updateDefaultParams(type, value);\n    }\n  }\n\n  enableWaiting(mustWait = false) {\n    if (this.#isWaiting === mustWait) {\n      return;\n    }\n    this.#isWaiting = mustWait;\n    for (const layer of this.#allLayers.values()) {\n      if (mustWait) {\n        layer.disableClick();\n      } else {\n        layer.enableClick();\n      }\n      layer.div.classList.toggle(\"waiting\", mustWait);\n    }\n  }\n\n  /**\n   * Enable all the layers.\n   */\n  #enableAll() {\n    if (!this.#isEnabled) {\n      this.#isEnabled = true;\n      for (const layer of this.#allLayers.values()) {\n        layer.enable();\n      }\n    }\n  }\n\n  /**\n   * Disable all the layers.\n   */\n  #disableAll() {\n    this.unselectAll();\n    if (this.#isEnabled) {\n      this.#isEnabled = false;\n      for (const layer of this.#allLayers.values()) {\n        layer.disable();\n      }\n    }\n  }\n\n  /**\n   * Get all the editors belonging to a given page.\n   * @param {number} pageIndex\n   * @returns {Array<AnnotationEditor>}\n   */\n  getEditors(pageIndex) {\n    const editors = [];\n    for (const editor of this.#allEditors.values()) {\n      if (editor.pageIndex === pageIndex) {\n        editors.push(editor);\n      }\n    }\n    return editors;\n  }\n\n  /**\n   * Get an editor with the given id.\n   * @param {string} id\n   * @returns {AnnotationEditor}\n   */\n  getEditor(id) {\n    return this.#allEditors.get(id);\n  }\n\n  /**\n   * Add a new editor.\n   * @param {AnnotationEditor} editor\n   */\n  addEditor(editor) {\n    this.#allEditors.set(editor.id, editor);\n  }\n\n  /**\n   * Remove an editor.\n   * @param {AnnotationEditor} editor\n   */\n  removeEditor(editor) {\n    this.#allEditors.delete(editor.id);\n    this.unselect(editor);\n    if (\n      !editor.annotationElementId ||\n      !this.#deletedAnnotationsElementIds.has(editor.annotationElementId)\n    ) {\n      this.#annotationStorage?.remove(editor.id);\n    }\n  }\n\n  /**\n   * The annotation element with the given id has been deleted.\n   * @param {AnnotationEditor} editor\n   */\n  addDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.add(editor.annotationElementId);\n    editor.deleted = true;\n  }\n\n  /**\n   * Check if the annotation element with the given id has been deleted.\n   * @param {string} annotationElementId\n   * @returns {boolean}\n   */\n  isDeletedAnnotationElement(annotationElementId) {\n    return this.#deletedAnnotationsElementIds.has(annotationElementId);\n  }\n\n  /**\n   * The annotation element with the given id have been restored.\n   * @param {AnnotationEditor} editor\n   */\n  removeDeletedAnnotationElement(editor) {\n    this.#deletedAnnotationsElementIds.delete(editor.annotationElementId);\n    editor.deleted = false;\n  }\n\n  /**\n   * Add an editor to the layer it belongs to or add it to the global map.\n   * @param {AnnotationEditor} editor\n   */\n  #addEditorToLayer(editor) {\n    const layer = this.#allLayers.get(editor.pageIndex);\n    if (layer) {\n      layer.addOrRebuild(editor);\n    } else {\n      this.addEditor(editor);\n    }\n  }\n\n  /**\n   * Set the given editor as the active one.\n   * @param {AnnotationEditor} editor\n   */\n  setActiveEditor(editor) {\n    if (this.#activeEditor === editor) {\n      return;\n    }\n\n    this.#activeEditor = editor;\n    if (editor) {\n      this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    }\n  }\n\n  /**\n   * Add or remove an editor the current selection.\n   * @param {AnnotationEditor} editor\n   */\n  toggleSelected(editor) {\n    if (this.#selectedEditors.has(editor)) {\n      this.#selectedEditors.delete(editor);\n      editor.unselect();\n      this.#dispatchUpdateStates({\n        hasSelectedEditor: this.hasSelection,\n      });\n      return;\n    }\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true,\n    });\n  }\n\n  /**\n   * Set the last selected editor.\n   * @param {AnnotationEditor} editor\n   */\n  setSelected(editor) {\n    for (const ed of this.#selectedEditors) {\n      if (ed !== editor) {\n        ed.unselect();\n      }\n    }\n    this.#selectedEditors.clear();\n\n    this.#selectedEditors.add(editor);\n    editor.select();\n    this.#dispatchUpdateUI(editor.propertiesToUpdate);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: true,\n    });\n  }\n\n  /**\n   * Check if the editor is selected.\n   * @param {AnnotationEditor} editor\n   */\n  isSelected(editor) {\n    return this.#selectedEditors.has(editor);\n  }\n\n  /**\n   * Unselect an editor.\n   * @param {AnnotationEditor} editor\n   */\n  unselect(editor) {\n    editor.unselect();\n    this.#selectedEditors.delete(editor);\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: this.hasSelection,\n    });\n  }\n\n  get hasSelection() {\n    return this.#selectedEditors.size !== 0;\n  }\n\n  /**\n   * Undo the last command.\n   */\n  undo() {\n    this.#commandManager.undo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: this.#commandManager.hasSomethingToUndo(),\n      hasSomethingToRedo: true,\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  /**\n   * Redo the last undoed command.\n   */\n  redo() {\n    this.#commandManager.redo();\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: this.#commandManager.hasSomethingToRedo(),\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  /**\n   * Add a command to execute (cmd) and another one to undo it.\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this.#commandManager.add(params);\n    this.#dispatchUpdateStates({\n      hasSomethingToUndo: true,\n      hasSomethingToRedo: false,\n      isEmpty: this.#isEmpty(),\n    });\n  }\n\n  #isEmpty() {\n    if (this.#allEditors.size === 0) {\n      return true;\n    }\n\n    if (this.#allEditors.size === 1) {\n      for (const editor of this.#allEditors.values()) {\n        return editor.isEmpty();\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Delete the current editor or all.\n   */\n  delete() {\n    this.commitOrRemove();\n    if (!this.hasSelection) {\n      return;\n    }\n\n    const editors = [...this.#selectedEditors];\n    const cmd = () => {\n      for (const editor of editors) {\n        editor.remove();\n      }\n    };\n    const undo = () => {\n      for (const editor of editors) {\n        this.#addEditorToLayer(editor);\n      }\n    };\n\n    this.addCommands({ cmd, undo, mustExec: true });\n  }\n\n  commitOrRemove() {\n    // An editor is being edited so just commit it.\n    this.#activeEditor?.commitOrRemove();\n  }\n\n  hasSomethingToControl() {\n    return this.#activeEditor || this.hasSelection;\n  }\n\n  /**\n   * Select the editors.\n   * @param {Array<AnnotationEditor>} editors\n   */\n  #selectEditors(editors) {\n    this.#selectedEditors.clear();\n    for (const editor of editors) {\n      if (editor.isEmpty()) {\n        continue;\n      }\n      this.#selectedEditors.add(editor);\n      editor.select();\n    }\n    this.#dispatchUpdateStates({ hasSelectedEditor: true });\n  }\n\n  /**\n   * Select all the editors.\n   */\n  selectAll() {\n    for (const editor of this.#selectedEditors) {\n      editor.commit();\n    }\n    this.#selectEditors(this.#allEditors.values());\n  }\n\n  /**\n   * Unselect all the selected editors.\n   */\n  unselectAll() {\n    if (this.#activeEditor) {\n      // An editor is being edited so just commit it.\n      this.#activeEditor.commitOrRemove();\n      return;\n    }\n\n    if (!this.hasSelection) {\n      return;\n    }\n    for (const editor of this.#selectedEditors) {\n      editor.unselect();\n    }\n    this.#selectedEditors.clear();\n    this.#dispatchUpdateStates({\n      hasSelectedEditor: false,\n    });\n  }\n\n  translateSelectedEditors(x, y, noCommit = false) {\n    if (!noCommit) {\n      this.commitOrRemove();\n    }\n    if (!this.hasSelection) {\n      return;\n    }\n\n    this.#translation[0] += x;\n    this.#translation[1] += y;\n    const [totalX, totalY] = this.#translation;\n    const editors = [...this.#selectedEditors];\n\n    // We don't want to have an undo/redo for each translation so we wait a bit\n    // before adding the command to the command manager.\n    const TIME_TO_WAIT = 1000;\n\n    if (this.#translationTimeoutId) {\n      clearTimeout(this.#translationTimeoutId);\n    }\n\n    this.#translationTimeoutId = setTimeout(() => {\n      this.#translationTimeoutId = null;\n      this.#translation[0] = this.#translation[1] = 0;\n\n      this.addCommands({\n        cmd: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(totalX, totalY);\n            }\n          }\n        },\n        undo: () => {\n          for (const editor of editors) {\n            if (this.#allEditors.has(editor.id)) {\n              editor.translateInPage(-totalX, -totalY);\n            }\n          }\n        },\n        mustExec: false,\n      });\n    }, TIME_TO_WAIT);\n\n    for (const editor of editors) {\n      editor.translateInPage(x, y);\n    }\n  }\n\n  /**\n   * Set up the drag session for moving the selected editors.\n   */\n  setUpDragSession() {\n    // Note: don't use any references to the editor's parent which can be null\n    // if the editor belongs to a destroyed page.\n    if (!this.hasSelection) {\n      return;\n    }\n    // Avoid to have spurious text selection in the text layer when dragging.\n    this.disableUserSelect(true);\n    this.#draggingEditors = new Map();\n    for (const editor of this.#selectedEditors) {\n      this.#draggingEditors.set(editor, {\n        savedX: editor.x,\n        savedY: editor.y,\n        savedPageIndex: editor.pageIndex,\n        newX: 0,\n        newY: 0,\n        newPageIndex: -1,\n      });\n    }\n  }\n\n  /**\n   * Ends the drag session.\n   * @returns {boolean} true if at least one editor has been moved.\n   */\n  endDragSession() {\n    if (!this.#draggingEditors) {\n      return false;\n    }\n    this.disableUserSelect(false);\n    const map = this.#draggingEditors;\n    this.#draggingEditors = null;\n    let mustBeAddedInUndoStack = false;\n\n    for (const [{ x, y, pageIndex }, value] of map) {\n      value.newX = x;\n      value.newY = y;\n      value.newPageIndex = pageIndex;\n      mustBeAddedInUndoStack ||=\n        x !== value.savedX ||\n        y !== value.savedY ||\n        pageIndex !== value.savedPageIndex;\n    }\n\n    if (!mustBeAddedInUndoStack) {\n      return false;\n    }\n\n    const move = (editor, x, y, pageIndex) => {\n      if (this.#allEditors.has(editor.id)) {\n        // The editor can be undone/redone on a page which is not visible (and\n        // which potentially has no annotation editor layer), hence we need to\n        // use the pageIndex instead of the parent.\n        const parent = this.#allLayers.get(pageIndex);\n        if (parent) {\n          editor._setParentAndPosition(parent, x, y);\n        } else {\n          editor.pageIndex = pageIndex;\n          editor.x = x;\n          editor.y = y;\n        }\n      }\n    };\n\n    this.addCommands({\n      cmd: () => {\n        for (const [editor, { newX, newY, newPageIndex }] of map) {\n          move(editor, newX, newY, newPageIndex);\n        }\n      },\n      undo: () => {\n        for (const [editor, { savedX, savedY, savedPageIndex }] of map) {\n          move(editor, savedX, savedY, savedPageIndex);\n        }\n      },\n      mustExec: true,\n    });\n\n    return true;\n  }\n\n  /**\n   * Drag the set of selected editors.\n   * @param {number} tx\n   * @param {number} ty\n   */\n  dragSelectedEditors(tx, ty) {\n    if (!this.#draggingEditors) {\n      return;\n    }\n    for (const editor of this.#draggingEditors.keys()) {\n      editor.drag(tx, ty);\n    }\n  }\n\n  /**\n   * Rebuild the editor (usually on undo/redo actions) on a potentially\n   * non-rendered page.\n   * @param {AnnotationEditor} editor\n   */\n  rebuild(editor) {\n    if (editor.parent === null) {\n      const parent = this.getLayer(editor.pageIndex);\n      if (parent) {\n        parent.changeParent(editor);\n        parent.addOrRebuild(editor);\n      } else {\n        this.addEditor(editor);\n        this.addToAnnotationStorage(editor);\n        editor.rebuild();\n      }\n    } else {\n      editor.parent.addOrRebuild(editor);\n    }\n  }\n\n  /**\n   * Is the current editor the one passed as argument?\n   * @param {AnnotationEditor} editor\n   * @returns\n   */\n  isActive(editor) {\n    return this.#activeEditor === editor;\n  }\n\n  /**\n   * Get the current active editor.\n   * @returns {AnnotationEditor|null}\n   */\n  getActive() {\n    return this.#activeEditor;\n  }\n\n  /**\n   * Get the current editor mode.\n   * @returns {number}\n   */\n  getMode() {\n    return this.#mode;\n  }\n\n  get imageManager() {\n    return shadow(this, \"imageManager\", new ImageManager());\n  }\n}\n\nexport {\n  AnnotationEditorUIManager,\n  bindEvents,\n  ColorManager,\n  CommandManager,\n  KeyboardManager,\n  opacityToHex,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n} from \"./base_factory.js\";\nimport {\n  BaseException,\n  FeatureTest,\n  shadow,\n  stringToBytes,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass PixelsPerInch {\n  static CSS = 96.0;\n\n  static PDF = 72.0;\n\n  static PDF_TO_CSS_UNITS = this.CSS / this.PDF;\n}\n\n/**\n * FilterFactory aims to create some SVG filters we can use when drawing an\n * image (or whatever) on a canvas.\n * Filters aren't applied with ctx.putImageData because it just overwrites the\n * underlying pixels.\n * With these filters, it's possible for example to apply some transfer maps on\n * an image without the need to apply them on the pixel arrays: the renderer\n * does the magic for us.\n */\nclass DOMFilterFactory extends BaseFilterFactory {\n  #_cache;\n\n  #_defs;\n\n  #docId;\n\n  #document;\n\n  #hcmFilter;\n\n  #hcmKey;\n\n  #hcmUrl;\n\n  #hcmHighlightFilter;\n\n  #hcmHighlightKey;\n\n  #hcmHighlightUrl;\n\n  #id = 0;\n\n  constructor({ docId, ownerDocument = globalThis.document } = {}) {\n    super();\n    this.#docId = docId;\n    this.#document = ownerDocument;\n  }\n\n  get #cache() {\n    return (this.#_cache ||= new Map());\n  }\n\n  get #defs() {\n    if (!this.#_defs) {\n      const div = this.#document.createElement(\"div\");\n      const { style } = div;\n      style.visibility = \"hidden\";\n      style.contain = \"strict\";\n      style.width = style.height = 0;\n      style.position = \"absolute\";\n      style.top = style.left = 0;\n      style.zIndex = -1;\n\n      const svg = this.#document.createElementNS(SVG_NS, \"svg\");\n      svg.setAttribute(\"width\", 0);\n      svg.setAttribute(\"height\", 0);\n      this.#_defs = this.#document.createElementNS(SVG_NS, \"defs\");\n      div.append(svg);\n      svg.append(this.#_defs);\n      this.#document.body.append(div);\n    }\n    return this.#_defs;\n  }\n\n  addFilter(maps) {\n    if (!maps) {\n      return \"none\";\n    }\n\n    // When a page is zoomed the page is re-drawn but the maps are likely\n    // the same.\n    let value = this.#cache.get(maps);\n    if (value) {\n      return value;\n    }\n\n    let tableR, tableG, tableB, key;\n    if (maps.length === 1) {\n      const mapR = maps[0];\n      const buffer = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        buffer[i] = mapR[i] / 255;\n      }\n      key = tableR = tableG = tableB = buffer.join(\",\");\n    } else {\n      const [mapR, mapG, mapB] = maps;\n      const bufferR = new Array(256);\n      const bufferG = new Array(256);\n      const bufferB = new Array(256);\n      for (let i = 0; i < 256; i++) {\n        bufferR[i] = mapR[i] / 255;\n        bufferG[i] = mapG[i] / 255;\n        bufferB[i] = mapB[i] / 255;\n      }\n      tableR = bufferR.join(\",\");\n      tableG = bufferG.join(\",\");\n      tableB = bufferB.join(\",\");\n      key = `${tableR}${tableG}${tableB}`;\n    }\n\n    value = this.#cache.get(key);\n    if (value) {\n      this.#cache.set(maps, value);\n      return value;\n    }\n\n    // We create a SVG filter: feComponentTransferElement\n    //  https://www.w3.org/TR/SVG11/filters.html#feComponentTransferElement\n\n    const id = `g_${this.#docId}_transfer_map_${this.#id++}`;\n    const url = `url(#${id})`;\n    this.#cache.set(maps, url);\n    this.#cache.set(key, url);\n\n    const filter = this.#createFilter(id);\n    this.#addTransferMapConversion(tableR, tableG, tableB, filter);\n\n    return url;\n  }\n\n  addHCMFilter(fgColor, bgColor) {\n    const key = `${fgColor}-${bgColor}`;\n    if (this.#hcmKey === key) {\n      return this.#hcmUrl;\n    }\n\n    this.#hcmKey = key;\n    this.#hcmUrl = \"none\";\n    this.#hcmFilter?.remove();\n\n    if (!fgColor || !bgColor) {\n      return this.#hcmUrl;\n    }\n\n    const fgRGB = this.#getRGB(fgColor);\n    fgColor = Util.makeHexColor(...fgRGB);\n    const bgRGB = this.#getRGB(bgColor);\n    bgColor = Util.makeHexColor(...bgRGB);\n    this.#defs.style.color = \"\";\n\n    if (\n      (fgColor === \"#000000\" && bgColor === \"#ffffff\") ||\n      fgColor === bgColor\n    ) {\n      return this.#hcmUrl;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Understanding_Colors_and_Luminance\n    //\n    // Relative luminance:\n    // https://www.w3.org/TR/WCAG20/#relativeluminancedef\n    //\n    // We compute the rounded luminance of the default background color.\n    // Then for every color in the pdf, if its rounded luminance is the\n    // same as the background one then it's replaced by the new\n    // background color else by the foreground one.\n    const map = new Array(256);\n    for (let i = 0; i <= 255; i++) {\n      const x = i / 255;\n      map[i] = x <= 0.03928 ? x / 12.92 : ((x + 0.055) / 1.055) ** 2.4;\n    }\n    const table = map.join(\",\");\n\n    const id = `g_${this.#docId}_hcm_filter`;\n    const filter = (this.#hcmHighlightFilter = this.#createFilter(id));\n    this.#addTransferMapConversion(table, table, table, filter);\n    this.#addGrayConversion(filter);\n\n    const getSteps = (c, n) => {\n      const start = fgRGB[c] / 255;\n      const end = bgRGB[c] / 255;\n      const arr = new Array(n + 1);\n      for (let i = 0; i <= n; i++) {\n        arr[i] = start + (i / n) * (end - start);\n      }\n      return arr.join(\",\");\n    };\n    this.#addTransferMapConversion(\n      getSteps(0, 5),\n      getSteps(1, 5),\n      getSteps(2, 5),\n      filter\n    );\n\n    this.#hcmUrl = `url(#${id})`;\n    return this.#hcmUrl;\n  }\n\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    const key = `${fgColor}-${bgColor}-${newFgColor}-${newBgColor}`;\n    if (this.#hcmHighlightKey === key) {\n      return this.#hcmHighlightUrl;\n    }\n\n    this.#hcmHighlightKey = key;\n    this.#hcmHighlightUrl = \"none\";\n    this.#hcmHighlightFilter?.remove();\n\n    if (!fgColor || !bgColor) {\n      return this.#hcmHighlightUrl;\n    }\n\n    const [fgRGB, bgRGB] = [fgColor, bgColor].map(this.#getRGB.bind(this));\n    let fgGray = Math.round(\n      0.2126 * fgRGB[0] + 0.7152 * fgRGB[1] + 0.0722 * fgRGB[2]\n    );\n    let bgGray = Math.round(\n      0.2126 * bgRGB[0] + 0.7152 * bgRGB[1] + 0.0722 * bgRGB[2]\n    );\n    let [newFgRGB, newBgRGB] = [newFgColor, newBgColor].map(\n      this.#getRGB.bind(this)\n    );\n    if (bgGray < fgGray) {\n      [fgGray, bgGray, newFgRGB, newBgRGB] = [\n        bgGray,\n        fgGray,\n        newBgRGB,\n        newFgRGB,\n      ];\n    }\n    this.#defs.style.color = \"\";\n\n    // Now we can create the filters to highlight some canvas parts.\n    // The colors in the pdf will almost be Canvas and CanvasText, hence we\n    // want to filter them to finally get Highlight and HighlightText.\n    // Since we're in HCM the background color and the foreground color should\n    // be really different when converted to grayscale (if they're not then it\n    // means that we've a poor contrast). Once the canvas colors are converted\n    // to grayscale we can easily map them on their new colors.\n    // The grayscale step is important because if we've something like:\n    //   fgColor = #FF....\n    //   bgColor = #FF....\n    //   then we are enable to map the red component on the new red components\n    //   which can be different.\n\n    const getSteps = (fg, bg, n) => {\n      const arr = new Array(256);\n      const step = (bgGray - fgGray) / n;\n      const newStart = fg / 255;\n      const newStep = (bg - fg) / (255 * n);\n      let prev = 0;\n      for (let i = 0; i <= n; i++) {\n        const k = Math.round(fgGray + i * step);\n        const value = newStart + i * newStep;\n        for (let j = prev; j <= k; j++) {\n          arr[j] = value;\n        }\n        prev = k + 1;\n      }\n      for (let i = prev; i < 256; i++) {\n        arr[i] = arr[prev - 1];\n      }\n      return arr.join(\",\");\n    };\n\n    const id = `g_${this.#docId}_hcm_highlight_filter`;\n    const filter = (this.#hcmHighlightFilter = this.#createFilter(id));\n\n    this.#addGrayConversion(filter);\n    this.#addTransferMapConversion(\n      getSteps(newFgRGB[0], newBgRGB[0], 5),\n      getSteps(newFgRGB[1], newBgRGB[1], 5),\n      getSteps(newFgRGB[2], newBgRGB[2], 5),\n      filter\n    );\n\n    this.#hcmHighlightUrl = `url(#${id})`;\n    return this.#hcmHighlightUrl;\n  }\n\n  destroy(keepHCM = false) {\n    if (keepHCM && (this.#hcmUrl || this.#hcmHighlightUrl)) {\n      return;\n    }\n    if (this.#_defs) {\n      this.#_defs.parentNode.parentNode.remove();\n      this.#_defs = null;\n    }\n    if (this.#_cache) {\n      this.#_cache.clear();\n      this.#_cache = null;\n    }\n    this.#id = 0;\n  }\n\n  #addGrayConversion(filter) {\n    const feColorMatrix = this.#document.createElementNS(\n      SVG_NS,\n      \"feColorMatrix\"\n    );\n    feColorMatrix.setAttribute(\"type\", \"matrix\");\n    feColorMatrix.setAttribute(\n      \"values\",\n      \"0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0.2126 0.7152 0.0722 0 0 0 0 0 1 0\"\n    );\n    filter.append(feColorMatrix);\n  }\n\n  #createFilter(id) {\n    const filter = this.#document.createElementNS(SVG_NS, \"filter\");\n    filter.setAttribute(\"color-interpolation-filters\", \"sRGB\");\n    filter.setAttribute(\"id\", id);\n    this.#defs.append(filter);\n\n    return filter;\n  }\n\n  #appendFeFunc(feComponentTransfer, func, table) {\n    const feFunc = this.#document.createElementNS(SVG_NS, func);\n    feFunc.setAttribute(\"type\", \"discrete\");\n    feFunc.setAttribute(\"tableValues\", table);\n    feComponentTransfer.append(feFunc);\n  }\n\n  #addTransferMapConversion(rTable, gTable, bTable, filter) {\n    const feComponentTransfer = this.#document.createElementNS(\n      SVG_NS,\n      \"feComponentTransfer\"\n    );\n    filter.append(feComponentTransfer);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncR\", rTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncG\", gTable);\n    this.#appendFeFunc(feComponentTransfer, \"feFuncB\", bTable);\n  }\n\n  #getRGB(color) {\n    this.#defs.style.color = color;\n    return getRGB(getComputedStyle(this.#defs).getPropertyValue(\"color\"));\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n  }\n}\n\nasync function fetchData(url, asTypedArray = false) {\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    isValidFetchUrl(url, document.baseURI)\n  ) {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return asTypedArray\n      ? new Uint8Array(await response.arrayBuffer())\n      : stringToBytes(await response.text());\n  }\n\n  // The Fetch API is not supported.\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, /* asTypedArray = */ true);\n\n    if (asTypedArray) {\n      request.responseType = \"arraybuffer\";\n    }\n    request.onreadystatechange = () => {\n      if (request.readyState !== XMLHttpRequest.DONE) {\n        return;\n      }\n      if (request.status === 200 || request.status === 0) {\n        let data;\n        if (asTypedArray && request.response) {\n          data = new Uint8Array(request.response);\n        } else if (!asTypedArray && request.responseText) {\n          data = stringToBytes(request.responseText);\n        }\n        if (data) {\n          resolve(data);\n          return;\n        }\n      }\n      reject(new Error(request.statusText));\n    };\n\n    request.send(null);\n  });\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url, /* asTypedArray = */ this.isCompressed).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass DOMStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url, /* asTypedArray = */ true);\n  }\n}\n\nclass DOMSVGFactory extends BaseSVGFactory {\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    // Normalize the rotation, by clamping it to the [0, 360) range.\n    rotation %= 360;\n    if (rotation < 0) {\n      rotation += 360;\n    }\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = (viewBox[3] - viewBox[1]) * scale;\n      height = (viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = (viewBox[2] - viewBox[0]) * scale;\n      height = (viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * The original, un-scaled, viewport dimensions.\n   * @type {Object}\n   */\n  get rawDims() {\n    const { viewBox } = this;\n    return shadow(this, \"rawDims\", {\n      pageWidth: viewBox[2] - viewBox[0],\n      pageHeight: viewBox[3] - viewBox[1],\n      pageX: viewBox[0],\n      pageY: viewBox[1],\n    });\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Array} Array containing `x`- and `y`-coordinates of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Array} Array containing `x`- and `y`-coordinates of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, extraDelay = 0) {\n    super(msg, \"RenderingCancelledException\");\n    this.extraDelay = extraDelay;\n  }\n}\n\nfunction isDataScheme(url) {\n  const ii = url.length;\n  let i = 0;\n  while (i < ii && url[i].trim() === \"\") {\n    i++;\n  }\n  return url.substring(i, i + 5).toLowerCase() === \"data:\";\n}\n\nfunction isPdfFile(filename) {\n  return typeof filename === \"string\" && /\\.pdf$/i.test(filename);\n}\n\n/**\n * Gets the filename from a given URL.\n * @param {string} url\n * @param {boolean} [onlyStripPath]\n * @returns {string}\n */\nfunction getFilenameFromUrl(url, onlyStripPath = false) {\n  if (!onlyStripPath) {\n    [url] = url.split(/[#?]/, 1);\n  }\n  return url.substring(url.lastIndexOf(\"/\") + 1);\n}\n\n/**\n * Returns the filename or guessed filename from the url (see issue 3455).\n * @param {string} url - The original PDF location.\n * @param {string} defaultFilename - The value returned if the filename is\n *   unknown, or the protocol is unsupported.\n * @returns {string} Guessed PDF filename.\n */\nfunction getPdfFilenameFromUrl(url, defaultFilename = \"document.pdf\") {\n  if (typeof url !== \"string\") {\n    return defaultFilename;\n  }\n  if (isDataScheme(url)) {\n    warn('getPdfFilenameFromUrl: ignore \"data:\"-URL for performance reasons.');\n    return defaultFilename;\n  }\n  const reURI = /^(?:(?:[^:]+:)?\\/\\/[^/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  //              SCHEME        HOST        1.PATH  2.QUERY   3.REF\n  // Pattern to get last matching NAME.pdf\n  const reFilename = /[^/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  const splitURI = reURI.exec(url);\n  let suggestedFilename =\n    reFilename.exec(splitURI[1]) ||\n    reFilename.exec(splitURI[2]) ||\n    reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.includes(\"%\")) {\n      // URL-encoded %2Fpath%2Fto%2Ffile.pdf should be file.pdf\n      try {\n        suggestedFilename = reFilename.exec(\n          decodeURIComponent(suggestedFilename)\n        )[0];\n      } catch {\n        // Possible (extremely rare) errors:\n        // URIError \"Malformed URI\", e.g. for \"%AA.pdf\"\n        // TypeError \"null has no properties\", e.g. for \"%2F.pdf\"\n      }\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\n\nclass StatTimer {\n  started = Object.create(null);\n\n  times = [];\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const { name } of this.times) {\n      longest = Math.max(name.length, longest);\n    }\n    for (const { name, start, end } of this.times) {\n      outBuf.push(`${name.padEnd(longest)} ${end - start}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n    throw new Error(\"Not implemented: isValidFetchUrl\");\n  }\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * Event handler to suppress context menu.\n */\nfunction noContextMenu(e) {\n  e.preventDefault();\n}\n\n/**\n * @param {string} src\n * @param {boolean} [removeScriptElement]\n * @returns {Promise<void>}\n */\nfunction loadScript(src, removeScriptElement = false) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = function (evt) {\n      if (removeScriptElement) {\n        script.remove();\n      }\n      resolve(evt);\n    };\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).append(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || typeof input !== \"string\") {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    pdfDateStringRegex ||= new RegExp(\n      \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n        \"'?\" // Trailing apostrophe (optional)\n    );\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\n/**\n * NOTE: This is (mostly) intended to support printing of XFA forms.\n */\nfunction getXfaPageViewport(xfaPage, { scale = 1, rotation = 0 }) {\n  const { width, height } = xfaPage.attributes.style;\n  const viewBox = [0, 0, parseInt(width), parseInt(height)];\n\n  return new PageViewport({\n    viewBox,\n    scale,\n    rotation,\n  });\n}\n\nfunction getRGB(color) {\n  if (color.startsWith(\"#\")) {\n    const colorRGB = parseInt(color.slice(1), 16);\n    return [\n      (colorRGB & 0xff0000) >> 16,\n      (colorRGB & 0x00ff00) >> 8,\n      colorRGB & 0x0000ff,\n    ];\n  }\n\n  if (color.startsWith(\"rgb(\")) {\n    // getComputedStyle(...).color returns a `rgb(R, G, B)` color.\n    return color\n      .slice(/* \"rgb(\".length */ 4, -1) // Strip out \"rgb(\" and \")\".\n      .split(\",\")\n      .map(x => parseInt(x));\n  }\n\n  if (color.startsWith(\"rgba(\")) {\n    return color\n      .slice(/* \"rgba(\".length */ 5, -1) // Strip out \"rgba(\" and \")\".\n      .split(\",\")\n      .map(x => parseInt(x))\n      .slice(0, 3);\n  }\n\n  warn(`Not a valid color format: \"${color}\"`);\n  return [0, 0, 0];\n}\n\nfunction getColorValues(colors) {\n  const span = document.createElement(\"span\");\n  span.style.visibility = \"hidden\";\n  document.body.append(span);\n  for (const name of colors.keys()) {\n    span.style.color = name;\n    const computedColor = window.getComputedStyle(span).color;\n    colors.set(name, getRGB(computedColor));\n  }\n  span.remove();\n}\n\nfunction getCurrentTransform(ctx) {\n  const { a, b, c, d, e, f } = ctx.getTransform();\n  return [a, b, c, d, e, f];\n}\n\nfunction getCurrentTransformInverse(ctx) {\n  const { a, b, c, d, e, f } = ctx.getTransform().invertSelf();\n  return [a, b, c, d, e, f];\n}\n\n/**\n * @param {HTMLDivElement} div\n * @param {PageViewport} viewport\n * @param {boolean} mustFlip\n * @param {boolean} mustRotate\n */\nfunction setLayerDimensions(\n  div,\n  viewport,\n  mustFlip = false,\n  mustRotate = true\n) {\n  if (viewport instanceof PageViewport) {\n    const { pageWidth, pageHeight } = viewport.rawDims;\n    const { style } = div;\n    const useRound = FeatureTest.isCSSRoundSupported;\n\n    const w = `var(--scale-factor) * ${pageWidth}px`,\n      h = `var(--scale-factor) * ${pageHeight}px`;\n    const widthStr = useRound ? `round(${w}, 1px)` : `calc(${w})`,\n      heightStr = useRound ? `round(${h}, 1px)` : `calc(${h})`;\n\n    if (!mustFlip || viewport.rotation % 180 === 0) {\n      style.width = widthStr;\n      style.height = heightStr;\n    } else {\n      style.width = heightStr;\n      style.height = widthStr;\n    }\n  }\n\n  if (mustRotate) {\n    div.setAttribute(\"data-main-rotation\", viewport.rotation);\n  }\n}\n\nexport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  DOMFilterFactory,\n  DOMStandardFontDataFactory,\n  DOMSVGFactory,\n  getColorValues,\n  getCurrentTransform,\n  getCurrentTransformInverse,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getRGB,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  isValidFetchUrl,\n  loadScript,\n  noContextMenu,\n  PageViewport,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n  StatTimer,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CMapCompressionType, unreachable } from \"../shared/util.js\";\n\nclass BaseFilterFactory {\n  constructor() {\n    if (this.constructor === BaseFilterFactory) {\n      unreachable(\"Cannot initialize BaseFilterFactory.\");\n    }\n  }\n\n  addFilter(maps) {\n    return \"none\";\n  }\n\n  addHCMFilter(fgColor, bgColor) {\n    return \"none\";\n  }\n\n  addHighlightHCMFilter(fgColor, bgColor, newFgColor, newBgColor) {\n    return \"none\";\n  }\n\n  destroy(keepHCM = false) {}\n}\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._createCanvas(width, height);\n    return {\n      canvas,\n      context: canvas.getContext(\"2d\"),\n    };\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    unreachable(\"Abstract method `_createCanvas` called.\");\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = true }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseStandardFontDataFactory {\n  constructor({ baseUrl = null }) {\n    if (this.constructor === BaseStandardFontDataFactory) {\n      unreachable(\"Cannot initialize BaseStandardFontDataFactory.\");\n    }\n    this.baseUrl = baseUrl;\n  }\n\n  async fetch({ filename }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The standard font \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"standardFontDataUrl\" API parameter is provided.'\n      );\n    }\n    if (!filename) {\n      throw new Error(\"Font filename must be specified.\");\n    }\n    const url = `${this.baseUrl}${filename}`;\n\n    return this._fetchData(url).catch(reason => {\n      throw new Error(`Unable to load font data at: ${url}`);\n    });\n  }\n\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass BaseSVGFactory {\n  constructor() {\n    if (this.constructor === BaseSVGFactory) {\n      unreachable(\"Cannot initialize BaseSVGFactory.\");\n    }\n  }\n\n  create(width, height, skipDimensions = false) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid SVG dimensions\");\n    }\n    const svg = this._createSVG(\"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n\n    if (!skipDimensions) {\n      svg.setAttribute(\"width\", `${width}px`);\n      svg.setAttribute(\"height\", `${height}px`);\n    }\n\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", `0 0 ${width} ${height}`);\n\n    return svg;\n  }\n\n  createElement(type) {\n    if (typeof type !== \"string\") {\n      throw new Error(\"Invalid SVG element type\");\n    }\n    return this._createSVG(type);\n  }\n\n  /**\n   * @ignore\n   */\n  _createSVG(type) {\n    unreachable(\"Abstract method `_createSVG` called.\");\n  }\n}\n\nexport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n  BaseSVGFactory,\n};\n","/* Copyright 2014 Opera Software ASA\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n *\n * Based on https://code.google.com/p/smhasher/wiki/MurmurHash3.\n * Hashes roughly 100 KB per millisecond on i7 3.4 GHz.\n */\n\nimport { isArrayBuffer } from \"./util.js\";\n\nconst SEED = 0xc3d2e1f0;\n// Workaround for missing math precision in JS.\nconst MASK_HIGH = 0xffff0000;\nconst MASK_LOW = 0xffff;\n\nclass MurmurHash3_64 {\n  constructor(seed) {\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n\n  update(input) {\n    let data, length;\n    if (typeof input === \"string\") {\n      data = new Uint8Array(input.length * 2);\n      length = 0;\n      for (let i = 0, ii = input.length; i < ii; i++) {\n        const code = input.charCodeAt(i);\n        if (code <= 0xff) {\n          data[length++] = code;\n        } else {\n          data[length++] = code >>> 8;\n          data[length++] = code & 0xff;\n        }\n      }\n    } else if (isArrayBuffer(input)) {\n      data = input.slice();\n      length = data.byteLength;\n    } else {\n      throw new Error(\n        \"Wrong data format in MurmurHash3_64_update. \" +\n          \"Input must be a string or array.\"\n      );\n    }\n\n    const blockCounts = length >> 2;\n    const tailLength = length - blockCounts * 4;\n    // We don't care about endianness here.\n    const dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n    let k1 = 0,\n      k2 = 0;\n    let h1 = this.h1,\n      h2 = this.h2;\n    const C1 = 0xcc9e2d51,\n      C2 = 0x1b873593;\n    const C1_LOW = C1 & MASK_LOW,\n      C2_LOW = C2 & MASK_LOW;\n\n    for (let i = 0; i < blockCounts; i++) {\n      if (i & 1) {\n        k1 = dataUint32[i];\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        h1 ^= k1;\n        h1 = (h1 << 13) | (h1 >>> 19);\n        h1 = h1 * 5 + 0xe6546b64;\n      } else {\n        k2 = dataUint32[i];\n        k2 = ((k2 * C1) & MASK_HIGH) | ((k2 * C1_LOW) & MASK_LOW);\n        k2 = (k2 << 15) | (k2 >>> 17);\n        k2 = ((k2 * C2) & MASK_HIGH) | ((k2 * C2_LOW) & MASK_LOW);\n        h2 ^= k2;\n        h2 = (h2 << 13) | (h2 >>> 19);\n        h2 = h2 * 5 + 0xe6546b64;\n      }\n    }\n\n    k1 = 0;\n\n    switch (tailLength) {\n      case 3:\n        k1 ^= data[blockCounts * 4 + 2] << 16;\n      /* falls through */\n      case 2:\n        k1 ^= data[blockCounts * 4 + 1] << 8;\n      /* falls through */\n      case 1:\n        k1 ^= data[blockCounts * 4];\n        /* falls through */\n\n        k1 = ((k1 * C1) & MASK_HIGH) | ((k1 * C1_LOW) & MASK_LOW);\n        k1 = (k1 << 15) | (k1 >>> 17);\n        k1 = ((k1 * C2) & MASK_HIGH) | ((k1 * C2_LOW) & MASK_LOW);\n        if (blockCounts & 1) {\n          h1 ^= k1;\n        } else {\n          h2 ^= k1;\n        }\n    }\n\n    this.h1 = h1;\n    this.h2 = h2;\n  }\n\n  hexdigest() {\n    let h1 = this.h1,\n      h2 = this.h2;\n\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0xed558ccd) & MASK_HIGH) | ((h1 * 0x8ccd) & MASK_LOW);\n    h2 =\n      ((h2 * 0xff51afd7) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xafd7ed55) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n    h1 = ((h1 * 0x1a85ec53) & MASK_HIGH) | ((h1 * 0xec53) & MASK_LOW);\n    h2 =\n      ((h2 * 0xc4ceb9fe) & MASK_HIGH) |\n      (((((h2 << 16) | (h1 >>> 16)) * 0xb9fe1a85) & MASK_HIGH) >>> 16);\n    h1 ^= h2 >>> 1;\n\n    return (\n      (h1 >>> 0).toString(16).padStart(8, \"0\") +\n      (h2 >>> 0).toString(16).padStart(8, \"0\")\n    );\n  }\n}\n\nexport { MurmurHash3_64 };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  FeatureTest,\n  isNodeJS,\n  shadow,\n  string32,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\n\nclass FontLoader {\n  #systemFonts = new Set();\n\n  constructor({\n    ownerDocument = globalThis.document,\n    styleElement = null, // For testing only.\n  }) {\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = new Set();\n    this.styleElement =\n      typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")\n        ? styleElement\n        : null;\n\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n      this.loadingRequests = [];\n      this.loadTestFontId = 0;\n    }\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.add(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  removeNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.delete(nativeFontFace);\n    this._document.fonts.delete(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    if (!this.styleElement) {\n      this.styleElement = this._document.createElement(\"style\");\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .append(this.styleElement);\n    }\n    const styleSheet = this.styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    for (const nativeFontFace of this.nativeFontFaces) {\n      this._document.fonts.delete(nativeFontFace);\n    }\n    this.nativeFontFaces.clear();\n    this.#systemFonts.clear();\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async loadSystemFont(info) {\n    if (!info || this.#systemFonts.has(info.loadedName)) {\n      return;\n    }\n    assert(\n      !this.disableFontFace,\n      \"loadSystemFont shouldn't be called when `disableFontFace` is set.\"\n    );\n\n    if (this.isFontLoadingAPISupported) {\n      const { loadedName, src, style } = info;\n      const fontFace = new FontFace(loadedName, src, style);\n      this.addNativeFontFace(fontFace);\n      try {\n        await fontFace.load();\n        this.#systemFonts.add(loadedName);\n      } catch {\n        warn(\n          `Cannot load system font: ${info.baseFontName}, installing it could help to improve PDF rendering.`\n        );\n\n        this.removeNativeFontFace(fontFace);\n      }\n      return;\n    }\n\n    unreachable(\n      \"Not implemented: loadSystemFont without the Font Loading API.\"\n    );\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || (font.missingFile && !font.systemFontInfo)) {\n      return;\n    }\n    font.attached = true;\n\n    if (font.systemFontInfo) {\n      await this.loadSystemFont(font.systemFontInfo);\n      return;\n    }\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n        throw new Error(\"Not implemented: async font loading\");\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent(font, request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  get isFontLoadingAPISupported() {\n    const hasFonts = !!this._document?.fonts;\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      return shadow(\n        this,\n        \"isFontLoadingAPISupported\",\n        hasFonts && !this.styleElement\n      );\n    }\n    return shadow(this, \"isFontLoadingAPISupported\", hasFonts);\n  }\n\n  get isSyncFontLoadingSupported() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n\n    let supported = false;\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n      if (isNodeJS) {\n        // Node.js - we can pretend that sync font loading is supported.\n        supported = true;\n      } else if (\n        typeof navigator !== \"undefined\" &&\n        // User agent string sniffing is bad, but there is no reliable way to\n        // tell if the font is fully loaded and ready to be used with canvas.\n        /Mozilla\\/5.0.*?rv:\\d+.*? Gecko/.test(navigator.userAgent)\n      ) {\n        // Firefox, from version 14, supports synchronous font loading.\n        supported = true;\n      }\n    }\n    return shadow(this, \"isSyncFontLoadingSupported\", supported);\n  }\n\n  _queueLoadingCallback(callback) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _queueLoadingCallback\");\n    }\n\n    function completeRequest() {\n      assert(!request.done, \"completeRequest() cannot be called twice.\");\n      request.done = true;\n\n      // Sending all completed requests in order of how they were queued.\n      while (loadingRequests.length > 0 && loadingRequests[0].done) {\n        const otherRequest = loadingRequests.shift();\n        setTimeout(otherRequest.callback, 0);\n      }\n    }\n\n    const { loadingRequests } = this;\n    const request = {\n      done: false,\n      complete: completeRequest,\n      callback,\n    };\n    loadingRequests.push(request);\n    return request;\n  }\n\n  get _loadTestFont() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _loadTestFont\");\n    }\n\n    // This is a CFF font with 1 glyph for '.' that fills its entire width\n    // and height.\n    const testFont = atob(\n      \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n        \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n        \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n        \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n        \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n        \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n        \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n        \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n        \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n        \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n        \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n        \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n        \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n        \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n        \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n        \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n        \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n        \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n    );\n    return shadow(this, \"_loadTestFont\", testFont);\n  }\n\n  _prepareFontLoadEvent(font, request) {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      throw new Error(\"Not implemented: _prepareFontLoadEvent\");\n    }\n\n    /** Hack begin */\n    // There's currently no event when a font has finished downloading so the\n    // following code is a dirty hack to 'guess' when a font is ready.\n    // It's assumed fonts are loaded in order, so add a known test font after\n    // the desired fonts and then test for the loading of that test font.\n\n    function int32(data, offset) {\n      return (\n        (data.charCodeAt(offset) << 24) |\n        (data.charCodeAt(offset + 1) << 16) |\n        (data.charCodeAt(offset + 2) << 8) |\n        (data.charCodeAt(offset + 3) & 0xff)\n      );\n    }\n    function spliceString(s, offset, remove, insert) {\n      const chunk1 = s.substring(0, offset);\n      const chunk2 = s.substring(offset + remove);\n      return chunk1 + insert + chunk2;\n    }\n    let i, ii;\n\n    // The temporary canvas is used to determine if fonts are loaded.\n    const canvas = this._document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext(\"2d\");\n\n    let called = 0;\n    function isFontReady(name, callback) {\n      // With setTimeout clamping this gives the font ~100ms to load.\n      if (++called > 30) {\n        warn(\"Load test font never loaded.\");\n        callback();\n        return;\n      }\n      ctx.font = \"30px \" + name;\n      ctx.fillText(\".\", 0, 20);\n      const imageData = ctx.getImageData(0, 0, 1, 1);\n      if (imageData.data[3] > 0) {\n        callback();\n        return;\n      }\n      setTimeout(isFontReady.bind(null, name, callback));\n    }\n\n    const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n    // Chromium seems to cache fonts based on a hash of the actual font data,\n    // so the font must be modified for each load test else it will appear to\n    // be loaded already.\n    // TODO: This could maybe be made faster by avoiding the btoa of the full\n    // font by splitting it in chunks before hand and padding the font id.\n    let data = this._loadTestFont;\n    const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n    data = spliceString(\n      data,\n      COMMENT_OFFSET,\n      loadTestFontId.length,\n      loadTestFontId\n    );\n    // CFF checksum is important for IE, adjusting it\n    const CFF_CHECKSUM_OFFSET = 16;\n    const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n    let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n    for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n      checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n    }\n    if (i < loadTestFontId.length) {\n      // align to 4 bytes boundary\n      checksum = (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n    }\n    data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n    const url = `url(data:font/opentype;base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n    this.insertRule(rule);\n\n    const div = this._document.createElement(\"div\");\n    div.style.visibility = \"hidden\";\n    div.style.width = div.style.height = \"10px\";\n    div.style.position = \"absolute\";\n    div.style.top = div.style.left = \"0px\";\n\n    for (const name of [font.loadedName, loadTestFontId]) {\n      const span = this._document.createElement(\"span\");\n      span.textContent = \"Hi\";\n      span.style.fontFamily = name;\n      div.append(span);\n    }\n    this._document.body.append(div);\n\n    isFontReady(loadTestFontId, () => {\n      div.remove();\n      request.complete();\n    });\n    /** Hack end */\n  }\n}\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      inspectFont = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._inspectFont = inspectFont;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    let nativeFontFace;\n    if (!this.cssFontInfo) {\n      nativeFontFace = new FontFace(this.loadedName, this.data, {});\n    } else {\n      const css = {\n        weight: this.cssFontInfo.fontWeight,\n      };\n      if (this.cssFontInfo.italicAngle) {\n        css.style = `oblique ${this.cssFontInfo.italicAngle}deg`;\n      }\n      nativeFontFace = new FontFace(\n        this.cssFontInfo.fontFamily,\n        this.data,\n        css\n      );\n    }\n\n    this._inspectFont?.(this);\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(this.data);\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    let rule;\n    if (!this.cssFontInfo) {\n      rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n    } else {\n      let css = `font-weight: ${this.cssFontInfo.fontWeight};`;\n      if (this.cssFontInfo.italicAngle) {\n        css += `font-style: oblique ${this.cssFontInfo.italicAngle}deg;`;\n      }\n      rule = `@font-face {font-family:\"${this.cssFontInfo.fontFamily}\";${css}src:${url}}`;\n    }\n\n    this._inspectFont?.(this, url);\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && FeatureTest.isEvalSupported) {\n      const jsBuf = [];\n      for (const current of cmds) {\n        const args = current.args !== undefined ? current.args.join(\",\") : \"\";\n        jsBuf.push(\"c.\", current.cmd, \"(\", args, \");\\n\");\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\n        \"c\",\n        \"size\",\n        jsBuf.join(\"\")\n      ));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (const current of cmds) {\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        // eslint-disable-next-line prefer-spread\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  BaseCanvasFactory,\n  BaseCMapReaderFactory,\n  BaseFilterFactory,\n  BaseStandardFontDataFactory,\n} from \"./base_factory.js\";\nimport { isNodeJS, warn } from \"../shared/util.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_utils.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"SKIP_BABEL\")) {\n  (function checkDOMMatrix() {\n    if (globalThis.DOMMatrix || !isNodeJS) {\n      return;\n    }\n    try {\n      globalThis.DOMMatrix = __non_webpack_require__(\"canvas\").DOMMatrix;\n    } catch (ex) {\n      warn(`Cannot polyfill \\`DOMMatrix\\`, rendering may be broken: \"${ex}\".`);\n    }\n  })();\n\n  (function checkPath2D() {\n    if (globalThis.Path2D || !isNodeJS) {\n      return;\n    }\n    try {\n      const { CanvasRenderingContext2D } = __non_webpack_require__(\"canvas\");\n      const { polyfillPath2D } = __non_webpack_require__(\"path2d-polyfill\");\n\n      globalThis.CanvasRenderingContext2D = CanvasRenderingContext2D;\n      polyfillPath2D(globalThis);\n    } catch (ex) {\n      warn(`Cannot polyfill \\`Path2D\\`, rendering may be broken: \"${ex}\".`);\n    }\n  })();\n}\n\nconst fetchData = function (url) {\n  return new Promise((resolve, reject) => {\n    const fs = __non_webpack_require__(\"fs\");\n    fs.readFile(url, (error, data) => {\n      if (error || !data) {\n        reject(new Error(error));\n        return;\n      }\n      resolve(new Uint8Array(data));\n    });\n  });\n};\n\nclass NodeFilterFactory extends BaseFilterFactory {}\n\nclass NodeCanvasFactory extends BaseCanvasFactory {\n  /**\n   * @ignore\n   */\n  _createCanvas(width, height) {\n    const Canvas = __non_webpack_require__(\"canvas\");\n    return Canvas.createCanvas(width, height);\n  }\n}\n\nclass NodeCMapReaderFactory extends BaseCMapReaderFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url, compressionType) {\n    return fetchData(url).then(data => {\n      return { cMapData: data, compressionType };\n    });\n  }\n}\n\nclass NodeStandardFontDataFactory extends BaseStandardFontDataFactory {\n  /**\n   * @ignore\n   */\n  _fetchData(url) {\n    return fetchData(url);\n  }\n}\n\nexport {\n  NodeCanvasFactory,\n  NodeCMapReaderFactory,\n  NodeFilterFactory,\n  NodeStandardFontDataFactory,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FeatureTest,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  isNodeJS,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  getCurrentTransform,\n  getCurrentTransformInverse,\n  PixelsPerInch,\n} from \"./display_utils.js\";\nimport {\n  getShadingPattern,\n  PathType,\n  TilingPattern,\n} from \"./pattern_helper.js\";\nimport { convertBlackAndWhiteToRGBA } from \"../shared/image_utils.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n// Minimal font size that would be used during canvas fillText operations.\nconst MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nconst MAX_FONT_SIZE = 100;\nconst MAX_GROUP_SIZE = 4096;\n\n// Defines the time the `executeOperatorList`-method is going to be executing\n// before it stops and schedules a continue of execution.\nconst EXECUTION_TIME = 15; // ms\n// Defines the number of steps before checking the execution time.\nconst EXECUTION_STEPS = 10;\n\n// To disable Type3 compilation, set the value to `-1`.\nconst MAX_SIZE_TO_COMPILE = 1000;\n\nconst FULL_CHUNK_HEIGHT = 16;\n\n/**\n * Overrides certain methods on a 2d ctx so that when they are called they\n * will also call the same method on the destCtx. The methods that are\n * overridden are all the transformation state modifiers, path creation, and\n * save/restore. We only forward these specific methods because they are the\n * only state modifiers that we cannot copy over when we switch contexts.\n *\n * To remove mirroring call `ctx._removeMirroring()`.\n *\n * @param {Object} ctx - The 2d canvas context that will duplicate its calls on\n *   the destCtx.\n * @param {Object} destCtx - The 2d canvas context that will receive the\n *   forwarded calls.\n */\nfunction mirrorContextOperations(ctx, destCtx) {\n  if (ctx._removeMirroring) {\n    throw new Error(\"Context is already forwarding operations.\");\n  }\n  ctx.__originalSave = ctx.save;\n  ctx.__originalRestore = ctx.restore;\n  ctx.__originalRotate = ctx.rotate;\n  ctx.__originalScale = ctx.scale;\n  ctx.__originalTranslate = ctx.translate;\n  ctx.__originalTransform = ctx.transform;\n  ctx.__originalSetTransform = ctx.setTransform;\n  ctx.__originalResetTransform = ctx.resetTransform;\n  ctx.__originalClip = ctx.clip;\n  ctx.__originalMoveTo = ctx.moveTo;\n  ctx.__originalLineTo = ctx.lineTo;\n  ctx.__originalBezierCurveTo = ctx.bezierCurveTo;\n  ctx.__originalRect = ctx.rect;\n  ctx.__originalClosePath = ctx.closePath;\n  ctx.__originalBeginPath = ctx.beginPath;\n\n  ctx._removeMirroring = () => {\n    ctx.save = ctx.__originalSave;\n    ctx.restore = ctx.__originalRestore;\n    ctx.rotate = ctx.__originalRotate;\n    ctx.scale = ctx.__originalScale;\n    ctx.translate = ctx.__originalTranslate;\n    ctx.transform = ctx.__originalTransform;\n    ctx.setTransform = ctx.__originalSetTransform;\n    ctx.resetTransform = ctx.__originalResetTransform;\n\n    ctx.clip = ctx.__originalClip;\n    ctx.moveTo = ctx.__originalMoveTo;\n    ctx.lineTo = ctx.__originalLineTo;\n    ctx.bezierCurveTo = ctx.__originalBezierCurveTo;\n    ctx.rect = ctx.__originalRect;\n    ctx.closePath = ctx.__originalClosePath;\n    ctx.beginPath = ctx.__originalBeginPath;\n    delete ctx._removeMirroring;\n  };\n\n  ctx.save = function ctxSave() {\n    destCtx.save();\n    this.__originalSave();\n  };\n\n  ctx.restore = function ctxRestore() {\n    destCtx.restore();\n    this.__originalRestore();\n  };\n\n  ctx.translate = function ctxTranslate(x, y) {\n    destCtx.translate(x, y);\n    this.__originalTranslate(x, y);\n  };\n\n  ctx.scale = function ctxScale(x, y) {\n    destCtx.scale(x, y);\n    this.__originalScale(x, y);\n  };\n\n  ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n    destCtx.transform(a, b, c, d, e, f);\n    this.__originalTransform(a, b, c, d, e, f);\n  };\n\n  ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n    destCtx.setTransform(a, b, c, d, e, f);\n    this.__originalSetTransform(a, b, c, d, e, f);\n  };\n\n  ctx.resetTransform = function ctxResetTransform() {\n    destCtx.resetTransform();\n    this.__originalResetTransform();\n  };\n\n  ctx.rotate = function ctxRotate(angle) {\n    destCtx.rotate(angle);\n    this.__originalRotate(angle);\n  };\n\n  ctx.clip = function ctxRotate(rule) {\n    destCtx.clip(rule);\n    this.__originalClip(rule);\n  };\n\n  ctx.moveTo = function (x, y) {\n    destCtx.moveTo(x, y);\n    this.__originalMoveTo(x, y);\n  };\n\n  ctx.lineTo = function (x, y) {\n    destCtx.lineTo(x, y);\n    this.__originalLineTo(x, y);\n  };\n\n  ctx.bezierCurveTo = function (cp1x, cp1y, cp2x, cp2y, x, y) {\n    destCtx.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n    this.__originalBezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n  };\n\n  ctx.rect = function (x, y, width, height) {\n    destCtx.rect(x, y, width, height);\n    this.__originalRect(x, y, width, height);\n  };\n\n  ctx.closePath = function () {\n    destCtx.closePath();\n    this.__originalClosePath();\n  };\n\n  ctx.beginPath = function () {\n    destCtx.beginPath();\n    this.__originalBeginPath();\n  };\n}\n\nclass CachedCanvases {\n  constructor(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n\n  getCanvas(id, width, height) {\n    let canvasEntry;\n    if (this.cache[id] !== undefined) {\n      canvasEntry = this.cache[id];\n      this.canvasFactory.reset(canvasEntry, width, height);\n    } else {\n      canvasEntry = this.canvasFactory.create(width, height);\n      this.cache[id] = canvasEntry;\n    }\n    return canvasEntry;\n  }\n\n  delete(id) {\n    delete this.cache[id];\n  }\n\n  clear() {\n    for (const id in this.cache) {\n      const canvasEntry = this.cache[id];\n      this.canvasFactory.destroy(canvasEntry);\n      delete this.cache[id];\n    }\n  }\n}\n\nfunction drawImageAtIntegerCoords(\n  ctx,\n  srcImg,\n  srcX,\n  srcY,\n  srcW,\n  srcH,\n  destX,\n  destY,\n  destW,\n  destH\n) {\n  const [a, b, c, d, tx, ty] = getCurrentTransform(ctx);\n  if (b === 0 && c === 0) {\n    // top-left corner is at (X, Y) and\n    // bottom-right one is at (X + width, Y + height).\n\n    // If leftX is 4.321 then it's rounded to 4.\n    // If width is 10.432 then it's rounded to 11 because\n    // rightX = leftX + width = 14.753 which is rounded to 15\n    // so after rounding the total width is 11 (15 - 4).\n    // It's why we can't just floor/ceil uniformly, it just depends\n    // on the values we've.\n\n    const tlX = destX * a + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destY * d + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destX + destW) * a + tx;\n\n    // Some pdf contains images with 1x1 images so in case of 0-width after\n    // scaling we must fallback on 1 to be sure there is something.\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destY + destH) * d + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    // We must apply a transformation in order to apply it on the image itself.\n    // For example if a == 1 && d == -1, it means that the image itself is\n    // mirrored w.r.t. the x-axis.\n    ctx.setTransform(Math.sign(a), 0, 0, Math.sign(d), rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rWidth, rHeight);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rWidth, rHeight];\n  }\n\n  if (a === 0 && d === 0) {\n    // This path is taken in issue9462.pdf (page 3).\n    const tlX = destY * c + tx;\n    const rTlX = Math.round(tlX);\n    const tlY = destX * b + ty;\n    const rTlY = Math.round(tlY);\n    const brX = (destY + destH) * c + tx;\n    const rWidth = Math.abs(Math.round(brX) - rTlX) || 1;\n    const brY = (destX + destW) * b + ty;\n    const rHeight = Math.abs(Math.round(brY) - rTlY) || 1;\n\n    ctx.setTransform(0, Math.sign(b), Math.sign(c), 0, rTlX, rTlY);\n    ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, 0, 0, rHeight, rWidth);\n    ctx.setTransform(a, b, c, d, tx, ty);\n\n    return [rHeight, rWidth];\n  }\n\n  // Not a scale matrix so let the render handle the case without rounding.\n  ctx.drawImage(srcImg, srcX, srcY, srcW, srcH, destX, destY, destW, destH);\n\n  const scaleX = Math.hypot(a, b);\n  const scaleY = Math.hypot(c, d);\n  return [scaleX * destW, scaleY * destH];\n}\n\nfunction compileType3Glyph(imgData) {\n  const { width, height } = imgData;\n  if (width > MAX_SIZE_TO_COMPILE || height > MAX_SIZE_TO_COMPILE) {\n    return null;\n  }\n\n  const POINT_TO_PROCESS_LIMIT = 1000;\n  const POINT_TYPES = new Uint8Array([\n    0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0,\n  ]);\n\n  const width1 = width + 1;\n  let points = new Uint8Array(width1 * (height + 1));\n  let i, j, j0;\n\n  // decodes bit-packed mask data\n  const lineSize = (width + 7) & ~7;\n  let data = new Uint8Array(lineSize * height),\n    pos = 0;\n  for (const elem of imgData.data) {\n    let mask = 128;\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  let count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    let sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  const steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  const path = new Path2D();\n\n  for (i = 0; count && i <= height; i++) {\n    let p = i * width1;\n    const end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    path.moveTo(p % width1, i);\n\n    const p0 = p;\n    let type = points[p];\n    do {\n      const step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      const pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n      path.lineTo(p % width1, (p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    --i;\n  }\n\n  // Immediately release the, potentially large, `Uint8Array`s after parsing.\n  data = null;\n  points = null;\n\n  const drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.fill(path);\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nclass CanvasExtraState {\n  constructor(width, height) {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.transferMaps = \"none\";\n\n    this.startNewPathAndClipBox([0, 0, width, height]);\n  }\n\n  clone() {\n    const clone = Object.create(this);\n    clone.clipBox = this.clipBox.slice();\n    return clone;\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  updatePathMinMax(transform, x, y) {\n    [x, y] = Util.applyTransform([x, y], transform);\n    this.minX = Math.min(this.minX, x);\n    this.minY = Math.min(this.minY, y);\n    this.maxX = Math.max(this.maxX, x);\n    this.maxY = Math.max(this.maxY, y);\n  }\n\n  updateRectMinMax(transform, rect) {\n    const p1 = Util.applyTransform(rect, transform);\n    const p2 = Util.applyTransform(rect.slice(2), transform);\n    this.minX = Math.min(this.minX, p1[0], p2[0]);\n    this.minY = Math.min(this.minY, p1[1], p2[1]);\n    this.maxX = Math.max(this.maxX, p1[0], p2[0]);\n    this.maxY = Math.max(this.maxY, p1[1], p2[1]);\n  }\n\n  updateScalingPathMinMax(transform, minMax) {\n    Util.scaleMinMax(transform, minMax);\n    this.minX = Math.min(this.minX, minMax[0]);\n    this.maxX = Math.max(this.maxX, minMax[1]);\n    this.minY = Math.min(this.minY, minMax[2]);\n    this.maxY = Math.max(this.maxY, minMax[3]);\n  }\n\n  updateCurvePathMinMax(transform, x0, y0, x1, y1, x2, y2, x3, y3, minMax) {\n    const box = Util.bezierBoundingBox(x0, y0, x1, y1, x2, y2, x3, y3);\n    if (minMax) {\n      minMax[0] = Math.min(minMax[0], box[0], box[2]);\n      minMax[1] = Math.max(minMax[1], box[0], box[2]);\n      minMax[2] = Math.min(minMax[2], box[1], box[3]);\n      minMax[3] = Math.max(minMax[3], box[1], box[3]);\n      return;\n    }\n    this.updateRectMinMax(transform, box);\n  }\n\n  getPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    const box = [this.minX, this.minY, this.maxX, this.maxY];\n    if (pathType === PathType.STROKE) {\n      if (!transform) {\n        unreachable(\"Stroke bounding box must include transform.\");\n      }\n      // Stroked paths can be outside of the path bounding box by 1/2 the line\n      // width.\n      const scale = Util.singularValueDecompose2dScale(transform);\n      const xStrokePad = (scale[0] * this.lineWidth) / 2;\n      const yStrokePad = (scale[1] * this.lineWidth) / 2;\n      box[0] -= xStrokePad;\n      box[1] -= yStrokePad;\n      box[2] += xStrokePad;\n      box[3] += yStrokePad;\n    }\n    return box;\n  }\n\n  updateClipFromPath() {\n    const intersect = Util.intersect(this.clipBox, this.getPathBoundingBox());\n    this.startNewPathAndClipBox(intersect || [0, 0, 0, 0]);\n  }\n\n  isEmptyClip() {\n    return this.minX === Infinity;\n  }\n\n  startNewPathAndClipBox(box) {\n    this.clipBox = box;\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = 0;\n    this.maxY = 0;\n  }\n\n  getClippedPathBoundingBox(pathType = PathType.FILL, transform = null) {\n    return Util.intersect(\n      this.clipBox,\n      this.getPathBoundingBox(pathType, transform)\n    );\n  }\n}\n\nfunction putBinaryImageData(ctx, imgData) {\n  if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n    ctx.putImageData(imgData, 0, 0);\n    return;\n  }\n\n  // Put the image data to the canvas in chunks, rather than putting the\n  // whole image at once.  This saves JS memory, because the ImageData object\n  // is smaller. It also possibly saves C++ memory within the implementation\n  // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n  // the data passed to putImageData()). |n| shouldn't be too small, however,\n  // because too many putImageData() calls will slow things down.\n  //\n  // Note: as written, if the last chunk is partial, the putImageData() call\n  // will (conceptually) put pixels past the bounds of the canvas.  But\n  // that's ok; any such pixels are ignored.\n\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0,\n    destPos;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n  let i, j, thisChunkHeight, elemsInThisChunk;\n\n  // There are multiple forms in which the pixel data can be passed, and\n  // imgData.kind tells us which one this is.\n  if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n    // Grayscale, 1 bit per pixel (i.e. black-and-white).\n    const srcLength = src.byteLength;\n    const dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n    const dest32DataLength = dest32.length;\n    const fullSrcDiff = (width + 7) >> 3;\n    const white = 0xffffffff;\n    const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n\n    for (i = 0; i < totalChunks; i++) {\n      thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n      destPos = 0;\n      for (j = 0; j < thisChunkHeight; j++) {\n        const srcDiff = srcLength - srcPos;\n        let k = 0;\n        const kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n        const kEndUnrolled = kEnd & ~7;\n        let mask = 0;\n        let srcByte = 0;\n        for (; k < kEndUnrolled; k += 8) {\n          srcByte = src[srcPos++];\n          dest32[destPos++] = srcByte & 128 ? white : black;\n          dest32[destPos++] = srcByte & 64 ? white : black;\n          dest32[destPos++] = srcByte & 32 ? white : black;\n          dest32[destPos++] = srcByte & 16 ? white : black;\n          dest32[destPos++] = srcByte & 8 ? white : black;\n          dest32[destPos++] = srcByte & 4 ? white : black;\n          dest32[destPos++] = srcByte & 2 ? white : black;\n          dest32[destPos++] = srcByte & 1 ? white : black;\n        }\n        for (; k < kEnd; k++) {\n          if (mask === 0) {\n            srcByte = src[srcPos++];\n            mask = 128;\n          }\n\n          dest32[destPos++] = srcByte & mask ? white : black;\n          mask >>= 1;\n        }\n      }\n      // We ran out of input. Make all remaining pixels transparent.\n      while (destPos < dest32DataLength) {\n        dest32[destPos++] = 0;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n    // RGBA, 32-bits per pixel.\n    j = 0;\n    elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n    for (i = 0; i < fullChunks; i++) {\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n      srcPos += elemsInThisChunk;\n\n      ctx.putImageData(chunkImgData, 0, j);\n      j += FULL_CHUNK_HEIGHT;\n    }\n    if (i < totalChunks) {\n      elemsInThisChunk = width * partialChunkHeight * 4;\n      dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n      ctx.putImageData(chunkImgData, 0, j);\n    }\n  } else if (imgData.kind === ImageKind.RGB_24BPP) {\n    // RGB, 24-bits per pixel.\n    thisChunkHeight = FULL_CHUNK_HEIGHT;\n    elemsInThisChunk = width * thisChunkHeight;\n    for (i = 0; i < totalChunks; i++) {\n      if (i >= fullChunks) {\n        thisChunkHeight = partialChunkHeight;\n        elemsInThisChunk = width * thisChunkHeight;\n      }\n\n      destPos = 0;\n      for (j = elemsInThisChunk; j--; ) {\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = src[srcPos++];\n        dest[destPos++] = 255;\n      }\n\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  } else {\n    throw new Error(`bad image kind: ${imgData.kind}`);\n  }\n}\n\nfunction putBinaryImageMask(ctx, imgData) {\n  if (imgData.bitmap) {\n    // The bitmap has been created in the worker.\n    ctx.drawImage(imgData.bitmap, 0, 0);\n    return;\n  }\n\n  // Slow path: OffscreenCanvas isn't available in the worker.\n  const height = imgData.height,\n    width = imgData.width;\n  const partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n  const fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n  const totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n  const chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n  let srcPos = 0;\n  const src = imgData.data;\n  const dest = chunkImgData.data;\n\n  for (let i = 0; i < totalChunks; i++) {\n    const thisChunkHeight =\n      i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n    // Expand the mask so it can be used by the canvas.  Any required\n    // inversion has already been handled.\n\n    ({ srcPos } = convertBlackAndWhiteToRGBA({\n      src,\n      srcPos,\n      dest,\n      width,\n      height: thisChunkHeight,\n      nonBlackColor: 0,\n    }));\n\n    ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n  }\n}\n\nfunction copyCtxState(sourceCtx, destCtx) {\n  const properties = [\n    \"strokeStyle\",\n    \"fillStyle\",\n    \"fillRule\",\n    \"globalAlpha\",\n    \"lineWidth\",\n    \"lineCap\",\n    \"lineJoin\",\n    \"miterLimit\",\n    \"globalCompositeOperation\",\n    \"font\",\n    \"filter\",\n  ];\n  for (const property of properties) {\n    if (sourceCtx[property] !== undefined) {\n      destCtx[property] = sourceCtx[property];\n    }\n  }\n  if (sourceCtx.setLineDash !== undefined) {\n    destCtx.setLineDash(sourceCtx.getLineDash());\n    destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n  }\n}\n\nfunction resetCtxToDefault(ctx) {\n  ctx.strokeStyle = ctx.fillStyle = \"#000000\";\n  ctx.fillRule = \"nonzero\";\n  ctx.globalAlpha = 1;\n  ctx.lineWidth = 1;\n  ctx.lineCap = \"butt\";\n  ctx.lineJoin = \"miter\";\n  ctx.miterLimit = 10;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.font = \"10px sans-serif\";\n  if (ctx.setLineDash !== undefined) {\n    ctx.setLineDash([]);\n    ctx.lineDashOffset = 0;\n  }\n  if (\n    (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n    !isNodeJS\n  ) {\n    const { filter } = ctx;\n    if (filter !== \"none\" && filter !== \"\") {\n      ctx.filter = \"none\";\n    }\n  }\n}\n\nfunction composeSMaskBackdrop(bytes, r0, g0, b0) {\n  const length = bytes.length;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = bytes[i];\n    if (alpha === 0) {\n      bytes[i - 3] = r0;\n      bytes[i - 2] = g0;\n      bytes[i - 1] = b0;\n    } else if (alpha < 255) {\n      const alpha_ = 255 - alpha;\n      bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n      bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n      bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n    }\n  }\n}\n\nfunction composeSMaskAlpha(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  const scale = 1 / 255;\n  for (let i = 3; i < length; i += 4) {\n    const alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n    layerData[i] = (layerData[i] * alpha * scale) | 0;\n  }\n}\n\nfunction composeSMaskLuminosity(maskData, layerData, transferMap) {\n  const length = maskData.length;\n  for (let i = 3; i < length; i += 4) {\n    const y =\n      maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n      maskData[i - 2] * 152 + // * 0.59 ....\n      maskData[i - 1] * 28; // * 0.11 ....\n    layerData[i] = transferMap\n      ? (layerData[i] * transferMap[y >> 8]) >> 8\n      : (layerData[i] * y) >> 16;\n  }\n}\n\nfunction genericComposeSMask(\n  maskCtx,\n  layerCtx,\n  width,\n  height,\n  subtype,\n  backdrop,\n  transferMap,\n  layerOffsetX,\n  layerOffsetY,\n  maskOffsetX,\n  maskOffsetY\n) {\n  const hasBackdrop = !!backdrop;\n  const r0 = hasBackdrop ? backdrop[0] : 0;\n  const g0 = hasBackdrop ? backdrop[1] : 0;\n  const b0 = hasBackdrop ? backdrop[2] : 0;\n\n  const composeFn =\n    subtype === \"Luminosity\" ? composeSMaskLuminosity : composeSMaskAlpha;\n\n  // processing image in chunks to save memory\n  const PIXELS_TO_PROCESS = 1048576;\n  const chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n  for (let row = 0; row < height; row += chunkSize) {\n    const chunkHeight = Math.min(chunkSize, height - row);\n    const maskData = maskCtx.getImageData(\n      layerOffsetX - maskOffsetX,\n      row + (layerOffsetY - maskOffsetY),\n      width,\n      chunkHeight\n    );\n    const layerData = layerCtx.getImageData(\n      layerOffsetX,\n      row + layerOffsetY,\n      width,\n      chunkHeight\n    );\n\n    if (hasBackdrop) {\n      composeSMaskBackdrop(maskData.data, r0, g0, b0);\n    }\n    composeFn(maskData.data, layerData.data, transferMap);\n\n    layerCtx.putImageData(layerData, layerOffsetX, row + layerOffsetY);\n  }\n}\n\nfunction composeSMask(ctx, smask, layerCtx, layerBox) {\n  const layerOffsetX = layerBox[0];\n  const layerOffsetY = layerBox[1];\n  const layerWidth = layerBox[2] - layerOffsetX;\n  const layerHeight = layerBox[3] - layerOffsetY;\n  if (layerWidth === 0 || layerHeight === 0) {\n    return;\n  }\n  genericComposeSMask(\n    smask.context,\n    layerCtx,\n    layerWidth,\n    layerHeight,\n    smask.subtype,\n    smask.backdrop,\n    smask.transferMap,\n    layerOffsetX,\n    layerOffsetY,\n    smask.offsetX,\n    smask.offsetY\n  );\n  ctx.save();\n  ctx.globalAlpha = 1;\n  ctx.globalCompositeOperation = \"source-over\";\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.drawImage(layerCtx.canvas, 0, 0);\n  ctx.restore();\n}\n\nfunction getImageSmoothingEnabled(transform, interpolate) {\n  const scale = Util.singularValueDecompose2dScale(transform);\n  // Round to a 32bit float so that `<=` check below will pass for numbers that\n  // are very close, but not exactly the same 64bit floats.\n  scale[0] = Math.fround(scale[0]);\n  scale[1] = Math.fround(scale[1]);\n  const actualScale = Math.fround(\n    (globalThis.devicePixelRatio || 1) * PixelsPerInch.PDF_TO_CSS_UNITS\n  );\n  if (interpolate !== undefined) {\n    // If the value is explicitly set use it.\n    return interpolate;\n  } else if (scale[0] <= actualScale || scale[1] <= actualScale) {\n    // Smooth when downscaling.\n    return true;\n  }\n  // Don't smooth when upscaling.\n  return false;\n}\n\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\nconst NORMAL_CLIP = {};\nconst EO_CLIP = {};\n\nclass CanvasGraphics {\n  constructor(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    filterFactory,\n    { optionalContentConfig, markedContentStack = null },\n    annotationCanvasMap,\n    pageColors\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.filterFactory = filterFactory;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see\n    // PDF spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.suspendedCtx = null;\n    this.contentVisible = true;\n    this.markedContentStack = markedContentStack || [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    this.cachedPatterns = new Map();\n    this.annotationCanvasMap = annotationCanvasMap;\n    this.viewportScale = 1;\n    this.outputScaleX = 1;\n    this.outputScaleY = 1;\n    this.pageColors = pageColors;\n\n    this._cachedScaleForStroking = [-1, 0];\n    this._cachedGetSinglePixelWidth = null;\n    this._cachedBitmapsMap = new Map();\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  beginDrawing({\n    transform,\n    viewport,\n    transparency = false,\n    background = null,\n  }) {\n    // For pdfs that use blend modes we have to clear the canvas else certain\n    // blend modes can look wrong since we'd be blending with a white\n    // backdrop. The problem with a transparent backdrop though is we then\n    // don't get sub pixel anti aliasing on text, creating temporary\n    // transparent canvas when we have blend modes.\n    const width = this.ctx.canvas.width;\n    const height = this.ctx.canvas.height;\n\n    const savedFillStyle = this.ctx.fillStyle;\n    this.ctx.fillStyle = background || \"#ffffff\";\n    this.ctx.fillRect(0, 0, width, height);\n    this.ctx.fillStyle = savedFillStyle;\n\n    if (transparency) {\n      const transparentCanvas = this.cachedCanvases.getCanvas(\n        \"transparent\",\n        width,\n        height\n      );\n      this.compositeCtx = this.ctx;\n      this.transparentCanvas = transparentCanvas.canvas;\n      this.ctx = transparentCanvas.context;\n      this.ctx.save();\n      // The transform can be applied before rendering, transferring it to\n      // the new canvas.\n      this.ctx.transform(...getCurrentTransform(this.compositeCtx));\n    }\n\n    this.ctx.save();\n    resetCtxToDefault(this.ctx);\n    if (transform) {\n      this.ctx.transform(...transform);\n      this.outputScaleX = transform[0];\n      this.outputScaleY = transform[0];\n    }\n    this.ctx.transform(...viewport.transform);\n    this.viewportScale = viewport.scale;\n\n    this.baseTransform = getCurrentTransform(this.ctx);\n  }\n\n  executeOperatorList(\n    operatorList,\n    executionStartIdx,\n    continueCallback,\n    stepper\n  ) {\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    let i = executionStartIdx || 0;\n    const argsArrayLen = argsArray.length;\n\n    // Sometimes the OperatorList to execute is empty.\n    if (argsArrayLen === i) {\n      return i;\n    }\n\n    const chunkOperations =\n      argsArrayLen - i > EXECUTION_STEPS &&\n      typeof continueCallback === \"function\";\n    const endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n    let steps = 0;\n\n    const commonObjs = this.commonObjs;\n    const objs = this.objs;\n    let fnId;\n\n    while (true) {\n      if (stepper !== undefined && i === stepper.nextBreakPoint) {\n        stepper.breakIt(i, continueCallback);\n        return i;\n      }\n\n      fnId = fnArray[i];\n\n      if (fnId !== OPS.dependency) {\n        // eslint-disable-next-line prefer-spread\n        this[fnId].apply(this, argsArray[i]);\n      } else {\n        for (const depObjId of argsArray[i]) {\n          const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n          // If the promise isn't resolved yet, add the continueCallback\n          // to the promise and bail out.\n          if (!objsPool.has(depObjId)) {\n            objsPool.get(depObjId, continueCallback);\n            return i;\n          }\n        }\n      }\n\n      i++;\n\n      // If the entire operatorList was executed, stop as were done.\n      if (i === argsArrayLen) {\n        return i;\n      }\n\n      // If the execution took longer then a certain amount of time and\n      // `continueCallback` is specified, interrupt the execution.\n      if (chunkOperations && ++steps > EXECUTION_STEPS) {\n        if (Date.now() > endTime) {\n          continueCallback();\n          return i;\n        }\n        steps = 0;\n      }\n\n      // If the operatorList isn't executed completely yet OR the execution\n      // time was short enough, do another execution round.\n    }\n  }\n\n  #restoreInitialState() {\n    // Finishing all opened operations such as SMask group painting.\n    while (this.stateStack.length || this.inSMaskMode) {\n      this.restore();\n    }\n\n    this.ctx.restore();\n\n    if (this.transparentCanvas) {\n      this.ctx = this.compositeCtx;\n      this.ctx.save();\n      this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n      this.ctx.drawImage(this.transparentCanvas, 0, 0);\n      this.ctx.restore();\n      this.transparentCanvas = null;\n    }\n  }\n\n  endDrawing() {\n    this.#restoreInitialState();\n\n    this.cachedCanvases.clear();\n    this.cachedPatterns.clear();\n\n    for (const cache of this._cachedBitmapsMap.values()) {\n      for (const canvas of cache.values()) {\n        if (\n          typeof HTMLCanvasElement !== \"undefined\" &&\n          canvas instanceof HTMLCanvasElement\n        ) {\n          canvas.width = canvas.height = 0;\n        }\n      }\n      cache.clear();\n    }\n    this._cachedBitmapsMap.clear();\n    this.#drawFilter();\n  }\n\n  #drawFilter() {\n    if (this.pageColors) {\n      const hcmFilterId = this.filterFactory.addHCMFilter(\n        this.pageColors.foreground,\n        this.pageColors.background\n      );\n      if (hcmFilterId !== \"none\") {\n        const savedFilter = this.ctx.filter;\n        this.ctx.filter = hcmFilterId;\n        this.ctx.drawImage(this.ctx.canvas, 0, 0);\n        this.ctx.filter = savedFilter;\n      }\n    }\n  }\n\n  _scaleImage(img, inverseTransform) {\n    // Vertical or horizontal scaling shall not be more than 2 to not lose the\n    // pixels during drawImage operation, painting on the temporary canvas(es)\n    // that are twice smaller in size.\n    const width = img.width;\n    const height = img.height;\n    let widthScale = Math.max(\n      Math.hypot(inverseTransform[0], inverseTransform[1]),\n      1\n    );\n    let heightScale = Math.max(\n      Math.hypot(inverseTransform[2], inverseTransform[3]),\n      1\n    );\n\n    let paintWidth = width,\n      paintHeight = height;\n    let tmpCanvasId = \"prescale1\";\n    let tmpCanvas, tmpCtx;\n    while (\n      (widthScale > 2 && paintWidth > 1) ||\n      (heightScale > 2 && paintHeight > 1)\n    ) {\n      let newWidth = paintWidth,\n        newHeight = paintHeight;\n      if (widthScale > 2 && paintWidth > 1) {\n        // See bug 1820511 (Windows specific bug).\n        // TODO: once the above bug is fixed we could revert to:\n        // newWidth = Math.ceil(paintWidth / 2);\n        newWidth =\n          paintWidth >= 16384\n            ? Math.floor(paintWidth / 2) - 1 || 1\n            : Math.ceil(paintWidth / 2);\n        widthScale /= paintWidth / newWidth;\n      }\n      if (heightScale > 2 && paintHeight > 1) {\n        // TODO: see the comment above.\n        newHeight =\n          paintHeight >= 16384\n            ? Math.floor(paintHeight / 2) - 1 || 1\n            : Math.ceil(paintHeight) / 2;\n        heightScale /= paintHeight / newHeight;\n      }\n      tmpCanvas = this.cachedCanvases.getCanvas(\n        tmpCanvasId,\n        newWidth,\n        newHeight\n      );\n      tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, newWidth, newHeight);\n      tmpCtx.drawImage(\n        img,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      img = tmpCanvas.canvas;\n      paintWidth = newWidth;\n      paintHeight = newHeight;\n      tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n    }\n    return {\n      img,\n      paintWidth,\n      paintHeight,\n    };\n  }\n\n  _createMaskCanvas(img) {\n    const ctx = this.ctx;\n    const { width, height } = img;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    const currentTransform = getCurrentTransform(ctx);\n\n    let cache, cacheKey, scaled, maskCanvas;\n    if ((img.bitmap || img.data) && img.count > 1) {\n      const mainKey = img.bitmap || img.data.buffer;\n      // We're reusing the same image several times, so we can cache it.\n      // In case we've a pattern fill we just keep the scaled version of\n      // the image.\n      // Only the scaling part matters, the translation part is just used\n      // to compute offsets (but not when filling patterns see #15573).\n      // TODO: handle the case of a pattern fill if it's possible.\n      cacheKey = JSON.stringify(\n        isPatternFill\n          ? currentTransform\n          : [currentTransform.slice(0, 4), fillColor]\n      );\n\n      cache = this._cachedBitmapsMap.get(mainKey);\n      if (!cache) {\n        cache = new Map();\n        this._cachedBitmapsMap.set(mainKey, cache);\n      }\n      const cachedImage = cache.get(cacheKey);\n      if (cachedImage && !isPatternFill) {\n        const offsetX = Math.round(\n          Math.min(currentTransform[0], currentTransform[2]) +\n            currentTransform[4]\n        );\n        const offsetY = Math.round(\n          Math.min(currentTransform[1], currentTransform[3]) +\n            currentTransform[5]\n        );\n        return {\n          canvas: cachedImage,\n          offsetX,\n          offsetY,\n        };\n      }\n      scaled = cachedImage;\n    }\n\n    if (!scaled) {\n      maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n      putBinaryImageMask(maskCanvas.context, img);\n    }\n\n    // Create the mask canvas at the size it will be drawn at and also set\n    // its transform to match the current transform so if there are any\n    // patterns applied they will be applied relative to the correct\n    // transform.\n\n    let maskToCanvas = Util.transform(currentTransform, [\n      1 / width,\n      0,\n      0,\n      -1 / height,\n      0,\n      0,\n    ]);\n    maskToCanvas = Util.transform(maskToCanvas, [1, 0, 0, 1, 0, -height]);\n    const cord1 = Util.applyTransform([0, 0], maskToCanvas);\n    const cord2 = Util.applyTransform([width, height], maskToCanvas);\n    const rect = Util.normalizeRect([cord1[0], cord1[1], cord2[0], cord2[1]]);\n    const drawnWidth = Math.round(rect[2] - rect[0]) || 1;\n    const drawnHeight = Math.round(rect[3] - rect[1]) || 1;\n    const fillCanvas = this.cachedCanvases.getCanvas(\n      \"fillCanvas\",\n      drawnWidth,\n      drawnHeight\n    );\n    const fillCtx = fillCanvas.context;\n\n    // The offset will be the top-left cordinate mask.\n    // If objToCanvas is [a,b,c,d,e,f] then:\n    //   - offsetX = min(a, c) + e\n    //   - offsetY = min(b, d) + f\n    const offsetX = Math.min(cord1[0], cord2[0]);\n    const offsetY = Math.min(cord1[1], cord2[1]);\n    fillCtx.translate(-offsetX, -offsetY);\n    fillCtx.transform(...maskToCanvas);\n\n    if (!scaled) {\n      // Pre-scale if needed to improve image smoothing.\n      scaled = this._scaleImage(\n        maskCanvas.canvas,\n        getCurrentTransformInverse(fillCtx)\n      );\n      scaled = scaled.img;\n      if (cache && isPatternFill) {\n        cache.set(cacheKey, scaled);\n      }\n    }\n\n    fillCtx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      getCurrentTransform(fillCtx),\n      img.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      fillCtx,\n      scaled,\n      0,\n      0,\n      scaled.width,\n      scaled.height,\n      0,\n      0,\n      width,\n      height\n    );\n    fillCtx.globalCompositeOperation = \"source-in\";\n\n    const inverse = Util.transform(getCurrentTransformInverse(fillCtx), [\n      1,\n      0,\n      0,\n      1,\n      -offsetX,\n      -offsetY,\n    ]);\n    fillCtx.fillStyle = isPatternFill\n      ? fillColor.getPattern(ctx, this, inverse, PathType.FILL)\n      : fillColor;\n\n    fillCtx.fillRect(0, 0, width, height);\n\n    if (cache && !isPatternFill) {\n      // The fill canvas is put in the cache associated to the mask image\n      // so we must remove from the cached canvas: it mustn't be used again.\n      this.cachedCanvases.delete(\"fillCanvas\");\n      cache.set(cacheKey, fillCanvas.canvas);\n    }\n\n    // Round the offsets to avoid drawing fractional pixels.\n    return {\n      canvas: fillCanvas.canvas,\n      offsetX: Math.round(offsetX),\n      offsetY: Math.round(offsetY),\n    };\n  }\n\n  // Graphics state\n  setLineWidth(width) {\n    if (width !== this.current.lineWidth) {\n      this._cachedScaleForStroking[0] = -1;\n    }\n    this.current.lineWidth = width;\n    this.ctx.lineWidth = width;\n  }\n\n  setLineCap(style) {\n    this.ctx.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.ctx.miterLimit = limit;\n  }\n\n  setDash(dashArray, dashPhase) {\n    const ctx = this.ctx;\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash(dashArray);\n      ctx.lineDashOffset = dashPhase;\n    }\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value[0], value[1]);\n          break;\n        case \"CA\":\n          this.current.strokeAlpha = value;\n          break;\n        case \"ca\":\n          this.current.fillAlpha = value;\n          this.ctx.globalAlpha = value;\n          break;\n        case \"BM\":\n          this.ctx.globalCompositeOperation = value;\n          break;\n        case \"SMask\":\n          this.current.activeSMask = value ? this.tempSMask : null;\n          this.tempSMask = null;\n          this.checkSMaskState();\n          break;\n        case \"TR\":\n          this.ctx.filter = this.current.transferMaps =\n            this.filterFactory.addFilter(value);\n          break;\n      }\n    }\n  }\n\n  get inSMaskMode() {\n    return !!this.suspendedCtx;\n  }\n\n  checkSMaskState() {\n    const inSMaskMode = this.inSMaskMode;\n    if (this.current.activeSMask && !inSMaskMode) {\n      this.beginSMaskMode();\n    } else if (!this.current.activeSMask && inSMaskMode) {\n      this.endSMaskMode();\n    }\n    // Else, the state is okay and nothing needs to be done.\n  }\n\n  /**\n   * Soft mask mode takes the current main drawing canvas and replaces it with\n   * a temporary canvas. Any drawing operations that happen on the temporary\n   * canvas need to be composed with the main canvas that was suspended (see\n   * `compose()`). The temporary canvas also duplicates many of its operations\n   * on the suspended canvas to keep them in sync, so that when the soft mask\n   * mode ends any clipping paths or transformations will still be active and in\n   * the right order on the canvas' graphics state stack.\n   */\n  beginSMaskMode() {\n    if (this.inSMaskMode) {\n      throw new Error(\"beginSMaskMode called while already in smask mode\");\n    }\n    const drawnWidth = this.ctx.canvas.width;\n    const drawnHeight = this.ctx.canvas.height;\n    const cacheId = \"smaskGroupAt\" + this.groupLevel;\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight\n    );\n    this.suspendedCtx = this.ctx;\n    this.ctx = scratchCanvas.context;\n    const ctx = this.ctx;\n    ctx.setTransform(...getCurrentTransform(this.suspendedCtx));\n    copyCtxState(this.suspendedCtx, ctx);\n    mirrorContextOperations(ctx, this.suspendedCtx);\n\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n  }\n\n  endSMaskMode() {\n    if (!this.inSMaskMode) {\n      throw new Error(\"endSMaskMode called while not in smask mode\");\n    }\n    // The soft mask is done, now restore the suspended canvas as the main\n    // drawing canvas.\n    this.ctx._removeMirroring();\n    copyCtxState(this.ctx, this.suspendedCtx);\n    this.ctx = this.suspendedCtx;\n\n    this.suspendedCtx = null;\n  }\n\n  compose(dirtyBox) {\n    if (!this.current.activeSMask) {\n      return;\n    }\n\n    if (!dirtyBox) {\n      dirtyBox = [0, 0, this.ctx.canvas.width, this.ctx.canvas.height];\n    } else {\n      dirtyBox[0] = Math.floor(dirtyBox[0]);\n      dirtyBox[1] = Math.floor(dirtyBox[1]);\n      dirtyBox[2] = Math.ceil(dirtyBox[2]);\n      dirtyBox[3] = Math.ceil(dirtyBox[3]);\n    }\n    const smask = this.current.activeSMask;\n    const suspendedCtx = this.suspendedCtx;\n\n    composeSMask(suspendedCtx, smask, this.ctx, dirtyBox);\n    // Whatever was drawn has been moved to the suspended canvas, now clear it\n    // out of the current canvas.\n    this.ctx.save();\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\n    this.ctx.restore();\n  }\n\n  save() {\n    if (this.inSMaskMode) {\n      // SMask mode may be turned on/off causing us to lose graphics state.\n      // Copy the temporary canvas state to the main(suspended) canvas to keep\n      // it in sync.\n      copyCtxState(this.ctx, this.suspendedCtx);\n      // Don't bother calling save on the temporary canvas since state is not\n      // saved there.\n      this.suspendedCtx.save();\n    } else {\n      this.ctx.save();\n    }\n    const old = this.current;\n    this.stateStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    if (this.stateStack.length === 0 && this.inSMaskMode) {\n      this.endSMaskMode();\n    }\n    if (this.stateStack.length !== 0) {\n      this.current = this.stateStack.pop();\n      if (this.inSMaskMode) {\n        // Graphics state is stored on the main(suspended) canvas. Restore its\n        // state then copy it over to the temporary canvas.\n        this.suspendedCtx.restore();\n        copyCtxState(this.suspendedCtx, this.ctx);\n      } else {\n        this.ctx.restore();\n      }\n      this.checkSMaskState();\n\n      // Ensure that the clipping path is reset (fixes issue6413.pdf).\n      this.pendingClip = null;\n\n      this._cachedScaleForStroking[0] = -1;\n      this._cachedGetSinglePixelWidth = null;\n    }\n  }\n\n  transform(a, b, c, d, e, f) {\n    this.ctx.transform(a, b, c, d, e, f);\n\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  // Path\n  constructPath(ops, args, minMax) {\n    const ctx = this.ctx;\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let startX, startY;\n    const currentTransform = getCurrentTransform(ctx);\n\n    // Most of the time the current transform is a scaling matrix\n    // so we don't need to transform points before computing min/max:\n    // we can compute min/max first and then smartly \"apply\" the\n    // transform (see Util.scaleMinMax).\n    // For rectangle, moveTo and lineTo, min/max are computed in the\n    // worker (see evaluator.js).\n    const isScalingMatrix =\n      (currentTransform[0] === 0 && currentTransform[3] === 0) ||\n      (currentTransform[1] === 0 && currentTransform[2] === 0);\n    const minMaxForBezier = isScalingMatrix ? minMax.slice(0) : null;\n\n    for (let i = 0, j = 0, ii = ops.length; i < ii; i++) {\n      switch (ops[i] | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n\n          const xw = x + width;\n          const yh = y + height;\n          ctx.moveTo(x, y);\n          if (width === 0 || height === 0) {\n            ctx.lineTo(xw, yh);\n          } else {\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n          }\n          if (!isScalingMatrix) {\n            current.updateRectMinMax(currentTransform, [x, y, xw, yh]);\n          }\n          ctx.closePath();\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.moveTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          ctx.lineTo(x, y);\n          if (!isScalingMatrix) {\n            current.updatePathMinMax(currentTransform, x, y);\n          }\n          break;\n        case OPS.curveTo:\n          startX = x;\n          startY = y;\n          x = args[j + 4];\n          y = args[j + 5];\n          ctx.bezierCurveTo(\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          startX = x;\n          startY = y;\n          ctx.bezierCurveTo(\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3]\n          );\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            x,\n            y,\n            args[j],\n            args[j + 1],\n            args[j + 2],\n            args[j + 3],\n            minMaxForBezier\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          startX = x;\n          startY = y;\n          x = args[j + 2];\n          y = args[j + 3];\n          ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n          current.updateCurvePathMinMax(\n            currentTransform,\n            startX,\n            startY,\n            args[j],\n            args[j + 1],\n            x,\n            y,\n            x,\n            y,\n            minMaxForBezier\n          );\n          j += 4;\n          break;\n        case OPS.closePath:\n          ctx.closePath();\n          break;\n      }\n    }\n\n    if (isScalingMatrix) {\n      current.updateScalingPathMinMax(currentTransform, minMaxForBezier);\n    }\n\n    current.setCurrentPoint(x, y);\n  }\n\n  closePath() {\n    this.ctx.closePath();\n  }\n\n  stroke(consumePath = true) {\n    const ctx = this.ctx;\n    const strokeColor = this.current.strokeColor;\n    // For stroke we want to temporarily change the global alpha to the\n    // stroking alpha.\n    ctx.globalAlpha = this.current.strokeAlpha;\n    if (this.contentVisible) {\n      if (typeof strokeColor === \"object\" && strokeColor?.getPattern) {\n        ctx.save();\n        ctx.strokeStyle = strokeColor.getPattern(\n          ctx,\n          this,\n          getCurrentTransformInverse(ctx),\n          PathType.STROKE\n        );\n        this.rescaleAndStroke(/* saveRestore */ false);\n        ctx.restore();\n      } else {\n        this.rescaleAndStroke(/* saveRestore */ true);\n      }\n    }\n    if (consumePath) {\n      this.consumePath(this.current.getClippedPathBoundingBox());\n    }\n    // Restore the global alpha to the fill alpha\n    ctx.globalAlpha = this.current.fillAlpha;\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  fill(consumePath = true) {\n    const ctx = this.ctx;\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n    let needRestore = false;\n\n    if (isPatternFill) {\n      ctx.save();\n      ctx.fillStyle = fillColor.getPattern(\n        ctx,\n        this,\n        getCurrentTransformInverse(ctx),\n        PathType.FILL\n      );\n      needRestore = true;\n    }\n\n    const intersect = this.current.getClippedPathBoundingBox();\n    if (this.contentVisible && intersect !== null) {\n      if (this.pendingEOFill) {\n        ctx.fill(\"evenodd\");\n        this.pendingEOFill = false;\n      } else {\n        ctx.fill();\n      }\n    }\n\n    if (needRestore) {\n      ctx.restore();\n    }\n    if (consumePath) {\n      this.consumePath(intersect);\n    }\n  }\n\n  eoFill() {\n    this.pendingEOFill = true;\n    this.fill();\n  }\n\n  fillStroke() {\n    this.fill(false);\n    this.stroke(false);\n\n    this.consumePath();\n  }\n\n  eoFillStroke() {\n    this.pendingEOFill = true;\n    this.fillStroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.pendingEOFill = true;\n    this.closePath();\n    this.fillStroke();\n  }\n\n  endPath() {\n    this.consumePath();\n  }\n\n  // Clipping\n  clip() {\n    this.pendingClip = NORMAL_CLIP;\n  }\n\n  eoClip() {\n    this.pendingClip = EO_CLIP;\n  }\n\n  // Text\n  beginText() {\n    this.current.textMatrix = IDENTITY_MATRIX;\n    this.current.textMatrixScale = 1;\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  endText() {\n    const paths = this.pendingTextPaths;\n    const ctx = this.ctx;\n    if (paths === undefined) {\n      ctx.beginPath();\n      return;\n    }\n\n    ctx.save();\n    ctx.beginPath();\n    for (const path of paths) {\n      ctx.setTransform(...path.transform);\n      ctx.translate(path.x, path.y);\n      path.addToPath(ctx, path.fontSize);\n    }\n    ctx.restore();\n    ctx.clip();\n    ctx.beginPath();\n    delete this.pendingTextPaths;\n  }\n\n  setCharSpacing(spacing) {\n    this.current.charSpacing = spacing;\n  }\n\n  setWordSpacing(spacing) {\n    this.current.wordSpacing = spacing;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setFont(fontRefName, size) {\n    const fontObj = this.commonObjs.get(fontRefName);\n    const current = this.current;\n\n    if (!fontObj) {\n      throw new Error(`Can't find font for ${fontRefName}`);\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    // A valid matrix needs all main diagonal elements to be non-zero\n    // This also ensures we bypass FF bugzilla bug #719844.\n    if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n      warn(\"Invalid font matrix for font \" + fontRefName);\n    }\n\n    // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n    // and in some docs this can be negative (inverted x-y axes).\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n\n    this.current.font = fontObj;\n    this.current.fontSize = size;\n\n    if (fontObj.isType3Font) {\n      return; // we don't need ctx.font for Type3 fonts\n    }\n\n    const name = fontObj.loadedName || \"sans-serif\";\n    const typeface =\n      fontObj.systemFontInfo?.css || `\"${name}\", ${fontObj.fallbackName}`;\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n    // Some font backends cannot handle fonts below certain size.\n    // Keeping the font at minimal size and using the fontSizeScale to change\n    // the current transformation matrix before the fillText/strokeText.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n    let browserFontSize = size;\n    if (size < MIN_FONT_SIZE) {\n      browserFontSize = MIN_FONT_SIZE;\n    } else if (size > MAX_FONT_SIZE) {\n      browserFontSize = MAX_FONT_SIZE;\n    }\n    this.current.fontSizeScale = size / browserFontSize;\n\n    this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n  }\n\n  setTextRenderingMode(mode) {\n    this.current.textRenderingMode = mode;\n  }\n\n  setTextRise(rise) {\n    this.current.textRise = rise;\n  }\n\n  moveText(x, y) {\n    this.current.x = this.current.lineX += x;\n    this.current.y = this.current.lineY += y;\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    this.current.textMatrix = [a, b, c, d, e, f];\n    this.current.textMatrixScale = Math.hypot(a, b);\n\n    this.current.x = this.current.lineX = 0;\n    this.current.y = this.current.lineY = 0;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  paintChar(character, x, y, patternTransform) {\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const textRenderingMode = current.textRenderingMode;\n    const fontSize = current.fontSize / current.fontSizeScale;\n    const fillStrokeMode =\n      textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    const isAddToPathSet = !!(\n      textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n    );\n    const patternFill = current.patternFill && !font.missingFile;\n\n    let addToPath;\n    if (font.disableFontFace || isAddToPathSet || patternFill) {\n      addToPath = font.getPathGenerator(this.commonObjs, character);\n    }\n\n    if (font.disableFontFace || patternFill) {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.beginPath();\n      addToPath(ctx, fontSize);\n      if (patternTransform) {\n        ctx.setTransform(...patternTransform);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fill();\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.stroke();\n      }\n      ctx.restore();\n    } else {\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.fillText(character, x, y);\n      }\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        ctx.strokeText(character, x, y);\n      }\n    }\n\n    if (isAddToPathSet) {\n      const paths = (this.pendingTextPaths ||= []);\n      paths.push({\n        transform: getCurrentTransform(ctx),\n        x,\n        y,\n        fontSize,\n        addToPath,\n      });\n    }\n  }\n\n  get isFontSubpixelAAEnabled() {\n    // Checks if anti-aliasing is enabled when scaled text is painted.\n    // On Windows GDI scaled fonts looks bad.\n    const { context: ctx } = this.cachedCanvases.getCanvas(\n      \"isFontSubpixelAAEnabled\",\n      10,\n      10\n    );\n    ctx.scale(1.5, 1);\n    ctx.fillText(\"I\", 0, 10);\n    const data = ctx.getImageData(0, 0, 10, 10).data;\n    let enabled = false;\n    for (let i = 3; i < data.length; i += 4) {\n      if (data[i] > 0 && data[i] < 255) {\n        enabled = true;\n        break;\n      }\n    }\n    return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    if (font.isType3Font) {\n      return this.showType3Text(glyphs);\n    }\n\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return undefined;\n    }\n\n    const ctx = this.ctx;\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const glyphsLength = glyphs.length;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    const simpleFillText =\n      current.textRenderingMode === TextRenderingMode.FILL &&\n      !font.disableFontFace &&\n      !current.patternFill;\n\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y + current.textRise);\n\n    if (fontDirection > 0) {\n      ctx.scale(textHScale, -1);\n    } else {\n      ctx.scale(textHScale, 1);\n    }\n\n    let patternTransform;\n    if (current.patternFill) {\n      ctx.save();\n      const pattern = current.fillColor.getPattern(\n        ctx,\n        this,\n        getCurrentTransformInverse(ctx),\n        PathType.FILL\n      );\n      patternTransform = getCurrentTransform(ctx);\n      ctx.restore();\n      ctx.fillStyle = pattern;\n    }\n\n    let lineWidth = current.lineWidth;\n    const scale = current.textMatrixScale;\n    if (scale === 0 || lineWidth === 0) {\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        lineWidth = this.getSinglePixelWidth();\n      }\n    } else {\n      lineWidth /= scale;\n    }\n\n    if (fontSizeScale !== 1.0) {\n      ctx.scale(fontSizeScale, fontSizeScale);\n      lineWidth /= fontSizeScale;\n    }\n\n    ctx.lineWidth = lineWidth;\n\n    if (font.isInvalidPDFjsFont) {\n      const chars = [];\n      let width = 0;\n      for (const glyph of glyphs) {\n        chars.push(glyph.unicode);\n        width += glyph.width;\n      }\n      ctx.fillText(chars.join(\"\"), 0, 0);\n      current.x += width * widthAdvanceScale * textHScale;\n      ctx.restore();\n      this.compose();\n\n      return undefined;\n    }\n\n    let x = 0,\n      i;\n    for (i = 0; i < glyphsLength; ++i) {\n      const glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      let restoreNeeded = false;\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      const accent = glyph.accent;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        const vx =\n          -(glyph.vmetric ? vmetric[1] : width * 0.5) * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (font.remeasure && width > 0) {\n        // Some standard fonts may not have the exact width: rescale per\n        // character if measured width is greater than expected glyph width\n        // and subpixel-aa is enabled, otherwise just center the glyph.\n        const measuredWidth =\n          ((ctx.measureText(character).width * 1000) / fontSize) *\n          fontSizeScale;\n        if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n          const characterScaleX = width / measuredWidth;\n          restoreNeeded = true;\n          ctx.save();\n          ctx.scale(characterScaleX, 1);\n          scaledX /= characterScaleX;\n        } else if (width !== measuredWidth) {\n          scaledX +=\n            (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n        }\n      }\n\n      // Only attempt to draw the glyph if it is actually in the embedded font\n      // file or if there isn't a font file so the fallback font is shown.\n      if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n        if (simpleFillText && !accent) {\n          // common case\n          ctx.fillText(character, scaledX, scaledY);\n        } else {\n          this.paintChar(character, scaledX, scaledY, patternTransform);\n          if (accent) {\n            const scaledAccentX =\n              scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n            const scaledAccentY =\n              scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n            this.paintChar(\n              accent.fontChar,\n              scaledAccentX,\n              scaledAccentY,\n              patternTransform\n            );\n          }\n        }\n      }\n\n      const charWidth = vertical\n        ? width * widthAdvanceScale - spacing * fontDirection\n        : width * widthAdvanceScale + spacing * fontDirection;\n      x += charWidth;\n\n      if (restoreNeeded) {\n        ctx.restore();\n      }\n    }\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n    ctx.restore();\n    this.compose();\n\n    return undefined;\n  }\n\n  showType3Text(glyphs) {\n    // Type3 fonts - each glyph is a \"mini-PDF\"\n    const ctx = this.ctx;\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    const fontDirection = current.fontDirection;\n    const spacingDir = font.vertical ? 1 : -1;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const textHScale = current.textHScale * fontDirection;\n    const fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n    const glyphsLength = glyphs.length;\n    const isTextInvisible =\n      current.textRenderingMode === TextRenderingMode.INVISIBLE;\n    let i, glyph, width, spacingLength;\n\n    if (isTextInvisible || fontSize === 0) {\n      return;\n    }\n    this._cachedScaleForStroking[0] = -1;\n    this._cachedGetSinglePixelWidth = null;\n\n    ctx.save();\n    ctx.transform(...current.textMatrix);\n    ctx.translate(current.x, current.y);\n\n    ctx.scale(textHScale, fontDirection);\n\n    for (i = 0; i < glyphsLength; ++i) {\n      glyph = glyphs[i];\n      if (typeof glyph === \"number\") {\n        spacingLength = (spacingDir * glyph * fontSize) / 1000;\n        this.ctx.translate(spacingLength, 0);\n        current.x += spacingLength * textHScale;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const operatorList = font.charProcOperatorList[glyph.operatorListId];\n      if (!operatorList) {\n        warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n        continue;\n      }\n      if (this.contentVisible) {\n        this.processingType3 = glyph;\n        this.save();\n        ctx.scale(fontSize, fontSize);\n        ctx.transform(...fontMatrix);\n        this.executeOperatorList(operatorList);\n        this.restore();\n      }\n\n      const transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n      width = transformed[0] * fontSize + spacing;\n\n      ctx.translate(width, 0);\n      current.x += width * textHScale;\n    }\n    ctx.restore();\n    this.processingType3 = null;\n  }\n\n  // Type3 fonts\n  setCharWidth(xWidth, yWidth) {\n    // We can safely ignore this since the width should be the same\n    // as the width in the Widths array.\n  }\n\n  setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n    this.ctx.rect(llx, lly, urx - llx, ury - lly);\n    this.ctx.clip();\n    this.endPath();\n  }\n\n  // Color\n  getColorN_Pattern(IR) {\n    let pattern;\n    if (IR[0] === \"TilingPattern\") {\n      const color = IR[1];\n      const baseTransform = this.baseTransform || getCurrentTransform(this.ctx);\n      const canvasGraphicsFactory = {\n        createCanvasGraphics: ctx => {\n          return new CanvasGraphics(\n            ctx,\n            this.commonObjs,\n            this.objs,\n            this.canvasFactory,\n            this.filterFactory,\n            {\n              optionalContentConfig: this.optionalContentConfig,\n              markedContentStack: this.markedContentStack,\n            }\n          );\n        },\n      };\n      pattern = new TilingPattern(\n        IR,\n        color,\n        this.ctx,\n        canvasGraphicsFactory,\n        baseTransform\n      );\n    } else {\n      pattern = this._getPattern(IR[1], IR[2]);\n    }\n    return pattern;\n  }\n\n  setStrokeColorN() {\n    this.current.strokeColor = this.getColorN_Pattern(arguments);\n  }\n\n  setFillColorN() {\n    this.current.fillColor = this.getColorN_Pattern(arguments);\n    this.current.patternFill = true;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.strokeStyle = color;\n    this.current.strokeColor = color;\n  }\n\n  setFillRGBColor(r, g, b) {\n    const color = Util.makeHexColor(r, g, b);\n    this.ctx.fillStyle = color;\n    this.current.fillColor = color;\n    this.current.patternFill = false;\n  }\n\n  _getPattern(objId, matrix = null) {\n    let pattern;\n    if (this.cachedPatterns.has(objId)) {\n      pattern = this.cachedPatterns.get(objId);\n    } else {\n      pattern = getShadingPattern(this.getObject(objId));\n      this.cachedPatterns.set(objId, pattern);\n    }\n    if (matrix) {\n      pattern.matrix = matrix;\n    }\n    return pattern;\n  }\n\n  shadingFill(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    this.save();\n    const pattern = this._getPattern(objId);\n    ctx.fillStyle = pattern.getPattern(\n      ctx,\n      this,\n      getCurrentTransformInverse(ctx),\n      PathType.SHADING\n    );\n\n    const inv = getCurrentTransformInverse(ctx);\n    if (inv) {\n      const { width, height } = ctx.canvas;\n      const [x0, y0, x1, y1] = Util.getAxialAlignedBoundingBox(\n        [0, 0, width, height],\n        inv\n      );\n\n      this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n    } else {\n      // HACK to draw the gradient onto an infinite rectangle.\n      // PDF gradients are drawn across the entire image while\n      // Canvas only allows gradients to be drawn in a rectangle\n      // The following bug should allow us to remove this.\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n      this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n    }\n\n    this.compose(this.current.getClippedPathBoundingBox());\n    this.restore();\n  }\n\n  // Images\n  beginInlineImage() {\n    unreachable(\"Should not call beginInlineImage\");\n  }\n\n  beginImageData() {\n    unreachable(\"Should not call beginImageData\");\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.save();\n    this.baseTransformStack.push(this.baseTransform);\n\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(...matrix);\n    }\n\n    this.baseTransform = getCurrentTransform(this.ctx);\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n      this.ctx.rect(bbox[0], bbox[1], width, height);\n      this.current.updateRectMinMax(getCurrentTransform(this.ctx), bbox);\n      this.clip();\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.restore();\n    this.baseTransform = this.baseTransformStack.pop();\n  }\n\n  beginGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    this.save();\n    // If there's an active soft mask we don't want it enabled for the group, so\n    // clear it out. The mask and suspended canvas will be restored in endGroup.\n    if (this.inSMaskMode) {\n      this.endSMaskMode();\n      this.current.activeSMask = null;\n    }\n\n    const currentCtx = this.ctx;\n    // TODO non-isolated groups - according to Rik at adobe non-isolated\n    // group results aren't usually that different and they even have tools\n    // that ignore this setting. Notes from Rik on implementing:\n    // - When you encounter an transparency group, create a new canvas with\n    // the dimensions of the bbox\n    // - copy the content from the previous canvas to the new canvas\n    // - draw as usual\n    // - remove the backdrop alpha:\n    // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n    // value of your transparency group and 'alphaBackdrop' the alpha of the\n    // backdrop\n    // - remove background color:\n    // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n    if (!group.isolated) {\n      info(\"TODO: Support non-isolated groups.\");\n    }\n\n    // TODO knockout - supposedly possible with the clever use of compositing\n    // modes.\n    if (group.knockout) {\n      warn(\"Knockout groups not supported.\");\n    }\n\n    const currentTransform = getCurrentTransform(currentCtx);\n    if (group.matrix) {\n      currentCtx.transform(...group.matrix);\n    }\n    if (!group.bbox) {\n      throw new Error(\"Bounding box is required.\");\n    }\n\n    // Based on the current transform figure out how big the bounding box\n    // will actually be.\n    let bounds = Util.getAxialAlignedBoundingBox(\n      group.bbox,\n      getCurrentTransform(currentCtx)\n    );\n    // Clip the bounding box to the current canvas.\n    const canvasBounds = [\n      0,\n      0,\n      currentCtx.canvas.width,\n      currentCtx.canvas.height,\n    ];\n    bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n    // Use ceil in case we're between sizes so we don't create canvas that is\n    // too small and make the canvas at least 1x1 pixels.\n    const offsetX = Math.floor(bounds[0]);\n    const offsetY = Math.floor(bounds[1]);\n    let drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n    let drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n    let scaleX = 1,\n      scaleY = 1;\n    if (drawnWidth > MAX_GROUP_SIZE) {\n      scaleX = drawnWidth / MAX_GROUP_SIZE;\n      drawnWidth = MAX_GROUP_SIZE;\n    }\n    if (drawnHeight > MAX_GROUP_SIZE) {\n      scaleY = drawnHeight / MAX_GROUP_SIZE;\n      drawnHeight = MAX_GROUP_SIZE;\n    }\n\n    this.current.startNewPathAndClipBox([0, 0, drawnWidth, drawnHeight]);\n\n    let cacheId = \"groupAt\" + this.groupLevel;\n    if (group.smask) {\n      // Using two cache entries is case if masks are used one after another.\n      cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n    }\n    const scratchCanvas = this.cachedCanvases.getCanvas(\n      cacheId,\n      drawnWidth,\n      drawnHeight\n    );\n    const groupCtx = scratchCanvas.context;\n\n    // Since we created a new canvas that is just the size of the bounding box\n    // we have to translate the group ctx.\n    groupCtx.scale(1 / scaleX, 1 / scaleY);\n    groupCtx.translate(-offsetX, -offsetY);\n    groupCtx.transform(...currentTransform);\n\n    if (group.smask) {\n      // Saving state and cached mask to be used in setGState.\n      this.smaskStack.push({\n        canvas: scratchCanvas.canvas,\n        context: groupCtx,\n        offsetX,\n        offsetY,\n        scaleX,\n        scaleY,\n        subtype: group.smask.subtype,\n        backdrop: group.smask.backdrop,\n        transferMap: group.smask.transferMap || null,\n        startTransformInverse: null, // used during suspend operation\n      });\n    } else {\n      // Setup the current ctx so when the group is popped we draw it at the\n      // right location.\n      currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n      currentCtx.translate(offsetX, offsetY);\n      currentCtx.scale(scaleX, scaleY);\n      currentCtx.save();\n    }\n    // The transparency group inherits all off the current graphics state\n    // except the blend mode, soft mask, and alpha constants.\n    copyCtxState(currentCtx, groupCtx);\n    this.ctx = groupCtx;\n    this.setGState([\n      [\"BM\", \"source-over\"],\n      [\"ca\", 1],\n      [\"CA\", 1],\n    ]);\n    this.groupStack.push(currentCtx);\n    this.groupLevel++;\n  }\n\n  endGroup(group) {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.groupLevel--;\n    const groupCtx = this.ctx;\n    const ctx = this.groupStack.pop();\n    this.ctx = ctx;\n    // Turn off image smoothing to avoid sub pixel interpolation which can\n    // look kind of blurry for some pdfs.\n    this.ctx.imageSmoothingEnabled = false;\n\n    if (group.smask) {\n      this.tempSMask = this.smaskStack.pop();\n      this.restore();\n    } else {\n      this.ctx.restore();\n      const currentMtx = getCurrentTransform(this.ctx);\n      this.restore();\n      this.ctx.save();\n      this.ctx.setTransform(...currentMtx);\n      const dirtyBox = Util.getAxialAlignedBoundingBox(\n        [0, 0, groupCtx.canvas.width, groupCtx.canvas.height],\n        currentMtx\n      );\n      this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      this.ctx.restore();\n      this.compose(dirtyBox);\n    }\n  }\n\n  beginAnnotation(id, rect, transform, matrix, hasOwnCanvas) {\n    // The annotations are drawn just after the page content.\n    // The page content drawing can potentially have set a transform,\n    // a clipping path, whatever...\n    // So in order to have something clean, we restore the initial state.\n    this.#restoreInitialState();\n    resetCtxToDefault(this.ctx);\n\n    this.ctx.save();\n    this.save();\n\n    if (this.baseTransform) {\n      this.ctx.setTransform(...this.baseTransform);\n    }\n\n    if (Array.isArray(rect) && rect.length === 4) {\n      const width = rect[2] - rect[0];\n      const height = rect[3] - rect[1];\n\n      if (hasOwnCanvas && this.annotationCanvasMap) {\n        transform = transform.slice();\n        transform[4] -= rect[0];\n        transform[5] -= rect[1];\n\n        rect = rect.slice();\n        rect[0] = rect[1] = 0;\n        rect[2] = width;\n        rect[3] = height;\n\n        const [scaleX, scaleY] = Util.singularValueDecompose2dScale(\n          getCurrentTransform(this.ctx)\n        );\n        const { viewportScale } = this;\n        const canvasWidth = Math.ceil(\n          width * this.outputScaleX * viewportScale\n        );\n        const canvasHeight = Math.ceil(\n          height * this.outputScaleY * viewportScale\n        );\n\n        this.annotationCanvas = this.canvasFactory.create(\n          canvasWidth,\n          canvasHeight\n        );\n        const { canvas, context } = this.annotationCanvas;\n        this.annotationCanvasMap.set(id, canvas);\n        this.annotationCanvas.savedCtx = this.ctx;\n        this.ctx = context;\n        this.ctx.save();\n        this.ctx.setTransform(scaleX, 0, 0, -scaleY, 0, height * scaleY);\n\n        resetCtxToDefault(this.ctx);\n      } else {\n        resetCtxToDefault(this.ctx);\n\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.ctx.clip();\n        this.endPath();\n      }\n    }\n\n    this.current = new CanvasExtraState(\n      this.ctx.canvas.width,\n      this.ctx.canvas.height\n    );\n\n    this.transform(...transform);\n    this.transform(...matrix);\n  }\n\n  endAnnotation() {\n    if (this.annotationCanvas) {\n      this.ctx.restore();\n      this.#drawFilter();\n\n      this.ctx = this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas.savedCtx;\n      delete this.annotationCanvas;\n    }\n  }\n\n  paintImageMaskXObject(img) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const count = img.count;\n    img = this.getObject(img.data, img);\n    img.count = count;\n\n    const ctx = this.ctx;\n    const glyph = this.processingType3;\n\n    if (glyph) {\n      if (glyph.compiled === undefined) {\n        glyph.compiled = compileType3Glyph(img);\n      }\n\n      if (glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n    }\n    const mask = this._createMaskCanvas(img);\n    const maskCanvas = mask.canvas;\n\n    ctx.save();\n    // The mask is drawn with the transform applied. Reset the current\n    // transform to draw to the identity.\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.drawImage(maskCanvas, mask.offsetX, mask.offsetY);\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectRepeat(\n    img,\n    scaleX,\n    skewX = 0,\n    skewY = 0,\n    scaleY,\n    positions\n  ) {\n    if (!this.contentVisible) {\n      return;\n    }\n\n    img = this.getObject(img.data, img);\n\n    const ctx = this.ctx;\n    ctx.save();\n    const currentTransform = getCurrentTransform(ctx);\n    ctx.transform(scaleX, skewX, skewY, scaleY, 0, 0);\n    const mask = this._createMaskCanvas(img);\n\n    ctx.setTransform(\n      1,\n      0,\n      0,\n      1,\n      mask.offsetX - currentTransform[4],\n      mask.offsetY - currentTransform[5]\n    );\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      const trans = Util.transform(currentTransform, [\n        scaleX,\n        skewX,\n        skewY,\n        scaleY,\n        positions[i],\n        positions[i + 1],\n      ]);\n\n      const [x, y] = Util.applyTransform([0, 0], trans);\n      ctx.drawImage(mask.canvas, x, y);\n    }\n    ctx.restore();\n    this.compose();\n  }\n\n  paintImageMaskXObjectGroup(images) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n\n    const fillColor = this.current.fillColor;\n    const isPatternFill = this.current.patternFill;\n\n    for (const image of images) {\n      const { data, width, height, transform } = image;\n\n      const maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      const maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      const img = this.getObject(data, image);\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(\n            maskCtx,\n            this,\n            getCurrentTransformInverse(ctx),\n            PathType.FILL\n          )\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      ctx.save();\n      ctx.transform(...transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        maskCanvas.canvas,\n        0,\n        0,\n        width,\n        height,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintImageXObject(objId) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(\"Dependent image isn't ready yet\");\n      return;\n    }\n\n    const width = imgData.width;\n    const height = imgData.height;\n    const map = [];\n    for (let i = 0, ii = positions.length; i < ii; i += 2) {\n      map.push({\n        transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n        x: 0,\n        y: 0,\n        w: width,\n        h: height,\n      });\n    }\n    this.paintInlineImageXObjectGroup(imgData, map);\n  }\n\n  applyTransferMapsToCanvas(ctx) {\n    if (this.current.transferMaps !== \"none\") {\n      ctx.filter = this.current.transferMaps;\n      ctx.drawImage(ctx.canvas, 0, 0);\n      ctx.filter = \"none\";\n    }\n    return ctx.canvas;\n  }\n\n  applyTransferMapsToBitmap(imgData) {\n    if (this.current.transferMaps === \"none\") {\n      return imgData.bitmap;\n    }\n    const { bitmap, width, height } = imgData;\n    const tmpCanvas = this.cachedCanvases.getCanvas(\n      \"inlineImage\",\n      width,\n      height\n    );\n    const tmpCtx = tmpCanvas.context;\n    tmpCtx.filter = this.current.transferMaps;\n    tmpCtx.drawImage(bitmap, 0, 0);\n    tmpCtx.filter = \"none\";\n\n    return tmpCanvas.canvas;\n  }\n\n  paintInlineImageXObject(imgData) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const width = imgData.width;\n    const height = imgData.height;\n    const ctx = this.ctx;\n\n    this.save();\n\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      !isNodeJS\n    ) {\n      // The filter, if any, will be applied in applyTransferMapsToBitmap.\n      // It must be applied to the image before rescaling else some artifacts\n      // could appear.\n      // The final restore will reset it to its value.\n      const { filter } = ctx;\n      if (filter !== \"none\" && filter !== \"\") {\n        ctx.filter = \"none\";\n      }\n    }\n\n    // scale the image to the unit square\n    ctx.scale(1 / width, -1 / height);\n\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = this.applyTransferMapsToBitmap(imgData);\n    } else if (\n      (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n      !imgData.data\n    ) {\n      // typeof check is needed due to node.js support, see issue #8489\n      imgToPaint = imgData;\n    } else {\n      const tmpCanvas = this.cachedCanvases.getCanvas(\n        \"inlineImage\",\n        width,\n        height\n      );\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n\n    const scaled = this._scaleImage(\n      imgToPaint,\n      getCurrentTransformInverse(ctx)\n    );\n    ctx.imageSmoothingEnabled = getImageSmoothingEnabled(\n      getCurrentTransform(ctx),\n      imgData.interpolate\n    );\n\n    drawImageAtIntegerCoords(\n      ctx,\n      scaled.img,\n      0,\n      0,\n      scaled.paintWidth,\n      scaled.paintHeight,\n      0,\n      -height,\n      width,\n      height\n    );\n    this.compose();\n    this.restore();\n  }\n\n  paintInlineImageXObjectGroup(imgData, map) {\n    if (!this.contentVisible) {\n      return;\n    }\n    const ctx = this.ctx;\n    let imgToPaint;\n    if (imgData.bitmap) {\n      imgToPaint = imgData.bitmap;\n    } else {\n      const w = imgData.width;\n      const h = imgData.height;\n\n      const tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      const tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData);\n      imgToPaint = this.applyTransferMapsToCanvas(tmpCtx);\n    }\n\n    for (const entry of map) {\n      ctx.save();\n      ctx.transform(...entry.transform);\n      ctx.scale(1, -1);\n      drawImageAtIntegerCoords(\n        ctx,\n        imgToPaint,\n        entry.x,\n        entry.y,\n        entry.w,\n        entry.h,\n        0,\n        -1,\n        1,\n        1\n      );\n      ctx.restore();\n    }\n    this.compose();\n  }\n\n  paintSolidColorImageMask() {\n    if (!this.contentVisible) {\n      return;\n    }\n    this.ctx.fillRect(0, 0, 1, 1);\n    this.compose();\n  }\n\n  // Marked content\n\n  markPoint(tag) {\n    // TODO Marked content.\n  }\n\n  markPointProps(tag, properties) {\n    // TODO Marked content.\n  }\n\n  beginMarkedContent(tag) {\n    this.markedContentStack.push({\n      visible: true,\n    });\n  }\n\n  beginMarkedContentProps(tag, properties) {\n    if (tag === \"OC\") {\n      this.markedContentStack.push({\n        visible: this.optionalContentConfig.isVisible(properties),\n      });\n    } else {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    }\n    this.contentVisible = this.isContentVisible();\n  }\n\n  endMarkedContent() {\n    this.markedContentStack.pop();\n    this.contentVisible = this.isContentVisible();\n  }\n\n  // Compatibility\n\n  beginCompat() {\n    // TODO ignore undefined operators (should we do that anyway?)\n  }\n\n  endCompat() {\n    // TODO stop ignoring undefined operators\n  }\n\n  // Helper functions\n\n  consumePath(clipBox) {\n    const isEmpty = this.current.isEmptyClip();\n    if (this.pendingClip) {\n      this.current.updateClipFromPath();\n    }\n    if (!this.pendingClip) {\n      this.compose(clipBox);\n    }\n    const ctx = this.ctx;\n    if (this.pendingClip) {\n      if (!isEmpty) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n      }\n      this.pendingClip = null;\n    }\n    this.current.startNewPathAndClipBox(this.current.clipBox);\n    ctx.beginPath();\n  }\n\n  getSinglePixelWidth() {\n    if (!this._cachedGetSinglePixelWidth) {\n      const m = getCurrentTransform(this.ctx);\n      if (m[1] === 0 && m[2] === 0) {\n        // Fast path\n        this._cachedGetSinglePixelWidth =\n          1 / Math.min(Math.abs(m[0]), Math.abs(m[3]));\n      } else {\n        const absDet = Math.abs(m[0] * m[3] - m[2] * m[1]);\n        const normX = Math.hypot(m[0], m[2]);\n        const normY = Math.hypot(m[1], m[3]);\n        this._cachedGetSinglePixelWidth = Math.max(normX, normY) / absDet;\n      }\n    }\n    return this._cachedGetSinglePixelWidth;\n  }\n\n  getScaleForStroking() {\n    // A pixel has thicknessX = thicknessY = 1;\n    // A transformed pixel is a parallelogram and the thicknesses\n    // corresponds to the heights.\n    // The goal of this function is to rescale before setting the\n    // lineWidth in order to have both thicknesses greater or equal\n    // to 1 after transform.\n    if (this._cachedScaleForStroking[0] === -1) {\n      const { lineWidth } = this.current;\n      const { a, b, c, d } = this.ctx.getTransform();\n      let scaleX, scaleY;\n\n      if (b === 0 && c === 0) {\n        // Fast path\n        const normX = Math.abs(a);\n        const normY = Math.abs(d);\n        if (normX === normY) {\n          if (lineWidth === 0) {\n            scaleX = scaleY = 1 / normX;\n          } else {\n            const scaledLineWidth = normX * lineWidth;\n            scaleX = scaleY = scaledLineWidth < 1 ? 1 / scaledLineWidth : 1;\n          }\n        } else if (lineWidth === 0) {\n          scaleX = 1 / normX;\n          scaleY = 1 / normY;\n        } else {\n          const scaledXLineWidth = normX * lineWidth;\n          const scaledYLineWidth = normY * lineWidth;\n          scaleX = scaledXLineWidth < 1 ? 1 / scaledXLineWidth : 1;\n          scaleY = scaledYLineWidth < 1 ? 1 / scaledYLineWidth : 1;\n        }\n      } else {\n        // A pixel (base (x, y)) is transformed by M into a parallelogram:\n        //  - its area is |det(M)|;\n        //  - heightY (orthogonal to Mx) has a length: |det(M)| / norm(Mx);\n        //  - heightX (orthogonal to My) has a length: |det(M)| / norm(My).\n        // heightX and heightY are the thicknesses of the transformed pixel\n        // and they must be both greater or equal to 1.\n        const absDet = Math.abs(a * d - b * c);\n        const normX = Math.hypot(a, b);\n        const normY = Math.hypot(c, d);\n        if (lineWidth === 0) {\n          scaleX = normY / absDet;\n          scaleY = normX / absDet;\n        } else {\n          const baseArea = lineWidth * absDet;\n          scaleX = normY > baseArea ? normY / baseArea : 1;\n          scaleY = normX > baseArea ? normX / baseArea : 1;\n        }\n      }\n      this._cachedScaleForStroking[0] = scaleX;\n      this._cachedScaleForStroking[1] = scaleY;\n    }\n    return this._cachedScaleForStroking;\n  }\n\n  // Rescale before stroking in order to have a final lineWidth\n  // with both thicknesses greater or equal to 1.\n  rescaleAndStroke(saveRestore) {\n    const { ctx } = this;\n    const { lineWidth } = this.current;\n    const [scaleX, scaleY] = this.getScaleForStroking();\n\n    ctx.lineWidth = lineWidth || 1;\n\n    if (scaleX === 1 && scaleY === 1) {\n      ctx.stroke();\n      return;\n    }\n\n    const dashes = ctx.getLineDash();\n    if (saveRestore) {\n      ctx.save();\n    }\n\n    ctx.scale(scaleX, scaleY);\n\n    // How the dashed line is rendered depends on the current transform...\n    // so we added a rescale to handle too thin lines and consequently\n    // the way the line is dashed will be modified.\n    // If scaleX === scaleY, the dashed lines will be rendered correctly\n    // else we'll have some bugs (but only with too thin lines).\n    // Here we take the max... why not taking the min... or something else.\n    // Anyway, as said it's buggy when scaleX !== scaleY.\n    if (dashes.length > 0) {\n      const scale = Math.max(scaleX, scaleY);\n      ctx.setLineDash(dashes.map(x => x / scale));\n      ctx.lineDashOffset /= scale;\n    }\n\n    ctx.stroke();\n\n    if (saveRestore) {\n      ctx.restore();\n    }\n  }\n\n  isContentVisible() {\n    for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n      if (!this.markedContentStack[i].visible) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfor (const op in OPS) {\n  if (CanvasGraphics.prototype[op] !== undefined) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n}\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, unreachable, Util } from \"../shared/util.js\";\nimport { getCurrentTransform } from \"./display_utils.js\";\n\nconst PathType = {\n  FILL: \"Fill\",\n  STROKE: \"Stroke\",\n  SHADING: \"Shading\",\n};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox) {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nclass BaseShadingPattern {\n  constructor() {\n    if (this.constructor === BaseShadingPattern) {\n      unreachable(\"Cannot initialize BaseShadingPattern.\");\n    }\n  }\n\n  getPattern() {\n    unreachable(\"Abstract method `getPattern` called.\");\n  }\n}\n\nclass RadialAxialShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._type = IR[1];\n    this._bbox = IR[2];\n    this._colorStops = IR[3];\n    this._p0 = IR[4];\n    this._p1 = IR[5];\n    this._r0 = IR[6];\n    this._r1 = IR[7];\n    this.matrix = null;\n  }\n\n  _createGradient(ctx) {\n    let grad;\n    if (this._type === \"axial\") {\n      grad = ctx.createLinearGradient(\n        this._p0[0],\n        this._p0[1],\n        this._p1[0],\n        this._p1[1]\n      );\n    } else if (this._type === \"radial\") {\n      grad = ctx.createRadialGradient(\n        this._p0[0],\n        this._p0[1],\n        this._r0,\n        this._p1[0],\n        this._p1[1],\n        this._r1\n      );\n    }\n\n    for (const colorStop of this._colorStops) {\n      grad.addColorStop(colorStop[0], colorStop[1]);\n    }\n    return grad;\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    let pattern;\n    if (pathType === PathType.STROKE || pathType === PathType.FILL) {\n      const ownerBBox = owner.current.getClippedPathBoundingBox(\n        pathType,\n        getCurrentTransform(ctx)\n      ) || [0, 0, 0, 0];\n      // Create a canvas that is only as big as the current path. This doesn't\n      // allow us to cache the pattern, but it generally creates much smaller\n      // canvases and saves memory use. See bug 1722807 for an example.\n      const width = Math.ceil(ownerBBox[2] - ownerBBox[0]) || 1;\n      const height = Math.ceil(ownerBBox[3] - ownerBBox[1]) || 1;\n\n      const tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        width,\n        height,\n        true\n      );\n\n      const tmpCtx = tmpCanvas.context;\n      tmpCtx.clearRect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      tmpCtx.beginPath();\n      tmpCtx.rect(0, 0, tmpCtx.canvas.width, tmpCtx.canvas.height);\n      // Non shading fill patterns are positioned relative to the base transform\n      // (usually the page's initial transform), but we may have created a\n      // smaller canvas based on the path, so we must account for the shift.\n      tmpCtx.translate(-ownerBBox[0], -ownerBBox[1]);\n      inverse = Util.transform(inverse, [\n        1,\n        0,\n        0,\n        1,\n        ownerBBox[0],\n        ownerBBox[1],\n      ]);\n\n      tmpCtx.transform(...owner.baseTransform);\n      if (this.matrix) {\n        tmpCtx.transform(...this.matrix);\n      }\n      applyBoundingBox(tmpCtx, this._bbox);\n\n      tmpCtx.fillStyle = this._createGradient(tmpCtx);\n      tmpCtx.fill();\n\n      pattern = ctx.createPattern(tmpCanvas.canvas, \"no-repeat\");\n      const domMatrix = new DOMMatrix(inverse);\n      pattern.setTransform(domMatrix);\n    } else {\n      // Shading fills are applied relative to the current matrix which is also\n      // how canvas gradients work, so there's no need to do anything special\n      // here.\n      applyBoundingBox(ctx, this._bbox);\n      pattern = this._createGradient(ctx);\n    }\n    return pattern;\n  }\n}\n\nfunction drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n  // Very basic Gouraud-shaded triangle rasterization algorithm.\n  const coords = context.coords,\n    colors = context.colors;\n  const bytes = data.data,\n    rowSize = data.width * 4;\n  let tmp;\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  if (coords[p2 + 1] > coords[p3 + 1]) {\n    tmp = p2;\n    p2 = p3;\n    p3 = tmp;\n    tmp = c2;\n    c2 = c3;\n    c3 = tmp;\n  }\n  if (coords[p1 + 1] > coords[p2 + 1]) {\n    tmp = p1;\n    p1 = p2;\n    p2 = tmp;\n    tmp = c1;\n    c1 = c2;\n    c2 = tmp;\n  }\n  const x1 = (coords[p1] + context.offsetX) * context.scaleX;\n  const y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n  const x2 = (coords[p2] + context.offsetX) * context.scaleX;\n  const y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n  const x3 = (coords[p3] + context.offsetX) * context.scaleX;\n  const y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n  if (y1 >= y3) {\n    return;\n  }\n  const c1r = colors[c1],\n    c1g = colors[c1 + 1],\n    c1b = colors[c1 + 2];\n  const c2r = colors[c2],\n    c2g = colors[c2 + 1],\n    c2b = colors[c2 + 2];\n  const c3r = colors[c3],\n    c3g = colors[c3 + 1],\n    c3b = colors[c3 + 2];\n\n  const minY = Math.round(y1),\n    maxY = Math.round(y3);\n  let xa, car, cag, cab;\n  let xb, cbr, cbg, cbb;\n  for (let y = minY; y <= maxY; y++) {\n    if (y < y2) {\n      const k = y < y1 ? 0 : (y1 - y) / (y1 - y2);\n      xa = x1 - (x1 - x2) * k;\n      car = c1r - (c1r - c2r) * k;\n      cag = c1g - (c1g - c2g) * k;\n      cab = c1b - (c1b - c2b) * k;\n    } else {\n      let k;\n      if (y > y3) {\n        k = 1;\n      } else if (y2 === y3) {\n        k = 0;\n      } else {\n        k = (y2 - y) / (y2 - y3);\n      }\n      xa = x2 - (x2 - x3) * k;\n      car = c2r - (c2r - c3r) * k;\n      cag = c2g - (c2g - c3g) * k;\n      cab = c2b - (c2b - c3b) * k;\n    }\n\n    let k;\n    if (y < y1) {\n      k = 0;\n    } else if (y > y3) {\n      k = 1;\n    } else {\n      k = (y1 - y) / (y1 - y3);\n    }\n    xb = x1 - (x1 - x3) * k;\n    cbr = c1r - (c1r - c3r) * k;\n    cbg = c1g - (c1g - c3g) * k;\n    cbb = c1b - (c1b - c3b) * k;\n    const x1_ = Math.round(Math.min(xa, xb));\n    const x2_ = Math.round(Math.max(xa, xb));\n    let j = rowSize * y + x1_ * 4;\n    for (let x = x1_; x <= x2_; x++) {\n      k = (xa - x) / (xa - xb);\n      if (k < 0) {\n        k = 0;\n      } else if (k > 1) {\n        k = 1;\n      }\n      bytes[j++] = (car - (car - cbr) * k) | 0;\n      bytes[j++] = (cag - (cag - cbg) * k) | 0;\n      bytes[j++] = (cab - (cab - cbb) * k) | 0;\n      bytes[j++] = 255;\n    }\n  }\n}\n\nfunction drawFigure(data, figure, context) {\n  const ps = figure.coords;\n  const cs = figure.colors;\n  let i, ii;\n  switch (figure.type) {\n    case \"lattice\":\n      const verticesPerRow = figure.verticesPerRow;\n      const rows = Math.floor(ps.length / verticesPerRow) - 1;\n      const cols = verticesPerRow - 1;\n      for (i = 0; i < rows; i++) {\n        let q = i * verticesPerRow;\n        for (let j = 0; j < cols; j++, q++) {\n          drawTriangle(\n            data,\n            context,\n            ps[q],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n          drawTriangle(\n            data,\n            context,\n            ps[q + verticesPerRow + 1],\n            ps[q + 1],\n            ps[q + verticesPerRow],\n            cs[q + verticesPerRow + 1],\n            cs[q + 1],\n            cs[q + verticesPerRow]\n          );\n        }\n      }\n      break;\n    case \"triangles\":\n      for (i = 0, ii = ps.length; i < ii; i += 3) {\n        drawTriangle(\n          data,\n          context,\n          ps[i],\n          ps[i + 1],\n          ps[i + 2],\n          cs[i],\n          cs[i + 1],\n          cs[i + 2]\n        );\n      }\n      break;\n    default:\n      throw new Error(\"illegal figure\");\n  }\n}\n\nclass MeshShadingPattern extends BaseShadingPattern {\n  constructor(IR) {\n    super();\n    this._coords = IR[2];\n    this._colors = IR[3];\n    this._figures = IR[4];\n    this._bounds = IR[5];\n    this._bbox = IR[7];\n    this._background = IR[8];\n    this.matrix = null;\n  }\n\n  _createMeshCanvas(combinedScale, backgroundColor, cachedCanvases) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    const EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    const MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    const BORDER_SIZE = 2;\n\n    const offsetX = Math.floor(this._bounds[0]);\n    const offsetY = Math.floor(this._bounds[1]);\n    const boundsWidth = Math.ceil(this._bounds[2]) - offsetX;\n    const boundsHeight = Math.ceil(this._bounds[3]) - offsetY;\n\n    const width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinedScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinedScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    const scaleX = boundsWidth / width;\n    const scaleY = boundsHeight / height;\n\n    const context = {\n      coords: this._coords,\n      colors: this._colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    const paddedWidth = width + BORDER_SIZE * 2;\n    const paddedHeight = height + BORDER_SIZE * 2;\n\n    const tmpCanvas = cachedCanvases.getCanvas(\n      \"mesh\",\n      paddedWidth,\n      paddedHeight,\n      false\n    );\n    const tmpCtx = tmpCanvas.context;\n\n    const data = tmpCtx.createImageData(width, height);\n    if (backgroundColor) {\n      const bytes = data.data;\n      for (let i = 0, ii = bytes.length; i < ii; i += 4) {\n        bytes[i] = backgroundColor[0];\n        bytes[i + 1] = backgroundColor[1];\n        bytes[i + 2] = backgroundColor[2];\n        bytes[i + 3] = 255;\n      }\n    }\n    for (const figure of this._figures) {\n      drawFigure(data, figure, context);\n    }\n    tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n    const canvas = tmpCanvas.canvas;\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    applyBoundingBox(ctx, this._bbox);\n    let scale;\n    if (pathType === PathType.SHADING) {\n      scale = Util.singularValueDecompose2dScale(getCurrentTransform(ctx));\n    } else {\n      // Obtain scale from matrix and current transformation matrix.\n      scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n      if (this.matrix) {\n        const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n        scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n      }\n    }\n\n    // Rasterizing on the main thread since sending/queue large canvases\n    // might cause OOM.\n    const temporaryPatternCanvas = this._createMeshCanvas(\n      scale,\n      pathType === PathType.SHADING ? null : this._background,\n      owner.cachedCanvases\n    );\n\n    if (pathType !== PathType.SHADING) {\n      ctx.setTransform(...owner.baseTransform);\n      if (this.matrix) {\n        ctx.transform(...this.matrix);\n      }\n    }\n\n    ctx.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n    return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n  }\n}\n\nclass DummyShadingPattern extends BaseShadingPattern {\n  getPattern() {\n    return \"hotpink\";\n  }\n}\n\nfunction getShadingPattern(IR) {\n  switch (IR[0]) {\n    case \"RadialAxial\":\n      return new RadialAxialShadingPattern(IR);\n    case \"Mesh\":\n      return new MeshShadingPattern(IR);\n    case \"Dummy\":\n      return new DummyShadingPattern();\n  }\n  throw new Error(`Unknown IR type: ${IR[0]}`);\n}\n\nconst PaintType = {\n  COLORED: 1,\n  UNCOLORED: 2,\n};\n\nclass TilingPattern {\n  // 10in @ 300dpi shall be enough.\n  static MAX_PATTERN_SIZE = 3000;\n\n  constructor(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.ctx = ctx;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n  }\n\n  createPatternCanvas(owner) {\n    const operatorList = this.operatorList;\n    const bbox = this.bbox;\n    const xstep = this.xstep;\n    const ystep = this.ystep;\n    const paintType = this.paintType;\n    const tilingType = this.tilingType;\n    const color = this.color;\n    const canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n    info(\"TilingType: \" + tilingType);\n\n    // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n    // described by bbox, and may repeat regularly by shifting the cell by\n    // xstep and ystep.\n    // Because the HTML5 canvas API does not support pattern repetition with\n    // gaps in between, we use the xstep/ystep instead of the bbox's size.\n    //\n    // This has the following consequences (similarly for ystep):\n    //\n    // - If xstep is the same as bbox, then there is no observable difference.\n    //\n    // - If xstep is larger than bbox, then the pattern canvas is partially\n    //   empty: the area bounded by bbox is painted, the outside area is void.\n    //\n    // - If xstep is smaller than bbox, then the pixels between xstep and the\n    //   bbox boundary will be missing. This is INCORRECT behavior.\n    //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n    //   but overlapping cells without common pixels are still valid.\n    //   TODO: Fix the implementation, to allow this scenario to be painted\n    //   correctly.\n\n    const x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3];\n\n    // Obtain scale from matrix and current transformation matrix.\n    const matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n    const curMatrixScale = Util.singularValueDecompose2dScale(\n      this.baseTransform\n    );\n    const combinedScale = [\n      matrixScale[0] * curMatrixScale[0],\n      matrixScale[1] * curMatrixScale[1],\n    ];\n\n    // Use width and height values that are as close as possible to the end\n    // result when the pattern is used. Too low value makes the pattern look\n    // blurry. Too large value makes it look too crispy.\n    const dimx = this.getSizeAndScale(\n      xstep,\n      this.ctx.canvas.width,\n      combinedScale[0]\n    );\n    const dimy = this.getSizeAndScale(\n      ystep,\n      this.ctx.canvas.height,\n      combinedScale[1]\n    );\n\n    const tmpCanvas = owner.cachedCanvases.getCanvas(\n      \"pattern\",\n      dimx.size,\n      dimy.size,\n      true\n    );\n    const tmpCtx = tmpCanvas.context;\n    const graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n    graphics.groupLevel = owner.groupLevel;\n\n    this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n    let adjustedX0 = x0;\n    let adjustedY0 = y0;\n    let adjustedX1 = x1;\n    let adjustedY1 = y1;\n    // Some bounding boxes have negative x0/y0 coordinates which will cause the\n    // some of the drawing to be off of the canvas. To avoid this shift the\n    // bounding box over.\n    if (x0 < 0) {\n      adjustedX0 = 0;\n      adjustedX1 += Math.abs(x0);\n    }\n    if (y0 < 0) {\n      adjustedY0 = 0;\n      adjustedY1 += Math.abs(y0);\n    }\n    tmpCtx.translate(-(dimx.scale * adjustedX0), -(dimy.scale * adjustedY0));\n    graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n    // To match CanvasGraphics beginDrawing we must save the context here or\n    // else we end up with unbalanced save/restores.\n    tmpCtx.save();\n\n    this.clipBbox(graphics, adjustedX0, adjustedY0, adjustedX1, adjustedY1);\n\n    graphics.baseTransform = getCurrentTransform(graphics.ctx);\n\n    graphics.executeOperatorList(operatorList);\n\n    graphics.endDrawing();\n\n    return {\n      canvas: tmpCanvas.canvas,\n      scaleX: dimx.scale,\n      scaleY: dimy.scale,\n      offsetX: adjustedX0,\n      offsetY: adjustedY0,\n    };\n  }\n\n  getSizeAndScale(step, realOutputSize, scale) {\n    // xstep / ystep may be negative -- normalize.\n    step = Math.abs(step);\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    // Use the destination canvas's size if it is bigger than the hard-coded\n    // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n    // whole canvas.\n    const maxSize = Math.max(TilingPattern.MAX_PATTERN_SIZE, realOutputSize);\n    let size = Math.ceil(step * scale);\n    if (size >= maxSize) {\n      size = maxSize;\n    } else {\n      scale = size / step;\n    }\n    return { scale, size };\n  }\n\n  clipBbox(graphics, x0, y0, x1, y1) {\n    const bboxWidth = x1 - x0;\n    const bboxHeight = y1 - y0;\n    graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n    graphics.current.updateRectMinMax(getCurrentTransform(graphics.ctx), [\n      x0,\n      y0,\n      x1,\n      y1,\n    ]);\n    graphics.clip();\n    graphics.endPath();\n  }\n\n  setFillAndStrokeStyleToContext(graphics, paintType, color) {\n    const context = graphics.ctx,\n      current = graphics.current;\n    switch (paintType) {\n      case PaintType.COLORED:\n        const ctx = this.ctx;\n        context.fillStyle = ctx.fillStyle;\n        context.strokeStyle = ctx.strokeStyle;\n        current.fillColor = ctx.fillStyle;\n        current.strokeColor = ctx.strokeStyle;\n        break;\n      case PaintType.UNCOLORED:\n        const cssColor = Util.makeHexColor(color[0], color[1], color[2]);\n        context.fillStyle = cssColor;\n        context.strokeStyle = cssColor;\n        // Set color needed by image masks (fixes issues 3226 and 8741).\n        current.fillColor = cssColor;\n        current.strokeColor = cssColor;\n        break;\n      default:\n        throw new FormatError(`Unsupported paint type: ${paintType}`);\n    }\n  }\n\n  getPattern(ctx, owner, inverse, pathType) {\n    // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n    let matrix = inverse;\n    if (pathType !== PathType.SHADING) {\n      matrix = Util.transform(matrix, owner.baseTransform);\n      if (this.matrix) {\n        matrix = Util.transform(matrix, this.matrix);\n      }\n    }\n\n    const temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n    let domMatrix = new DOMMatrix(matrix);\n    // Rescale and so that the ctx.createPattern call generates a pattern with\n    // the desired size.\n    domMatrix = domMatrix.translate(\n      temporaryPatternCanvas.offsetX,\n      temporaryPatternCanvas.offsetY\n    );\n    domMatrix = domMatrix.scale(\n      1 / temporaryPatternCanvas.scaleX,\n      1 / temporaryPatternCanvas.scaleY\n    );\n\n    const pattern = ctx.createPattern(temporaryPatternCanvas.canvas, \"repeat\");\n    pattern.setTransform(domMatrix);\n\n    return pattern;\n  }\n}\n\nexport { getShadingPattern, PathType, TilingPattern };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FeatureTest, ImageKind } from \"./util.js\";\n\nfunction convertToRGBA(params) {\n  switch (params.kind) {\n    case ImageKind.GRAYSCALE_1BPP:\n      return convertBlackAndWhiteToRGBA(params);\n    case ImageKind.RGB_24BPP:\n      return convertRGBToRGBA(params);\n  }\n\n  return null;\n}\n\nfunction convertBlackAndWhiteToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  width,\n  height,\n  nonBlackColor = 0xffffffff,\n  inverseDecode = false,\n}) {\n  const black = FeatureTest.isLittleEndian ? 0xff000000 : 0x000000ff;\n  const [zeroMapping, oneMapping] = inverseDecode\n    ? [nonBlackColor, black]\n    : [black, nonBlackColor];\n  const widthInSource = width >> 3;\n  const widthRemainder = width & 7;\n  const srcLength = src.length;\n  dest = new Uint32Array(dest.buffer);\n  let destPos = 0;\n\n  for (let i = 0; i < height; i++) {\n    for (const max = srcPos + widthInSource; srcPos < max; srcPos++) {\n      const elem = srcPos < srcLength ? src[srcPos] : 255;\n      dest[destPos++] = elem & 0b10000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1000 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b100 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b10 ? oneMapping : zeroMapping;\n      dest[destPos++] = elem & 0b1 ? oneMapping : zeroMapping;\n    }\n    if (widthRemainder === 0) {\n      continue;\n    }\n    const elem = srcPos < srcLength ? src[srcPos++] : 255;\n    for (let j = 0; j < widthRemainder; j++) {\n      dest[destPos++] = elem & (1 << (7 - j)) ? oneMapping : zeroMapping;\n    }\n  }\n  return { srcPos, destPos };\n}\n\nfunction convertRGBToRGBA({\n  src,\n  srcPos = 0,\n  dest,\n  destPos = 0,\n  width,\n  height,\n}) {\n  let i = 0;\n  const len32 = src.length >> 2;\n  const src32 = new Uint32Array(src.buffer, srcPos, len32);\n\n  if (FeatureTest.isLittleEndian) {\n    // It's a way faster to do the shuffle manually instead of working\n    // component by component with some Uint8 arrays.\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R2B1G1R1\n      const s2 = src32[i + 1]; // G3R3B2G2\n      const s3 = src32[i + 2]; // B4G4R4B3\n\n      dest[destPos] = s1 | 0xff000000;\n      dest[destPos + 1] = (s1 >>> 24) | (s2 << 8) | 0xff000000;\n      dest[destPos + 2] = (s2 >>> 16) | (s3 << 16) | 0xff000000;\n      dest[destPos + 3] = (s3 >>> 8) | 0xff000000;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        src[j] | (src[j + 1] << 8) | (src[j + 2] << 16) | 0xff000000;\n    }\n  } else {\n    for (; i < len32 - 2; i += 3, destPos += 4) {\n      const s1 = src32[i]; // R1G1B1R2\n      const s2 = src32[i + 1]; // G2B2R3G3\n      const s3 = src32[i + 2]; // B3R4G4B4\n\n      dest[destPos] = s1 | 0xff;\n      dest[destPos + 1] = (s1 << 24) | (s2 >>> 8) | 0xff;\n      dest[destPos + 2] = (s2 << 16) | (s3 >>> 16) | 0xff;\n      dest[destPos + 3] = (s3 << 8) | 0xff;\n    }\n\n    for (let j = i * 4, jj = src.length; j < jj; j += 3) {\n      dest[destPos++] =\n        (src[j] << 24) | (src[j + 1] << 16) | (src[j + 2] << 8) | 0xff;\n    }\n  }\n\n  return { srcPos, destPos };\n}\n\nfunction grayToRGBA(src, dest) {\n  if (FeatureTest.isLittleEndian) {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x10101) | 0xff000000;\n    }\n  } else {\n    for (let i = 0, ii = src.length; i < ii; i++) {\n      dest[i] = (src[i] * 0x1010100) | 0x000000ff;\n    }\n  }\n}\n\nexport { convertBlackAndWhiteToRGBA, convertToRGBA, grayToRGBA };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort = null;\nGlobalWorkerOptions.workerSrc = \"\";\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  MissingPDFException,\n  PasswordException,\n  PromiseCapability,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    !(\n      reason instanceof Error ||\n      (typeof reason === \"object\" && reason !== null)\n    )\n  ) {\n    unreachable(\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"PasswordException\":\n      return new PasswordException(reason.message, reason.code);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this.#processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this.#createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this.comObj.postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = new PromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this.comObj.postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++,\n      sourceName = this.sourceName,\n      targetName = this.targetName,\n      comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = new PromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          comObj.postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = new PromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = new PromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  #createStreamSink(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const self = this,\n      action = this.actionHandler[data.action];\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = new PromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        comObj.postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: new PromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  #processStreamMessage(data) {\n    const streamId = data.streamId,\n      sourceName = this.sourceName,\n      targetName = data.sourceName,\n      comObj = this.comObj;\n    const streamController = this.streamControllers[streamId],\n      streamSink = this.streamSinks[streamId];\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          streamController.startCall.resolve();\n        } else {\n          streamController.startCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          streamController.pullCall.resolve();\n        } else {\n          streamController.pullCall.reject(wrapReason(data.reason));\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!streamSink) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink, so when it changes\n        // from negative to positive, set ready property as resolved promise.\n        if (streamSink.desiredSize <= 0 && data.desiredSize > 0) {\n          streamSink.sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        streamSink.desiredSize = data.desiredSize;\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onPull?.());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(streamController, \"enqueue should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(streamController, \"close should have stream controller\");\n        if (streamController.isClosed) {\n          break;\n        }\n        streamController.isClosed = true;\n        streamController.controller.close();\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(streamController, \"error should have stream controller\");\n        streamController.controller.error(wrapReason(data.reason));\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          streamController.cancelCall.resolve();\n        } else {\n          streamController.cancelCall.reject(wrapReason(data.reason));\n        }\n        this.#deleteStreamController(streamController, streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!streamSink) {\n          break;\n        }\n\n        new Promise(function (resolve) {\n          resolve(streamSink.onCancel?.(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        streamSink.sinkCapability.reject(wrapReason(data.reason));\n        streamSink.isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  async #deleteStreamController(streamController, streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled([\n      streamController.startCall?.promise,\n      streamController.pullCall?.promise,\n      streamController.cancelCall?.promise,\n    ]);\n    delete this.streamControllers[streamId];\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap } from \"../shared/util.js\";\n\nclass Metadata {\n  #metadataMap;\n\n  #data;\n\n  constructor({ parsedData, rawData }) {\n    this.#metadataMap = parsedData;\n    this.#data = rawData;\n  }\n\n  getRaw() {\n    return this.#data;\n  }\n\n  get(name) {\n    return this.#metadataMap.get(name) ?? null;\n  }\n\n  getAll() {\n    return objectFromMap(this.#metadataMap);\n  }\n\n  has(name) {\n    return this.#metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { objectFromMap, unreachable, warn } from \"../shared/util.js\";\nimport { MurmurHash3_64 } from \"../shared/murmurhash3.js\";\n\nconst INTERNAL = Symbol(\"INTERNAL\");\n\nclass OptionalContentGroup {\n  #visible = true;\n\n  constructor(name, intent) {\n    this.name = name;\n    this.intent = intent;\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get visible() {\n    return this.#visible;\n  }\n\n  /**\n   * @ignore\n   */\n  _setVisible(internal, visible) {\n    if (internal !== INTERNAL) {\n      unreachable(\"Internal method `_setVisible` called.\");\n    }\n    this.#visible = visible;\n  }\n}\n\nclass OptionalContentConfig {\n  #cachedGetHash = null;\n\n  #groups = new Map();\n\n  #initialHash = null;\n\n  #order = null;\n\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this.#order = data.order;\n    for (const group of data.groups) {\n      this.#groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this.#groups.values()) {\n        group._setVisible(INTERNAL, false);\n      }\n    }\n\n    for (const on of data.on) {\n      this.#groups.get(on)._setVisible(INTERNAL, true);\n    }\n\n    for (const off of data.off) {\n      this.#groups.get(off)._setVisible(INTERNAL, false);\n    }\n\n    // The following code must always run *last* in the constructor.\n    this.#initialHash = this.getHash();\n  }\n\n  #evaluateVisibilityExpression(array) {\n    const length = array.length;\n    if (length < 2) {\n      return true;\n    }\n    const operator = array[0];\n    for (let i = 1; i < length; i++) {\n      const element = array[i];\n      let state;\n      if (Array.isArray(element)) {\n        state = this.#evaluateVisibilityExpression(element);\n      } else if (this.#groups.has(element)) {\n        state = this.#groups.get(element).visible;\n      } else {\n        warn(`Optional content group not found: ${element}`);\n        return true;\n      }\n      switch (operator) {\n        case \"And\":\n          if (!state) {\n            return false;\n          }\n          break;\n        case \"Or\":\n          if (state) {\n            return true;\n          }\n          break;\n        case \"Not\":\n          return !state;\n        default:\n          return true;\n      }\n    }\n    return operator === \"And\";\n  }\n\n  isVisible(group) {\n    if (this.#groups.size === 0) {\n      return true;\n    }\n    if (!group) {\n      warn(\"Optional content group not defined.\");\n      return true;\n    }\n    if (group.type === \"OCG\") {\n      if (!this.#groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this.#groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available.\n      if (group.expression) {\n        return this.#evaluateVisibilityExpression(group.expression);\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this.#groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this.#groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this.#groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this.#groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this.#groups.get(id)._setVisible(INTERNAL, !!visible);\n\n    this.#cachedGetHash = null;\n  }\n\n  get hasInitialVisibility() {\n    return this.#initialHash === null || this.getHash() === this.#initialHash;\n  }\n\n  getOrder() {\n    if (!this.#groups.size) {\n      return null;\n    }\n    if (this.#order) {\n      return this.#order.slice();\n    }\n    return [...this.#groups.keys()];\n  }\n\n  getGroups() {\n    return this.#groups.size > 0 ? objectFromMap(this.#groups) : null;\n  }\n\n  getGroup(id) {\n    return this.#groups.get(id) || null;\n  }\n\n  getHash() {\n    if (this.#cachedGetHash !== null) {\n      return this.#cachedGetHash;\n    }\n    const hash = new MurmurHash3_64();\n\n    for (const [id, group] of this.#groups) {\n      hash.update(`${id}:${group.visible}`);\n    }\n    return (this.#cachedGetHash = hash.hexdigest());\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"../interfaces\").IPDFStream} IPDFStream */\n/** @typedef {import(\"../interfaces\").IPDFStreamReader} IPDFStreamReader */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../interfaces\").IPDFStreamRangeReader} IPDFStreamRangeReader */\n\nimport { assert, PromiseCapability } from \"../shared/util.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(\n    {\n      length,\n      initialData,\n      progressiveDone = false,\n      contentDispositionFilename = null,\n      disableRange = false,\n      disableStream = false,\n    },\n    pdfDataRangeTransport\n  ) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = progressiveDone;\n    this._contentDispositionFilename = contentDispositionFilename;\n\n    if (initialData?.length > 0) {\n      // Prevent any possible issues by only transferring a Uint8Array that\n      // completely \"utilizes\" its underlying ArrayBuffer.\n      const buffer =\n        initialData instanceof Uint8Array &&\n        initialData.byteLength === initialData.buffer.byteLength\n          ? initialData.buffer\n          : new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !disableStream;\n    this._isRangeSupported = !disableRange;\n    this._contentLength = length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData({ begin, chunk }) {\n    // Prevent any possible issues by only transferring a Uint8Array that\n    // completely \"utilizes\" its underlying ArrayBuffer.\n    const buffer =\n      chunk instanceof Uint8Array &&\n      chunk.byteLength === chunk.buffer.byteLength\n        ? chunk.buffer\n        : new Uint8Array(chunk).buffer;\n\n    if (begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      this._rangeReaders[0]?.onProgress?.({ loaded: evt.loaded });\n    } else {\n      this._fullRequestReader?.onProgress?.({\n        loaded: evt.loaded,\n        total: evt.total,\n      });\n    }\n  }\n\n  _onProgressiveDone() {\n    this._fullRequestReader?.progressiveDone();\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone,\n      this._contentDispositionFilename\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(\n    stream,\n    queuedChunks,\n    progressiveDone = false,\n    contentDispositionFilename = null\n  ) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = isPdfFile(contentDispositionFilename)\n      ? contentDispositionFilename\n      : null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      for (const requestCapability of this._requests) {\n        requestCapability.resolve({ value: undefined, done: true });\n      }\n      this._requests.length = 0;\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  assert,\n  PromiseCapability,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (value === undefined) {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\nfunction getArrayBuffer(val) {\n  if (val instanceof Uint8Array) {\n    return val.buffer;\n  }\n  if (val instanceof ArrayBuffer) {\n    return val;\n  }\n  warn(`getArrayBuffer - unexpected data format: ${val}`);\n  return new Uint8Array(val).buffer;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = new PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._abortController = new AbortController();\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const { allowRangeRequests, suggestedLength } =\n          validateRangeRequestCapabilities({\n            getResponseHeader,\n            isHttp: this._stream.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange,\n          });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength,\n    });\n\n    return { value: getArrayBuffer(value), done: false };\n  }\n\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = new PromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    this._abortController = new AbortController();\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(this._readCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    this.onProgress?.({ loaded: this._loaded });\n\n    return { value: getArrayBuffer(value), done: false };\n  }\n\n  cancel(reason) {\n    this._reader?.cancel(reason);\n    this._abortController.abort();\n  }\n}\n\nexport { PDFFetchStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\nimport { isPdfFile } from \"./display_utils.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n    assert(\n      Number.isInteger(rangeChunkSize) && rangeChunkSize > 0,\n      \"rangeChunkSize must be an integer larger than zero.\"\n    );\n  }\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch {}\n    }\n    if (isPdfFile(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    `Unexpected server response (${status}) while retrieving PDF \"${url}\".`,\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringToBytes } from \"../shared/util.js\";\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const buffer = stringToBytes(value);\n        value = decoder.decode(buffer);\n        needsEncodingFixup = false;\n      } catch {\n        // TextDecoder constructor threw - unrecognized encoding.\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replaceAll(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replaceAll(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replaceAll(\"_\", \" \");\n          text = text.replaceAll(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, PromiseCapability, stringToBytes } from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  return stringToBytes(data).buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args = {}) {\n    this.url = url;\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || Object.create(null);\n    this.withCredentials = args.withCredentials || false;\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = new XMLHttpRequest();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = { xhr });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n    pendingRequest.onProgress?.(evt);\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      return; // Maybe abortRequest was called...\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      pendingRequest.onError?.(xhr.status);\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else {\n      pendingRequest.onError?.(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = new PromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const { allowRangeRequests, suggestedLength } =\n      validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: this._manager.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(data) {\n    if (data) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: data.chunk, done: false });\n      } else {\n        this._cachedChunks.push(data.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    this._headersReceivedCapability.reject(this._storedError);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._cachedChunks.length = 0;\n  }\n\n  _onProgress(evt) {\n    this.onProgress?.({\n      loaded: evt.loaded,\n      total: evt.lengthComputable ? evt.total : this._contentLength,\n    });\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n\n    const args = {\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = manager.url;\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n    this._storedError = undefined;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    this.onClosed?.(this);\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    this._close();\n  }\n\n  _onError(status) {\n    this._storedError = createResponseStatusError(status, this._url);\n    for (const requestCapability of this._requests) {\n      requestCapability.reject(this._storedError);\n    }\n    this._requests.length = 0;\n    this._queuedChunk = null;\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported) {\n      this.onProgress?.({ loaded: evt.loaded });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = new PromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    for (const requestCapability of this._requests) {\n      requestCapability.resolve({ value: undefined, done: true });\n    }\n    this._requests.length = 0;\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  MissingPDFException,\n  PromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const url = __non_webpack_require__(\"url\");\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader?._loaded ?? 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    this._fullRequestReader?.cancel(reason);\n\n    for (const reader of this._rangeRequestReaders.slice(0)) {\n      reader.cancel(reason);\n    }\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = new PromiseCapability();\n    this._headersCapability = new PromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({\n      loaded: this._loaded,\n      total: this._contentLength,\n    });\n\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = new PromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = new PromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    this.onProgress?.({ loaded: this._loaded });\n\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const { allowRangeRequests, suggestedLength } =\n        validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = __non_webpack_require__(\"http\");\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      const https = __non_webpack_require__(\"https\");\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (value === undefined) {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      const http = __non_webpack_require__(\"http\");\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      const https = __non_webpack_require__(\"https\");\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    const fs = __non_webpack_require__(\"fs\");\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    const fs = __non_webpack_require__(\"fs\");\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport { deprecated, DOMSVGFactory } from \"./display_utils.js\";\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNodeJS,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"GENERIC\")) {\n  throw new Error(\n    'Module \"SVGGraphics\" shall not be used outside GENERIC builds.'\n  );\n}\n\nconst SVG_DEFAULTS = {\n  fontStyle: \"normal\",\n  fontWeight: \"normal\",\n  fillColor: \"#000000\",\n};\nconst XML_NS = \"http://www.w3.org/XML/1998/namespace\";\nconst XLINK_NS = \"http://www.w3.org/1999/xlink\";\nconst LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\nconst LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\nconst createObjectURL = function (\n  data,\n  contentType = \"\",\n  forceDataSchema = false\n) {\n  if (URL.createObjectURL && typeof Blob !== \"undefined\" && !forceDataSchema) {\n    return URL.createObjectURL(new Blob([data], { type: contentType }));\n  }\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  let buffer = `data:${contentType};base64,`;\n  for (let i = 0, ii = data.length; i < ii; i += 3) {\n    const b1 = data[i] & 0xff;\n    const b2 = data[i + 1] & 0xff;\n    const b3 = data[i + 2] & 0xff;\n    const d1 = b1 >> 2,\n      d2 = ((b1 & 3) << 4) | (b2 >> 4);\n    const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n    const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n    buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n};\n\nconst convertImgDataToPng = (function () {\n  const PNG_HEADER = new Uint8Array([\n    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a,\n  ]);\n  const CHUNK_WRAPPER_SIZE = 12;\n\n  const crcTable = new Int32Array(256);\n  for (let i = 0; i < 256; i++) {\n    let c = i;\n    for (let h = 0; h < 8; h++) {\n      c = c & 1 ? 0xedb88320 ^ ((c >> 1) & 0x7fffffff) : (c >> 1) & 0x7fffffff;\n    }\n    crcTable[i] = c;\n  }\n\n  function crc32(data, start, end) {\n    let crc = -1;\n    for (let i = start; i < end; i++) {\n      const a = (crc ^ data[i]) & 0xff;\n      const b = crcTable[a];\n      crc = (crc >>> 8) ^ b;\n    }\n    return crc ^ -1;\n  }\n\n  function writePngChunk(type, body, data, offset) {\n    let p = offset;\n    const len = body.length;\n\n    data[p] = (len >> 24) & 0xff;\n    data[p + 1] = (len >> 16) & 0xff;\n    data[p + 2] = (len >> 8) & 0xff;\n    data[p + 3] = len & 0xff;\n    p += 4;\n\n    data[p] = type.charCodeAt(0) & 0xff;\n    data[p + 1] = type.charCodeAt(1) & 0xff;\n    data[p + 2] = type.charCodeAt(2) & 0xff;\n    data[p + 3] = type.charCodeAt(3) & 0xff;\n    p += 4;\n\n    data.set(body, p);\n    p += body.length;\n\n    const crc = crc32(data, offset + 4, p);\n    data[p] = (crc >> 24) & 0xff;\n    data[p + 1] = (crc >> 16) & 0xff;\n    data[p + 2] = (crc >> 8) & 0xff;\n    data[p + 3] = crc & 0xff;\n  }\n\n  function adler32(data, start, end) {\n    let a = 1;\n    let b = 0;\n    for (let i = start; i < end; ++i) {\n      a = (a + (data[i] & 0xff)) % 65521;\n      b = (b + a) % 65521;\n    }\n    return (b << 16) | a;\n  }\n\n  /**\n   * @param {Uint8Array} literals The input data.\n   * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n   *   This is the required format for compressed streams in the PNG format:\n   *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n   */\n  function deflateSync(literals) {\n    if (!isNodeJS) {\n      // zlib is certainly not available outside of Node.js. We can either use\n      // the pako library for client-side DEFLATE compression, or use the\n      // canvas API of the browser to obtain a more optimal PNG file.\n      return deflateSyncUncompressed(literals);\n    }\n    try {\n      // NOTE: This implementation is far from perfect, but already way better\n      // than not applying any compression.\n      //\n      // A better algorithm will try to choose a good predictor/filter and\n      // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n      //\n      // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n      // Node v3.0.0   Buffer inherits from Uint8Array.\n      // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n      const input =\n        // eslint-disable-next-line no-undef\n        parseInt(process.versions.node) >= 8 ? literals : Buffer.from(literals);\n      const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n        level: 9,\n      });\n      return output instanceof Uint8Array ? output : new Uint8Array(output);\n    } catch (e) {\n      warn(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n    }\n\n    return deflateSyncUncompressed(literals);\n  }\n\n  // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n  function deflateSyncUncompressed(literals) {\n    let len = literals.length;\n    const maxBlockLength = 0xffff;\n\n    const deflateBlocks = Math.ceil(len / maxBlockLength);\n    const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n    let pi = 0;\n    idat[pi++] = 0x78; // compression method and flags\n    idat[pi++] = 0x9c; // flags\n\n    let pos = 0;\n    while (len > maxBlockLength) {\n      // writing non-final DEFLATE blocks type 0 and length of 65535\n      idat[pi++] = 0x00;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0xff;\n      idat[pi++] = 0x00;\n      idat[pi++] = 0x00;\n      idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n      pi += maxBlockLength;\n      pos += maxBlockLength;\n      len -= maxBlockLength;\n    }\n\n    // writing non-final DEFLATE blocks type 0\n    idat[pi++] = 0x01;\n    idat[pi++] = len & 0xff;\n    idat[pi++] = (len >> 8) & 0xff;\n    idat[pi++] = ~len & 0xffff & 0xff;\n    idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n    idat.set(literals.subarray(pos), pi);\n    pi += literals.length - pos;\n\n    const adler = adler32(literals, 0, literals.length); // checksum\n    idat[pi++] = (adler >> 24) & 0xff;\n    idat[pi++] = (adler >> 16) & 0xff;\n    idat[pi++] = (adler >> 8) & 0xff;\n    idat[pi++] = adler & 0xff;\n    return idat;\n  }\n\n  function encode(imgData, kind, forceDataSchema, isMask) {\n    const width = imgData.width;\n    const height = imgData.height;\n    let bitDepth, colorType, lineSize;\n    const bytes = imgData.data;\n\n    switch (kind) {\n      case ImageKind.GRAYSCALE_1BPP:\n        colorType = 0;\n        bitDepth = 1;\n        lineSize = (width + 7) >> 3;\n        break;\n      case ImageKind.RGB_24BPP:\n        colorType = 2;\n        bitDepth = 8;\n        lineSize = width * 3;\n        break;\n      case ImageKind.RGBA_32BPP:\n        colorType = 6;\n        bitDepth = 8;\n        lineSize = width * 4;\n        break;\n      default:\n        throw new Error(\"invalid format\");\n    }\n\n    // prefix every row with predictor 0\n    const literals = new Uint8Array((1 + lineSize) * height);\n    let offsetLiterals = 0,\n      offsetBytes = 0;\n    for (let y = 0; y < height; ++y) {\n      literals[offsetLiterals++] = 0; // no prediction\n      literals.set(\n        bytes.subarray(offsetBytes, offsetBytes + lineSize),\n        offsetLiterals\n      );\n      offsetBytes += lineSize;\n      offsetLiterals += lineSize;\n    }\n\n    if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n      // inverting for image masks\n      offsetLiterals = 0;\n      for (let y = 0; y < height; y++) {\n        offsetLiterals++; // skipping predictor\n        for (let i = 0; i < lineSize; i++) {\n          literals[offsetLiterals++] ^= 0xff;\n        }\n      }\n    }\n\n    const ihdr = new Uint8Array([\n      (width >> 24) & 0xff,\n      (width >> 16) & 0xff,\n      (width >> 8) & 0xff,\n      width & 0xff,\n      (height >> 24) & 0xff,\n      (height >> 16) & 0xff,\n      (height >> 8) & 0xff,\n      height & 0xff,\n      bitDepth, // bit depth\n      colorType, // color type\n      0x00, // compression method\n      0x00, // filter method\n      0x00, // interlace method\n    ]);\n    const idat = deflateSync(literals);\n\n    // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n    const pngLength =\n      PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n    const data = new Uint8Array(pngLength);\n    let offset = 0;\n    data.set(PNG_HEADER, offset);\n    offset += PNG_HEADER.length;\n    writePngChunk(\"IHDR\", ihdr, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n    writePngChunk(\"IDATA\", idat, data, offset);\n    offset += CHUNK_WRAPPER_SIZE + idat.length;\n    writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n    return createObjectURL(data, \"image/png\", forceDataSchema);\n  }\n\n  // eslint-disable-next-line no-shadow\n  return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n    const kind =\n      imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n    return encode(imgData, kind, forceDataSchema, isMask);\n  };\n})();\n\nclass SVGExtraState {\n  constructor() {\n    this.fontSizeScale = 1;\n    this.fontWeight = SVG_DEFAULTS.fontWeight;\n    this.fontSize = 0;\n\n    this.textMatrix = IDENTITY_MATRIX;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textMatrixScale = 1;\n\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n\n    // Default foreground and background colors\n    this.fillColor = SVG_DEFAULTS.fillColor;\n    this.strokeColor = \"#000000\";\n\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.lineJoin = \"\";\n    this.lineCap = \"\";\n    this.miterLimit = 0;\n\n    this.dashArray = [];\n    this.dashPhase = 0;\n\n    this.dependencies = [];\n\n    // Clipping\n    this.activeClipUrl = null;\n    this.clipGroup = null;\n\n    this.maskId = \"\";\n  }\n\n  clone() {\n    return Object.create(this);\n  }\n\n  setCurrentPoint(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nfunction opListToTree(opList) {\n  let opTree = [];\n  const tmp = [];\n\n  for (const opListElement of opList) {\n    if (opListElement.fn === \"save\") {\n      opTree.push({ fnId: 92, fn: \"group\", items: [] });\n      tmp.push(opTree);\n      opTree = opTree.at(-1).items;\n      continue;\n    }\n\n    if (opListElement.fn === \"restore\") {\n      opTree = tmp.pop();\n    } else {\n      opTree.push(opListElement);\n    }\n  }\n  return opTree;\n}\n\n/**\n * Format a float number as a string.\n *\n * @param value {number} - The float number to format.\n * @returns {string}\n */\nfunction pf(value) {\n  if (Number.isInteger(value)) {\n    return value.toString();\n  }\n  const s = value.toFixed(10);\n  let i = s.length - 1;\n  if (s[i] !== \"0\") {\n    return s;\n  }\n\n  // Remove trailing zeros.\n  do {\n    i--;\n  } while (s[i] === \"0\");\n  return s.substring(0, s[i] === \".\" ? i : i + 1);\n}\n\n/**\n * Format a transform matrix as a string. The standard rotation, scale and\n * translation matrices are replaced by their shorter forms, and for\n * identity matrices an empty string is returned to save memory.\n *\n * @param m {Array} - The transform matrix to format.\n * @returns {string}\n */\nfunction pm(m) {\n  if (m[4] === 0 && m[5] === 0) {\n    if (m[1] === 0 && m[2] === 0) {\n      if (m[0] === 1 && m[3] === 1) {\n        return \"\";\n      }\n      return `scale(${pf(m[0])} ${pf(m[3])})`;\n    }\n    if (m[0] === m[3] && m[1] === -m[2]) {\n      const a = (Math.acos(m[0]) * 180) / Math.PI;\n      return `rotate(${pf(a)})`;\n    }\n  } else if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n    return `translate(${pf(m[4])} ${pf(m[5])})`;\n  }\n  return (\n    `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n    `${pf(m[5])})`\n  );\n}\n\n// The counts below are relevant for all pages, so they have to be global\n// instead of being members of `SVGGraphics` (which is recreated for\n// each page).\nlet clipCount = 0;\nlet maskCount = 0;\nlet shadingCount = 0;\n\nclass SVGGraphics {\n  constructor(commonObjs, objs, forceDataSchema = false) {\n    deprecated(\n      \"The SVG back-end is no longer maintained and *may* be removed in the future.\"\n    );\n    this.svgFactory = new DOMSVGFactory();\n\n    this.current = new SVGExtraState();\n    this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n    this.transformStack = [];\n    this.extraStack = [];\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n\n    this.embedFonts = false;\n    this.embeddedFonts = Object.create(null);\n    this.cssStyle = null;\n    this.forceDataSchema = !!forceDataSchema;\n\n    // In `src/shared/util.js` the operator names are mapped to IDs.\n    // The list below represents the reverse of that, i.e., it maps IDs\n    // to operator names.\n    this._operatorIdMapping = [];\n    for (const op in OPS) {\n      this._operatorIdMapping[OPS[op]] = op;\n    }\n  }\n\n  getObject(data, fallback = null) {\n    if (typeof data === \"string\") {\n      return data.startsWith(\"g_\")\n        ? this.commonObjs.get(data)\n        : this.objs.get(data);\n    }\n    return fallback;\n  }\n\n  save() {\n    this.transformStack.push(this.transformMatrix);\n    const old = this.current;\n    this.extraStack.push(old);\n    this.current = old.clone();\n  }\n\n  restore() {\n    this.transformMatrix = this.transformStack.pop();\n    this.current = this.extraStack.pop();\n    this.pendingClip = null;\n    this.tgrp = null;\n  }\n\n  group(items) {\n    this.save();\n    this.executeOpTree(items);\n    this.restore();\n  }\n\n  loadDependencies(operatorList) {\n    const fnArray = operatorList.fnArray;\n    const argsArray = operatorList.argsArray;\n\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      if (fnArray[i] !== OPS.dependency) {\n        continue;\n      }\n\n      for (const obj of argsArray[i]) {\n        const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n        const promise = new Promise(resolve => {\n          objsPool.get(obj, resolve);\n        });\n        this.current.dependencies.push(promise);\n      }\n    }\n    return Promise.all(this.current.dependencies);\n  }\n\n  transform(a, b, c, d, e, f) {\n    const transformMatrix = [a, b, c, d, e, f];\n    this.transformMatrix = Util.transform(\n      this.transformMatrix,\n      transformMatrix\n    );\n    this.tgrp = null;\n  }\n\n  getSVG(operatorList, viewport) {\n    this.viewport = viewport;\n\n    const svgElement = this._initialize(viewport);\n    return this.loadDependencies(operatorList).then(() => {\n      this.transformMatrix = IDENTITY_MATRIX;\n      this.executeOpTree(this.convertOpList(operatorList));\n      return svgElement;\n    });\n  }\n\n  convertOpList(operatorList) {\n    const operatorIdMapping = this._operatorIdMapping;\n    const argsArray = operatorList.argsArray;\n    const fnArray = operatorList.fnArray;\n    const opList = [];\n    for (let i = 0, ii = fnArray.length; i < ii; i++) {\n      const fnId = fnArray[i];\n      opList.push({\n        fnId,\n        fn: operatorIdMapping[fnId],\n        args: argsArray[i],\n      });\n    }\n    return opListToTree(opList);\n  }\n\n  executeOpTree(opTree) {\n    for (const opTreeElement of opTree) {\n      const fn = opTreeElement.fn;\n      const fnId = opTreeElement.fnId;\n      const args = opTreeElement.args;\n\n      switch (fnId | 0) {\n        case OPS.beginText:\n          this.beginText();\n          break;\n        case OPS.dependency:\n          // Handled in `loadDependencies`, so no warning should be shown.\n          break;\n        case OPS.setLeading:\n          this.setLeading(args);\n          break;\n        case OPS.setLeadingMoveText:\n          this.setLeadingMoveText(args[0], args[1]);\n          break;\n        case OPS.setFont:\n          this.setFont(args);\n          break;\n        case OPS.showText:\n          this.showText(args[0]);\n          break;\n        case OPS.showSpacedText:\n          this.showText(args[0]);\n          break;\n        case OPS.endText:\n          this.endText();\n          break;\n        case OPS.moveText:\n          this.moveText(args[0], args[1]);\n          break;\n        case OPS.setCharSpacing:\n          this.setCharSpacing(args[0]);\n          break;\n        case OPS.setWordSpacing:\n          this.setWordSpacing(args[0]);\n          break;\n        case OPS.setHScale:\n          this.setHScale(args[0]);\n          break;\n        case OPS.setTextMatrix:\n          this.setTextMatrix(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5]\n          );\n          break;\n        case OPS.setTextRise:\n          this.setTextRise(args[0]);\n          break;\n        case OPS.setTextRenderingMode:\n          this.setTextRenderingMode(args[0]);\n          break;\n        case OPS.setLineWidth:\n          this.setLineWidth(args[0]);\n          break;\n        case OPS.setLineJoin:\n          this.setLineJoin(args[0]);\n          break;\n        case OPS.setLineCap:\n          this.setLineCap(args[0]);\n          break;\n        case OPS.setMiterLimit:\n          this.setMiterLimit(args[0]);\n          break;\n        case OPS.setFillRGBColor:\n          this.setFillRGBColor(args[0], args[1], args[2]);\n          break;\n        case OPS.setStrokeRGBColor:\n          this.setStrokeRGBColor(args[0], args[1], args[2]);\n          break;\n        case OPS.setStrokeColorN:\n          this.setStrokeColorN(args);\n          break;\n        case OPS.setFillColorN:\n          this.setFillColorN(args);\n          break;\n        case OPS.shadingFill:\n          this.shadingFill(args[0]);\n          break;\n        case OPS.setDash:\n          this.setDash(args[0], args[1]);\n          break;\n        case OPS.setRenderingIntent:\n          this.setRenderingIntent(args[0]);\n          break;\n        case OPS.setFlatness:\n          this.setFlatness(args[0]);\n          break;\n        case OPS.setGState:\n          this.setGState(args[0]);\n          break;\n        case OPS.fill:\n          this.fill();\n          break;\n        case OPS.eoFill:\n          this.eoFill();\n          break;\n        case OPS.stroke:\n          this.stroke();\n          break;\n        case OPS.fillStroke:\n          this.fillStroke();\n          break;\n        case OPS.eoFillStroke:\n          this.eoFillStroke();\n          break;\n        case OPS.clip:\n          this.clip(\"nonzero\");\n          break;\n        case OPS.eoClip:\n          this.clip(\"evenodd\");\n          break;\n        case OPS.paintSolidColorImageMask:\n          this.paintSolidColorImageMask();\n          break;\n        case OPS.paintImageXObject:\n          this.paintImageXObject(args[0]);\n          break;\n        case OPS.paintInlineImageXObject:\n          this.paintInlineImageXObject(args[0]);\n          break;\n        case OPS.paintImageMaskXObject:\n          this.paintImageMaskXObject(args[0]);\n          break;\n        case OPS.paintFormXObjectBegin:\n          this.paintFormXObjectBegin(args[0], args[1]);\n          break;\n        case OPS.paintFormXObjectEnd:\n          this.paintFormXObjectEnd();\n          break;\n        case OPS.closePath:\n          this.closePath();\n          break;\n        case OPS.closeStroke:\n          this.closeStroke();\n          break;\n        case OPS.closeFillStroke:\n          this.closeFillStroke();\n          break;\n        case OPS.closeEOFillStroke:\n          this.closeEOFillStroke();\n          break;\n        case OPS.nextLine:\n          this.nextLine();\n          break;\n        case OPS.transform:\n          this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n          break;\n        case OPS.constructPath:\n          this.constructPath(args[0], args[1]);\n          break;\n        case OPS.endPath:\n          this.endPath();\n          break;\n        case 92:\n          this.group(opTreeElement.items);\n          break;\n        default:\n          warn(`Unimplemented operator ${fn}`);\n          break;\n      }\n    }\n  }\n\n  setWordSpacing(wordSpacing) {\n    this.current.wordSpacing = wordSpacing;\n  }\n\n  setCharSpacing(charSpacing) {\n    this.current.charSpacing = charSpacing;\n  }\n\n  nextLine() {\n    this.moveText(0, this.current.leading);\n  }\n\n  setTextMatrix(a, b, c, d, e, f) {\n    const current = this.current;\n    current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n    current.textMatrixScale = Math.hypot(a, b);\n\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtElement.append(current.tspan);\n  }\n\n  beginText() {\n    const current = this.current;\n    current.x = current.lineX = 0;\n    current.y = current.lineY = 0;\n    current.textMatrix = IDENTITY_MATRIX;\n    current.lineMatrix = IDENTITY_MATRIX;\n    current.textMatrixScale = 1;\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.txtElement = this.svgFactory.createElement(\"svg:text\");\n    current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n\n  moveText(x, y) {\n    const current = this.current;\n    current.x = current.lineX += x;\n    current.y = current.lineY += y;\n\n    current.xcoords = [];\n    current.ycoords = [];\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n  }\n\n  showText(glyphs) {\n    const current = this.current;\n    const font = current.font;\n    const fontSize = current.fontSize;\n    if (fontSize === 0) {\n      return;\n    }\n\n    const fontSizeScale = current.fontSizeScale;\n    const charSpacing = current.charSpacing;\n    const wordSpacing = current.wordSpacing;\n    const fontDirection = current.fontDirection;\n    const textHScale = current.textHScale * fontDirection;\n    const vertical = font.vertical;\n    const spacingDir = vertical ? 1 : -1;\n    const defaultVMetrics = font.defaultVMetrics;\n    const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n    let x = 0;\n    for (const glyph of glyphs) {\n      if (glyph === null) {\n        // Word break\n        x += fontDirection * wordSpacing;\n        continue;\n      } else if (typeof glyph === \"number\") {\n        x += (spacingDir * glyph * fontSize) / 1000;\n        continue;\n      }\n\n      const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n      const character = glyph.fontChar;\n      let scaledX, scaledY;\n      let width = glyph.width;\n      if (vertical) {\n        let vx;\n        const vmetric = glyph.vmetric || defaultVMetrics;\n        vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n        vx = -vx * widthAdvanceScale;\n        const vy = vmetric[2] * widthAdvanceScale;\n\n        width = vmetric ? -vmetric[0] : width;\n        scaledX = vx / fontSizeScale;\n        scaledY = (x + vy) / fontSizeScale;\n      } else {\n        scaledX = x / fontSizeScale;\n        scaledY = 0;\n      }\n\n      if (glyph.isInFont || font.missingFile) {\n        current.xcoords.push(current.x + scaledX);\n        if (vertical) {\n          current.ycoords.push(-current.y + scaledY);\n        }\n        current.tspan.textContent += character;\n      } else {\n        // TODO: To assist with text selection, we should replace the missing\n        // character with a space character if charWidth is not zero.\n        // But we cannot just do \"character = ' '\", because the ' ' character\n        // might actually map to a different glyph.\n      }\n\n      const charWidth = vertical\n        ? width * widthAdvanceScale - spacing * fontDirection\n        : width * widthAdvanceScale + spacing * fontDirection;\n\n      x += charWidth;\n    }\n    current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n    if (vertical) {\n      current.tspan.setAttributeNS(\n        null,\n        \"y\",\n        current.ycoords.map(pf).join(\" \")\n      );\n    } else {\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    if (vertical) {\n      current.y -= x;\n    } else {\n      current.x += x * textHScale;\n    }\n\n    current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n    current.tspan.setAttributeNS(\n      null,\n      \"font-size\",\n      `${pf(current.fontSize)}px`\n    );\n    if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n      current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n    }\n    if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n      current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n    }\n\n    const fillStrokeMode =\n      current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n    if (\n      fillStrokeMode === TextRenderingMode.FILL ||\n      fillStrokeMode === TextRenderingMode.FILL_STROKE\n    ) {\n      if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n        current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n      }\n      if (current.fillAlpha < 1) {\n        current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      }\n    } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n      // Workaround for Firefox: We must set fill=\"transparent\" because\n      // fill=\"none\" would generate an empty clipping path.\n      current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n    } else {\n      current.tspan.setAttributeNS(null, \"fill\", \"none\");\n    }\n\n    if (\n      fillStrokeMode === TextRenderingMode.STROKE ||\n      fillStrokeMode === TextRenderingMode.FILL_STROKE\n    ) {\n      const lineWidthScale = 1 / (current.textMatrixScale || 1);\n      this._setStrokeAttributes(current.tspan, lineWidthScale);\n    }\n\n    // Include the text rise in the text matrix since the `pm` function\n    // creates the SVG element's `translate` entry (work on a copy to avoid\n    // altering the original text matrix).\n    let textMatrix = current.textMatrix;\n    if (current.textRise !== 0) {\n      textMatrix = textMatrix.slice();\n      textMatrix[5] += current.textRise;\n    }\n\n    current.txtElement.setAttributeNS(\n      null,\n      \"transform\",\n      `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n    );\n    current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n    current.txtElement.append(current.tspan);\n    current.txtgrp.append(current.txtElement);\n\n    this._ensureTransformGroup().append(current.txtElement);\n  }\n\n  setLeadingMoveText(x, y) {\n    this.setLeading(-y);\n    this.moveText(x, y);\n  }\n\n  addFontStyle(fontObj) {\n    if (!fontObj.data) {\n      throw new Error(\n        \"addFontStyle: No font data available, \" +\n          'ensure that the \"fontExtraProperties\" API parameter is set.'\n      );\n    }\n    if (!this.cssStyle) {\n      this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n      this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n      this.defs.append(this.cssStyle);\n    }\n\n    const url = createObjectURL(\n      fontObj.data,\n      fontObj.mimetype,\n      this.forceDataSchema\n    );\n    this.cssStyle.textContent +=\n      `@font-face { font-family: \"${fontObj.loadedName}\";` +\n      ` src: url(${url}); }\\n`;\n  }\n\n  setFont(details) {\n    const current = this.current;\n    const fontObj = this.commonObjs.get(details[0]);\n    let size = details[1];\n    current.font = fontObj;\n\n    if (\n      this.embedFonts &&\n      !fontObj.missingFile &&\n      !this.embeddedFonts[fontObj.loadedName]\n    ) {\n      this.addFontStyle(fontObj);\n      this.embeddedFonts[fontObj.loadedName] = fontObj;\n    }\n    current.fontMatrix = fontObj.fontMatrix || FONT_IDENTITY_MATRIX;\n\n    let bold = \"normal\";\n    if (fontObj.black) {\n      bold = \"900\";\n    } else if (fontObj.bold) {\n      bold = \"bold\";\n    }\n    const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n    if (size < 0) {\n      size = -size;\n      current.fontDirection = -1;\n    } else {\n      current.fontDirection = 1;\n    }\n    current.fontSize = size;\n    current.fontFamily = fontObj.loadedName;\n    current.fontWeight = bold;\n    current.fontStyle = italic;\n\n    current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    current.xcoords = [];\n    current.ycoords = [];\n  }\n\n  endText() {\n    const current = this.current;\n    if (\n      current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n      current.txtElement?.hasChildNodes()\n    ) {\n      // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n      current.element = current.txtElement;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n\n  // Path properties\n  setLineWidth(width) {\n    if (width > 0) {\n      this.current.lineWidth = width;\n    }\n  }\n\n  setLineCap(style) {\n    this.current.lineCap = LINE_CAP_STYLES[style];\n  }\n\n  setLineJoin(style) {\n    this.current.lineJoin = LINE_JOIN_STYLES[style];\n  }\n\n  setMiterLimit(limit) {\n    this.current.miterLimit = limit;\n  }\n\n  setStrokeAlpha(strokeAlpha) {\n    this.current.strokeAlpha = strokeAlpha;\n  }\n\n  setStrokeRGBColor(r, g, b) {\n    this.current.strokeColor = Util.makeHexColor(r, g, b);\n  }\n\n  setFillAlpha(fillAlpha) {\n    this.current.fillAlpha = fillAlpha;\n  }\n\n  setFillRGBColor(r, g, b) {\n    this.current.fillColor = Util.makeHexColor(r, g, b);\n    this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n    this.current.xcoords = [];\n    this.current.ycoords = [];\n  }\n\n  setStrokeColorN(args) {\n    this.current.strokeColor = this._makeColorN_Pattern(args);\n  }\n\n  setFillColorN(args) {\n    this.current.fillColor = this._makeColorN_Pattern(args);\n  }\n\n  shadingFill(args) {\n    const { width, height } = this.viewport;\n    const inv = Util.inverseTransform(this.transformMatrix);\n    const [x0, y0, x1, y1] = Util.getAxialAlignedBoundingBox(\n      [0, 0, width, height],\n      inv\n    );\n\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", x0);\n    rect.setAttributeNS(null, \"y\", y0);\n    rect.setAttributeNS(null, \"width\", x1 - x0);\n    rect.setAttributeNS(null, \"height\", y1 - y0);\n    rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n    if (this.current.fillAlpha < 1) {\n      rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n    }\n    this._ensureTransformGroup().append(rect);\n  }\n\n  /**\n   * @private\n   */\n  _makeColorN_Pattern(args) {\n    if (args[0] === \"TilingPattern\") {\n      return this._makeTilingPattern(args);\n    }\n    return this._makeShadingPattern(args);\n  }\n\n  /**\n   * @private\n   */\n  _makeTilingPattern(args) {\n    const color = args[1];\n    const operatorList = args[2];\n    const matrix = args[3] || IDENTITY_MATRIX;\n    const [x0, y0, x1, y1] = args[4];\n    const xstep = args[5];\n    const ystep = args[6];\n    const paintType = args[7];\n\n    const tilingId = `shading${shadingCount++}`;\n    const [tx0, ty0, tx1, ty1] = Util.normalizeRect([\n      ...Util.applyTransform([x0, y0], matrix),\n      ...Util.applyTransform([x1, y1], matrix),\n    ]);\n    const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n    const txstep = xstep * xscale;\n    const tystep = ystep * yscale;\n\n    const tiling = this.svgFactory.createElement(\"svg:pattern\");\n    tiling.setAttributeNS(null, \"id\", tilingId);\n    tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n    tiling.setAttributeNS(null, \"width\", txstep);\n    tiling.setAttributeNS(null, \"height\", tystep);\n    tiling.setAttributeNS(null, \"x\", `${tx0}`);\n    tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n    // Save current state.\n    const svg = this.svg;\n    const transformMatrix = this.transformMatrix;\n    const fillColor = this.current.fillColor;\n    const strokeColor = this.current.strokeColor;\n\n    const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n    this.svg = bbox;\n    this.transformMatrix = matrix;\n    if (paintType === 2) {\n      const cssColor = Util.makeHexColor(...color);\n      this.current.fillColor = cssColor;\n      this.current.strokeColor = cssColor;\n    }\n    this.executeOpTree(this.convertOpList(operatorList));\n\n    // Restore saved state.\n    this.svg = svg;\n    this.transformMatrix = transformMatrix;\n    this.current.fillColor = fillColor;\n    this.current.strokeColor = strokeColor;\n\n    tiling.append(bbox.childNodes[0]);\n    this.defs.append(tiling);\n    return `url(#${tilingId})`;\n  }\n\n  /**\n   * @private\n   */\n  _makeShadingPattern(args) {\n    if (typeof args === \"string\") {\n      args = this.objs.get(args);\n    }\n    switch (args[0]) {\n      case \"RadialAxial\":\n        const shadingId = `shading${shadingCount++}`;\n        const colorStops = args[3];\n        let gradient;\n\n        switch (args[1]) {\n          case \"axial\":\n            const point0 = args[4];\n            const point1 = args[5];\n            gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"x1\", point0[0]);\n            gradient.setAttributeNS(null, \"y1\", point0[1]);\n            gradient.setAttributeNS(null, \"x2\", point1[0]);\n            gradient.setAttributeNS(null, \"y2\", point1[1]);\n            break;\n          case \"radial\":\n            const focalPoint = args[4];\n            const circlePoint = args[5];\n            const focalRadius = args[6];\n            const circleRadius = args[7];\n            gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n            gradient.setAttributeNS(null, \"id\", shadingId);\n            gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n            gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n            gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n            gradient.setAttributeNS(null, \"r\", circleRadius);\n            gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n            gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n            gradient.setAttributeNS(null, \"fr\", focalRadius);\n            break;\n          default:\n            throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n        }\n        for (const colorStop of colorStops) {\n          const stop = this.svgFactory.createElement(\"svg:stop\");\n          stop.setAttributeNS(null, \"offset\", colorStop[0]);\n          stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n          gradient.append(stop);\n        }\n        this.defs.append(gradient);\n        return `url(#${shadingId})`;\n      case \"Mesh\":\n        warn(\"Unimplemented pattern Mesh\");\n        return null;\n      case \"Dummy\":\n        return \"hotpink\";\n      default:\n        throw new Error(`Unknown IR type: ${args[0]}`);\n    }\n  }\n\n  setDash(dashArray, dashPhase) {\n    this.current.dashArray = dashArray;\n    this.current.dashPhase = dashPhase;\n  }\n\n  constructPath(ops, args) {\n    const current = this.current;\n    let x = current.x,\n      y = current.y;\n    let d = [];\n    let j = 0;\n\n    for (const op of ops) {\n      switch (op | 0) {\n        case OPS.rectangle:\n          x = args[j++];\n          y = args[j++];\n          const width = args[j++];\n          const height = args[j++];\n          const xw = x + width;\n          const yh = y + height;\n          d.push(\n            \"M\",\n            pf(x),\n            pf(y),\n            \"L\",\n            pf(xw),\n            pf(y),\n            \"L\",\n            pf(xw),\n            pf(yh),\n            \"L\",\n            pf(x),\n            pf(yh),\n            \"Z\"\n          );\n          break;\n        case OPS.moveTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"M\", pf(x), pf(y));\n          break;\n        case OPS.lineTo:\n          x = args[j++];\n          y = args[j++];\n          d.push(\"L\", pf(x), pf(y));\n          break;\n        case OPS.curveTo:\n          x = args[j + 4];\n          y = args[j + 5];\n          d.push(\n            \"C\",\n            pf(args[j]),\n            pf(args[j + 1]),\n            pf(args[j + 2]),\n            pf(args[j + 3]),\n            pf(x),\n            pf(y)\n          );\n          j += 6;\n          break;\n        case OPS.curveTo2:\n          d.push(\n            \"C\",\n            pf(x),\n            pf(y),\n            pf(args[j]),\n            pf(args[j + 1]),\n            pf(args[j + 2]),\n            pf(args[j + 3])\n          );\n          x = args[j + 2];\n          y = args[j + 3];\n          j += 4;\n          break;\n        case OPS.curveTo3:\n          x = args[j + 2];\n          y = args[j + 3];\n          d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n          j += 4;\n          break;\n        case OPS.closePath:\n          d.push(\"Z\");\n          break;\n      }\n    }\n\n    d = d.join(\" \");\n\n    if (\n      current.path &&\n      ops.length > 0 &&\n      ops[0] !== OPS.rectangle &&\n      ops[0] !== OPS.moveTo\n    ) {\n      // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n      // probably been divided into two OPS.constructPath operators by\n      // OperatorList. Append the commands to the previous path element.\n      d = current.path.getAttributeNS(null, \"d\") + d;\n    } else {\n      current.path = this.svgFactory.createElement(\"svg:path\");\n      this._ensureTransformGroup().append(current.path);\n    }\n\n    current.path.setAttributeNS(null, \"d\", d);\n    current.path.setAttributeNS(null, \"fill\", \"none\");\n\n    // Saving a reference in current.element so that it can be addressed\n    // in 'fill' and 'stroke'\n    current.element = current.path;\n    current.setCurrentPoint(x, y);\n  }\n\n  endPath() {\n    const current = this.current;\n\n    // Painting operators end a path.\n    current.path = null;\n\n    if (!this.pendingClip) {\n      return;\n    }\n    if (!current.element) {\n      this.pendingClip = null;\n      return;\n    }\n\n    // Add the current path to a clipping path.\n    const clipId = `clippath${clipCount++}`;\n    const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n    clipPath.setAttributeNS(null, \"id\", clipId);\n    clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n    // A deep clone is needed when text is used as a clipping path.\n    const clipElement = current.element.cloneNode(true);\n    if (this.pendingClip === \"evenodd\") {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n    } else {\n      clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n    }\n    this.pendingClip = null;\n    clipPath.append(clipElement);\n    this.defs.append(clipPath);\n\n    if (current.activeClipUrl) {\n      // The previous clipping group content can go out of order -- resetting\n      // cached clipGroups.\n      current.clipGroup = null;\n      for (const prev of this.extraStack) {\n        prev.clipGroup = null;\n      }\n      // Intersect with the previous clipping path.\n      clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n    }\n    current.activeClipUrl = `url(#${clipId})`;\n\n    this.tgrp = null;\n  }\n\n  clip(type) {\n    this.pendingClip = type;\n  }\n\n  closePath() {\n    const current = this.current;\n    if (current.path) {\n      const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n      current.path.setAttributeNS(null, \"d\", d);\n    }\n  }\n\n  setLeading(leading) {\n    this.current.leading = -leading;\n  }\n\n  setTextRise(textRise) {\n    this.current.textRise = textRise;\n  }\n\n  setTextRenderingMode(textRenderingMode) {\n    this.current.textRenderingMode = textRenderingMode;\n  }\n\n  setHScale(scale) {\n    this.current.textHScale = scale / 100;\n  }\n\n  setRenderingIntent(intent) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setFlatness(flatness) {\n    // This operation is ignored since we haven't found a use case for it yet.\n  }\n\n  setGState(states) {\n    for (const [key, value] of states) {\n      switch (key) {\n        case \"LW\":\n          this.setLineWidth(value);\n          break;\n        case \"LC\":\n          this.setLineCap(value);\n          break;\n        case \"LJ\":\n          this.setLineJoin(value);\n          break;\n        case \"ML\":\n          this.setMiterLimit(value);\n          break;\n        case \"D\":\n          this.setDash(value[0], value[1]);\n          break;\n        case \"RI\":\n          this.setRenderingIntent(value);\n          break;\n        case \"FL\":\n          this.setFlatness(value);\n          break;\n        case \"Font\":\n          this.setFont(value);\n          break;\n        case \"CA\":\n          this.setStrokeAlpha(value);\n          break;\n        case \"ca\":\n          this.setFillAlpha(value);\n          break;\n        default:\n          warn(`Unimplemented graphic state operator ${key}`);\n          break;\n      }\n    }\n  }\n\n  fill() {\n    const current = this.current;\n    if (current.element) {\n      current.element.setAttributeNS(null, \"fill\", current.fillColor);\n      current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n      this.endPath();\n    }\n  }\n\n  stroke() {\n    const current = this.current;\n    if (current.element) {\n      this._setStrokeAttributes(current.element);\n      current.element.setAttributeNS(null, \"fill\", \"none\");\n      this.endPath();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setStrokeAttributes(element, lineWidthScale = 1) {\n    const current = this.current;\n    let dashArray = current.dashArray;\n    if (lineWidthScale !== 1 && dashArray.length > 0) {\n      dashArray = dashArray.map(function (value) {\n        return lineWidthScale * value;\n      });\n    }\n    element.setAttributeNS(null, \"stroke\", current.strokeColor);\n    element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n    element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n    element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n    element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n    element.setAttributeNS(\n      null,\n      \"stroke-width\",\n      pf(lineWidthScale * current.lineWidth) + \"px\"\n    );\n    element.setAttributeNS(\n      null,\n      \"stroke-dasharray\",\n      dashArray.map(pf).join(\" \")\n    );\n    element.setAttributeNS(\n      null,\n      \"stroke-dashoffset\",\n      pf(lineWidthScale * current.dashPhase) + \"px\"\n    );\n  }\n\n  eoFill() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fill();\n  }\n\n  fillStroke() {\n    // Order is important since stroke wants fill to be none.\n    // First stroke, then if fill needed, it will be overwritten.\n    this.stroke();\n    this.fill();\n  }\n\n  eoFillStroke() {\n    this.current.element?.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n    this.fillStroke();\n  }\n\n  closeStroke() {\n    this.closePath();\n    this.stroke();\n  }\n\n  closeFillStroke() {\n    this.closePath();\n    this.fillStroke();\n  }\n\n  closeEOFillStroke() {\n    this.closePath();\n    this.eoFillStroke();\n  }\n\n  paintSolidColorImageMask() {\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", \"1px\");\n    rect.setAttributeNS(null, \"height\", \"1px\");\n    rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n    this._ensureTransformGroup().append(rect);\n  }\n\n  paintImageXObject(objId) {\n    const imgData = this.getObject(objId);\n    if (!imgData) {\n      warn(`Dependent image with object ID ${objId} is not ready yet`);\n      return;\n    }\n    this.paintInlineImageXObject(imgData);\n  }\n\n  paintInlineImageXObject(imgData, mask) {\n    const width = imgData.width;\n    const height = imgData.height;\n\n    const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n    const cliprect = this.svgFactory.createElement(\"svg:rect\");\n    cliprect.setAttributeNS(null, \"x\", \"0\");\n    cliprect.setAttributeNS(null, \"y\", \"0\");\n    cliprect.setAttributeNS(null, \"width\", pf(width));\n    cliprect.setAttributeNS(null, \"height\", pf(height));\n    this.current.element = cliprect;\n    this.clip(\"nonzero\");\n\n    const imgEl = this.svgFactory.createElement(\"svg:image\");\n    imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n    imgEl.setAttributeNS(null, \"x\", \"0\");\n    imgEl.setAttributeNS(null, \"y\", pf(-height));\n    imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n    imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n    imgEl.setAttributeNS(\n      null,\n      \"transform\",\n      `scale(${pf(1 / width)} ${pf(-1 / height)})`\n    );\n    if (mask) {\n      mask.append(imgEl);\n    } else {\n      this._ensureTransformGroup().append(imgEl);\n    }\n  }\n\n  paintImageMaskXObject(img) {\n    const imgData = this.getObject(img.data, img);\n    if (imgData.bitmap) {\n      warn(\n        \"paintImageMaskXObject: ImageBitmap support is not implemented, \" +\n          \"ensure that the `isOffscreenCanvasSupported` API parameter is disabled.\"\n      );\n      return;\n    }\n    const current = this.current;\n    const width = imgData.width;\n    const height = imgData.height;\n    const fillColor = current.fillColor;\n\n    current.maskId = `mask${maskCount++}`;\n    const mask = this.svgFactory.createElement(\"svg:mask\");\n    mask.setAttributeNS(null, \"id\", current.maskId);\n\n    const rect = this.svgFactory.createElement(\"svg:rect\");\n    rect.setAttributeNS(null, \"x\", \"0\");\n    rect.setAttributeNS(null, \"y\", \"0\");\n    rect.setAttributeNS(null, \"width\", pf(width));\n    rect.setAttributeNS(null, \"height\", pf(height));\n    rect.setAttributeNS(null, \"fill\", fillColor);\n    rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n    this.defs.append(mask);\n    this._ensureTransformGroup().append(rect);\n\n    this.paintInlineImageXObject(imgData, mask);\n  }\n\n  paintFormXObjectBegin(matrix, bbox) {\n    if (Array.isArray(matrix) && matrix.length === 6) {\n      this.transform(\n        matrix[0],\n        matrix[1],\n        matrix[2],\n        matrix[3],\n        matrix[4],\n        matrix[5]\n      );\n    }\n\n    if (bbox) {\n      const width = bbox[2] - bbox[0];\n      const height = bbox[3] - bbox[1];\n\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", bbox[0]);\n      cliprect.setAttributeNS(null, \"y\", bbox[1]);\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n      this.endPath();\n    }\n  }\n\n  paintFormXObjectEnd() {}\n\n  /**\n   * @private\n   */\n  _initialize(viewport) {\n    const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n    // Create the definitions element.\n    const definitions = this.svgFactory.createElement(\"svg:defs\");\n    svg.append(definitions);\n    this.defs = definitions;\n\n    // Create the root group element, which acts a container for all other\n    // groups and applies the viewport transform.\n    const rootGroup = this.svgFactory.createElement(\"svg:g\");\n    rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n    svg.append(rootGroup);\n\n    // For the construction of the SVG image we are only interested in the\n    // root group, so we expose it as the entry point of the SVG image for\n    // the other code in this class.\n    this.svg = rootGroup;\n\n    return svg;\n  }\n\n  /**\n   * @private\n   */\n  _ensureClipGroup() {\n    if (!this.current.clipGroup) {\n      const clipGroup = this.svgFactory.createElement(\"svg:g\");\n      clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n      this.svg.append(clipGroup);\n      this.current.clipGroup = clipGroup;\n    }\n    return this.current.clipGroup;\n  }\n\n  /**\n   * @private\n   */\n  _ensureTransformGroup() {\n    if (!this.tgrp) {\n      this.tgrp = this.svgFactory.createElement(\"svg:g\");\n      this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n      if (this.current.activeClipUrl) {\n        this._ensureClipGroup().append(this.tgrp);\n      } else {\n        this.svg.append(this.tgrp);\n      }\n    }\n    return this.tgrp;\n  }\n}\n\nexport { SVGGraphics };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").TextContent} TextContent */\n\nclass XfaText {\n  /**\n   * Walk an XFA tree and create an array of text nodes that is compatible\n   * with a regular PDFs TextContent. Currently, only TextItem.str is supported,\n   * all other fields and styles haven't been implemented.\n   *\n   * @param {Object} xfa - An XFA fake DOM object.\n   *\n   * @returns {TextContent}\n   */\n  static textContent(xfa) {\n    const items = [];\n    const output = {\n      items,\n      styles: Object.create(null),\n    };\n    function walk(node) {\n      if (!node) {\n        return;\n      }\n      let str = null;\n      const name = node.name;\n      if (name === \"#text\") {\n        str = node.value;\n      } else if (!XfaText.shouldBuildText(name)) {\n        return;\n      } else if (node?.attributes?.textContent) {\n        str = node.attributes.textContent;\n      } else if (node.value) {\n        str = node.value;\n      }\n      if (str !== null) {\n        items.push({\n          str,\n        });\n      }\n      if (!node.children) {\n        return;\n      }\n      for (const child of node.children) {\n        walk(child);\n      }\n    }\n    walk(xfa);\n    return output;\n  }\n\n  /**\n   * @param {string} name - DOM node name. (lower case)\n   *\n   * @returns {boolean} true if the DOM node should have a corresponding text\n   * node.\n   */\n  static shouldBuildText(name) {\n    return !(\n      name === \"textarea\" ||\n      name === \"input\" ||\n      name === \"option\" ||\n      name === \"select\"\n    );\n  }\n}\n\nexport { XfaText };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"./api\").TextContent} TextContent */\n\nimport {\n  AbortException,\n  FeatureTest,\n  PromiseCapability,\n  Util,\n} from \"../shared/util.js\";\nimport { deprecated, setLayerDimensions } from \"./display_utils.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {ReadableStream | TextContent} textContentSource - Text content to\n *   render, i.e. the value returned by the page's `streamTextContent` or\n *   `getTextContent` method.\n * @property {HTMLElement} container - The DOM node that will contain the text\n *   runs.\n * @property {PageViewport} viewport - The target viewport to properly layout\n *   the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {WeakMap<HTMLElement,Object>} [textDivProperties] - Some properties\n *   weakly mapped to the HTML elements used to render the text.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *   the `str` property of the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {boolean} [isOffscreenCanvasSupported] true if we can use\n *   OffscreenCanvas to measure string widths.\n */\n\n/**\n * Text layer update parameters.\n *\n * @typedef {Object} TextLayerUpdateParameters\n * @property {HTMLElement} container - The DOM node that will contain the text\n *   runs.\n * @property {PageViewport} viewport - The target viewport to properly layout\n *   the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that correspond to\n *   the text items of the textContent input.\n *   This is output and shall initially be set to an empty array.\n * @property {WeakMap<HTMLElement,Object>} [textDivProperties] - Some properties\n *   weakly mapped to the HTML elements used to render the text.\n * @property {boolean} [isOffscreenCanvasSupported] true if we can use\n *   OffscreenCanvas to measure string widths.\n * @property {boolean} [mustRotate] true if the text layer must be rotated.\n * @property {boolean} [mustRescale] true if the text layer contents must be\n *   rescaled.\n */\n\nconst MAX_TEXT_DIVS_TO_RENDER = 100000;\nconst DEFAULT_FONT_SIZE = 30;\nconst DEFAULT_FONT_ASCENT = 0.8;\nconst ascentCache = new Map();\n\nfunction getCtx(size, isOffscreenCanvasSupported) {\n  let ctx;\n  if (isOffscreenCanvasSupported && FeatureTest.isOffscreenCanvasSupported) {\n    ctx = new OffscreenCanvas(size, size).getContext(\"2d\", { alpha: false });\n  } else {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = canvas.height = size;\n    ctx = canvas.getContext(\"2d\", { alpha: false });\n  }\n\n  return ctx;\n}\n\nfunction getAscent(fontFamily, isOffscreenCanvasSupported) {\n  const cachedAscent = ascentCache.get(fontFamily);\n  if (cachedAscent) {\n    return cachedAscent;\n  }\n\n  const ctx = getCtx(DEFAULT_FONT_SIZE, isOffscreenCanvasSupported);\n\n  ctx.font = `${DEFAULT_FONT_SIZE}px ${fontFamily}`;\n  const metrics = ctx.measureText(\"\");\n\n  // Both properties aren't available by default in Firefox.\n  let ascent = metrics.fontBoundingBoxAscent;\n  let descent = Math.abs(metrics.fontBoundingBoxDescent);\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n\n    ctx.canvas.width = ctx.canvas.height = 0;\n    return ratio;\n  }\n\n  // Try basic heuristic to guess ascent/descent.\n  // Draw a g with baseline at 0,0 and then get the line\n  // number where a pixel has non-null red component (starting\n  // from bottom).\n  ctx.strokeStyle = \"red\";\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"g\", 0, 0);\n  let pixels = ctx.getImageData(\n    0,\n    0,\n    DEFAULT_FONT_SIZE,\n    DEFAULT_FONT_SIZE\n  ).data;\n  descent = 0;\n  for (let i = pixels.length - 1 - 3; i >= 0; i -= 4) {\n    if (pixels[i] > 0) {\n      descent = Math.ceil(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  // Draw an A with baseline at 0,DEFAULT_FONT_SIZE and then get the line\n  // number where a pixel has non-null red component (starting\n  // from top).\n  ctx.clearRect(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE);\n  ctx.strokeText(\"A\", 0, DEFAULT_FONT_SIZE);\n  pixels = ctx.getImageData(0, 0, DEFAULT_FONT_SIZE, DEFAULT_FONT_SIZE).data;\n  ascent = 0;\n  for (let i = 0, ii = pixels.length; i < ii; i += 4) {\n    if (pixels[i] > 0) {\n      ascent = DEFAULT_FONT_SIZE - Math.floor(i / 4 / DEFAULT_FONT_SIZE);\n      break;\n    }\n  }\n\n  ctx.canvas.width = ctx.canvas.height = 0;\n\n  if (ascent) {\n    const ratio = ascent / (ascent + descent);\n    ascentCache.set(fontFamily, ratio);\n    return ratio;\n  }\n\n  ascentCache.set(fontFamily, DEFAULT_FONT_ASCENT);\n  return DEFAULT_FONT_ASCENT;\n}\n\nfunction appendText(task, geom, styles) {\n  // Initialize all used properties to keep the caches monomorphic.\n  const textDiv = document.createElement(\"span\");\n  const textDivProperties = {\n    angle: 0,\n    canvasWidth: 0,\n    hasText: geom.str !== \"\",\n    hasEOL: geom.hasEOL,\n    fontSize: 0,\n  };\n  task._textDivs.push(textDiv);\n\n  const tx = Util.transform(task._transform, geom.transform);\n  let angle = Math.atan2(tx[1], tx[0]);\n  const style = styles[geom.fontName];\n  if (style.vertical) {\n    angle += Math.PI / 2;\n  }\n  const fontHeight = Math.hypot(tx[2], tx[3]);\n  const fontAscent =\n    fontHeight * getAscent(style.fontFamily, task._isOffscreenCanvasSupported);\n\n  let left, top;\n  if (angle === 0) {\n    left = tx[4];\n    top = tx[5] - fontAscent;\n  } else {\n    left = tx[4] + fontAscent * Math.sin(angle);\n    top = tx[5] - fontAscent * Math.cos(angle);\n  }\n\n  const scaleFactorStr = \"calc(var(--scale-factor)*\";\n  const divStyle = textDiv.style;\n  // Setting the style properties individually, rather than all at once,\n  // should be OK since the `textDiv` isn't appended to the document yet.\n  if (task._container === task._rootContainer) {\n    divStyle.left = `${((100 * left) / task._pageWidth).toFixed(2)}%`;\n    divStyle.top = `${((100 * top) / task._pageHeight).toFixed(2)}%`;\n  } else {\n    // We're in a marked content span, hence we can't use percents.\n    divStyle.left = `${scaleFactorStr}${left.toFixed(2)}px)`;\n    divStyle.top = `${scaleFactorStr}${top.toFixed(2)}px)`;\n  }\n  divStyle.fontSize = `${scaleFactorStr}${fontHeight.toFixed(2)}px)`;\n  divStyle.fontFamily = style.fontFamily;\n\n  textDivProperties.fontSize = fontHeight;\n\n  // Keeps screen readers from pausing on every new text span.\n  textDiv.setAttribute(\"role\", \"presentation\");\n\n  textDiv.textContent = geom.str;\n  // geom.dir may be 'ttb' for vertical texts.\n  textDiv.dir = geom.dir;\n\n  // `fontName` is only used by the FontInspector, and we only use `dataset`\n  // here to make the font name available in the debugger.\n  if (task._fontInspectorEnabled) {\n    textDiv.dataset.fontName = geom.fontName;\n  }\n  if (angle !== 0) {\n    textDivProperties.angle = angle * (180 / Math.PI);\n  }\n  // We don't bother scaling single-char text divs, because it has very\n  // little effect on text highlighting. This makes scrolling on docs with\n  // lots of such divs a lot faster.\n  let shouldScaleText = false;\n  if (geom.str.length > 1) {\n    shouldScaleText = true;\n  } else if (geom.str !== \" \" && geom.transform[0] !== geom.transform[3]) {\n    const absScaleX = Math.abs(geom.transform[0]),\n      absScaleY = Math.abs(geom.transform[3]);\n    // When the horizontal/vertical scaling differs significantly, also scale\n    // even single-char text to improve highlighting (fixes issue11713.pdf).\n    if (\n      absScaleX !== absScaleY &&\n      Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n    ) {\n      shouldScaleText = true;\n    }\n  }\n  if (shouldScaleText) {\n    textDivProperties.canvasWidth = style.vertical ? geom.height : geom.width;\n  }\n  task._textDivProperties.set(textDiv, textDivProperties);\n  if (task._isReadableStream) {\n    task._layoutText(textDiv);\n  }\n}\n\nfunction layout(params) {\n  const { div, scale, properties, ctx, prevFontSize, prevFontFamily } = params;\n  const { style } = div;\n  let transform = \"\";\n  if (properties.canvasWidth !== 0 && properties.hasText) {\n    const { fontFamily } = style;\n    const { canvasWidth, fontSize } = properties;\n\n    if (prevFontSize !== fontSize || prevFontFamily !== fontFamily) {\n      ctx.font = `${fontSize * scale}px ${fontFamily}`;\n      params.prevFontSize = fontSize;\n      params.prevFontFamily = fontFamily;\n    }\n\n    // Only measure the width for multi-char text divs, see `appendText`.\n    const { width } = ctx.measureText(div.textContent);\n\n    if (width > 0) {\n      transform = `scaleX(${(canvasWidth * scale) / width})`;\n    }\n  }\n  if (properties.angle !== 0) {\n    transform = `rotate(${properties.angle}deg) ${transform}`;\n  }\n  if (transform.length > 0) {\n    style.transform = transform;\n  }\n}\n\nfunction render(task) {\n  if (task._canceled) {\n    return;\n  }\n  const textDivs = task._textDivs;\n  const capability = task._capability;\n  const textDivsLength = textDivs.length;\n\n  // No point in rendering many divs as it would make the browser\n  // unusable even after the divs are rendered.\n  if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n    capability.resolve();\n    return;\n  }\n\n  if (!task._isReadableStream) {\n    for (const textDiv of textDivs) {\n      task._layoutText(textDiv);\n    }\n  }\n  capability.resolve();\n}\n\nclass TextLayerRenderTask {\n  constructor({\n    textContentSource,\n    container,\n    viewport,\n    textDivs,\n    textDivProperties,\n    textContentItemsStr,\n    isOffscreenCanvasSupported,\n  }) {\n    this._textContentSource = textContentSource;\n    this._isReadableStream = textContentSource instanceof ReadableStream;\n    this._container = this._rootContainer = container;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._isOffscreenCanvasSupported = isOffscreenCanvasSupported;\n    this._fontInspectorEnabled = !!globalThis.FontInspector?.enabled;\n\n    this._reader = null;\n    this._textDivProperties = textDivProperties || new WeakMap();\n    this._canceled = false;\n    this._capability = new PromiseCapability();\n    this._layoutTextParams = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale: viewport.scale * (globalThis.devicePixelRatio || 1),\n      properties: null,\n      ctx: getCtx(0, isOffscreenCanvasSupported),\n    };\n    const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n    this._transform = [1, 0, 0, -1, -pageX, pageY + pageHeight];\n    this._pageWidth = pageWidth;\n    this._pageHeight = pageHeight;\n\n    setLayerDimensions(container, viewport);\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        this._layoutTextParams = null;\n      })\n      .catch(() => {\n        // Avoid \"Uncaught promise\" messages in the console.\n      });\n  }\n\n  /**\n   * Promise for textLayer rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._capability.promise;\n  }\n\n  /**\n   * Cancel rendering of the textLayer.\n   */\n  cancel() {\n    this._canceled = true;\n    if (this._reader) {\n      this._reader\n        .cancel(new AbortException(\"TextLayer task cancelled.\"))\n        .catch(() => {\n          // Avoid \"Uncaught promise\" messages in the console.\n        });\n      this._reader = null;\n    }\n    this._capability.reject(new AbortException(\"TextLayer task cancelled.\"));\n  }\n\n  /**\n   * @private\n   */\n  _processItems(items, styleCache) {\n    for (const item of items) {\n      if (item.str === undefined) {\n        if (\n          item.type === \"beginMarkedContentProps\" ||\n          item.type === \"beginMarkedContent\"\n        ) {\n          const parent = this._container;\n          this._container = document.createElement(\"span\");\n          this._container.classList.add(\"markedContent\");\n          if (item.id !== null) {\n            this._container.setAttribute(\"id\", `${item.id}`);\n          }\n          parent.append(this._container);\n        } else if (item.type === \"endMarkedContent\") {\n          this._container = this._container.parentNode;\n        }\n        continue;\n      }\n      this._textContentItemsStr.push(item.str);\n      appendText(this, item, styleCache);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _layoutText(textDiv) {\n    const textDivProperties = (this._layoutTextParams.properties =\n      this._textDivProperties.get(textDiv));\n    this._layoutTextParams.div = textDiv;\n    layout(this._layoutTextParams);\n\n    if (textDivProperties.hasText) {\n      this._container.append(textDiv);\n    }\n    if (textDivProperties.hasEOL) {\n      const br = document.createElement(\"br\");\n      br.setAttribute(\"role\", \"presentation\");\n      this._container.append(br);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _render() {\n    const capability = new PromiseCapability();\n    let styleCache = Object.create(null);\n\n    if (this._isReadableStream) {\n      const pump = () => {\n        this._reader.read().then(({ value, done }) => {\n          if (done) {\n            capability.resolve();\n            return;\n          }\n\n          Object.assign(styleCache, value.styles);\n          this._processItems(value.items, styleCache);\n          pump();\n        }, capability.reject);\n      };\n\n      this._reader = this._textContentSource.getReader();\n      pump();\n    } else if (this._textContentSource) {\n      const { items, styles } = this._textContentSource;\n      this._processItems(items, styles);\n      capability.resolve();\n    } else {\n      throw new Error('No \"textContentSource\" parameter specified.');\n    }\n\n    capability.promise.then(() => {\n      styleCache = null;\n      render(this);\n    }, this._capability.reject);\n  }\n}\n\n/**\n * @param {TextLayerRenderParameters} params\n * @returns {TextLayerRenderTask}\n */\nfunction renderTextLayer(params) {\n  if (\n    (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) &&\n    !params.textContentSource &&\n    (params.textContent || params.textContentStream)\n  ) {\n    deprecated(\n      \"The TextLayerRender `textContent`/`textContentStream` parameters \" +\n        \"will be removed in the future, please use `textContentSource` instead.\"\n    );\n    params.textContentSource = params.textContent || params.textContentStream;\n  }\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC && !TESTING\")) {\n    const { container, viewport } = params;\n    const style = getComputedStyle(container);\n    const visibility = style.getPropertyValue(\"visibility\");\n    const scaleFactor = parseFloat(style.getPropertyValue(\"--scale-factor\"));\n\n    if (\n      visibility === \"visible\" &&\n      (!scaleFactor || Math.abs(scaleFactor - viewport.scale) > 1e-5)\n    ) {\n      console.error(\n        \"The `--scale-factor` CSS-variable must be set, \" +\n          \"to the same value as `viewport.scale`, \" +\n          \"either on the `container`-element itself or higher up in the DOM.\"\n      );\n    }\n  }\n  const task = new TextLayerRenderTask(params);\n  task._render();\n  return task;\n}\n\n/**\n * @param {TextLayerUpdateParameters} params\n * @returns {undefined}\n */\nfunction updateTextLayer({\n  container,\n  viewport,\n  textDivs,\n  textDivProperties,\n  isOffscreenCanvasSupported,\n  mustRotate = true,\n  mustRescale = true,\n}) {\n  if (mustRotate) {\n    setLayerDimensions(container, { rotation: viewport.rotation });\n  }\n\n  if (mustRescale) {\n    const ctx = getCtx(0, isOffscreenCanvasSupported);\n    const scale = viewport.scale * (globalThis.devicePixelRatio || 1);\n    const params = {\n      prevFontSize: null,\n      prevFontFamily: null,\n      div: null,\n      scale,\n      properties: null,\n      ctx,\n    };\n    for (const div of textDivs) {\n      params.properties = textDivProperties.get(div);\n      params.div = div;\n      layout(params);\n    }\n  }\n}\n\nexport { renderTextLayer, TextLayerRenderTask, updateTextLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./tools.js\").AnnotationEditorUIManager} AnnotationEditorUIManager */\n/** @typedef {import(\"../display_utils.js\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../../web/text_accessibility.js\").TextAccessibilityManager} TextAccessibilityManager */\n/** @typedef {import(\"../../../web/interfaces\").IL10n} IL10n */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../annotation_layer.js\").AnnotationLayer} AnnotationLayer */\n\nimport { AnnotationEditorType, FeatureTest } from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { FreeTextEditor } from \"./freetext.js\";\nimport { InkEditor } from \"./ink.js\";\nimport { setLayerDimensions } from \"../display_utils.js\";\nimport { StampEditor } from \"./stamp.js\";\n\n/**\n * @typedef {Object} AnnotationEditorLayerOptions\n * @property {Object} mode\n * @property {HTMLDivElement} div\n * @property {AnnotationEditorUIManager} uiManager\n * @property {boolean} enabled\n * @property {TextAccessibilityManager} [accessibilityManager]\n * @property {number} pageIndex\n * @property {IL10n} l10n\n * @property {AnnotationLayer} [annotationLayer]\n * @property {PageViewport} viewport\n */\n\n/**\n * @typedef {Object} RenderEditorLayerOptions\n * @property {PageViewport} viewport\n */\n\n/**\n * Manage all the different editors on a page.\n */\nclass AnnotationEditorLayer {\n  #accessibilityManager;\n\n  #allowClick = false;\n\n  #annotationLayer = null;\n\n  #boundPointerup = this.pointerup.bind(this);\n\n  #boundPointerdown = this.pointerdown.bind(this);\n\n  #editors = new Map();\n\n  #hadPointerDown = false;\n\n  #isCleaningUp = false;\n\n  #isDisabling = false;\n\n  #uiManager;\n\n  static _initialized = false;\n\n  /**\n   * @param {AnnotationEditorLayerOptions} options\n   */\n  constructor({\n    uiManager,\n    pageIndex,\n    div,\n    accessibilityManager,\n    annotationLayer,\n    viewport,\n    l10n,\n  }) {\n    const editorTypes = [FreeTextEditor, InkEditor, StampEditor];\n    if (!AnnotationEditorLayer._initialized) {\n      AnnotationEditorLayer._initialized = true;\n      for (const editorType of editorTypes) {\n        editorType.initialize(l10n);\n      }\n    }\n    uiManager.registerEditorTypes(editorTypes);\n\n    this.#uiManager = uiManager;\n    this.pageIndex = pageIndex;\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationLayer = annotationLayer;\n    this.viewport = viewport;\n\n    this.#uiManager.addLayer(this);\n  }\n\n  get isEmpty() {\n    return this.#editors.size === 0;\n  }\n\n  /**\n   * Update the toolbar if it's required to reflect the tool currently used.\n   * @param {number} mode\n   */\n  updateToolbar(mode) {\n    this.#uiManager.updateToolbar(mode);\n  }\n\n  /**\n   * The mode has changed: it must be updated.\n   * @param {number} mode\n   */\n  updateMode(mode = this.#uiManager.getMode()) {\n    this.#cleanup();\n    if (mode === AnnotationEditorType.INK) {\n      // We always want to an ink editor ready to draw in.\n      this.addInkEditorIfNeeded(false);\n      this.disableClick();\n    } else {\n      this.enableClick();\n    }\n\n    if (mode !== AnnotationEditorType.NONE) {\n      this.div.classList.toggle(\n        \"freeTextEditing\",\n        mode === AnnotationEditorType.FREETEXT\n      );\n      this.div.classList.toggle(\n        \"inkEditing\",\n        mode === AnnotationEditorType.INK\n      );\n      this.div.classList.toggle(\n        \"stampEditing\",\n        mode === AnnotationEditorType.STAMP\n      );\n      this.div.hidden = false;\n    }\n  }\n\n  addInkEditorIfNeeded(isCommitting) {\n    if (\n      !isCommitting &&\n      this.#uiManager.getMode() !== AnnotationEditorType.INK\n    ) {\n      return;\n    }\n\n    if (!isCommitting) {\n      // We're removing an editor but an empty one can already exist so in this\n      // case we don't need to create a new one.\n      for (const editor of this.#editors.values()) {\n        if (editor.isEmpty()) {\n          editor.setInBackground();\n          return;\n        }\n      }\n    }\n\n    const editor = this.#createAndAddNewEditor(\n      { offsetX: 0, offsetY: 0 },\n      /* isCentered = */ false\n    );\n    editor.setInBackground();\n  }\n\n  /**\n   * Set the editing state.\n   * @param {boolean} isEditing\n   */\n  setEditingState(isEditing) {\n    this.#uiManager.setEditingState(isEditing);\n  }\n\n  /**\n   * Add some commands into the CommandManager (undo/redo stuff).\n   * @param {Object} params\n   */\n  addCommands(params) {\n    this.#uiManager.addCommands(params);\n  }\n\n  /**\n   * Enable pointer events on the main div in order to enable\n   * editor creation.\n   */\n  enable() {\n    this.div.style.pointerEvents = \"auto\";\n    const annotationElementIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.enableEditing();\n      if (editor.annotationElementId) {\n        annotationElementIds.add(editor.annotationElementId);\n      }\n    }\n\n    if (!this.#annotationLayer) {\n      return;\n    }\n\n    const editables = this.#annotationLayer.getEditableAnnotations();\n    for (const editable of editables) {\n      // The element must be hidden whatever its state is.\n      editable.hide();\n      if (this.#uiManager.isDeletedAnnotationElement(editable.data.id)) {\n        continue;\n      }\n      if (annotationElementIds.has(editable.data.id)) {\n        continue;\n      }\n      const editor = this.deserialize(editable);\n      if (!editor) {\n        continue;\n      }\n      this.addOrRebuild(editor);\n      editor.enableEditing();\n    }\n  }\n\n  /**\n   * Disable editor creation.\n   */\n  disable() {\n    this.#isDisabling = true;\n    this.div.style.pointerEvents = \"none\";\n    const hiddenAnnotationIds = new Set();\n    for (const editor of this.#editors.values()) {\n      editor.disableEditing();\n      if (!editor.annotationElementId || editor.serialize() !== null) {\n        hiddenAnnotationIds.add(editor.annotationElementId);\n        continue;\n      }\n      this.getEditableAnnotation(editor.annotationElementId)?.show();\n      editor.remove();\n    }\n\n    if (this.#annotationLayer) {\n      // Show the annotations that were hidden in enable().\n      const editables = this.#annotationLayer.getEditableAnnotations();\n      for (const editable of editables) {\n        const { id } = editable.data;\n        if (\n          hiddenAnnotationIds.has(id) ||\n          this.#uiManager.isDeletedAnnotationElement(id)\n        ) {\n          continue;\n        }\n        editable.show();\n      }\n    }\n\n    this.#cleanup();\n    if (this.isEmpty) {\n      this.div.hidden = true;\n    }\n    this.#isDisabling = false;\n  }\n\n  getEditableAnnotation(id) {\n    return this.#annotationLayer?.getEditableAnnotation(id) || null;\n  }\n\n  /**\n   * Set the current editor.\n   * @param {AnnotationEditor} editor\n   */\n  setActiveEditor(editor) {\n    const currentActive = this.#uiManager.getActive();\n    if (currentActive === editor) {\n      return;\n    }\n\n    this.#uiManager.setActiveEditor(editor);\n  }\n\n  enableClick() {\n    this.div.addEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.addEventListener(\"pointerup\", this.#boundPointerup);\n  }\n\n  disableClick() {\n    this.div.removeEventListener(\"pointerdown\", this.#boundPointerdown);\n    this.div.removeEventListener(\"pointerup\", this.#boundPointerup);\n  }\n\n  attach(editor) {\n    this.#editors.set(editor.id, editor);\n    const { annotationElementId } = editor;\n    if (\n      annotationElementId &&\n      this.#uiManager.isDeletedAnnotationElement(annotationElementId)\n    ) {\n      this.#uiManager.removeDeletedAnnotationElement(editor);\n    }\n  }\n\n  detach(editor) {\n    this.#editors.delete(editor.id);\n    this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n\n    if (!this.#isDisabling && editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor);\n    }\n  }\n\n  /**\n   * Remove an editor.\n   * @param {AnnotationEditor} editor\n   */\n  remove(editor) {\n    // Since we can undo a removal we need to keep the\n    // parent property as it is, so don't null it!\n\n    this.detach(editor);\n    this.#uiManager.removeEditor(editor);\n    if (editor.div.contains(document.activeElement)) {\n      setTimeout(() => {\n        // When the div is removed from DOM the focus can move on the\n        // document.body, so we need to move it back to the main container.\n        this.#uiManager.focusMainContainer();\n      }, 0);\n    }\n    editor.div.remove();\n    editor.isAttachedToDOM = false;\n\n    if (!this.#isCleaningUp) {\n      this.addInkEditorIfNeeded(/* isCommitting = */ false);\n    }\n  }\n\n  /**\n   * An editor can have a different parent, for example after having\n   * being dragged and droped from a page to another.\n   * @param {AnnotationEditor} editor\n   */\n  changeParent(editor) {\n    if (editor.parent === this) {\n      return;\n    }\n\n    if (editor.annotationElementId) {\n      this.#uiManager.addDeletedAnnotationElement(editor.annotationElementId);\n      AnnotationEditor.deleteAnnotationElement(editor);\n      editor.annotationElementId = null;\n    }\n\n    this.attach(editor);\n    editor.parent?.detach(editor);\n    editor.setParent(this);\n    if (editor.div && editor.isAttachedToDOM) {\n      editor.div.remove();\n      this.div.append(editor.div);\n    }\n  }\n\n  /**\n   * Add a new editor in the current view.\n   * @param {AnnotationEditor} editor\n   */\n  add(editor) {\n    this.changeParent(editor);\n    this.#uiManager.addEditor(editor);\n    this.attach(editor);\n\n    if (!editor.isAttachedToDOM) {\n      const div = editor.render();\n      this.div.append(div);\n      editor.isAttachedToDOM = true;\n    }\n\n    // The editor will be correctly moved into the DOM (see fixAndSetPosition).\n    editor.fixAndSetPosition();\n    editor.onceAdded();\n    this.#uiManager.addToAnnotationStorage(editor);\n  }\n\n  moveEditorInDOM(editor) {\n    if (!editor.isAttachedToDOM) {\n      return;\n    }\n\n    const { activeElement } = document;\n    if (editor.div.contains(activeElement)) {\n      // When the div is moved in the DOM the focus can move somewhere else,\n      // so we want to be sure that the focus will stay on the editor but we\n      // don't want to call any focus callbacks, hence we disable them and only\n      // re-enable them when the editor has the focus.\n      editor._focusEventsAllowed = false;\n      setTimeout(() => {\n        if (!editor.div.contains(document.activeElement)) {\n          editor.div.addEventListener(\n            \"focusin\",\n            () => {\n              editor._focusEventsAllowed = true;\n            },\n            { once: true }\n          );\n          activeElement.focus();\n        } else {\n          editor._focusEventsAllowed = true;\n        }\n      }, 0);\n    }\n\n    editor._structTreeParentId = this.#accessibilityManager?.moveElementInDOM(\n      this.div,\n      editor.div,\n      editor.contentDiv,\n      /* isRemovable = */ true\n    );\n  }\n\n  /**\n   * Add or rebuild depending if it has been removed or not.\n   * @param {AnnotationEditor} editor\n   */\n  addOrRebuild(editor) {\n    if (editor.needsToBeRebuilt()) {\n      editor.rebuild();\n    } else {\n      this.add(editor);\n    }\n  }\n\n  /**\n   * Add a new editor and make this addition undoable.\n   * @param {AnnotationEditor} editor\n   */\n  addUndoableEditor(editor) {\n    const cmd = () => editor._uiManager.rebuild(editor);\n    const undo = () => {\n      editor.remove();\n    };\n\n    this.addCommands({ cmd, undo, mustExec: false });\n  }\n\n  /**\n   * Get an id for an editor.\n   * @returns {string}\n   */\n  getNextId() {\n    return this.#uiManager.getId();\n  }\n\n  /**\n   * Create a new editor\n   * @param {Object} params\n   * @returns {AnnotationEditor}\n   */\n  #createNewEditor(params) {\n    switch (this.#uiManager.getMode()) {\n      case AnnotationEditorType.FREETEXT:\n        return new FreeTextEditor(params);\n      case AnnotationEditorType.INK:\n        return new InkEditor(params);\n      case AnnotationEditorType.STAMP:\n        return new StampEditor(params);\n    }\n    return null;\n  }\n\n  /**\n   * Paste some content into a new editor.\n   * @param {number} mode\n   * @param {Object} params\n   */\n  pasteEditor(mode, params) {\n    this.#uiManager.updateToolbar(mode);\n    this.#uiManager.updateMode(mode);\n\n    const { offsetX, offsetY } = this.#getCenterPoint();\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: offsetX,\n      y: offsetY,\n      uiManager: this.#uiManager,\n      isCentered: true,\n      ...params,\n    });\n    if (editor) {\n      this.add(editor);\n    }\n  }\n\n  /**\n   * Create a new editor\n   * @param {Object} data\n   * @returns {AnnotationEditor}\n   */\n  deserialize(data) {\n    switch (data.annotationType ?? data.annotationEditorType) {\n      case AnnotationEditorType.FREETEXT:\n        return FreeTextEditor.deserialize(data, this, this.#uiManager);\n      case AnnotationEditorType.INK:\n        return InkEditor.deserialize(data, this, this.#uiManager);\n      case AnnotationEditorType.STAMP:\n        return StampEditor.deserialize(data, this, this.#uiManager);\n    }\n    return null;\n  }\n\n  /**\n   * Create and add a new editor.\n   * @param {PointerEvent} event\n   * @param {boolean} isCentered\n   * @returns {AnnotationEditor}\n   */\n  #createAndAddNewEditor(event, isCentered) {\n    const id = this.getNextId();\n    const editor = this.#createNewEditor({\n      parent: this,\n      id,\n      x: event.offsetX,\n      y: event.offsetY,\n      uiManager: this.#uiManager,\n      isCentered,\n    });\n    if (editor) {\n      this.add(editor);\n    }\n\n    return editor;\n  }\n\n  #getCenterPoint() {\n    const { x, y, width, height } = this.div.getBoundingClientRect();\n    const tlX = Math.max(0, x);\n    const tlY = Math.max(0, y);\n    const brX = Math.min(window.innerWidth, x + width);\n    const brY = Math.min(window.innerHeight, y + height);\n    const centerX = (tlX + brX) / 2 - x;\n    const centerY = (tlY + brY) / 2 - y;\n    const [offsetX, offsetY] =\n      this.viewport.rotation % 180 === 0\n        ? [centerX, centerY]\n        : [centerY, centerX];\n\n    return { offsetX, offsetY };\n  }\n\n  /**\n   * Create and add a new editor.\n   */\n  addNewEditor() {\n    this.#createAndAddNewEditor(\n      this.#getCenterPoint(),\n      /* isCentered = */ true\n    );\n  }\n\n  /**\n   * Set the last selected editor.\n   * @param {AnnotationEditor} editor\n   */\n  setSelected(editor) {\n    this.#uiManager.setSelected(editor);\n  }\n\n  /**\n   * Add or remove an editor the current selection.\n   * @param {AnnotationEditor} editor\n   */\n  toggleSelected(editor) {\n    this.#uiManager.toggleSelected(editor);\n  }\n\n  /**\n   * Check if the editor is selected.\n   * @param {AnnotationEditor} editor\n   */\n  isSelected(editor) {\n    return this.#uiManager.isSelected(editor);\n  }\n\n  /**\n   * Unselect an editor.\n   * @param {AnnotationEditor} editor\n   */\n  unselect(editor) {\n    this.#uiManager.unselect(editor);\n  }\n\n  /**\n   * Pointerup callback.\n   * @param {PointerEvent} event\n   */\n  pointerup(event) {\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Don't create an editor on right click.\n      return;\n    }\n\n    if (event.target !== this.div) {\n      return;\n    }\n\n    if (!this.#hadPointerDown) {\n      // It can happen when the user starts a drag inside a text editor\n      // and then releases the mouse button outside of it. In such a case\n      // we don't want to create a new editor, hence we check that a pointerdown\n      // occurred on this div previously.\n      return;\n    }\n    this.#hadPointerDown = false;\n\n    if (!this.#allowClick) {\n      this.#allowClick = true;\n      return;\n    }\n\n    if (this.#uiManager.getMode() === AnnotationEditorType.STAMP) {\n      this.#uiManager.unselectAll();\n      return;\n    }\n\n    this.#createAndAddNewEditor(event, /* isCentered = */ false);\n  }\n\n  /**\n   * Pointerdown callback.\n   * @param {PointerEvent} event\n   */\n  pointerdown(event) {\n    if (this.#hadPointerDown) {\n      // It's possible to have a second pointerdown event before a pointerup one\n      // when the user puts a finger on a touchscreen and then add a second one\n      // to start a pinch-to-zoom gesture.\n      // That said, in case it's possible to have two pointerdown events with\n      // a mouse, we don't want to create a new editor in such a case either.\n      this.#hadPointerDown = false;\n      return;\n    }\n    const { isMac } = FeatureTest.platform;\n    if (event.button !== 0 || (event.ctrlKey && isMac)) {\n      // Do nothing on right click.\n      return;\n    }\n\n    if (event.target !== this.div) {\n      return;\n    }\n\n    this.#hadPointerDown = true;\n\n    const editor = this.#uiManager.getActive();\n    this.#allowClick = !editor || editor.isEmpty();\n  }\n\n  /**\n   *\n   * @param {AnnotationEditor} editor\n   * @param {number} x\n   * @param {number} y\n   * @returns\n   */\n  findNewParent(editor, x, y) {\n    const layer = this.#uiManager.findParent(x, y);\n    if (layer === null || layer === this) {\n      return false;\n    }\n    layer.changeParent(editor);\n    return true;\n  }\n\n  /**\n   * Destroy the main editor.\n   */\n  destroy() {\n    if (this.#uiManager.getActive()?.parent === this) {\n      // We need to commit the current editor before destroying the layer.\n      this.#uiManager.commitOrRemove();\n      this.#uiManager.setActiveEditor(null);\n    }\n\n    for (const editor of this.#editors.values()) {\n      this.#accessibilityManager?.removePointerInTextLayer(editor.contentDiv);\n      editor.setParent(null);\n      editor.isAttachedToDOM = false;\n      editor.div.remove();\n    }\n    this.div = null;\n    this.#editors.clear();\n    this.#uiManager.removeLayer(this);\n  }\n\n  #cleanup() {\n    // When we're cleaning up, some editors are removed but we don't want\n    // to add a new one which will induce an addition in this.#editors, hence\n    // an infinite loop.\n    this.#isCleaningUp = true;\n    for (const editor of this.#editors.values()) {\n      if (editor.isEmpty()) {\n        editor.remove();\n      }\n    }\n    this.#isCleaningUp = false;\n  }\n\n  /**\n   * Render the main editor.\n   * @param {RenderEditorLayerOptions} parameters\n   */\n  render({ viewport }) {\n    this.viewport = viewport;\n    setLayerDimensions(this.div, viewport);\n    for (const editor of this.#uiManager.getEditors(this.pageIndex)) {\n      this.add(editor);\n    }\n    this.updateMode();\n  }\n\n  /**\n   * Update the main editor.\n   * @param {RenderEditorLayerOptions} parameters\n   */\n  update({ viewport }) {\n    // Editors have their dimensions/positions in percent so to avoid any\n    // issues (see #15582), we must commit the current one before changing\n    // the viewport.\n    this.#uiManager.commitOrRemove();\n\n    this.viewport = viewport;\n    setLayerDimensions(this.div, { rotation: viewport.rotation });\n    this.updateMode();\n  }\n\n  /**\n   * Get page dimensions.\n   * @returns {Object} dimensions.\n   */\n  get pageDimensions() {\n    const { pageWidth, pageHeight } = this.viewport.rawDims;\n    return [pageWidth, pageHeight];\n  }\n}\n\nexport { AnnotationEditorLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_editor_layer.js\").AnnotationEditorLayer} AnnotationEditorLayer */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  assert,\n  LINE_FACTOR,\n  shadow,\n  Util,\n} from \"../../shared/util.js\";\nimport {\n  AnnotationEditorUIManager,\n  bindEvents,\n  KeyboardManager,\n} from \"./tools.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { FreeTextAnnotationElement } from \"../annotation_layer.js\";\n\n/**\n * Basic text editor in order to create a FreeTex annotation.\n */\nclass FreeTextEditor extends AnnotationEditor {\n  #boundEditorDivBlur = this.editorDivBlur.bind(this);\n\n  #boundEditorDivFocus = this.editorDivFocus.bind(this);\n\n  #boundEditorDivInput = this.editorDivInput.bind(this);\n\n  #boundEditorDivKeydown = this.editorDivKeydown.bind(this);\n\n  #color;\n\n  #content = \"\";\n\n  #editorDivId = `${this.id}-editor`;\n\n  #fontSize;\n\n  #initialData = null;\n\n  static _freeTextDefaultContent = \"\";\n\n  static _internalPadding = 0;\n\n  static _defaultColor = null;\n\n  static _defaultFontSize = 10;\n\n  static get _keyboardManager() {\n    const proto = FreeTextEditor.prototype;\n\n    const arrowChecker = self => self.isEmpty();\n\n    const small = AnnotationEditorUIManager.TRANSLATE_SMALL;\n    const big = AnnotationEditorUIManager.TRANSLATE_BIG;\n\n    return shadow(\n      this,\n      \"_keyboardManager\",\n      new KeyboardManager([\n        [\n          // Commit the text in case the user use ctrl+s to save the document.\n          // The event must bubble in order to be caught by the viewer.\n          // See bug 1831574.\n          [\"ctrl+s\", \"mac+meta+s\", \"ctrl+p\", \"mac+meta+p\"],\n          proto.commitOrRemove,\n          { bubbles: true },\n        ],\n        [\n          [\"ctrl+Enter\", \"mac+meta+Enter\", \"Escape\", \"mac+Escape\"],\n          proto.commitOrRemove,\n        ],\n        [\n          [\"ArrowLeft\", \"mac+ArrowLeft\"],\n          proto._translateEmpty,\n          { args: [-small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowLeft\", \"mac+shift+ArrowLeft\"],\n          proto._translateEmpty,\n          { args: [-big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowRight\", \"mac+ArrowRight\"],\n          proto._translateEmpty,\n          { args: [small, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowRight\", \"mac+shift+ArrowRight\"],\n          proto._translateEmpty,\n          { args: [big, 0], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowUp\", \"mac+ArrowUp\"],\n          proto._translateEmpty,\n          { args: [0, -small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowUp\", \"mac+shift+ArrowUp\"],\n          proto._translateEmpty,\n          { args: [0, -big], checker: arrowChecker },\n        ],\n        [\n          [\"ArrowDown\", \"mac+ArrowDown\"],\n          proto._translateEmpty,\n          { args: [0, small], checker: arrowChecker },\n        ],\n        [\n          [\"ctrl+ArrowDown\", \"mac+shift+ArrowDown\"],\n          proto._translateEmpty,\n          { args: [0, big], checker: arrowChecker },\n        ],\n      ])\n    );\n  }\n\n  static _type = \"freetext\";\n\n  constructor(params) {\n    super({ ...params, name: \"freeTextEditor\" });\n    this.#color =\n      params.color ||\n      FreeTextEditor._defaultColor ||\n      AnnotationEditor._defaultLineColor;\n    this.#fontSize = params.fontSize || FreeTextEditor._defaultFontSize;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n, {\n      strings: [\"free_text2_default_content\", \"editor_free_text2_aria_label\"],\n    });\n    const style = getComputedStyle(document.documentElement);\n\n    if (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"TESTING\")) {\n      const lineHeight = parseFloat(\n        style.getPropertyValue(\"--freetext-line-height\")\n      );\n      assert(\n        lineHeight === LINE_FACTOR,\n        \"Update the CSS variable to agree with the constant.\"\n      );\n    }\n\n    this._internalPadding = parseFloat(\n      style.getPropertyValue(\"--freetext-padding\")\n    );\n  }\n\n  /** @inheritdoc */\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        FreeTextEditor._defaultFontSize = value;\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        FreeTextEditor._defaultColor = value;\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.FREETEXT_SIZE:\n        this.#updateFontSize(value);\n        break;\n      case AnnotationEditorParamsType.FREETEXT_COLOR:\n        this.#updateColor(value);\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  static get defaultPropertiesToUpdate() {\n    return [\n      [\n        AnnotationEditorParamsType.FREETEXT_SIZE,\n        FreeTextEditor._defaultFontSize,\n      ],\n      [\n        AnnotationEditorParamsType.FREETEXT_COLOR,\n        FreeTextEditor._defaultColor || AnnotationEditor._defaultLineColor,\n      ],\n    ];\n  }\n\n  /** @inheritdoc */\n  get propertiesToUpdate() {\n    return [\n      [AnnotationEditorParamsType.FREETEXT_SIZE, this.#fontSize],\n      [AnnotationEditorParamsType.FREETEXT_COLOR, this.#color],\n    ];\n  }\n\n  /**\n   * Update the font size and make this action as undoable.\n   * @param {number} fontSize\n   */\n  #updateFontSize(fontSize) {\n    const setFontsize = size => {\n      this.editorDiv.style.fontSize = `calc(${size}px * var(--scale-factor))`;\n      this.translate(0, -(size - this.#fontSize) * this.parentScale);\n      this.#fontSize = size;\n      this.#setEditorDimensions();\n    };\n    const savedFontsize = this.#fontSize;\n    this.addCommands({\n      cmd: () => {\n        setFontsize(fontSize);\n      },\n      undo: () => {\n        setFontsize(savedFontsize);\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_SIZE,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the color and make this action undoable.\n   * @param {string} color\n   */\n  #updateColor(color) {\n    const savedColor = this.#color;\n    this.addCommands({\n      cmd: () => {\n        this.#color = this.editorDiv.style.color = color;\n      },\n      undo: () => {\n        this.#color = this.editorDiv.style.color = savedColor;\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.FREETEXT_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Helper to translate the editor with the keyboard when it's empty.\n   * @param {number} x in page units.\n   * @param {number} y in page units.\n   */\n  _translateEmpty(x, y) {\n    this._uiManager.translateSelectedEditors(x, y, /* noCommit = */ true);\n  }\n\n  /** @inheritdoc */\n  getInitialTranslation() {\n    // The start of the base line is where the user clicked.\n    const scale = this.parentScale;\n    return [\n      -FreeTextEditor._internalPadding * scale,\n      -(FreeTextEditor._internalPadding + this.#fontSize) * scale,\n    ];\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilting it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n    }\n  }\n\n  /** @inheritdoc */\n  enableEditMode() {\n    if (this.isInEditMode()) {\n      return;\n    }\n\n    this.parent.setEditingState(false);\n    this.parent.updateToolbar(AnnotationEditorType.FREETEXT);\n    super.enableEditMode();\n    this.overlayDiv.classList.remove(\"enabled\");\n    this.editorDiv.contentEditable = true;\n    this._isDraggable = false;\n    this.div.removeAttribute(\"aria-activedescendant\");\n    this.editorDiv.addEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.addEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.addEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.addEventListener(\"input\", this.#boundEditorDivInput);\n  }\n\n  /** @inheritdoc */\n  disableEditMode() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n\n    this.parent.setEditingState(true);\n    super.disableEditMode();\n    this.overlayDiv.classList.add(\"enabled\");\n    this.editorDiv.contentEditable = false;\n    this.div.setAttribute(\"aria-activedescendant\", this.#editorDivId);\n    this._isDraggable = true;\n    this.editorDiv.removeEventListener(\"keydown\", this.#boundEditorDivKeydown);\n    this.editorDiv.removeEventListener(\"focus\", this.#boundEditorDivFocus);\n    this.editorDiv.removeEventListener(\"blur\", this.#boundEditorDivBlur);\n    this.editorDiv.removeEventListener(\"input\", this.#boundEditorDivInput);\n\n    // On Chrome, the focus is given to <body> when contentEditable is set to\n    // false, hence we focus the div.\n    this.div.focus({\n      preventScroll: true /* See issue #15744 */,\n    });\n\n    // In case the blur callback hasn't been called.\n    this.isEditing = false;\n    this.parent.div.classList.add(\"freeTextEditing\");\n  }\n\n  /** @inheritdoc */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    if (event.target !== this.editorDiv) {\n      this.editorDiv.focus();\n    }\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    if (this.width) {\n      this.#cheatInitialRect();\n      // The editor was created in using ctrl+c.\n      return;\n    }\n    this.enableEditMode();\n    this.editorDiv.focus();\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    }\n    this._initialOptions = null;\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return !this.editorDiv || this.editorDiv.innerText.trim() === \"\";\n  }\n\n  /** @inheritdoc */\n  remove() {\n    this.isEditing = false;\n    if (this.parent) {\n      this.parent.setEditingState(true);\n      this.parent.div.classList.add(\"freeTextEditing\");\n    }\n    super.remove();\n  }\n\n  /**\n   * Extract the text from this editor.\n   * @returns {string}\n   */\n  #extractText() {\n    const divs = this.editorDiv.getElementsByTagName(\"div\");\n    if (divs.length === 0) {\n      return this.editorDiv.innerText;\n    }\n    const buffer = [];\n    for (const div of divs) {\n      buffer.push(div.innerText.replace(/\\r\\n?|\\n/, \"\"));\n    }\n    return buffer.join(\"\\n\");\n  }\n\n  #setEditorDimensions() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n\n    let rect;\n    if (this.isAttachedToDOM) {\n      rect = this.div.getBoundingClientRect();\n    } else {\n      // This editor isn't on screen but we need to get its dimensions, so\n      // we just insert it in the DOM, get its bounding box and then remove it.\n      const { currentLayer, div } = this;\n      const savedDisplay = div.style.display;\n      div.style.display = \"hidden\";\n      currentLayer.div.append(this.div);\n      rect = div.getBoundingClientRect();\n      div.remove();\n      div.style.display = savedDisplay;\n    }\n\n    // The dimensions are relative to the rotation of the page, hence we need to\n    // take that into account (see issue #16636).\n    if (this.rotation % 180 === this.parentRotation % 180) {\n      this.width = rect.width / parentWidth;\n      this.height = rect.height / parentHeight;\n    } else {\n      this.width = rect.height / parentWidth;\n      this.height = rect.width / parentHeight;\n    }\n    this.fixAndSetPosition();\n  }\n\n  /**\n   * Commit the content we have in this editor.\n   * @returns {undefined}\n   */\n  commit() {\n    if (!this.isInEditMode()) {\n      return;\n    }\n\n    super.commit();\n    this.disableEditMode();\n    const savedText = this.#content;\n    const newText = (this.#content = this.#extractText().trimEnd());\n    if (savedText === newText) {\n      return;\n    }\n\n    const setText = text => {\n      this.#content = text;\n      if (!text) {\n        this.remove();\n        return;\n      }\n      this.#setContent();\n      this._uiManager.rebuild(this);\n      this.#setEditorDimensions();\n    };\n    this.addCommands({\n      cmd: () => {\n        setText(newText);\n      },\n      undo: () => {\n        setText(savedText);\n      },\n      mustExec: false,\n    });\n    this.#setEditorDimensions();\n  }\n\n  /** @inheritdoc */\n  shouldGetKeyboardEvents() {\n    return this.isInEditMode();\n  }\n\n  /** @inheritdoc */\n  enterInEditMode() {\n    this.enableEditMode();\n    this.editorDiv.focus();\n  }\n\n  /**\n   * ondblclick callback.\n   * @param {MouseEvent} event\n   */\n  dblclick(event) {\n    this.enterInEditMode();\n  }\n\n  /**\n   * onkeydown callback.\n   * @param {KeyboardEvent} event\n   */\n  keydown(event) {\n    if (event.target === this.div && event.key === \"Enter\") {\n      this.enterInEditMode();\n      // Avoid to add an unwanted new line.\n      event.preventDefault();\n    }\n  }\n\n  editorDivKeydown(event) {\n    FreeTextEditor._keyboardManager.exec(this, event);\n  }\n\n  editorDivFocus(event) {\n    this.isEditing = true;\n  }\n\n  editorDivBlur(event) {\n    this.isEditing = false;\n  }\n\n  editorDivInput(event) {\n    this.parent.div.classList.toggle(\"freeTextEditing\", this.isEmpty());\n  }\n\n  /** @inheritdoc */\n  disableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"comment\");\n    this.editorDiv.removeAttribute(\"aria-multiline\");\n  }\n\n  /** @inheritdoc */\n  enableEditing() {\n    this.editorDiv.setAttribute(\"role\", \"textbox\");\n    this.editorDiv.setAttribute(\"aria-multiline\", true);\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n    this.editorDiv = document.createElement(\"div\");\n    this.editorDiv.className = \"internal\";\n\n    this.editorDiv.setAttribute(\"id\", this.#editorDivId);\n    this.enableEditing();\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_free_text2_aria_label\")\n      .then(msg => this.editorDiv?.setAttribute(\"aria-label\", msg));\n\n    AnnotationEditor._l10nPromise\n      .get(\"free_text2_default_content\")\n      .then(msg => this.editorDiv?.setAttribute(\"default-content\", msg));\n    this.editorDiv.contentEditable = true;\n\n    const { style } = this.editorDiv;\n    style.fontSize = `calc(${this.#fontSize}px * var(--scale-factor))`;\n    style.color = this.#color;\n\n    this.div.append(this.editorDiv);\n\n    this.overlayDiv = document.createElement(\"div\");\n    this.overlayDiv.classList.add(\"overlay\", \"enabled\");\n    this.div.append(this.overlayDiv);\n\n    // TODO: implement paste callback.\n    // The goal is to sanitize and have something suitable for this\n    // editor.\n    bindEvents(this, this.div, [\"dblclick\", \"keydown\"]);\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      if (this.annotationElementId) {\n        // This stuff is hard to test: if something is changed here, please\n        // test with the following PDF file:\n        //  - freetexts.pdf\n        //  - rotated_freetexts.pdf\n        // Only small variations between the original annotation and its editor\n        // are allowed.\n\n        // position is the position of the first glyph in the annotation\n        // and it's relative to its container.\n        const { position } = this.#initialData;\n        let [tx, ty] = this.getInitialTranslation();\n        [tx, ty] = this.pageTranslationToScreen(tx, ty);\n        const [pageWidth, pageHeight] = this.pageDimensions;\n        const [pageX, pageY] = this.pageTranslation;\n        let posX, posY;\n        switch (this.rotation) {\n          case 0:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY + this.height - (position[1] - pageY) / pageHeight;\n            break;\n          case 90:\n            posX = baseX + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [ty, -tx];\n            break;\n          case 180:\n            posX = baseX - this.width + (position[0] - pageX) / pageWidth;\n            posY = baseY - (position[1] - pageY) / pageHeight;\n            [tx, ty] = [-tx, -ty];\n            break;\n          case 270:\n            posX =\n              baseX +\n              (position[0] - pageX - this.height * pageHeight) / pageWidth;\n            posY =\n              baseY +\n              (position[1] - pageY - this.width * pageWidth) / pageHeight;\n            [tx, ty] = [-ty, tx];\n            break;\n        }\n        this.setAt(posX * parentWidth, posY * parentHeight, tx, ty);\n      } else {\n        this.setAt(\n          baseX * parentWidth,\n          baseY * parentHeight,\n          this.width * parentWidth,\n          this.height * parentHeight\n        );\n      }\n\n      this.#setContent();\n      this._isDraggable = true;\n      this.editorDiv.contentEditable = false;\n    } else {\n      this._isDraggable = false;\n      this.editorDiv.contentEditable = true;\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      this.div.setAttribute(\"annotation-id\", this.annotationElementId);\n    }\n\n    return this.div;\n  }\n\n  #setContent() {\n    this.editorDiv.replaceChildren();\n    if (!this.#content) {\n      return;\n    }\n    for (const line of this.#content.split(\"\\n\")) {\n      const div = document.createElement(\"div\");\n      div.append(\n        line ? document.createTextNode(line) : document.createElement(\"br\")\n      );\n      this.editorDiv.append(div);\n    }\n  }\n\n  get contentDiv() {\n    return this.editorDiv;\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    let initialData = null;\n    if (data instanceof FreeTextAnnotationElement) {\n      const {\n        data: {\n          defaultAppearanceData: { fontSize, fontColor },\n          rect,\n          rotation,\n          id,\n        },\n        textContent,\n        textPosition,\n        parent: {\n          page: { pageNumber },\n        },\n      } = data;\n      // textContent is supposed to be an array of strings containing each line\n      // of text. However, it can be null or empty.\n      if (!textContent || textContent.length === 0) {\n        // Empty annotation.\n        return null;\n      }\n      initialData = data = {\n        annotationType: AnnotationEditorType.FREETEXT,\n        color: Array.from(fontColor),\n        fontSize,\n        value: textContent.join(\"\\n\"),\n        position: textPosition,\n        pageIndex: pageNumber - 1,\n        rect,\n        rotation,\n        id,\n        deleted: false,\n      };\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n\n    editor.#fontSize = data.fontSize;\n    editor.#color = Util.makeHexColor(...data.color);\n    editor.#content = data.value;\n    editor.annotationElementId = data.id || null;\n    editor.#initialData = initialData;\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize(isForCopying = false) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    if (this.deleted) {\n      return {\n        pageIndex: this.pageIndex,\n        id: this.annotationElementId,\n        deleted: true,\n      };\n    }\n\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    const rect = this.getRect(padding, padding);\n    const color = AnnotationEditor._colorManager.convert(\n      this.isAttachedToDOM\n        ? getComputedStyle(this.editorDiv).color\n        : this.#color\n    );\n\n    const serialized = {\n      annotationType: AnnotationEditorType.FREETEXT,\n      color,\n      fontSize: this.#fontSize,\n      value: this.#content,\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n    };\n\n    if (isForCopying) {\n      // Don't add the id when copying because the pasted editor mustn't be\n      // linked to an existing annotation.\n      return serialized;\n    }\n\n    if (this.annotationElementId && !this.#hasElementChanged(serialized)) {\n      return null;\n    }\n\n    serialized.id = this.annotationElementId;\n\n    return serialized;\n  }\n\n  #hasElementChanged(serialized) {\n    const { value, fontSize, color, rect, pageIndex } = this.#initialData;\n\n    return (\n      serialized.value !== value ||\n      serialized.fontSize !== fontSize ||\n      serialized.rect.some((x, i) => Math.abs(x - rect[i]) >= 1) ||\n      serialized.color.some((c, i) => c !== color[i]) ||\n      serialized.pageIndex !== pageIndex\n    );\n  }\n\n  #cheatInitialRect(delayed = false) {\n    // The annotation has a rect but the editor has an other one.\n    // When we want to know if the annotation has changed (e.g. has been moved)\n    // we must compare the editor initial rect with the current one.\n    // So this method is a hack to have a way to compare the real rects.\n    if (!this.annotationElementId) {\n      return;\n    }\n\n    this.#setEditorDimensions();\n    if (!delayed && (this.width === 0 || this.height === 0)) {\n      setTimeout(() => this.#cheatInitialRect(/* delayed = */ true), 0);\n      return;\n    }\n\n    const padding = FreeTextEditor._internalPadding * this.parentScale;\n    this.#initialData.rect = this.getRect(padding, padding);\n  }\n}\n\nexport { FreeTextEditor };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** @typedef {import(\"./api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../web/text_accessibility.js\").TextAccessibilityManager} TextAccessibilityManager */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"../../web/interfaces\").IDownloadManager} IDownloadManager */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport {\n  AnnotationBorderStyleType,\n  AnnotationEditorType,\n  AnnotationPrefix,\n  AnnotationType,\n  FeatureTest,\n  LINE_FACTOR,\n  shadow,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  PDFDateString,\n  setLayerDimensions,\n} from \"./display_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { ColorConverters } from \"../shared/scripting_utils.js\";\nimport { NullL10n } from \"display-l10n_utils\";\nimport { XfaLayer } from \"./xfa_layer.js\";\n\nconst DEFAULT_TAB_INDEX = 1000;\nconst DEFAULT_FONT_SIZE = 9;\nconst GetElementsByNameSet = new WeakSet();\n\nfunction getRectDims(rect) {\n  return {\n    width: rect[2] - rect[0],\n    height: rect[3] - rect[1],\n  };\n}\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {Object} svgFactory\n * @property {boolean} [enableScripting]\n * @property {boolean} [hasJSActions]\n * @property {Object} [fieldObjects]\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n          case \"Sig\":\n            return new SignatureWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  #hasBorder = false;\n\n  constructor(\n    parameters,\n    {\n      isRenderable = false,\n      ignoreBorder = false,\n      createQuadrilaterals = false,\n    } = {}\n  ) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderForms = parameters.renderForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n    this.enableScripting = parameters.enableScripting;\n    this.hasJSActions = parameters.hasJSActions;\n    this._fieldObjects = parameters.fieldObjects;\n    this.parent = parameters.parent;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n    if (createQuadrilaterals) {\n      this._createQuadrilaterals();\n    }\n  }\n\n  static _hasPopupData({ titleObj, contentsObj, richText }) {\n    return !!(titleObj?.str || contentsObj?.str || richText?.str);\n  }\n\n  get hasPopupData() {\n    return AnnotationElement._hasPopupData(this.data);\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLElement} A section element.\n   */\n  _createContainer(ignoreBorder) {\n    const {\n      data,\n      parent: { page, viewport },\n    } = this;\n\n    const container = document.createElement(\"section\");\n    container.setAttribute(\"data-annotation-id\", data.id);\n    if (!(this instanceof WidgetAnnotationElement)) {\n      container.tabIndex = DEFAULT_TAB_INDEX;\n    }\n\n    // The accessibility manager will move the annotation in the DOM in\n    // order to match the visual ordering.\n    // But if an annotation is above an other one, then we must draw it\n    // after the other one whatever the order is in the DOM, hence the\n    // use of the z-index.\n    container.style.zIndex = this.parent.zIndex++;\n\n    if (this.data.popupRef) {\n      container.setAttribute(\"aria-haspopup\", \"dialog\");\n    }\n\n    if (data.noRotate) {\n      container.classList.add(\"norotate\");\n    }\n\n    const { pageWidth, pageHeight, pageX, pageY } = viewport.rawDims;\n\n    if (!data.rect || this instanceof PopupAnnotationElement) {\n      const { rotation } = data;\n      if (!data.hasOwnCanvas && rotation !== 0) {\n        this.setRotation(rotation, container);\n      }\n      return container;\n    }\n\n    const { width, height } = getRectDims(data.rect);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `calc(${horizontalRadius}px * var(--scale-factor)) / calc(${verticalRadius}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      } else if (this instanceof RadioButtonWidgetAnnotationElement) {\n        const radius = `calc(${width}px * var(--scale-factor)) / calc(${height}px * var(--scale-factor))`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      const borderColor = data.borderColor || null;\n      if (borderColor) {\n        this.#hasBorder = true;\n        container.style.borderColor = Util.makeHexColor(\n          borderColor[0] | 0,\n          borderColor[1] | 0,\n          borderColor[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${(100 * (rect[0] - pageX)) / pageWidth}%`;\n    container.style.top = `${(100 * (rect[1] - pageY)) / pageHeight}%`;\n\n    const { rotation } = data;\n    if (data.hasOwnCanvas || rotation === 0) {\n      container.style.width = `${(100 * width) / pageWidth}%`;\n      container.style.height = `${(100 * height) / pageHeight}%`;\n    } else {\n      this.setRotation(rotation, container);\n    }\n\n    return container;\n  }\n\n  setRotation(angle, container = this.container) {\n    if (!this.data.rect) {\n      return;\n    }\n    const { pageWidth, pageHeight } = this.parent.viewport.rawDims;\n    const { width, height } = getRectDims(this.data.rect);\n\n    let elementWidth, elementHeight;\n    if (angle % 180 === 0) {\n      elementWidth = (100 * width) / pageWidth;\n      elementHeight = (100 * height) / pageHeight;\n    } else {\n      elementWidth = (100 * height) / pageWidth;\n      elementHeight = (100 * width) / pageHeight;\n    }\n\n    container.style.width = `${elementWidth}%`;\n    container.style.height = `${elementHeight}%`;\n\n    container.setAttribute(\"data-main-rotation\", (360 - angle) % 360);\n  }\n\n  get _commonActions() {\n    const setColor = (jsName, styleName, event) => {\n      const color = event.detail[jsName];\n      const colorType = color[0];\n      const colorArray = color.slice(1);\n      event.target.style[styleName] =\n        ColorConverters[`${colorType}_HTML`](colorArray);\n      this.annotationStorage.setValue(this.data.id, {\n        [styleName]: ColorConverters[`${colorType}_rgb`](colorArray),\n      });\n    };\n\n    return shadow(this, \"_commonActions\", {\n      display: event => {\n        const { display } = event.detail;\n        // See scripting/constants.js for the values of `Display`.\n        // 0 = visible, 1 = hidden, 2 = noPrint and 3 = noView.\n        const hidden = display % 2 === 1;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noView: hidden,\n          noPrint: display === 1 || display === 2,\n        });\n      },\n      print: event => {\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: !event.detail.print,\n        });\n      },\n      hidden: event => {\n        const { hidden } = event.detail;\n        this.container.style.visibility = hidden ? \"hidden\" : \"visible\";\n        this.annotationStorage.setValue(this.data.id, {\n          noPrint: hidden,\n          noView: hidden,\n        });\n      },\n      focus: event => {\n        setTimeout(() => event.target.focus({ preventScroll: false }), 0);\n      },\n      userName: event => {\n        // tooltip\n        event.target.title = event.detail.userName;\n      },\n      readonly: event => {\n        event.target.disabled = event.detail.readonly;\n      },\n      required: event => {\n        this._setRequired(event.target, event.detail.required);\n      },\n      bgColor: event => {\n        setColor(\"bgColor\", \"backgroundColor\", event);\n      },\n      fillColor: event => {\n        setColor(\"fillColor\", \"backgroundColor\", event);\n      },\n      fgColor: event => {\n        setColor(\"fgColor\", \"color\", event);\n      },\n      textColor: event => {\n        setColor(\"textColor\", \"color\", event);\n      },\n      borderColor: event => {\n        setColor(\"borderColor\", \"borderColor\", event);\n      },\n      strokeColor: event => {\n        setColor(\"strokeColor\", \"borderColor\", event);\n      },\n      rotation: event => {\n        const angle = event.detail.rotation;\n        this.setRotation(angle);\n        this.annotationStorage.setValue(this.data.id, {\n          rotation: angle,\n        });\n      },\n    });\n  }\n\n  _dispatchEventFromSandbox(actions, jsEvent) {\n    const commonActions = this._commonActions;\n    for (const name of Object.keys(jsEvent.detail)) {\n      const action = actions[name] || commonActions[name];\n      action?.(jsEvent);\n    }\n  }\n\n  _setDefaultPropertiesFromJS(element) {\n    if (!this.enableScripting) {\n      return;\n    }\n\n    // Some properties may have been updated thanks to JS.\n    const storedData = this.annotationStorage.getRawValue(this.data.id);\n    if (!storedData) {\n      return;\n    }\n\n    const commonActions = this._commonActions;\n    for (const [actionName, detail] of Object.entries(storedData)) {\n      const action = commonActions[actionName];\n      if (action) {\n        const eventProxy = {\n          detail: {\n            [actionName]: detail,\n          },\n          target: element,\n        };\n        action(eventProxy);\n        // The action has been consumed: no need to keep it.\n        delete storedData[actionName];\n      }\n    }\n  }\n\n  /**\n   * Create quadrilaterals from the annotation's quadpoints.\n   *\n   * @private\n   * @memberof AnnotationElement\n   */\n  _createQuadrilaterals() {\n    if (!this.container) {\n      return;\n    }\n    const { quadPoints } = this.data;\n    if (!quadPoints) {\n      return;\n    }\n\n    const [rectBlX, rectBlY, rectTrX, rectTrY] = this.data.rect;\n\n    if (quadPoints.length === 1) {\n      const [, { x: trX, y: trY }, { x: blX, y: blY }] = quadPoints[0];\n      if (\n        rectTrX === trX &&\n        rectTrY === trY &&\n        rectBlX === blX &&\n        rectBlY === blY\n      ) {\n        // The quadpoints cover the whole annotation rectangle, so no need to\n        // create a quadrilateral.\n        return;\n      }\n    }\n\n    const { style } = this.container;\n    let svgBuffer;\n    if (this.#hasBorder) {\n      const { borderColor, borderWidth } = style;\n      style.borderWidth = 0;\n      svgBuffer = [\n        \"url('data:image/svg+xml;utf8,\",\n        `<svg xmlns=\"http://www.w3.org/2000/svg\"`,\n        ` preserveAspectRatio=\"none\" viewBox=\"0 0 1 1\">`,\n        `<g fill=\"transparent\" stroke=\"${borderColor}\" stroke-width=\"${borderWidth}\">`,\n      ];\n      this.container.classList.add(\"hasBorder\");\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      this.container.classList.add(\"hasClipPath\");\n    }\n\n    const width = rectTrX - rectBlX;\n    const height = rectTrY - rectBlY;\n\n    const { svgFactory } = this;\n    const svg = svgFactory.createElement(\"svg\");\n    svg.classList.add(\"quadrilateralsContainer\");\n    svg.setAttribute(\"width\", 0);\n    svg.setAttribute(\"height\", 0);\n    const defs = svgFactory.createElement(\"defs\");\n    svg.append(defs);\n    const clipPath = svgFactory.createElement(\"clipPath\");\n    const id = `clippath_${this.data.id}`;\n    clipPath.setAttribute(\"id\", id);\n    clipPath.setAttribute(\"clipPathUnits\", \"objectBoundingBox\");\n    defs.append(clipPath);\n\n    for (const [, { x: trX, y: trY }, { x: blX, y: blY }] of quadPoints) {\n      const rect = svgFactory.createElement(\"rect\");\n      const x = (blX - rectBlX) / width;\n      const y = (rectTrY - trY) / height;\n      const rectWidth = (trX - blX) / width;\n      const rectHeight = (trY - blY) / height;\n      rect.setAttribute(\"x\", x);\n      rect.setAttribute(\"y\", y);\n      rect.setAttribute(\"width\", rectWidth);\n      rect.setAttribute(\"height\", rectHeight);\n      clipPath.append(rect);\n      svgBuffer?.push(\n        `<rect vector-effect=\"non-scaling-stroke\" x=\"${x}\" y=\"${y}\" width=\"${rectWidth}\" height=\"${rectHeight}\"/>`\n      );\n    }\n\n    if (this.#hasBorder) {\n      svgBuffer.push(`</g></svg>')`);\n      style.backgroundImage = svgBuffer.join(\"\");\n    }\n\n    this.container.append(svg);\n    this.container.style.clipPath = `url(#${id})`;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @memberof AnnotationElement\n   */\n  _createPopup() {\n    const { container, data } = this;\n    container.setAttribute(\"aria-haspopup\", \"dialog\");\n\n    const popup = new PopupAnnotationElement({\n      data: {\n        color: data.color,\n        titleObj: data.titleObj,\n        modificationDate: data.modificationDate,\n        contentsObj: data.contentsObj,\n        richText: data.richText,\n        parentRect: data.rect,\n        borderStyle: 0,\n        id: `popup_${data.id}`,\n        rotation: data.rotation,\n      },\n      parent: this.parent,\n      elements: [this],\n    });\n    this.parent.div.append(popup.render());\n  }\n\n  /**\n   * Render the annotation's HTML element(s).\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n\n  /**\n   * @private\n   * @returns {Array}\n   */\n  _getElementsByName(name, skipId = null) {\n    const fields = [];\n\n    if (this._fieldObjects) {\n      const fieldObj = this._fieldObjects[name];\n      if (fieldObj) {\n        for (const { page, id, exportValues } of fieldObj) {\n          if (page === -1) {\n            continue;\n          }\n          if (id === skipId) {\n            continue;\n          }\n          const exportValue =\n            typeof exportValues === \"string\" ? exportValues : null;\n\n          const domElement = document.querySelector(\n            `[data-element-id=\"${id}\"]`\n          );\n          if (domElement && !GetElementsByNameSet.has(domElement)) {\n            warn(`_getElementsByName - element not allowed: ${id}`);\n            continue;\n          }\n          fields.push({ id, exportValue, domElement });\n        }\n      }\n      return fields;\n    }\n    // Fallback to a regular DOM lookup, to ensure that the standalone\n    // viewer components won't break.\n    for (const domElement of document.getElementsByName(name)) {\n      const { exportValue } = domElement;\n      const id = domElement.getAttribute(\"data-element-id\");\n      if (id === skipId) {\n        continue;\n      }\n      if (!GetElementsByNameSet.has(domElement)) {\n        continue;\n      }\n      fields.push({ id, exportValue, domElement });\n    }\n    return fields;\n  }\n\n  show() {\n    if (this.container) {\n      this.container.hidden = false;\n    }\n    this.popup?.maybeShow();\n  }\n\n  hide() {\n    if (this.container) {\n      this.container.hidden = true;\n    }\n    this.popup?.forceHide();\n  }\n\n  /**\n   * Get the HTML element(s) which can trigger a popup when clicked or hovered.\n   *\n   * @public\n   * @memberof AnnotationElement\n   * @returns {Array<HTMLElement>|HTMLElement} An array of elements or an\n   *          element.\n   */\n  getElementsToTriggerPopup() {\n    return this.container;\n  }\n\n  addHighlightArea() {\n    const triggers = this.getElementsToTriggerPopup();\n    if (Array.isArray(triggers)) {\n      for (const element of triggers) {\n        element.classList.add(\"highlightArea\");\n      }\n    } else {\n      triggers.classList.add(\"highlightArea\");\n    }\n  }\n\n  _editOnDoubleClick() {\n    const {\n      annotationEditorType: mode,\n      data: { id: editId },\n    } = this;\n    this.container.addEventListener(\"dblclick\", () => {\n      this.linkService.eventBus?.dispatch(\"switchannotationeditormode\", {\n        source: this,\n        mode,\n        editId,\n      });\n    });\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters, options = null) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: !!options?.ignoreBorder,\n      createQuadrilaterals: true,\n    });\n    this.isTooltipOnly = parameters.data.isTooltipOnly;\n  }\n\n  render() {\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"data-element-id\", data.id);\n    let isBound = false;\n\n    if (data.url) {\n      linkService.addLinkAttributes(link, data.url, data.newWindow);\n      isBound = true;\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n      isBound = true;\n    } else if (data.attachment) {\n      this._bindAttachment(link, data.attachment);\n      isBound = true;\n    } else if (data.setOCGState) {\n      this.#bindSetOCGState(link, data.setOCGState);\n      isBound = true;\n    } else if (data.dest) {\n      this._bindLink(link, data.dest);\n      isBound = true;\n    } else {\n      if (\n        data.actions &&\n        (data.actions.Action ||\n          data.actions[\"Mouse Up\"] ||\n          data.actions[\"Mouse Down\"]) &&\n        this.enableScripting &&\n        this.hasJSActions\n      ) {\n        this._bindJSAction(link, data);\n        isBound = true;\n      }\n\n      if (data.resetForm) {\n        this._bindResetFormAction(link, data.resetForm);\n        isBound = true;\n      } else if (this.isTooltipOnly && !isBound) {\n        this._bindLink(link, \"\");\n        isBound = true;\n      }\n    }\n\n    this.container.classList.add(\"linkAnnotation\");\n    if (isBound) {\n      this.container.append(link);\n    }\n\n    return this.container;\n  }\n\n  #setInternalLink() {\n    this.container.setAttribute(\"data-internal-link\", \"\");\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.goToDestination(destination);\n      }\n      return false;\n    };\n    if (destination || destination === /* isTooltipOnly = */ \"\") {\n      this.#setInternalLink();\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind attachments to the link element.\n   * @param {Object} link\n   * @param {Object} attachment\n   */\n  _bindAttachment(link, attachment) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.downloadManager?.openOrDownloadData(\n        this.container,\n        attachment.content,\n        attachment.filename\n      );\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind SetOCGState actions to the link element.\n   * @param {Object} link\n   * @param {Object} action\n   */\n  #bindSetOCGState(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeSetOCGState(action);\n      return false;\n    };\n    this.#setInternalLink();\n  }\n\n  /**\n   * Bind JS actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} data\n   * @memberof LinkAnnotationElement\n   */\n  _bindJSAction(link, data) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    const map = new Map([\n      [\"Action\", \"onclick\"],\n      [\"Mouse Up\", \"onmouseup\"],\n      [\"Mouse Down\", \"onmousedown\"],\n    ]);\n    for (const name of Object.keys(data.actions)) {\n      const jsName = map.get(name);\n      if (!jsName) {\n        continue;\n      }\n      link[jsName] = () => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: data.id,\n            name,\n          },\n        });\n        return false;\n      };\n    }\n\n    if (!link.onclick) {\n      link.onclick = () => false;\n    }\n    this.#setInternalLink();\n  }\n\n  _bindResetFormAction(link, resetForm) {\n    const otherClickAction = link.onclick;\n    if (!otherClickAction) {\n      link.href = this.linkService.getAnchorUrl(\"\");\n    }\n    this.#setInternalLink();\n\n    if (!this._fieldObjects) {\n      warn(\n        `_bindResetFormAction - \"resetForm\" action not supported, ` +\n          \"ensure that the `fieldObjects` parameter is provided.\"\n      );\n      if (!otherClickAction) {\n        link.onclick = () => false;\n      }\n      return;\n    }\n\n    link.onclick = () => {\n      otherClickAction?.();\n\n      const {\n        fields: resetFormFields,\n        refs: resetFormRefs,\n        include,\n      } = resetForm;\n\n      const allFields = [];\n      if (resetFormFields.length !== 0 || resetFormRefs.length !== 0) {\n        const fieldIds = new Set(resetFormRefs);\n        for (const fieldName of resetFormFields) {\n          const fields = this._fieldObjects[fieldName] || [];\n          for (const { id } of fields) {\n            fieldIds.add(id);\n          }\n        }\n        for (const fields of Object.values(this._fieldObjects)) {\n          for (const field of fields) {\n            if (fieldIds.has(field.id) === include) {\n              allFields.push(field);\n            }\n          }\n        }\n      } else {\n        for (const fields of Object.values(this._fieldObjects)) {\n          allFields.push(...fields);\n        }\n      }\n\n      const storage = this.annotationStorage;\n      const allIds = [];\n      for (const field of allFields) {\n        const { id } = field;\n        allIds.push(id);\n        switch (field.type) {\n          case \"text\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"checkbox\":\n          case \"radiobutton\": {\n            const value = field.defaultValue === field.exportValues;\n            storage.setValue(id, { value });\n            break;\n          }\n          case \"combobox\":\n          case \"listbox\": {\n            const value = field.defaultValue || \"\";\n            storage.setValue(id, { value });\n            break;\n          }\n          default:\n            continue;\n        }\n\n        const domElement = document.querySelector(`[data-element-id=\"${id}\"]`);\n        if (!domElement) {\n          continue;\n        } else if (!GetElementsByNameSet.has(domElement)) {\n          warn(`_bindResetFormAction - element not allowed: ${id}`);\n          continue;\n        }\n        domElement.dispatchEvent(new Event(\"resetform\"));\n      }\n\n      if (this.enableScripting) {\n        // Update the values in the sandbox.\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: \"app\",\n            ids: allIds,\n            name: \"ResetForm\",\n          },\n        });\n      }\n\n      return false;\n    };\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n  }\n\n  render() {\n    this.container.classList.add(\"textAnnotation\");\n\n    const image = document.createElement(\"img\");\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.append(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  render() {\n    // Show only the container for unsupported field types.\n    if (this.data.alternativeText) {\n      this.container.title = this.data.alternativeText;\n    }\n\n    return this.container;\n  }\n\n  showElementAndHideCanvas(element) {\n    if (this.data.hasOwnCanvas) {\n      if (element.previousSibling?.nodeName === \"CANVAS\") {\n        element.previousSibling.hidden = true;\n      }\n      element.hidden = false;\n    }\n  }\n\n  _getKeyModifier(event) {\n    const { isWin, isMac } = FeatureTest.platform;\n    return (isWin && event.ctrlKey) || (isMac && event.metaKey);\n  }\n\n  _setEventListener(element, elementData, baseName, eventName, valueGetter) {\n    if (baseName.includes(\"mouse\")) {\n      // Mouse events\n      element.addEventListener(baseName, event => {\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n            shift: event.shiftKey,\n            modifier: this._getKeyModifier(event),\n          },\n        });\n      });\n    } else {\n      // Non-mouse events\n      element.addEventListener(baseName, event => {\n        if (baseName === \"blur\") {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n        } else if (baseName === \"focus\") {\n          if (elementData.focused) {\n            return;\n          }\n          elementData.focused = true;\n        }\n\n        if (!valueGetter) {\n          return;\n        }\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id: this.data.id,\n            name: eventName,\n            value: valueGetter(event),\n          },\n        });\n      });\n    }\n  }\n\n  _setEventListeners(element, elementData, names, getter) {\n    for (const [baseName, eventName] of names) {\n      if (eventName === \"Action\" || this.data.actions?.[eventName]) {\n        if (eventName === \"Focus\" || eventName === \"Blur\") {\n          elementData ||= { focused: false };\n        }\n        this._setEventListener(\n          element,\n          elementData,\n          baseName,\n          eventName,\n          getter\n        );\n        if (eventName === \"Focus\" && !this.data.actions?.Blur) {\n          // Ensure that elementData will have the correct value.\n          this._setEventListener(element, elementData, \"blur\", \"Blur\", null);\n        } else if (eventName === \"Blur\" && !this.data.actions?.Focus) {\n          this._setEventListener(element, elementData, \"focus\", \"Focus\", null);\n        }\n      }\n    }\n  }\n\n  _setBackgroundColor(element) {\n    const color = this.data.backgroundColor || null;\n    element.style.backgroundColor =\n      color === null\n        ? \"transparent\"\n        : Util.makeHexColor(color[0], color[1], color[2]);\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element) {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const { fontColor } = this.data.defaultAppearanceData;\n    const fontSize =\n      this.data.defaultAppearanceData.fontSize || DEFAULT_FONT_SIZE;\n\n    const style = element.style;\n\n    // TODO: If the font-size is zero, calculate it based on the height and\n    //       width of the element.\n    // Not setting `style.fontSize` will use the default font-size for now.\n\n    // We don't use the font, as specified in the PDF document, for the <input>\n    // element. Hence using the original `fontSize` could look bad, which is why\n    // it's instead based on the field height.\n    // If the height is \"big\" then it could lead to a too big font size\n    // so in this case use the one we've in the pdf (hence the min).\n    let computedFontSize;\n    const BORDER_SIZE = 2;\n    const roundToOneDecimal = x => Math.round(10 * x) / 10;\n    if (this.data.multiLine) {\n      const height = Math.abs(\n        this.data.rect[3] - this.data.rect[1] - BORDER_SIZE\n      );\n      const numberOfLines = Math.round(height / (LINE_FACTOR * fontSize)) || 1;\n      const lineHeight = height / numberOfLines;\n      computedFontSize = Math.min(\n        fontSize,\n        roundToOneDecimal(lineHeight / LINE_FACTOR)\n      );\n    } else {\n      const height = Math.abs(\n        this.data.rect[3] - this.data.rect[1] - BORDER_SIZE\n      );\n      computedFontSize = Math.min(\n        fontSize,\n        roundToOneDecimal(height / LINE_FACTOR)\n      );\n    }\n    style.fontSize = `calc(${computedFontSize}px * var(--scale-factor))`;\n\n    style.color = Util.makeHexColor(fontColor[0], fontColor[1], fontColor[2]);\n\n    if (this.data.textAlignment !== null) {\n      style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n  }\n\n  _setRequired(element, isRequired) {\n    if (isRequired) {\n      element.setAttribute(\"required\", true);\n    } else {\n      element.removeAttribute(\"required\");\n    }\n    element.setAttribute(\"aria-required\", isRequired);\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, { isRenderable });\n  }\n\n  setPropertyOnSiblings(base, key, value, keyInStorage) {\n    const storage = this.annotationStorage;\n    for (const element of this._getElementsByName(\n      base.name,\n      /* skipId = */ base.id\n    )) {\n      if (element.domElement) {\n        element.domElement[key] = value;\n      }\n      storage.setValue(element.id, { [keyInStorage]: value });\n    }\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.classList.add(\"textWidgetAnnotation\");\n\n    let element = null;\n    if (this.renderForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const storedData = storage.getValue(id, {\n        value: this.data.fieldValue,\n      });\n      let textContent = storedData.value || \"\";\n      const maxLen = storage.getValue(id, {\n        charLimit: this.data.maxLen,\n      }).charLimit;\n      if (maxLen && textContent.length > maxLen) {\n        textContent = textContent.slice(0, maxLen);\n      }\n\n      let fieldFormattedValues =\n        storedData.formattedValue || this.data.textContent?.join(\"\\n\") || null;\n      if (fieldFormattedValues && this.data.comb) {\n        fieldFormattedValues = fieldFormattedValues.replaceAll(/\\s+/g, \"\");\n      }\n\n      const elementData = {\n        userValue: textContent,\n        formattedValue: fieldFormattedValues,\n        lastCommittedValue: null,\n        commitKey: 1,\n        focused: false,\n      };\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = fieldFormattedValues ?? textContent;\n        if (this.data.doNotScroll) {\n          element.style.overflowY = \"hidden\";\n        }\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", fieldFormattedValues ?? textContent);\n        if (this.data.doNotScroll) {\n          element.style.overflowX = \"hidden\";\n        }\n      }\n      if (this.data.hasOwnCanvas) {\n        element.hidden = true;\n      }\n      GetElementsByNameSet.add(element);\n      element.setAttribute(\"data-element-id\", id);\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n      element.tabIndex = DEFAULT_TAB_INDEX;\n\n      this._setRequired(element, this.data.required);\n\n      if (maxLen) {\n        element.maxLength = maxLen;\n      }\n\n      element.addEventListener(\"input\", event => {\n        storage.setValue(id, { value: event.target.value });\n        this.setPropertyOnSiblings(\n          element,\n          \"value\",\n          event.target.value,\n          \"value\"\n        );\n        elementData.formattedValue = null;\n      });\n\n      element.addEventListener(\"resetform\", event => {\n        const defaultValue = this.data.defaultFieldValue ?? \"\";\n        element.value = elementData.userValue = defaultValue;\n        elementData.formattedValue = null;\n      });\n\n      let blurListener = event => {\n        const { formattedValue } = elementData;\n        if (formattedValue !== null && formattedValue !== undefined) {\n          event.target.value = formattedValue;\n        }\n        // Reset the cursor position to the start of the field (issue 12359).\n        event.target.scrollLeft = 0;\n      };\n\n      if (this.enableScripting && this.hasJSActions) {\n        element.addEventListener(\"focus\", event => {\n          if (elementData.focused) {\n            return;\n          }\n          const { target } = event;\n          if (elementData.userValue) {\n            target.value = elementData.userValue;\n          }\n          elementData.lastCommittedValue = target.value;\n          elementData.commitKey = 1;\n          elementData.focused = true;\n        });\n\n        element.addEventListener(\"updatefromsandbox\", jsEvent => {\n          this.showElementAndHideCanvas(jsEvent.target);\n          const actions = {\n            value(event) {\n              elementData.userValue = event.detail.value ?? \"\";\n              storage.setValue(id, { value: elementData.userValue.toString() });\n              event.target.value = elementData.userValue;\n            },\n            formattedValue(event) {\n              const { formattedValue } = event.detail;\n              elementData.formattedValue = formattedValue;\n              if (\n                formattedValue !== null &&\n                formattedValue !== undefined &&\n                event.target !== document.activeElement\n              ) {\n                // Input hasn't the focus so display formatted string\n                event.target.value = formattedValue;\n              }\n              storage.setValue(id, {\n                formattedValue,\n              });\n            },\n            selRange(event) {\n              event.target.setSelectionRange(...event.detail.selRange);\n            },\n            charLimit: event => {\n              const { charLimit } = event.detail;\n              const { target } = event;\n              if (charLimit === 0) {\n                target.removeAttribute(\"maxLength\");\n                return;\n              }\n\n              target.setAttribute(\"maxLength\", charLimit);\n              let value = elementData.userValue;\n              if (!value || value.length <= charLimit) {\n                return;\n              }\n              value = value.slice(0, charLimit);\n              target.value = elementData.userValue = value;\n              storage.setValue(id, { value });\n\n              this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n                source: this,\n                detail: {\n                  id,\n                  name: \"Keystroke\",\n                  value,\n                  willCommit: true,\n                  commitKey: 1,\n                  selStart: target.selectionStart,\n                  selEnd: target.selectionEnd,\n                },\n              });\n            },\n          };\n          this._dispatchEventFromSandbox(actions, jsEvent);\n        });\n\n        // Even if the field hasn't any actions\n        // leaving it can still trigger some actions with Calculate\n        element.addEventListener(\"keydown\", event => {\n          elementData.commitKey = 1;\n          // If the key is one of Escape, Enter then the data are committed.\n          // If we've a Tab then data will be committed on blur.\n          let commitKey = -1;\n          if (event.key === \"Escape\") {\n            commitKey = 0;\n          } else if (event.key === \"Enter\" && !this.data.multiLine) {\n            // When we've a multiline field, \"Enter\" key is a key as the other\n            // hence we don't commit the data (Acrobat behaves the same way)\n            // (see issue #15627).\n            commitKey = 2;\n          } else if (event.key === \"Tab\") {\n            elementData.commitKey = 3;\n          }\n          if (commitKey === -1) {\n            return;\n          }\n          const { value } = event.target;\n          if (elementData.lastCommittedValue === value) {\n            return;\n          }\n          elementData.lastCommittedValue = value;\n          // Save the entered value\n          elementData.userValue = value;\n          this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n            source: this,\n            detail: {\n              id,\n              name: \"Keystroke\",\n              value,\n              willCommit: true,\n              commitKey,\n              selStart: event.target.selectionStart,\n              selEnd: event.target.selectionEnd,\n            },\n          });\n        });\n        const _blurListener = blurListener;\n        blurListener = null;\n        element.addEventListener(\"blur\", event => {\n          if (!elementData.focused || !event.relatedTarget) {\n            return;\n          }\n          elementData.focused = false;\n          const { value } = event.target;\n          elementData.userValue = value;\n          if (elementData.lastCommittedValue !== value) {\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                willCommit: true,\n                commitKey: elementData.commitKey,\n                selStart: event.target.selectionStart,\n                selEnd: event.target.selectionEnd,\n              },\n            });\n          }\n          _blurListener(event);\n        });\n\n        if (this.data.actions?.Keystroke) {\n          element.addEventListener(\"beforeinput\", event => {\n            elementData.lastCommittedValue = null;\n            const { data, target } = event;\n            const { value, selectionStart, selectionEnd } = target;\n\n            let selStart = selectionStart,\n              selEnd = selectionEnd;\n\n            switch (event.inputType) {\n              // https://rawgit.com/w3c/input-events/v1/index.html#interface-InputEvent-Attributes\n              case \"deleteWordBackward\": {\n                const match = value\n                  .substring(0, selectionStart)\n                  .match(/\\w*[^\\w]*$/);\n                if (match) {\n                  selStart -= match[0].length;\n                }\n                break;\n              }\n              case \"deleteWordForward\": {\n                const match = value\n                  .substring(selectionStart)\n                  .match(/^[^\\w]*\\w*/);\n                if (match) {\n                  selEnd += match[0].length;\n                }\n                break;\n              }\n              case \"deleteContentBackward\":\n                if (selectionStart === selectionEnd) {\n                  selStart -= 1;\n                }\n                break;\n              case \"deleteContentForward\":\n                if (selectionStart === selectionEnd) {\n                  selEnd += 1;\n                }\n                break;\n            }\n\n            // We handle the event ourselves.\n            event.preventDefault();\n            this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n              source: this,\n              detail: {\n                id,\n                name: \"Keystroke\",\n                value,\n                change: data || \"\",\n                willCommit: false,\n                selStart,\n                selEnd,\n              },\n            });\n          });\n        }\n\n        this._setEventListeners(\n          element,\n          elementData,\n          [\n            [\"focus\", \"Focus\"],\n            [\"blur\", \"Blur\"],\n            [\"mousedown\", \"Mouse Down\"],\n            [\"mouseenter\", \"Mouse Enter\"],\n            [\"mouseleave\", \"Mouse Exit\"],\n            [\"mouseup\", \"Mouse Up\"],\n          ],\n          event => event.target.value\n        );\n      }\n\n      if (blurListener) {\n        element.addEventListener(\"blur\", blurListener);\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px * var(--scale-factor) - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n    }\n\n    this._setTextStyle(element);\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass SignatureWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: !!parameters.data.hasOwnCanvas });\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.exportValue === data.fieldValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== \"Off\";\n      storage.setValue(id, { value });\n    }\n\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"checkBox\");\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"checkbox\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.setAttribute(\"exportValue\", data.exportValue);\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const checkbox of this._getElementsByName(name, /* skipId = */ id)) {\n        const curChecked = checked && checkbox.exportValue === data.exportValue;\n        if (checkbox.domElement) {\n          checkbox.domElement.checked = curChecked;\n        }\n        storage.setValue(checkbox.id, { value: curChecked });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue || \"Off\";\n      event.target.checked = defaultValue === data.exportValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            event.target.checked = event.detail.value !== \"Off\";\n            storage.setValue(id, { value: event.target.checked });\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        null,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.classList.add(\"buttonWidgetAnnotation\", \"radioButton\");\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    let value = storage.getValue(id, {\n      value: data.fieldValue === data.buttonValue,\n    }).value;\n    if (typeof value === \"string\") {\n      // The value has been changed through js and set in annotationStorage.\n      value = value !== data.buttonValue;\n      storage.setValue(id, { value });\n    }\n\n    const element = document.createElement(\"input\");\n    GetElementsByNameSet.add(element);\n    element.setAttribute(\"data-element-id\", id);\n\n    element.disabled = data.readOnly;\n    this._setRequired(element, this.data.required);\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n    element.tabIndex = DEFAULT_TAB_INDEX;\n\n    element.addEventListener(\"change\", event => {\n      const { name, checked } = event.target;\n      for (const radio of this._getElementsByName(name, /* skipId = */ id)) {\n        storage.setValue(radio.id, { value: false });\n      }\n      storage.setValue(id, { value: checked });\n    });\n\n    element.addEventListener(\"resetform\", event => {\n      const defaultValue = data.defaultFieldValue;\n      event.target.checked =\n        defaultValue !== null &&\n        defaultValue !== undefined &&\n        defaultValue === data.buttonValue;\n    });\n\n    if (this.enableScripting && this.hasJSActions) {\n      const pdfButtonValue = data.buttonValue;\n      element.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value: event => {\n            const checked = pdfButtonValue === event.detail.value;\n            for (const radio of this._getElementsByName(event.target.name)) {\n              const curChecked = checked && radio.id === id;\n              if (radio.domElement) {\n                radio.domElement.checked = curChecked;\n              }\n              storage.setValue(radio.id, { value: curChecked });\n            }\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      this._setEventListeners(\n        element,\n        null,\n        [\n          [\"change\", \"Validate\"],\n          [\"change\", \"Action\"],\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n        ],\n        event => event.target.checked\n      );\n    }\n\n    this._setBackgroundColor(element);\n    this._setDefaultPropertiesFromJS(element);\n\n    this.container.append(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { ignoreBorder: parameters.data.hasAppearance });\n  }\n\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.classList.add(\"buttonWidgetAnnotation\", \"pushButton\");\n\n    if (this.data.alternativeText) {\n      container.title = this.data.alternativeText;\n    }\n\n    const linkElement = container.lastChild;\n    if (this.enableScripting && this.hasJSActions && linkElement) {\n      this._setDefaultPropertiesFromJS(linkElement);\n\n      linkElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        this._dispatchEventFromSandbox({}, jsEvent);\n      });\n    }\n\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: parameters.renderForms });\n  }\n\n  render() {\n    this.container.classList.add(\"choiceWidgetAnnotation\");\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    const storedData = storage.getValue(id, {\n      value: this.data.fieldValue,\n    });\n\n    const selectElement = document.createElement(\"select\");\n    GetElementsByNameSet.add(selectElement);\n    selectElement.setAttribute(\"data-element-id\", id);\n\n    selectElement.disabled = this.data.readOnly;\n    this._setRequired(selectElement, this.data.required);\n    selectElement.name = this.data.fieldName;\n    selectElement.tabIndex = DEFAULT_TAB_INDEX;\n\n    let addAnEmptyEntry = this.data.combo && this.data.options.length > 0;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    selectElement.addEventListener(\"resetform\", event => {\n      const defaultValue = this.data.defaultFieldValue;\n      for (const option of selectElement.options) {\n        option.selected = option.value === defaultValue;\n      }\n    });\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (storedData.value.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n        addAnEmptyEntry = false;\n      }\n      selectElement.append(optionElement);\n    }\n\n    let removeEmptyEntry = null;\n    if (addAnEmptyEntry) {\n      const noneOptionElement = document.createElement(\"option\");\n      noneOptionElement.value = \" \";\n      noneOptionElement.setAttribute(\"hidden\", true);\n      noneOptionElement.setAttribute(\"selected\", true);\n      selectElement.prepend(noneOptionElement);\n\n      removeEmptyEntry = () => {\n        noneOptionElement.remove();\n        selectElement.removeEventListener(\"input\", removeEmptyEntry);\n        removeEmptyEntry = null;\n      };\n      selectElement.addEventListener(\"input\", removeEmptyEntry);\n    }\n\n    const getValue = isExport => {\n      const name = isExport ? \"value\" : \"textContent\";\n      const { options, multiple } = selectElement;\n      if (!multiple) {\n        return options.selectedIndex === -1\n          ? null\n          : options[options.selectedIndex][name];\n      }\n      return Array.prototype.filter\n        .call(options, option => option.selected)\n        .map(option => option[name]);\n    };\n\n    let selectedValues = getValue(/* isExport */ false);\n\n    const getItems = event => {\n      const options = event.target.options;\n      return Array.prototype.map.call(options, option => {\n        return { displayValue: option.textContent, exportValue: option.value };\n      });\n    };\n\n    if (this.enableScripting && this.hasJSActions) {\n      selectElement.addEventListener(\"updatefromsandbox\", jsEvent => {\n        const actions = {\n          value(event) {\n            removeEmptyEntry?.();\n            const value = event.detail.value;\n            const values = new Set(Array.isArray(value) ? value : [value]);\n            for (const option of selectElement.options) {\n              option.selected = values.has(option.value);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          multipleSelection(event) {\n            selectElement.multiple = true;\n          },\n          remove(event) {\n            const options = selectElement.options;\n            const index = event.detail.remove;\n            options[index].selected = false;\n            selectElement.remove(index);\n            if (options.length > 0) {\n              const i = Array.prototype.findIndex.call(\n                options,\n                option => option.selected\n              );\n              if (i === -1) {\n                options[0].selected = true;\n              }\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          clear(event) {\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            storage.setValue(id, { value: null, items: [] });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          insert(event) {\n            const { index, displayValue, exportValue } = event.detail.insert;\n            const selectChild = selectElement.children[index];\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = displayValue;\n            optionElement.value = exportValue;\n\n            if (selectChild) {\n              selectChild.before(optionElement);\n            } else {\n              selectElement.append(optionElement);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          items(event) {\n            const { items } = event.detail;\n            while (selectElement.length !== 0) {\n              selectElement.remove(0);\n            }\n            for (const item of items) {\n              const { displayValue, exportValue } = item;\n              const optionElement = document.createElement(\"option\");\n              optionElement.textContent = displayValue;\n              optionElement.value = exportValue;\n              selectElement.append(optionElement);\n            }\n            if (selectElement.options.length > 0) {\n              selectElement.options[0].selected = true;\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n              items: getItems(event),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          indices(event) {\n            const indices = new Set(event.detail.indices);\n            for (const option of event.target.options) {\n              option.selected = indices.has(option.index);\n            }\n            storage.setValue(id, {\n              value: getValue(/* isExport */ true),\n            });\n            selectedValues = getValue(/* isExport */ false);\n          },\n          editable(event) {\n            event.target.disabled = !event.detail.editable;\n          },\n        };\n        this._dispatchEventFromSandbox(actions, jsEvent);\n      });\n\n      selectElement.addEventListener(\"input\", event => {\n        const exportValue = getValue(/* isExport */ true);\n        storage.setValue(id, { value: exportValue });\n\n        event.preventDefault();\n\n        this.linkService.eventBus?.dispatch(\"dispatcheventinsandbox\", {\n          source: this,\n          detail: {\n            id,\n            name: \"Keystroke\",\n            value: selectedValues,\n            changeEx: exportValue,\n            willCommit: false,\n            commitKey: 1,\n            keyDown: false,\n          },\n        });\n      });\n\n      this._setEventListeners(\n        selectElement,\n        null,\n        [\n          [\"focus\", \"Focus\"],\n          [\"blur\", \"Blur\"],\n          [\"mousedown\", \"Mouse Down\"],\n          [\"mouseenter\", \"Mouse Enter\"],\n          [\"mouseleave\", \"Mouse Exit\"],\n          [\"mouseup\", \"Mouse Up\"],\n          [\"input\", \"Action\"],\n          [\"input\", \"Validate\"],\n        ],\n        event => event.target.value\n      );\n    } else {\n      selectElement.addEventListener(\"input\", function (event) {\n        storage.setValue(id, { value: getValue(/* isExport */ true) });\n      });\n    }\n\n    if (this.data.combo) {\n      this._setTextStyle(selectElement);\n    } else {\n      // Just use the default font size...\n      // it's a bit hard to guess what is a good size.\n    }\n    this._setBackgroundColor(selectElement);\n    this._setDefaultPropertiesFromJS(selectElement);\n\n    this.container.append(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const { data, elements } = parameters;\n    super(parameters, { isRenderable: AnnotationElement._hasPopupData(data) });\n    this.elements = elements;\n  }\n\n  render() {\n    this.container.classList.add(\"popupAnnotation\");\n\n    const popup = new PopupElement({\n      container: this.container,\n      color: this.data.color,\n      titleObj: this.data.titleObj,\n      modificationDate: this.data.modificationDate,\n      contentsObj: this.data.contentsObj,\n      richText: this.data.richText,\n      rect: this.data.rect,\n      parentRect: this.data.parentRect || null,\n      parent: this.parent,\n      elements: this.elements,\n      open: this.data.open,\n    });\n\n    const elementIds = [];\n    for (const element of this.elements) {\n      element.popup = popup;\n      elementIds.push(element.data.id);\n      element.addHighlightArea();\n    }\n\n    this.container.setAttribute(\n      \"aria-controls\",\n      elementIds.map(id => `${AnnotationPrefix}${id}`).join(\",\")\n    );\n\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  #dateTimePromise = null;\n\n  #boundKeyDown = this.#keyDown.bind(this);\n\n  #boundHide = this.#hide.bind(this);\n\n  #boundShow = this.#show.bind(this);\n\n  #boundToggle = this.#toggle.bind(this);\n\n  #color = null;\n\n  #container = null;\n\n  #contentsObj = null;\n\n  #elements = null;\n\n  #parent = null;\n\n  #parentRect = null;\n\n  #pinned = false;\n\n  #popup = null;\n\n  #rect = null;\n\n  #richText = null;\n\n  #titleObj = null;\n\n  #wasVisible = false;\n\n  constructor({\n    container,\n    color,\n    elements,\n    titleObj,\n    modificationDate,\n    contentsObj,\n    richText,\n    parent,\n    rect,\n    parentRect,\n    open,\n  }) {\n    this.#container = container;\n    this.#titleObj = titleObj;\n    this.#contentsObj = contentsObj;\n    this.#richText = richText;\n    this.#parent = parent;\n    this.#color = color;\n    this.#rect = rect;\n    this.#parentRect = parentRect;\n    this.#elements = elements;\n\n    const dateObject = PDFDateString.toDateObject(modificationDate);\n    if (dateObject) {\n      // The modification date is shown in the popup instead of the creation\n      // date if it is available and can be parsed correctly, which is\n      // consistent with other viewers such as Adobe Acrobat.\n      this.#dateTimePromise = parent.l10n.get(\"annotation_date_string\", {\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n    }\n\n    this.trigger = elements.flatMap(e => e.getElementsToTriggerPopup());\n    // Attach the event listeners to the trigger element.\n    for (const element of this.trigger) {\n      element.addEventListener(\"click\", this.#boundToggle);\n      element.addEventListener(\"mouseenter\", this.#boundShow);\n      element.addEventListener(\"mouseleave\", this.#boundHide);\n      element.classList.add(\"popupTriggerArea\");\n    }\n\n    // Attach the event listener to toggle the popup with the keyboard.\n    for (const element of elements) {\n      element.container?.addEventListener(\"keydown\", this.#boundKeyDown);\n    }\n\n    this.#container.hidden = true;\n    if (open) {\n      this.#toggle();\n    }\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      // Since the popup is lazily created, we need to ensure that it'll be\n      // created and displayed during reference tests.\n      this.#parent.popupShow.push(async () => {\n        if (this.#container.hidden) {\n          this.#show();\n        }\n        if (this.#dateTimePromise) {\n          await this.#dateTimePromise;\n        }\n      });\n    }\n  }\n\n  render() {\n    if (this.#popup) {\n      return;\n    }\n\n    const {\n      page: { view },\n      viewport: {\n        rawDims: { pageWidth, pageHeight, pageX, pageY },\n      },\n    } = this.#parent;\n    const popup = (this.#popup = document.createElement(\"div\"));\n    popup.className = \"popup\";\n\n    if (this.#color) {\n      const baseColor = (popup.style.outlineColor = Util.makeHexColor(\n        ...this.#color\n      ));\n      if (\n        (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n        CSS.supports(\"background-color\", \"color-mix(in srgb, red 30%, white)\")\n      ) {\n        popup.style.backgroundColor = `color-mix(in srgb, ${baseColor} 30%, white)`;\n      } else {\n        // color-mix isn't supported in some browsers hence this version.\n        // See https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/color-mix#browser_compatibility\n        // TODO: Use color-mix when it's supported everywhere.\n        // Enlighten the color.\n        const BACKGROUND_ENLIGHT = 0.7;\n        popup.style.backgroundColor = Util.makeHexColor(\n          ...this.#color.map(c =>\n            Math.floor(BACKGROUND_ENLIGHT * (255 - c) + c)\n          )\n        );\n      }\n    }\n\n    const header = document.createElement(\"span\");\n    header.className = \"header\";\n    const title = document.createElement(\"h1\");\n    header.append(title);\n    ({ dir: title.dir, str: title.textContent } = this.#titleObj);\n    popup.append(header);\n\n    if (this.#dateTimePromise) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.classList.add(\"popupDate\");\n      this.#dateTimePromise.then(localized => {\n        modificationDate.textContent = localized;\n      });\n      header.append(modificationDate);\n    }\n\n    const contentsObj = this.#contentsObj;\n    const richText = this.#richText;\n    if (\n      richText?.str &&\n      (!contentsObj?.str || contentsObj.str === richText.str)\n    ) {\n      XfaLayer.render({\n        xfaHtml: richText.html,\n        intent: \"richText\",\n        div: popup,\n      });\n      popup.lastChild.classList.add(\"richText\", \"popupContent\");\n    } else {\n      const contents = this._formatContents(contentsObj);\n      popup.append(contents);\n    }\n\n    let useParentRect = !!this.#parentRect;\n    let rect = useParentRect ? this.#parentRect : this.#rect;\n    for (const element of this.#elements) {\n      if (!rect || Util.intersect(element.data.rect, rect) !== null) {\n        rect = element.data.rect;\n        useParentRect = true;\n        break;\n      }\n    }\n\n    const normalizedRect = Util.normalizeRect([\n      rect[0],\n      view[3] - rect[1] + view[1],\n      rect[2],\n      view[3] - rect[3] + view[1],\n    ]);\n\n    const HORIZONTAL_SPACE_AFTER_ANNOTATION = 5;\n    const parentWidth = useParentRect\n      ? rect[2] - rect[0] + HORIZONTAL_SPACE_AFTER_ANNOTATION\n      : 0;\n    const popupLeft = normalizedRect[0] + parentWidth;\n    const popupTop = normalizedRect[1];\n\n    const { style } = this.#container;\n    style.left = `${(100 * (popupLeft - pageX)) / pageWidth}%`;\n    style.top = `${(100 * (popupTop - pageY)) / pageHeight}%`;\n\n    this.#container.append(popup);\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {Object<string, string>} contentsObj\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents({ str, dir }) {\n    const p = document.createElement(\"p\");\n    p.classList.add(\"popupContent\");\n    p.dir = dir;\n    const lines = str.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.append(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.append(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  #keyDown(event) {\n    if (event.altKey || event.shiftKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n\n    if (event.key === \"Enter\" || (event.key === \"Escape\" && this.#pinned)) {\n      this.#toggle();\n    }\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   */\n  #toggle() {\n    this.#pinned = !this.#pinned;\n    if (this.#pinned) {\n      this.#show();\n      this.#container.addEventListener(\"click\", this.#boundToggle);\n      this.#container.addEventListener(\"keydown\", this.#boundKeyDown);\n    } else {\n      this.#hide();\n      this.#container.removeEventListener(\"click\", this.#boundToggle);\n      this.#container.removeEventListener(\"keydown\", this.#boundKeyDown);\n    }\n  }\n\n  /**\n   * Show the popup.\n   */\n  #show() {\n    if (!this.#popup) {\n      this.render();\n    }\n    if (!this.isVisible) {\n      this.#container.hidden = false;\n      this.#container.style.zIndex =\n        parseInt(this.#container.style.zIndex) + 1000;\n    } else if (this.#pinned) {\n      this.#container.classList.add(\"focused\");\n    }\n  }\n\n  /**\n   * Hide the popup.\n   */\n  #hide() {\n    this.#container.classList.remove(\"focused\");\n    if (this.#pinned || !this.isVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n    this.#container.style.zIndex =\n      parseInt(this.#container.style.zIndex) - 1000;\n  }\n\n  forceHide() {\n    this.#wasVisible = this.isVisible;\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#container.hidden = true;\n  }\n\n  maybeShow() {\n    if (!this.#wasVisible) {\n      return;\n    }\n    this.#wasVisible = false;\n    this.#container.hidden = false;\n  }\n\n  get isVisible() {\n    return this.#container.hidden === false;\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n    this.textContent = parameters.data.textContent;\n    this.textPosition = parameters.data.textPosition;\n    this.annotationEditorType = AnnotationEditorType.FREETEXT;\n  }\n\n  render() {\n    this.container.classList.add(\"freeTextAnnotation\");\n\n    if (this.textContent) {\n      const content = document.createElement(\"div\");\n      content.classList.add(\"annotationTextContent\");\n      content.setAttribute(\"role\", \"comment\");\n      for (const line of this.textContent) {\n        const lineSpan = document.createElement(\"span\");\n        lineSpan.textContent = line;\n        content.append(lineSpan);\n      }\n      this.container.append(content);\n    }\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this._editOnDoubleClick();\n\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  #line = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"lineAnnotation\");\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = (this.#line = this.svgFactory.createElement(\"svg:line\"));\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n    line.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#line;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  #square = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"squareAnnotation\");\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = (this.#square = this.svgFactory.createElement(\"svg:rect\"));\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#square;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  #circle = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"circleAnnotation\");\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = (this.#circle =\n      this.svgFactory.createElement(\"svg:ellipse\"));\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#circle;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  #polyline = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  render() {\n    this.container.classList.add(this.containerClassName);\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = (this.#polyline = this.svgFactory.createElement(\n      this.svgElementName\n    ));\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"transparent\");\n\n    svg.append(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#polyline;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"caretAnnotation\");\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  #polylines = [];\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n    this.annotationEditorType = AnnotationEditorType.INK;\n  }\n\n  render() {\n    this.container.classList.add(this.containerClassName);\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const { width, height } = getRectDims(data.rect);\n    const svg = this.svgFactory.create(\n      width,\n      height,\n      /* skipDimensions = */ true\n    );\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      this.#polylines.push(polyline);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"transparent\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      if (!data.popupRef && this.hasPopupData) {\n        this._createPopup();\n      }\n\n      svg.append(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#polylines;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"highlightAnnotation\");\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"underlineAnnotation\");\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"squigglyAnnotation\");\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, {\n      isRenderable: true,\n      ignoreBorder: true,\n      createQuadrilaterals: true,\n    });\n  }\n\n  render() {\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n\n    this.container.classList.add(\"strikeoutAnnotation\");\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, { isRenderable: true, ignoreBorder: true });\n  }\n\n  render() {\n    this.container.classList.add(\"stampAnnotation\");\n\n    if (!this.data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  #trigger = null;\n\n  constructor(parameters) {\n    super(parameters, { isRenderable: true });\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename, /* onlyStripPath = */ true);\n    this.content = content;\n\n    this.linkService.eventBus?.dispatch(\"fileattachmentannotation\", {\n      source: this,\n      filename,\n      content,\n    });\n  }\n\n  render() {\n    this.container.classList.add(\"fileAttachmentAnnotation\");\n\n    const { container, data } = this;\n    let trigger;\n    if (data.hasAppearance || data.fillAlpha === 0) {\n      trigger = document.createElement(\"div\");\n    } else {\n      // Unfortunately it seems that it's not clearly specified exactly what\n      // names are actually valid, since Table 184 contains:\n      //   Conforming readers shall provide predefined icon appearances for at\n      //   least the following standard names: GraphPushPin, PaperclipTag.\n      //   Additional names may be supported as well. Default value: PushPin.\n      trigger = document.createElement(\"img\");\n      trigger.src = `${this.imageResourcesPath}annotation-${\n        /paperclip/i.test(data.name) ? \"paperclip\" : \"pushpin\"\n      }.svg`;\n\n      if (data.fillAlpha && data.fillAlpha < 1) {\n        trigger.style = `filter: opacity(${Math.round(\n          data.fillAlpha * 100\n        )}%);`;\n\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          this.container.classList.add(\"hasFillAlpha\");\n        }\n      }\n    }\n    trigger.addEventListener(\"dblclick\", this.#download.bind(this));\n    this.#trigger = trigger;\n\n    const { isMac } = FeatureTest.platform;\n    container.addEventListener(\"keydown\", evt => {\n      if (evt.key === \"Enter\" && (isMac ? evt.metaKey : evt.ctrlKey)) {\n        this.#download();\n      }\n    });\n\n    if (!data.popupRef && this.hasPopupData) {\n      this._createPopup();\n    } else {\n      trigger.classList.add(\"popupTriggerArea\");\n    }\n\n    container.append(trigger);\n    return container;\n  }\n\n  getElementsToTriggerPopup() {\n    return this.#trigger;\n  }\n\n  addHighlightArea() {\n    this.container.classList.add(\"highlightArea\");\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   */\n  #download() {\n    this.downloadManager?.openOrDownloadData(\n      this.container,\n      this.content,\n      this.filename\n    );\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPageProxy} page\n * @property {IPDFLinkService} linkService\n * @property {IDownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderForms\n * @property {boolean} [enableScripting] - Enable embedded script execution.\n * @property {boolean} [hasJSActions] - Some fields have JS actions.\n *   The default value is `false`.\n * @property {Object<string, Array<Object>> | null} [fieldObjects]\n * @property {Map<string, HTMLCanvasElement>} [annotationCanvasMap]\n * @property {TextAccessibilityManager} [accessibilityManager]\n */\n\n/**\n * Manage the layer containing all the annotations.\n */\nclass AnnotationLayer {\n  #accessibilityManager = null;\n\n  #annotationCanvasMap = null;\n\n  #editableAnnotations = new Map();\n\n  constructor({\n    div,\n    accessibilityManager,\n    annotationCanvasMap,\n    l10n,\n    page,\n    viewport,\n  }) {\n    this.div = div;\n    this.#accessibilityManager = accessibilityManager;\n    this.#annotationCanvasMap = annotationCanvasMap;\n    this.l10n = l10n;\n    this.page = page;\n    this.viewport = viewport;\n    this.zIndex = 0;\n\n    if (\n      typeof PDFJSDev !== \"undefined\" &&\n      PDFJSDev.test(\"GENERIC && !TESTING\")\n    ) {\n      this.l10n ||= NullL10n;\n    }\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      // For testing purposes.\n      Object.defineProperty(this, \"showPopups\", {\n        value: async () => {\n          for (const show of this.popupShow) {\n            await show();\n          }\n        },\n      });\n      this.popupShow = [];\n    }\n  }\n\n  #appendElement(element, id) {\n    const contentElement = element.firstChild || element;\n    contentElement.id = `${AnnotationPrefix}${id}`;\n\n    this.div.append(element);\n    this.#accessibilityManager?.moveElementInDOM(\n      this.div,\n      element,\n      contentElement,\n      /* isRemovable = */ false\n    );\n  }\n\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @param {AnnotationLayerParameters} params\n   * @memberof AnnotationLayer\n   */\n  async render(params) {\n    const { annotations } = params;\n    const layer = this.div;\n    setLayerDimensions(layer, this.viewport);\n\n    const popupToElements = new Map();\n    const elementParams = {\n      data: null,\n      layer,\n      linkService: params.linkService,\n      downloadManager: params.downloadManager,\n      imageResourcesPath: params.imageResourcesPath || \"\",\n      renderForms: params.renderForms !== false,\n      svgFactory: new DOMSVGFactory(),\n      annotationStorage: params.annotationStorage || new AnnotationStorage(),\n      enableScripting: params.enableScripting === true,\n      hasJSActions: params.hasJSActions,\n      fieldObjects: params.fieldObjects,\n      parent: this,\n      elements: null,\n    };\n\n    for (const data of annotations) {\n      if (data.noHTML) {\n        continue;\n      }\n      const isPopupAnnotation = data.annotationType === AnnotationType.POPUP;\n      if (!isPopupAnnotation) {\n        const { width, height } = getRectDims(data.rect);\n        if (width <= 0 || height <= 0) {\n          continue; // Ignore empty annotations.\n        }\n      } else {\n        const elements = popupToElements.get(data.id);\n        if (!elements) {\n          // Ignore popup annotations without a corresponding annotation.\n          continue;\n        }\n        elementParams.elements = elements;\n      }\n      elementParams.data = data;\n      const element = AnnotationElementFactory.create(elementParams);\n\n      if (!element.isRenderable) {\n        continue;\n      }\n\n      if (!isPopupAnnotation && data.popupRef) {\n        const elements = popupToElements.get(data.popupRef);\n        if (!elements) {\n          popupToElements.set(data.popupRef, [element]);\n        } else {\n          elements.push(element);\n        }\n      }\n\n      if (element.annotationEditorType > 0) {\n        this.#editableAnnotations.set(element.data.id, element);\n      }\n\n      const rendered = element.render();\n      if (data.hidden) {\n        rendered.style.visibility = \"hidden\";\n      }\n      this.#appendElement(rendered, data.id);\n    }\n\n    this.#setAnnotationCanvasMap();\n\n    await this.l10n.translate(layer);\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @param {AnnotationLayerParameters} viewport\n   * @memberof AnnotationLayer\n   */\n  update({ viewport }) {\n    const layer = this.div;\n    this.viewport = viewport;\n    setLayerDimensions(layer, { rotation: viewport.rotation });\n\n    this.#setAnnotationCanvasMap();\n    layer.hidden = false;\n  }\n\n  #setAnnotationCanvasMap() {\n    if (!this.#annotationCanvasMap) {\n      return;\n    }\n    const layer = this.div;\n    for (const [id, canvas] of this.#annotationCanvasMap) {\n      const element = layer.querySelector(`[data-annotation-id=\"${id}\"]`);\n      if (!element) {\n        continue;\n      }\n\n      const { firstChild } = element;\n      if (!firstChild) {\n        element.append(canvas);\n      } else if (firstChild.nodeName === \"CANVAS\") {\n        firstChild.replaceWith(canvas);\n      } else {\n        firstChild.before(canvas);\n      }\n    }\n    this.#annotationCanvasMap.clear();\n  }\n\n  getEditableAnnotations() {\n    return Array.from(this.#editableAnnotations.values());\n  }\n\n  getEditableAnnotation(id) {\n    return this.#editableAnnotations.get(id);\n  }\n}\n\nexport {\n  AnnotationLayer,\n  FreeTextAnnotationElement,\n  InkAnnotationElement,\n  StampAnnotationElement,\n};\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `../display/` and\n *              `../scripting_api/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\nfunction makeColorComp(n) {\n  return Math.floor(Math.max(0, Math.min(1, n)) * 255)\n    .toString(16)\n    .padStart(2, \"0\");\n}\n\nfunction scaleAndClamp(x) {\n  return Math.max(0, Math.min(255, 255 * x));\n}\n\n// PDF specifications section 10.3\nclass ColorConverters {\n  static CMYK_G([c, y, m, k]) {\n    return [\"G\", 1 - Math.min(1, 0.3 * c + 0.59 * m + 0.11 * y + k)];\n  }\n\n  static G_CMYK([g]) {\n    return [\"CMYK\", 0, 0, 0, 1 - g];\n  }\n\n  static G_RGB([g]) {\n    return [\"RGB\", g, g, g];\n  }\n\n  static G_rgb([g]) {\n    g = scaleAndClamp(g);\n    return [g, g, g];\n  }\n\n  static G_HTML([g]) {\n    const G = makeColorComp(g);\n    return `#${G}${G}${G}`;\n  }\n\n  static RGB_G([r, g, b]) {\n    return [\"G\", 0.3 * r + 0.59 * g + 0.11 * b];\n  }\n\n  static RGB_rgb(color) {\n    return color.map(scaleAndClamp);\n  }\n\n  static RGB_HTML(color) {\n    return `#${color.map(makeColorComp).join(\"\")}`;\n  }\n\n  static T_HTML() {\n    return \"#00000000\";\n  }\n\n  static T_rgb() {\n    return [null];\n  }\n\n  static CMYK_RGB([c, y, m, k]) {\n    return [\n      \"RGB\",\n      1 - Math.min(1, c + k),\n      1 - Math.min(1, m + k),\n      1 - Math.min(1, y + k),\n    ];\n  }\n\n  static CMYK_rgb([c, y, m, k]) {\n    return [\n      scaleAndClamp(1 - Math.min(1, c + k)),\n      scaleAndClamp(1 - Math.min(1, m + k)),\n      scaleAndClamp(1 - Math.min(1, y + k)),\n    ];\n  }\n\n  static CMYK_HTML(components) {\n    const rgb = this.CMYK_RGB(components).slice(1);\n    return this.RGB_HTML(rgb);\n  }\n\n  static RGB_CMYK([r, g, b]) {\n    const c = 1 - r;\n    const m = 1 - g;\n    const y = 1 - b;\n    const k = Math.min(c, m, y);\n    return [\"CMYK\", c, m, y, k];\n  }\n}\n\nexport { ColorConverters };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * PLEASE NOTE: This file is currently imported in both the `web/` and\n *              `src/display/` folders, hence be EXTREMELY careful about\n *              introducing any dependencies here since that can lead to an\n *              unexpected/unnecessary size increase of the *built* files.\n */\n\n/**\n * A subset of the l10n strings in the `l10n/en-US/viewer.properties` file.\n */\nconst DEFAULT_L10N_STRINGS = {\n  of_pages: \"of {{pagesCount}}\",\n  page_of_pages: \"({{pageNumber}} of {{pagesCount}})\",\n\n  document_properties_kb: \"{{size_kb}} KB ({{size_b}} bytes)\",\n  document_properties_mb: \"{{size_mb}} MB ({{size_b}} bytes)\",\n  document_properties_date_string: \"{{date}}, {{time}}\",\n  document_properties_page_size_unit_inches: \"in\",\n  document_properties_page_size_unit_millimeters: \"mm\",\n  document_properties_page_size_orientation_portrait: \"portrait\",\n  document_properties_page_size_orientation_landscape: \"landscape\",\n  document_properties_page_size_name_a3: \"A3\",\n  document_properties_page_size_name_a4: \"A4\",\n  document_properties_page_size_name_letter: \"Letter\",\n  document_properties_page_size_name_legal: \"Legal\",\n  document_properties_page_size_dimension_string:\n    \"{{width}} × {{height}} {{unit}} ({{orientation}})\",\n  document_properties_page_size_dimension_name_string:\n    \"{{width}} × {{height}} {{unit}} ({{name}}, {{orientation}})\",\n  document_properties_linearized_yes: \"Yes\",\n  document_properties_linearized_no: \"No\",\n\n  additional_layers: \"Additional Layers\",\n  page_landmark: \"Page {{page}}\",\n  thumb_page_title: \"Page {{page}}\",\n  thumb_page_canvas: \"Thumbnail of Page {{page}}\",\n\n  find_reached_top: \"Reached top of document, continued from bottom\",\n  find_reached_bottom: \"Reached end of document, continued from top\",\n  \"find_match_count[one]\": \"{{current}} of {{total}} match\",\n  \"find_match_count[other]\": \"{{current}} of {{total}} matches\",\n  \"find_match_count_limit[one]\": \"More than {{limit}} match\",\n  \"find_match_count_limit[other]\": \"More than {{limit}} matches\",\n  find_not_found: \"Phrase not found\",\n\n  page_scale_width: \"Page Width\",\n  page_scale_fit: \"Page Fit\",\n  page_scale_auto: \"Automatic Zoom\",\n  page_scale_actual: \"Actual Size\",\n  page_scale_percent: \"{{scale}}%\",\n\n  loading_error: \"An error occurred while loading the PDF.\",\n  invalid_file_error: \"Invalid or corrupted PDF file.\",\n  missing_file_error: \"Missing PDF file.\",\n  unexpected_response_error: \"Unexpected server response.\",\n  rendering_error: \"An error occurred while rendering the page.\",\n\n  annotation_date_string: \"{{date}}, {{time}}\",\n\n  printing_not_supported:\n    \"Warning: Printing is not fully supported by this browser.\",\n  printing_not_ready: \"Warning: The PDF is not fully loaded for printing.\",\n  web_fonts_disabled:\n    \"Web fonts are disabled: unable to use embedded PDF fonts.\",\n\n  free_text2_default_content: \"Start typing…\",\n  editor_free_text2_aria_label: \"Text Editor\",\n  editor_ink2_aria_label: \"Draw Editor\",\n  editor_ink_canvas_aria_label: \"User-created image\",\n  editor_alt_text_button_label: \"Alt text\",\n  editor_alt_text_edit_button_label: \"Edit alt text\",\n  editor_alt_text_decorative_tooltip: \"Marked as decorative\",\n};\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"MOZCENTRAL\")) {\n  DEFAULT_L10N_STRINGS.print_progress_percent = \"{{progress}}%\";\n}\n\nfunction getL10nFallback(key, args) {\n  switch (key) {\n    case \"find_match_count\":\n      key = `find_match_count[${args.total === 1 ? \"one\" : \"other\"}]`;\n      break;\n    case \"find_match_count_limit\":\n      key = `find_match_count_limit[${args.limit === 1 ? \"one\" : \"other\"}]`;\n      break;\n  }\n  return DEFAULT_L10N_STRINGS[key] || \"\";\n}\n\n// Replaces {{arguments}} with their values.\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replaceAll(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, (all, name) => {\n    return name in args ? args[name] : \"{{\" + name + \"}}\";\n  });\n}\n\n/**\n * No-op implementation of the localization service.\n * @implements {IL10n}\n */\nconst NullL10n = {\n  async getLanguage() {\n    return \"en-us\";\n  },\n\n  async getDirection() {\n    return \"ltr\";\n  },\n\n  async get(key, args = null, fallback = getL10nFallback(key, args)) {\n    return formatL10nValue(fallback, args);\n  },\n\n  async translate(element) {},\n};\n\nexport { getL10nFallback, NullL10n };\n","/* Copyright 2021 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./annotation_storage\").AnnotationStorage} AnnotationStorage */\n/** @typedef {import(\"./display_utils\").PageViewport} PageViewport */\n/** @typedef {import(\"../../web/interfaces\").IPDFLinkService} IPDFLinkService */\n\nimport { XfaText } from \"./xfa_text.js\";\n\n/**\n * @typedef {Object} XfaLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Object} xfaHtml\n * @property {AnnotationStorage} [annotationStorage]\n * @property {IPDFLinkService} linkService\n * @property {string} [intent] - (default value is 'display').\n */\n\nclass XfaLayer {\n  static setupStorage(html, id, element, storage, intent) {\n    const storedData = storage.getValue(id, { value: null });\n    switch (element.name) {\n      case \"textarea\":\n        if (storedData.value !== null) {\n          html.textContent = storedData.value;\n        }\n        if (intent === \"print\") {\n          break;\n        }\n        html.addEventListener(\"input\", event => {\n          storage.setValue(id, { value: event.target.value });\n        });\n        break;\n      case \"input\":\n        if (\n          element.attributes.type === \"radio\" ||\n          element.attributes.type === \"checkbox\"\n        ) {\n          if (storedData.value === element.attributes.xfaOn) {\n            html.setAttribute(\"checked\", true);\n          } else if (storedData.value === element.attributes.xfaOff) {\n            // The checked attribute may have been set when opening the file,\n            // unset through the UI and we're here because of printing.\n            html.removeAttribute(\"checked\");\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"change\", event => {\n            storage.setValue(id, {\n              value: event.target.checked\n                ? event.target.getAttribute(\"xfaOn\")\n                : event.target.getAttribute(\"xfaOff\"),\n            });\n          });\n        } else {\n          if (storedData.value !== null) {\n            html.setAttribute(\"value\", storedData.value);\n          }\n          if (intent === \"print\") {\n            break;\n          }\n          html.addEventListener(\"input\", event => {\n            storage.setValue(id, { value: event.target.value });\n          });\n        }\n        break;\n      case \"select\":\n        if (storedData.value !== null) {\n          html.setAttribute(\"value\", storedData.value);\n          for (const option of element.children) {\n            if (option.attributes.value === storedData.value) {\n              option.attributes.selected = true;\n            } else if (option.attributes.hasOwnProperty(\"selected\")) {\n              delete option.attributes.selected;\n            }\n          }\n        }\n        html.addEventListener(\"input\", event => {\n          const options = event.target.options;\n          const value =\n            options.selectedIndex === -1\n              ? \"\"\n              : options[options.selectedIndex].value;\n          storage.setValue(id, { value });\n        });\n        break;\n    }\n  }\n\n  static setAttributes({ html, element, storage = null, intent, linkService }) {\n    const { attributes } = element;\n    const isHTMLAnchorElement = html instanceof HTMLAnchorElement;\n\n    if (attributes.type === \"radio\") {\n      // Avoid to have a radio group when printing with the same as one\n      // already displayed.\n      attributes.name = `${attributes.name}-${intent}`;\n    }\n    for (const [key, value] of Object.entries(attributes)) {\n      if (value === null || value === undefined) {\n        continue;\n      }\n\n      switch (key) {\n        case \"class\":\n          if (value.length) {\n            html.setAttribute(key, value.join(\" \"));\n          }\n          break;\n        case \"dataId\":\n          // We don't need to add dataId in the html object but it can\n          // be useful to know its value when writing printing tests:\n          // in this case, don't skip dataId to have its value.\n          break;\n        case \"id\":\n          html.setAttribute(\"data-element-id\", value);\n          break;\n        case \"style\":\n          Object.assign(html.style, value);\n          break;\n        case \"textContent\":\n          html.textContent = value;\n          break;\n        default:\n          if (!isHTMLAnchorElement || (key !== \"href\" && key !== \"newWindow\")) {\n            html.setAttribute(key, value);\n          }\n      }\n    }\n\n    if (isHTMLAnchorElement) {\n      linkService.addLinkAttributes(\n        html,\n        attributes.href,\n        attributes.newWindow\n      );\n    }\n\n    // Set the value after the others to be sure to overwrite any other values.\n    if (storage && attributes.dataId) {\n      this.setupStorage(html, attributes.dataId, element, storage);\n    }\n  }\n\n  /**\n   * Render the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static render(parameters) {\n    const storage = parameters.annotationStorage;\n    const linkService = parameters.linkService;\n    const root = parameters.xfaHtml;\n    const intent = parameters.intent || \"display\";\n    const rootHtml = document.createElement(root.name);\n    if (root.attributes) {\n      this.setAttributes({\n        html: rootHtml,\n        element: root,\n        intent,\n        linkService,\n      });\n    }\n    const stack = [[root, -1, rootHtml]];\n\n    const rootDiv = parameters.div;\n    rootDiv.append(rootHtml);\n\n    if (parameters.viewport) {\n      const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n      rootDiv.style.transform = transform;\n    }\n\n    // Set defaults.\n    if (intent !== \"richText\") {\n      rootDiv.setAttribute(\"class\", \"xfaLayer xfaFont\");\n    }\n\n    // Text nodes used for the text highlighter.\n    const textDivs = [];\n\n    while (stack.length > 0) {\n      const [parent, i, html] = stack.at(-1);\n      if (i + 1 === parent.children.length) {\n        stack.pop();\n        continue;\n      }\n\n      const child = parent.children[++stack.at(-1)[1]];\n      if (child === null) {\n        continue;\n      }\n\n      const { name } = child;\n      if (name === \"#text\") {\n        const node = document.createTextNode(child.value);\n        textDivs.push(node);\n        html.append(node);\n        continue;\n      }\n\n      const childHtml = child?.attributes?.xmlns\n        ? document.createElementNS(child.attributes.xmlns, name)\n        : document.createElement(name);\n\n      html.append(childHtml);\n      if (child.attributes) {\n        this.setAttributes({\n          html: childHtml,\n          element: child,\n          storage,\n          intent,\n          linkService,\n        });\n      }\n\n      if (child.children && child.children.length > 0) {\n        stack.push([child, -1, childHtml]);\n      } else if (child.value) {\n        const node = document.createTextNode(child.value);\n        if (XfaText.shouldBuildText(name)) {\n          textDivs.push(node);\n        }\n        childHtml.append(node);\n      }\n    }\n\n    /**\n     * TODO: re-enable that stuff once we've JS implementation.\n     * See https://bugzilla.mozilla.org/show_bug.cgi?id=1719465.\n     *\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaDisabled input, .xfaDisabled textarea\"\n     * )) {\n     * el.setAttribute(\"disabled\", true);\n     * }\n     * for (const el of rootDiv.querySelectorAll(\n     * \".xfaReadOnly input, .xfaReadOnly textarea\"\n     * )) {\n     * el.setAttribute(\"readOnly\", true);\n     * }\n     */\n\n    for (const el of rootDiv.querySelectorAll(\n      \".xfaNonInteractive input, .xfaNonInteractive textarea\"\n    )) {\n      el.setAttribute(\"readOnly\", true);\n    }\n\n    return {\n      textDivs,\n    };\n  }\n\n  /**\n   * Update the XFA layer.\n   *\n   * @param {XfaLayerParameters} parameters\n   */\n  static update(parameters) {\n    const transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n    parameters.div.style.transform = transform;\n    parameters.div.hidden = false;\n  }\n}\n\nexport { XfaLayer };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  Util,\n} from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { InkAnnotationElement } from \"../annotation_layer.js\";\nimport { noContextMenu } from \"../display_utils.js\";\nimport { opacityToHex } from \"./tools.js\";\n\n/**\n * Basic draw editor in order to generate an Ink annotation.\n */\nclass InkEditor extends AnnotationEditor {\n  #baseHeight = 0;\n\n  #baseWidth = 0;\n\n  #boundCanvasPointermove = this.canvasPointermove.bind(this);\n\n  #boundCanvasPointerleave = this.canvasPointerleave.bind(this);\n\n  #boundCanvasPointerup = this.canvasPointerup.bind(this);\n\n  #boundCanvasPointerdown = this.canvasPointerdown.bind(this);\n\n  #currentPath2D = new Path2D();\n\n  #disableEditing = false;\n\n  #hasSomethingToDraw = false;\n\n  #isCanvasInitialized = false;\n\n  #observer = null;\n\n  #realWidth = 0;\n\n  #realHeight = 0;\n\n  #requestFrameCallback = null;\n\n  static _defaultColor = null;\n\n  static _defaultOpacity = 1;\n\n  static _defaultThickness = 1;\n\n  static _type = \"ink\";\n\n  constructor(params) {\n    super({ ...params, name: \"inkEditor\" });\n    this.color = params.color || null;\n    this.thickness = params.thickness || null;\n    this.opacity = params.opacity || null;\n    this.paths = [];\n    this.bezierPath2D = [];\n    this.allRawPaths = [];\n    this.currentPath = [];\n    this.scaleFactor = 1;\n    this.translationX = this.translationY = 0;\n    this.x = 0;\n    this.y = 0;\n    this._willKeepAspectRatio = true;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n, {\n      strings: [\"editor_ink_canvas_aria_label\", \"editor_ink2_aria_label\"],\n    });\n  }\n\n  /** @inheritdoc */\n  static updateDefaultParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.INK_THICKNESS:\n        InkEditor._defaultThickness = value;\n        break;\n      case AnnotationEditorParamsType.INK_COLOR:\n        InkEditor._defaultColor = value;\n        break;\n      case AnnotationEditorParamsType.INK_OPACITY:\n        InkEditor._defaultOpacity = value / 100;\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  updateParams(type, value) {\n    switch (type) {\n      case AnnotationEditorParamsType.INK_THICKNESS:\n        this.#updateThickness(value);\n        break;\n      case AnnotationEditorParamsType.INK_COLOR:\n        this.#updateColor(value);\n        break;\n      case AnnotationEditorParamsType.INK_OPACITY:\n        this.#updateOpacity(value);\n        break;\n    }\n  }\n\n  /** @inheritdoc */\n  static get defaultPropertiesToUpdate() {\n    return [\n      [AnnotationEditorParamsType.INK_THICKNESS, InkEditor._defaultThickness],\n      [\n        AnnotationEditorParamsType.INK_COLOR,\n        InkEditor._defaultColor || AnnotationEditor._defaultLineColor,\n      ],\n      [\n        AnnotationEditorParamsType.INK_OPACITY,\n        Math.round(InkEditor._defaultOpacity * 100),\n      ],\n    ];\n  }\n\n  /** @inheritdoc */\n  get propertiesToUpdate() {\n    return [\n      [\n        AnnotationEditorParamsType.INK_THICKNESS,\n        this.thickness || InkEditor._defaultThickness,\n      ],\n      [\n        AnnotationEditorParamsType.INK_COLOR,\n        this.color ||\n          InkEditor._defaultColor ||\n          AnnotationEditor._defaultLineColor,\n      ],\n      [\n        AnnotationEditorParamsType.INK_OPACITY,\n        Math.round(100 * (this.opacity ?? InkEditor._defaultOpacity)),\n      ],\n    ];\n  }\n\n  /**\n   * Update the thickness and make this action undoable.\n   * @param {number} thickness\n   */\n  #updateThickness(thickness) {\n    const savedThickness = this.thickness;\n    this.addCommands({\n      cmd: () => {\n        this.thickness = thickness;\n        this.#fitToContent();\n      },\n      undo: () => {\n        this.thickness = savedThickness;\n        this.#fitToContent();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_THICKNESS,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the color and make this action undoable.\n   * @param {string} color\n   */\n  #updateColor(color) {\n    const savedColor = this.color;\n    this.addCommands({\n      cmd: () => {\n        this.color = color;\n        this.#redraw();\n      },\n      undo: () => {\n        this.color = savedColor;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_COLOR,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /**\n   * Update the opacity and make this action undoable.\n   * @param {number} opacity\n   */\n  #updateOpacity(opacity) {\n    opacity /= 100;\n    const savedOpacity = this.opacity;\n    this.addCommands({\n      cmd: () => {\n        this.opacity = opacity;\n        this.#redraw();\n      },\n      undo: () => {\n        this.opacity = savedOpacity;\n        this.#redraw();\n      },\n      mustExec: true,\n      type: AnnotationEditorParamsType.INK_OPACITY,\n      overwriteIfSameType: true,\n      keepUndo: true,\n    });\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (!this.canvas) {\n      this.#createCanvas();\n      this.#createObserver();\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilding it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n      this.#setCanvasDims();\n    }\n    this.#fitToContent();\n  }\n\n  /** @inheritdoc */\n  remove() {\n    if (this.canvas === null) {\n      return;\n    }\n\n    if (!this.isEmpty()) {\n      this.commit();\n    }\n\n    // Destroy the canvas.\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.remove();\n    this.canvas = null;\n\n    this.#observer.disconnect();\n    this.#observer = null;\n\n    super.remove();\n  }\n\n  setParent(parent) {\n    if (!this.parent && parent) {\n      // We've a parent hence the rescale will be handled thanks to the\n      // ResizeObserver.\n      this._uiManager.removeShouldRescale(this);\n    } else if (this.parent && parent === null) {\n      // The editor is removed from the DOM, hence we handle the rescale thanks\n      // to the onScaleChanging callback.\n      // This way, it'll be saved/printed correctly.\n      this._uiManager.addShouldRescale(this);\n    }\n    super.setParent(parent);\n  }\n\n  onScaleChanging() {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    const width = this.width * parentWidth;\n    const height = this.height * parentHeight;\n    this.setDimensions(width, height);\n  }\n\n  /** @inheritdoc */\n  enableEditMode() {\n    if (this.#disableEditing || this.canvas === null) {\n      return;\n    }\n\n    super.enableEditMode();\n    this._isDraggable = false;\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n  }\n\n  /** @inheritdoc */\n  disableEditMode() {\n    if (!this.isInEditMode() || this.canvas === null) {\n      return;\n    }\n\n    super.disableEditMode();\n    this._isDraggable = !this.isEmpty();\n    this.div.classList.remove(\"editing\");\n\n    this.canvas.removeEventListener(\n      \"pointerdown\",\n      this.#boundCanvasPointerdown\n    );\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    this._isDraggable = !this.isEmpty();\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return (\n      this.paths.length === 0 ||\n      (this.paths.length === 1 && this.paths[0].length === 0)\n    );\n  }\n\n  #getInitialBBox() {\n    const {\n      parentRotation,\n      parentDimensions: [width, height],\n    } = this;\n    switch (parentRotation) {\n      case 90:\n        return [0, height, height, width];\n      case 180:\n        return [width, height, width, height];\n      case 270:\n        return [width, 0, height, width];\n      default:\n        return [0, 0, width, height];\n    }\n  }\n\n  /**\n   * Set line styles.\n   */\n  #setStroke() {\n    const { ctx, color, opacity, thickness, parentScale, scaleFactor } = this;\n    ctx.lineWidth = (thickness * parentScale) / scaleFactor;\n    ctx.lineCap = \"round\";\n    ctx.lineJoin = \"round\";\n    ctx.miterLimit = 10;\n    ctx.strokeStyle = `${color}${opacityToHex(opacity)}`;\n  }\n\n  /**\n   * Start to draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #startDrawing(x, y) {\n    this.canvas.addEventListener(\"contextmenu\", noContextMenu);\n    this.canvas.addEventListener(\"pointerleave\", this.#boundCanvasPointerleave);\n    this.canvas.addEventListener(\"pointermove\", this.#boundCanvasPointermove);\n    this.canvas.addEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.removeEventListener(\n      \"pointerdown\",\n      this.#boundCanvasPointerdown\n    );\n\n    this.isEditing = true;\n    if (!this.#isCanvasInitialized) {\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.thickness ||= InkEditor._defaultThickness;\n      this.color ||=\n        InkEditor._defaultColor || AnnotationEditor._defaultLineColor;\n      this.opacity ??= InkEditor._defaultOpacity;\n    }\n    this.currentPath.push([x, y]);\n    this.#hasSomethingToDraw = false;\n    this.#setStroke();\n\n    this.#requestFrameCallback = () => {\n      this.#drawPoints();\n      if (this.#requestFrameCallback) {\n        window.requestAnimationFrame(this.#requestFrameCallback);\n      }\n    };\n    window.requestAnimationFrame(this.#requestFrameCallback);\n  }\n\n  /**\n   * Draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #draw(x, y) {\n    const [lastX, lastY] = this.currentPath.at(-1);\n    if (this.currentPath.length > 1 && x === lastX && y === lastY) {\n      return;\n    }\n    const currentPath = this.currentPath;\n    let path2D = this.#currentPath2D;\n    currentPath.push([x, y]);\n    this.#hasSomethingToDraw = true;\n\n    if (currentPath.length <= 2) {\n      path2D.moveTo(...currentPath[0]);\n      path2D.lineTo(x, y);\n      return;\n    }\n\n    if (currentPath.length === 3) {\n      this.#currentPath2D = path2D = new Path2D();\n      path2D.moveTo(...currentPath[0]);\n    }\n\n    this.#makeBezierCurve(\n      path2D,\n      ...currentPath.at(-3),\n      ...currentPath.at(-2),\n      x,\n      y\n    );\n  }\n\n  #endPath() {\n    if (this.currentPath.length === 0) {\n      return;\n    }\n    const lastPoint = this.currentPath.at(-1);\n    this.#currentPath2D.lineTo(...lastPoint);\n  }\n\n  /**\n   * Stop to draw on the canvas.\n   * @param {number} x\n   * @param {number} y\n   */\n  #stopDrawing(x, y) {\n    this.#requestFrameCallback = null;\n\n    x = Math.min(Math.max(x, 0), this.canvas.width);\n    y = Math.min(Math.max(y, 0), this.canvas.height);\n\n    this.#draw(x, y);\n    this.#endPath();\n\n    // Interpolate the path entered by the user with some\n    // Bezier's curves in order to have a smoother path and\n    // to reduce the data size used to draw it in the PDF.\n    let bezier;\n    if (this.currentPath.length !== 1) {\n      bezier = this.#generateBezierPoints();\n    } else {\n      // We have only one point finally.\n      const xy = [x, y];\n      bezier = [[xy, xy.slice(), xy.slice(), xy]];\n    }\n    const path2D = this.#currentPath2D;\n    const currentPath = this.currentPath;\n    this.currentPath = [];\n    this.#currentPath2D = new Path2D();\n\n    const cmd = () => {\n      this.allRawPaths.push(currentPath);\n      this.paths.push(bezier);\n      this.bezierPath2D.push(path2D);\n      this.rebuild();\n    };\n\n    const undo = () => {\n      this.allRawPaths.pop();\n      this.paths.pop();\n      this.bezierPath2D.pop();\n      if (this.paths.length === 0) {\n        this.remove();\n      } else {\n        if (!this.canvas) {\n          this.#createCanvas();\n          this.#createObserver();\n        }\n        this.#fitToContent();\n      }\n    };\n\n    this.addCommands({ cmd, undo, mustExec: true });\n  }\n\n  #drawPoints() {\n    if (!this.#hasSomethingToDraw) {\n      return;\n    }\n    this.#hasSomethingToDraw = false;\n\n    const thickness = Math.ceil(this.thickness * this.parentScale);\n    const lastPoints = this.currentPath.slice(-3);\n    const x = lastPoints.map(xy => xy[0]);\n    const y = lastPoints.map(xy => xy[1]);\n    const xMin = Math.min(...x) - thickness;\n    const xMax = Math.max(...x) + thickness;\n    const yMin = Math.min(...y) - thickness;\n    const yMax = Math.max(...y) + thickness;\n\n    const { ctx } = this;\n    ctx.save();\n\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n      // In Chrome, the clip() method doesn't work as expected.\n      ctx.clearRect(xMin, yMin, xMax - xMin, yMax - yMin);\n      ctx.beginPath();\n      ctx.rect(xMin, yMin, xMax - xMin, yMax - yMin);\n      ctx.clip();\n    } else {\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n    ctx.stroke(this.#currentPath2D);\n\n    ctx.restore();\n  }\n\n  #makeBezierCurve(path2D, x0, y0, x1, y1, x2, y2) {\n    const prevX = (x0 + x1) / 2;\n    const prevY = (y0 + y1) / 2;\n    const x3 = (x1 + x2) / 2;\n    const y3 = (y1 + y2) / 2;\n\n    path2D.bezierCurveTo(\n      prevX + (2 * (x1 - prevX)) / 3,\n      prevY + (2 * (y1 - prevY)) / 3,\n      x3 + (2 * (x1 - x3)) / 3,\n      y3 + (2 * (y1 - y3)) / 3,\n      x3,\n      y3\n    );\n  }\n\n  #generateBezierPoints() {\n    const path = this.currentPath;\n    if (path.length <= 2) {\n      return [[path[0], path[0], path.at(-1), path.at(-1)]];\n    }\n\n    const bezierPoints = [];\n    let i;\n    let [x0, y0] = path[0];\n    for (i = 1; i < path.length - 2; i++) {\n      const [x1, y1] = path[i];\n      const [x2, y2] = path[i + 1];\n      const x3 = (x1 + x2) / 2;\n      const y3 = (y1 + y2) / 2;\n\n      // The quadratic is: [[x0, y0], [x1, y1], [x3, y3]].\n      // Convert the quadratic to a cubic\n      // (see https://fontforge.org/docs/techref/bezier.html#converting-truetype-to-postscript)\n      const control1 = [x0 + (2 * (x1 - x0)) / 3, y0 + (2 * (y1 - y0)) / 3];\n      const control2 = [x3 + (2 * (x1 - x3)) / 3, y3 + (2 * (y1 - y3)) / 3];\n\n      bezierPoints.push([[x0, y0], control1, control2, [x3, y3]]);\n\n      [x0, y0] = [x3, y3];\n    }\n\n    const [x1, y1] = path[i];\n    const [x2, y2] = path[i + 1];\n\n    // The quadratic is: [[x0, y0], [x1, y1], [x2, y2]].\n    const control1 = [x0 + (2 * (x1 - x0)) / 3, y0 + (2 * (y1 - y0)) / 3];\n    const control2 = [x2 + (2 * (x1 - x2)) / 3, y2 + (2 * (y1 - y2)) / 3];\n\n    bezierPoints.push([[x0, y0], control1, control2, [x2, y2]]);\n    return bezierPoints;\n  }\n\n  /**\n   * Redraw all the paths.\n   */\n  #redraw() {\n    if (this.isEmpty()) {\n      this.#updateTransform();\n      return;\n    }\n    this.#setStroke();\n\n    const { canvas, ctx } = this;\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    this.#updateTransform();\n\n    for (const path of this.bezierPath2D) {\n      ctx.stroke(path);\n    }\n  }\n\n  /**\n   * Commit the curves we have in this editor.\n   */\n  commit() {\n    if (this.#disableEditing) {\n      return;\n    }\n\n    super.commit();\n\n    this.isEditing = false;\n    this.disableEditMode();\n\n    // This editor must be on top of the main ink editor.\n    this.setInForeground();\n\n    this.#disableEditing = true;\n    this.div.classList.add(\"disabled\");\n\n    this.#fitToContent(/* firstTime = */ true);\n    this.makeResizable();\n\n    this.parent.addInkEditorIfNeeded(/* isCommitting = */ true);\n\n    // When commiting, the position of this editor is changed, hence we must\n    // move it to the right position in the DOM.\n    this.moveInDOM();\n    this.div.focus({\n      preventScroll: true /* See issue #15744 */,\n    });\n  }\n\n  /** @inheritdoc */\n  focusin(event) {\n    if (!this._focusEventsAllowed) {\n      return;\n    }\n    super.focusin(event);\n    this.enableEditMode();\n  }\n\n  /**\n   * onpointerdown callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerdown(event) {\n    if (event.button !== 0 || !this.isInEditMode() || this.#disableEditing) {\n      return;\n    }\n\n    // We want to draw on top of any other editors.\n    // Since it's the last child, there's no need to give it a higher z-index.\n    this.setInForeground();\n\n    event.preventDefault();\n\n    if (event.type !== \"mouse\") {\n      this.div.focus();\n    }\n\n    this.#startDrawing(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * onpointermove callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointermove(event) {\n    event.preventDefault();\n    this.#draw(event.offsetX, event.offsetY);\n  }\n\n  /**\n   * onpointerup callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerup(event) {\n    event.preventDefault();\n    this.#endDrawing(event);\n  }\n\n  /**\n   * onpointerleave callback for the canvas we're drawing on.\n   * @param {PointerEvent} event\n   */\n  canvasPointerleave(event) {\n    this.#endDrawing(event);\n  }\n\n  /**\n   * End the drawing.\n   * @param {PointerEvent} event\n   */\n  #endDrawing(event) {\n    this.canvas.removeEventListener(\n      \"pointerleave\",\n      this.#boundCanvasPointerleave\n    );\n    this.canvas.removeEventListener(\n      \"pointermove\",\n      this.#boundCanvasPointermove\n    );\n    this.canvas.removeEventListener(\"pointerup\", this.#boundCanvasPointerup);\n    this.canvas.addEventListener(\"pointerdown\", this.#boundCanvasPointerdown);\n\n    // Slight delay to avoid the context menu to appear (it can happen on a long\n    // tap with a pen).\n    setTimeout(() => {\n      this.canvas.removeEventListener(\"contextmenu\", noContextMenu);\n    }, 10);\n\n    this.#stopDrawing(event.offsetX, event.offsetY);\n\n    this.addToAnnotationStorage();\n\n    // Since the ink editor covers all of the page and we want to be able\n    // to select another editor, we just put this one in the background.\n    this.setInBackground();\n  }\n\n  /**\n   * Create the canvas element.\n   */\n  #createCanvas() {\n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.canvas.height = 0;\n    this.canvas.className = \"inkEditorCanvas\";\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_ink_canvas_aria_label\")\n      .then(msg => this.canvas?.setAttribute(\"aria-label\", msg));\n    this.div.append(this.canvas);\n    this.ctx = this.canvas.getContext(\"2d\");\n  }\n\n  /**\n   * Create the resize observer.\n   */\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n\n  /** @inheritdoc */\n  get isResizable() {\n    return !this.isEmpty() && this.#disableEditing;\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n\n    AnnotationEditor._l10nPromise\n      .get(\"editor_ink2_aria_label\")\n      .then(msg => this.div?.setAttribute(\"aria-label\", msg));\n\n    const [x, y, w, h] = this.#getInitialBBox();\n    this.setAt(x, y, 0, 0);\n    this.setDims(w, h);\n\n    this.#createCanvas();\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAspectRatio(this.width * parentWidth, this.height * parentHeight);\n      this.setAt(\n        baseX * parentWidth,\n        baseY * parentHeight,\n        this.width * parentWidth,\n        this.height * parentHeight\n      );\n      this.#isCanvasInitialized = true;\n      this.#setCanvasDims();\n      this.setDims(this.width * parentWidth, this.height * parentHeight);\n      this.#redraw();\n      this.div.classList.add(\"disabled\");\n    } else {\n      this.div.classList.add(\"editing\");\n      this.enableEditMode();\n    }\n\n    this.#createObserver();\n\n    return this.div;\n  }\n\n  #setCanvasDims() {\n    if (!this.#isCanvasInitialized) {\n      return;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.canvas.width = Math.ceil(this.width * parentWidth);\n    this.canvas.height = Math.ceil(this.height * parentHeight);\n    this.#updateTransform();\n  }\n\n  /**\n   * When the dimensions of the div change the inner canvas must\n   * renew its dimensions, hence it must redraw its own contents.\n   * @param {number} width - the new width of the div\n   * @param {number} height - the new height of the div\n   * @returns\n   */\n  setDimensions(width, height) {\n    const roundedWidth = Math.round(width);\n    const roundedHeight = Math.round(height);\n    if (\n      this.#realWidth === roundedWidth &&\n      this.#realHeight === roundedHeight\n    ) {\n      return;\n    }\n\n    this.#realWidth = roundedWidth;\n    this.#realHeight = roundedHeight;\n\n    this.canvas.style.visibility = \"hidden\";\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.fixAndSetPosition();\n\n    if (this.#disableEditing) {\n      this.#setScaleFactor(width, height);\n    }\n\n    this.#setCanvasDims();\n    this.#redraw();\n\n    this.canvas.style.visibility = \"visible\";\n\n    // For any reason the dimensions couldn't be in percent but in pixels, hence\n    // we must fix them.\n    this.fixDims();\n  }\n\n  #setScaleFactor(width, height) {\n    const padding = this.#getPadding();\n    const scaleFactorW = (width - padding) / this.#baseWidth;\n    const scaleFactorH = (height - padding) / this.#baseHeight;\n    this.scaleFactor = Math.min(scaleFactorW, scaleFactorH);\n  }\n\n  /**\n   * Update the canvas transform.\n   */\n  #updateTransform() {\n    const padding = this.#getPadding() / 2;\n    this.ctx.setTransform(\n      this.scaleFactor,\n      0,\n      0,\n      this.scaleFactor,\n      this.translationX * this.scaleFactor + padding,\n      this.translationY * this.scaleFactor + padding\n    );\n  }\n\n  /**\n   * Convert into a Path2D.\n   * @param {Array<Array<number>>} bezier\n   * @returns {Path2D}\n   */\n  static #buildPath2D(bezier) {\n    const path2D = new Path2D();\n    for (let i = 0, ii = bezier.length; i < ii; i++) {\n      const [first, control1, control2, second] = bezier[i];\n      if (i === 0) {\n        path2D.moveTo(...first);\n      }\n      path2D.bezierCurveTo(\n        control1[0],\n        control1[1],\n        control2[0],\n        control2[1],\n        second[0],\n        second[1]\n      );\n    }\n    return path2D;\n  }\n\n  static #toPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] += blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] + blX;\n          points[i + 1] = x + blY;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] += blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trX - points[i + 1];\n          points[i + 1] = trY - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n\n  static #fromPDFCoordinates(points, rect, rotation) {\n    const [blX, blY, trX, trY] = rect;\n\n    switch (rotation) {\n      case 0:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] -= blX;\n          points[i + 1] = trY - points[i + 1];\n        }\n        break;\n      case 90:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = points[i + 1] - blY;\n          points[i + 1] = x - blX;\n        }\n        break;\n      case 180:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          points[i] = trX - points[i];\n          points[i + 1] -= blY;\n        }\n        break;\n      case 270:\n        for (let i = 0, ii = points.length; i < ii; i += 2) {\n          const x = points[i];\n          points[i] = trY - points[i + 1];\n          points[i + 1] = trX - x;\n        }\n        break;\n      default:\n        throw new Error(\"Invalid rotation\");\n    }\n    return points;\n  }\n\n  /**\n   * Transform and serialize the paths.\n   * @param {number} s - scale factor\n   * @param {number} tx - abscissa of the translation\n   * @param {number} ty - ordinate of the translation\n   * @param {Array<number>} rect - the bounding box of the annotation\n   */\n  #serializePaths(s, tx, ty, rect) {\n    const paths = [];\n    const padding = this.thickness / 2;\n    const shiftX = s * tx + padding;\n    const shiftY = s * ty + padding;\n    for (const bezier of this.paths) {\n      const buffer = [];\n      const points = [];\n      for (let j = 0, jj = bezier.length; j < jj; j++) {\n        const [first, control1, control2, second] = bezier[j];\n        const p10 = s * first[0] + shiftX;\n        const p11 = s * first[1] + shiftY;\n        const p20 = s * control1[0] + shiftX;\n        const p21 = s * control1[1] + shiftY;\n        const p30 = s * control2[0] + shiftX;\n        const p31 = s * control2[1] + shiftY;\n        const p40 = s * second[0] + shiftX;\n        const p41 = s * second[1] + shiftY;\n\n        if (j === 0) {\n          buffer.push(p10, p11);\n          points.push(p10, p11);\n        }\n        buffer.push(p20, p21, p30, p31, p40, p41);\n        points.push(p20, p21);\n        if (j === jj - 1) {\n          points.push(p40, p41);\n        }\n      }\n      paths.push({\n        bezier: InkEditor.#toPDFCoordinates(buffer, rect, this.rotation),\n        points: InkEditor.#toPDFCoordinates(points, rect, this.rotation),\n      });\n    }\n\n    return paths;\n  }\n\n  /**\n   * Get the bounding box containing all the paths.\n   * @returns {Array<number>}\n   */\n  #getBbox() {\n    let xMin = Infinity;\n    let xMax = -Infinity;\n    let yMin = Infinity;\n    let yMax = -Infinity;\n\n    for (const path of this.paths) {\n      for (const [first, control1, control2, second] of path) {\n        const bbox = Util.bezierBoundingBox(\n          ...first,\n          ...control1,\n          ...control2,\n          ...second\n        );\n        xMin = Math.min(xMin, bbox[0]);\n        yMin = Math.min(yMin, bbox[1]);\n        xMax = Math.max(xMax, bbox[2]);\n        yMax = Math.max(yMax, bbox[3]);\n      }\n    }\n\n    return [xMin, yMin, xMax, yMax];\n  }\n\n  /**\n   * The bounding box is computed with null thickness, so we must take\n   * it into account for the display.\n   * It corresponds to the total padding, hence it should be divided by 2\n   * in order to have left/right paddings.\n   * @returns {number}\n   */\n  #getPadding() {\n    return this.#disableEditing\n      ? Math.ceil(this.thickness * this.parentScale)\n      : 0;\n  }\n\n  /**\n   * Set the div position and dimensions in order to fit to\n   * the bounding box of the contents.\n   * @returns {undefined}\n   */\n  #fitToContent(firstTime = false) {\n    if (this.isEmpty()) {\n      return;\n    }\n\n    if (!this.#disableEditing) {\n      this.#redraw();\n      return;\n    }\n\n    const bbox = this.#getBbox();\n    const padding = this.#getPadding();\n    this.#baseWidth = Math.max(AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    this.#baseHeight = Math.max(AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n\n    const width = Math.ceil(padding + this.#baseWidth * this.scaleFactor);\n    const height = Math.ceil(padding + this.#baseHeight * this.scaleFactor);\n\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n\n    this.setAspectRatio(width, height);\n\n    const prevTranslationX = this.translationX;\n    const prevTranslationY = this.translationY;\n\n    this.translationX = -bbox[0];\n    this.translationY = -bbox[1];\n    this.#setCanvasDims();\n    this.#redraw();\n\n    this.#realWidth = width;\n    this.#realHeight = height;\n\n    this.setDims(width, height);\n    const unscaledPadding = firstTime ? padding / this.scaleFactor / 2 : 0;\n    this.translate(\n      prevTranslationX - this.translationX - unscaledPadding,\n      prevTranslationY - this.translationY - unscaledPadding\n    );\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof InkAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n\n    editor.thickness = data.thickness;\n    editor.color = Util.makeHexColor(...data.color);\n    editor.opacity = data.opacity;\n\n    const [pageWidth, pageHeight] = editor.pageDimensions;\n    const width = editor.width * pageWidth;\n    const height = editor.height * pageHeight;\n    const scaleFactor = editor.parentScale;\n    const padding = data.thickness / 2;\n\n    editor.#disableEditing = true;\n    editor.#realWidth = Math.round(width);\n    editor.#realHeight = Math.round(height);\n\n    const { paths, rect, rotation } = data;\n\n    for (let { bezier } of paths) {\n      bezier = InkEditor.#fromPDFCoordinates(bezier, rect, rotation);\n      const path = [];\n      editor.paths.push(path);\n      let p0 = scaleFactor * (bezier[0] - padding);\n      let p1 = scaleFactor * (bezier[1] - padding);\n      for (let i = 2, ii = bezier.length; i < ii; i += 6) {\n        const p10 = scaleFactor * (bezier[i] - padding);\n        const p11 = scaleFactor * (bezier[i + 1] - padding);\n        const p20 = scaleFactor * (bezier[i + 2] - padding);\n        const p21 = scaleFactor * (bezier[i + 3] - padding);\n        const p30 = scaleFactor * (bezier[i + 4] - padding);\n        const p31 = scaleFactor * (bezier[i + 5] - padding);\n        path.push([\n          [p0, p1],\n          [p10, p11],\n          [p20, p21],\n          [p30, p31],\n        ]);\n        p0 = p30;\n        p1 = p31;\n      }\n      const path2D = this.#buildPath2D(path);\n      editor.bezierPath2D.push(path2D);\n    }\n\n    const bbox = editor.#getBbox();\n    editor.#baseWidth = Math.max(AnnotationEditor.MIN_SIZE, bbox[2] - bbox[0]);\n    editor.#baseHeight = Math.max(AnnotationEditor.MIN_SIZE, bbox[3] - bbox[1]);\n    editor.#setScaleFactor(width, height);\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize() {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const rect = this.getRect(0, 0);\n    const color = AnnotationEditor._colorManager.convert(this.ctx.strokeStyle);\n\n    return {\n      annotationType: AnnotationEditorType.INK,\n      color,\n      thickness: this.thickness,\n      opacity: this.opacity,\n      paths: this.#serializePaths(\n        this.scaleFactor / this.parentScale,\n        this.translationX,\n        this.translationY,\n        rect\n      ),\n      pageIndex: this.pageIndex,\n      rect,\n      rotation: this.rotation,\n      structTreeParentId: this._structTreeParentId,\n    };\n  }\n}\n\nexport { InkEditor };\n","/* Copyright 2022 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AnnotationEditorType, shadow } from \"../../shared/util.js\";\nimport { AnnotationEditor } from \"./editor.js\";\nimport { PixelsPerInch } from \"../display_utils.js\";\nimport { StampAnnotationElement } from \"../annotation_layer.js\";\n\n/**\n * Basic text editor in order to create a FreeTex annotation.\n */\nclass StampEditor extends AnnotationEditor {\n  #bitmap = null;\n\n  #bitmapId = null;\n\n  #bitmapPromise = null;\n\n  #bitmapUrl = null;\n\n  #bitmapFile = null;\n\n  #canvas = null;\n\n  #observer = null;\n\n  #resizeTimeoutId = null;\n\n  #isSvg = false;\n\n  #hasBeenAddedInUndoStack = false;\n\n  static _type = \"stamp\";\n\n  constructor(params) {\n    super({ ...params, name: \"stampEditor\" });\n    this.#bitmapUrl = params.bitmapUrl;\n    this.#bitmapFile = params.bitmapFile;\n  }\n\n  /** @inheritdoc */\n  static initialize(l10n) {\n    AnnotationEditor.initialize(l10n);\n  }\n\n  static get supportedTypes() {\n    // See https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Image_types\n    // to know which types are supported by the browser.\n    const types = [\n      \"apng\",\n      \"avif\",\n      \"bmp\",\n      \"gif\",\n      \"jpeg\",\n      \"png\",\n      \"svg+xml\",\n      \"webp\",\n      \"x-icon\",\n    ];\n    return shadow(\n      this,\n      \"supportedTypes\",\n      types.map(type => `image/${type}`)\n    );\n  }\n\n  static get supportedTypesStr() {\n    return shadow(this, \"supportedTypesStr\", this.supportedTypes.join(\",\"));\n  }\n\n  /** @inheritdoc */\n  static isHandlingMimeForPasting(mime) {\n    return this.supportedTypes.includes(mime);\n  }\n\n  /** @inheritdoc */\n  static paste(item, parent) {\n    parent.pasteEditor(AnnotationEditorType.STAMP, {\n      bitmapFile: item.getAsFile(),\n    });\n  }\n\n  #getBitmapFetched(data, fromId = false) {\n    if (!data) {\n      this.remove();\n      return;\n    }\n    this.#bitmap = data.bitmap;\n    if (!fromId) {\n      this.#bitmapId = data.id;\n      this.#isSvg = data.isSvg;\n    }\n    this.#createCanvas();\n  }\n\n  #getBitmapDone() {\n    this.#bitmapPromise = null;\n    this._uiManager.enableWaiting(false);\n    if (this.#canvas) {\n      this.div.focus();\n    }\n  }\n\n  #getBitmap() {\n    if (this.#bitmapId) {\n      this._uiManager.enableWaiting(true);\n      this._uiManager.imageManager\n        .getFromId(this.#bitmapId)\n        .then(data => this.#getBitmapFetched(data, /* fromId = */ true))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    if (this.#bitmapUrl) {\n      const url = this.#bitmapUrl;\n      this.#bitmapUrl = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager\n        .getFromUrl(url)\n        .then(data => this.#getBitmapFetched(data))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    if (this.#bitmapFile) {\n      const file = this.#bitmapFile;\n      this.#bitmapFile = null;\n      this._uiManager.enableWaiting(true);\n      this.#bitmapPromise = this._uiManager.imageManager\n        .getFromFile(file)\n        .then(data => this.#getBitmapFetched(data))\n        .finally(() => this.#getBitmapDone());\n      return;\n    }\n\n    const input = document.createElement(\"input\");\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n      input.hidden = true;\n      input.id = \"stampEditorFileInput\";\n      document.body.append(input);\n    }\n    input.type = \"file\";\n    input.accept = StampEditor.supportedTypesStr;\n    this.#bitmapPromise = new Promise(resolve => {\n      input.addEventListener(\"change\", async () => {\n        if (!input.files || input.files.length === 0) {\n          this.remove();\n        } else {\n          this._uiManager.enableWaiting(true);\n          const data = await this._uiManager.imageManager.getFromFile(\n            input.files[0]\n          );\n          this.#getBitmapFetched(data);\n        }\n        if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"TESTING\")) {\n          input.remove();\n        }\n        resolve();\n      });\n      input.addEventListener(\"cancel\", () => {\n        this.remove();\n        resolve();\n      });\n    }).finally(() => this.#getBitmapDone());\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"TESTING\")) {\n      input.click();\n    }\n  }\n\n  /** @inheritdoc */\n  remove() {\n    if (this.#bitmapId) {\n      this.#bitmap = null;\n      this._uiManager.imageManager.deleteId(this.#bitmapId);\n      this.#canvas?.remove();\n      this.#canvas = null;\n      this.#observer?.disconnect();\n      this.#observer = null;\n    }\n    super.remove();\n  }\n\n  /** @inheritdoc */\n  rebuild() {\n    if (!this.parent) {\n      // It's possible to have to rebuild an editor which is not on a visible\n      // page.\n      if (this.#bitmapId) {\n        this.#getBitmap();\n      }\n      return;\n    }\n    super.rebuild();\n    if (this.div === null) {\n      return;\n    }\n\n    if (this.#bitmapId) {\n      this.#getBitmap();\n    }\n\n    if (!this.isAttachedToDOM) {\n      // At some point this editor was removed and we're rebuilting it,\n      // hence we must add it to its parent.\n      this.parent.add(this);\n    }\n  }\n\n  /** @inheritdoc */\n  onceAdded() {\n    this._isDraggable = true;\n    this.div.focus();\n  }\n\n  /** @inheritdoc */\n  isEmpty() {\n    return !(\n      this.#bitmapPromise ||\n      this.#bitmap ||\n      this.#bitmapUrl ||\n      this.#bitmapFile\n    );\n  }\n\n  /** @inheritdoc */\n  get isResizable() {\n    return true;\n  }\n\n  /** @inheritdoc */\n  render() {\n    if (this.div) {\n      return this.div;\n    }\n\n    let baseX, baseY;\n    if (this.width) {\n      baseX = this.x;\n      baseY = this.y;\n    }\n\n    super.render();\n    this.div.hidden = true;\n\n    if (this.#bitmap) {\n      this.#createCanvas();\n    } else {\n      this.#getBitmap();\n    }\n\n    if (this.width) {\n      // This editor was created in using copy (ctrl+c).\n      const [parentWidth, parentHeight] = this.parentDimensions;\n      this.setAt(\n        baseX * parentWidth,\n        baseY * parentHeight,\n        this.width * parentWidth,\n        this.height * parentHeight\n      );\n    }\n\n    return this.div;\n  }\n\n  #createCanvas() {\n    const { div } = this;\n    let { width, height } = this.#bitmap;\n    const [pageWidth, pageHeight] = this.pageDimensions;\n    const MAX_RATIO = 0.75;\n    if (this.width) {\n      width = this.width * pageWidth;\n      height = this.height * pageHeight;\n    } else if (\n      width > MAX_RATIO * pageWidth ||\n      height > MAX_RATIO * pageHeight\n    ) {\n      // If the the image is too big compared to the page dimensions\n      // (more than MAX_RATIO) then we scale it down.\n      const factor = Math.min(\n        (MAX_RATIO * pageWidth) / width,\n        (MAX_RATIO * pageHeight) / height\n      );\n      width *= factor;\n      height *= factor;\n    }\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.setDims(\n      (width * parentWidth) / pageWidth,\n      (height * parentHeight) / pageHeight\n    );\n\n    this._uiManager.enableWaiting(false);\n    const canvas = (this.#canvas = document.createElement(\"canvas\"));\n    div.append(canvas);\n    div.hidden = false;\n    this.#drawBitmap(width, height);\n    this.#createObserver();\n    if (!this.#hasBeenAddedInUndoStack) {\n      this.parent.addUndoableEditor(this);\n      this.#hasBeenAddedInUndoStack = true;\n    }\n\n    // There are multiple ways to add an image to the page, so here we just\n    // count the number of times an image is added to the page whatever the way\n    // is.\n    this._uiManager._eventBus.dispatch(\"reporttelemetry\", {\n      source: this,\n      details: {\n        type: \"editing\",\n        subtype: this.editorType,\n        data: {\n          action: \"inserted_image\",\n        },\n      },\n    });\n    this.addAltTextButton();\n  }\n\n  /**\n   * When the dimensions of the div change the inner canvas must\n   * renew its dimensions, hence it must redraw its own contents.\n   * @param {number} width - the new width of the div\n   * @param {number} height - the new height of the div\n   * @returns\n   */\n  #setDimensions(width, height) {\n    const [parentWidth, parentHeight] = this.parentDimensions;\n    this.width = width / parentWidth;\n    this.height = height / parentHeight;\n    this.setDims(width, height);\n    if (this._initialOptions?.isCentered) {\n      this.center();\n    } else {\n      this.fixAndSetPosition();\n    }\n    this._initialOptions = null;\n    if (this.#resizeTimeoutId !== null) {\n      clearTimeout(this.#resizeTimeoutId);\n    }\n    // When the user is resizing the editor we just use CSS to scale the image\n    // to avoid redrawing it too often.\n    // And once the user stops resizing the editor we redraw the image in\n    // rescaling it correctly (see this.#scaleBitmap).\n    const TIME_TO_WAIT = 200;\n    this.#resizeTimeoutId = setTimeout(() => {\n      this.#resizeTimeoutId = null;\n      this.#drawBitmap(width, height);\n    }, TIME_TO_WAIT);\n  }\n\n  #scaleBitmap(width, height) {\n    const { width: bitmapWidth, height: bitmapHeight } = this.#bitmap;\n\n    let newWidth = bitmapWidth;\n    let newHeight = bitmapHeight;\n    let bitmap = this.#bitmap;\n    while (newWidth > 2 * width || newHeight > 2 * height) {\n      const prevWidth = newWidth;\n      const prevHeight = newHeight;\n\n      if (newWidth > 2 * width) {\n        // See bug 1820511 (Windows specific bug).\n        // TODO: once the above bug is fixed we could revert to:\n        // newWidth = Math.ceil(newWidth / 2);\n        newWidth =\n          newWidth >= 16384\n            ? Math.floor(newWidth / 2) - 1\n            : Math.ceil(newWidth / 2);\n      }\n      if (newHeight > 2 * height) {\n        newHeight =\n          newHeight >= 16384\n            ? Math.floor(newHeight / 2) - 1\n            : Math.ceil(newHeight / 2);\n      }\n\n      const offscreen = new OffscreenCanvas(newWidth, newHeight);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(\n        bitmap,\n        0,\n        0,\n        prevWidth,\n        prevHeight,\n        0,\n        0,\n        newWidth,\n        newHeight\n      );\n      bitmap = offscreen.transferToImageBitmap();\n    }\n\n    return bitmap;\n  }\n\n  #drawBitmap(width, height) {\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n    const canvas = this.#canvas;\n    if (!canvas || (canvas.width === width && canvas.height === height)) {\n      return;\n    }\n    canvas.width = width;\n    canvas.height = height;\n    const bitmap = this.#isSvg\n      ? this.#bitmap\n      : this.#scaleBitmap(width, height);\n    const ctx = canvas.getContext(\"2d\");\n    ctx.filter = this._uiManager.hcmFilter;\n    ctx.drawImage(\n      bitmap,\n      0,\n      0,\n      bitmap.width,\n      bitmap.height,\n      0,\n      0,\n      width,\n      height\n    );\n  }\n\n  #serializeBitmap(toUrl) {\n    if (toUrl) {\n      if (this.#isSvg) {\n        const url = this._uiManager.imageManager.getSvgUrl(this.#bitmapId);\n        if (url) {\n          return url;\n        }\n      }\n      // We convert to a data url because it's sync and the url can live in the\n      // clipboard.\n      const canvas = document.createElement(\"canvas\");\n      ({ width: canvas.width, height: canvas.height } = this.#bitmap);\n      const ctx = canvas.getContext(\"2d\");\n      ctx.drawImage(this.#bitmap, 0, 0);\n\n      return canvas.toDataURL();\n    }\n\n    if (this.#isSvg) {\n      const [pageWidth, pageHeight] = this.pageDimensions;\n      // Multiply by PixelsPerInch.PDF_TO_CSS_UNITS in order to increase the\n      // image resolution when rasterizing it.\n      const width = Math.round(\n        this.width * pageWidth * PixelsPerInch.PDF_TO_CSS_UNITS\n      );\n      const height = Math.round(\n        this.height * pageHeight * PixelsPerInch.PDF_TO_CSS_UNITS\n      );\n      const offscreen = new OffscreenCanvas(width, height);\n      const ctx = offscreen.getContext(\"2d\");\n      ctx.drawImage(\n        this.#bitmap,\n        0,\n        0,\n        this.#bitmap.width,\n        this.#bitmap.height,\n        0,\n        0,\n        width,\n        height\n      );\n      return offscreen.transferToImageBitmap();\n    }\n\n    return structuredClone(this.#bitmap);\n  }\n\n  /**\n   * Create the resize observer.\n   */\n  #createObserver() {\n    this.#observer = new ResizeObserver(entries => {\n      const rect = entries[0].contentRect;\n      if (rect.width && rect.height) {\n        this.#setDimensions(rect.width, rect.height);\n      }\n    });\n    this.#observer.observe(this.div);\n  }\n\n  /** @inheritdoc */\n  static deserialize(data, parent, uiManager) {\n    if (data instanceof StampAnnotationElement) {\n      return null;\n    }\n    const editor = super.deserialize(data, parent, uiManager);\n    const { rect, bitmapUrl, bitmapId, isSvg, accessibilityData } = data;\n    if (bitmapId && uiManager.imageManager.isValidId(bitmapId)) {\n      editor.#bitmapId = bitmapId;\n    } else {\n      editor.#bitmapUrl = bitmapUrl;\n    }\n    editor.#isSvg = isSvg;\n\n    const [parentWidth, parentHeight] = editor.pageDimensions;\n    editor.width = (rect[2] - rect[0]) / parentWidth;\n    editor.height = (rect[3] - rect[1]) / parentHeight;\n\n    if (accessibilityData) {\n      editor.altTextData = accessibilityData;\n    }\n\n    return editor;\n  }\n\n  /** @inheritdoc */\n  serialize(isForCopying = false, context = null) {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const serialized = {\n      annotationType: AnnotationEditorType.STAMP,\n      bitmapId: this.#bitmapId,\n      pageIndex: this.pageIndex,\n      rect: this.getRect(0, 0),\n      rotation: this.rotation,\n      isSvg: this.#isSvg,\n      structTreeParentId: this._structTreeParentId,\n    };\n\n    if (isForCopying) {\n      // We don't know what's the final destination (this pdf or another one)\n      // of this annotation and the clipboard doesn't support ImageBitmaps,\n      // hence we serialize the bitmap to a data url.\n      serialized.bitmapUrl = this.#serializeBitmap(/* toUrl = */ true);\n      serialized.accessibilityData = this.altTextData;\n      return serialized;\n    }\n\n    const { decorative, altText } = this.altTextData;\n    if (!decorative && altText) {\n      serialized.accessibilityData = { type: \"Figure\", alt: altText };\n    }\n\n    if (context === null) {\n      return serialized;\n    }\n\n    context.stamps ||= new Map();\n    const area = this.#isSvg\n      ? (serialized.rect[2] - serialized.rect[0]) *\n        (serialized.rect[3] - serialized.rect[1])\n      : null;\n    if (!context.stamps.has(this.#bitmapId)) {\n      // We don't want to have multiple copies of the same bitmap in the\n      // annotationMap, hence we only add the bitmap the first time we meet it.\n      context.stamps.set(this.#bitmapId, { area, serialized });\n      serialized.bitmap = this.#serializeBitmap(/* toUrl = */ false);\n    } else if (this.#isSvg) {\n      // If we have multiple copies of the same svg but with different sizes,\n      // then we want to keep the biggest one.\n      const prevData = context.stamps.get(this.#bitmapId);\n      if (area > prevData.area) {\n        prevData.area = area;\n        prevData.serialized.bitmap.close();\n        prevData.serialized.bitmap = this.#serializeBitmap(/* toUrl = */ false);\n      }\n    }\n    return serialized;\n  }\n}\n\nexport { StampEditor };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __w_pdfjs_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __w_pdfjs_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").OnProgressParameters} OnProgressParameters */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/api\").PDFDocumentLoadingTask} PDFDocumentLoadingTask */\n/** @typedef {import(\"./display/api\").PDFDocumentProxy} PDFDocumentProxy */\n/** @typedef {import(\"./display/api\").PDFPageProxy} PDFPageProxy */\n/** @typedef {import(\"./display/api\").RenderTask} RenderTask */\n/** @typedef {import(\"./display/display_utils\").PageViewport} PageViewport */\n// eslint-disable-next-line max-len\n/** @typedef {import(\"./display/text_layer\").TextLayerRenderTask} TextLayerRenderTask */\n\nimport {\n  AbortException,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationMode,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  FeatureTest,\n  ImageKind,\n  InvalidPDFException,\n  MissingPDFException,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  PromiseCapability,\n  shadow,\n  UnexpectedResponseException,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport {\n  build,\n  getDocument,\n  PDFDataRangeTransport,\n  PDFWorker,\n  SVGGraphics,\n  version,\n} from \"./display/api.js\";\nimport {\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  isDataScheme,\n  isPdfFile,\n  loadScript,\n  noContextMenu,\n  PDFDateString,\n  PixelsPerInch,\n  RenderingCancelledException,\n  setLayerDimensions,\n} from \"./display/display_utils.js\";\nimport { renderTextLayer, updateTextLayer } from \"./display/text_layer.js\";\nimport { AnnotationEditorLayer } from \"./display/editor/annotation_editor_layer.js\";\nimport { AnnotationEditorUIManager } from \"./display/editor/tools.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { XfaLayer } from \"./display/xfa_layer.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nexport {\n  AbortException,\n  AnnotationEditorLayer,\n  AnnotationEditorParamsType,\n  AnnotationEditorType,\n  AnnotationEditorUIManager,\n  AnnotationLayer,\n  AnnotationMode,\n  build,\n  CMapCompressionType,\n  createValidAbsoluteUrl,\n  DOMSVGFactory,\n  FeatureTest,\n  getDocument,\n  getFilenameFromUrl,\n  getPdfFilenameFromUrl,\n  getXfaPageViewport,\n  GlobalWorkerOptions,\n  ImageKind,\n  InvalidPDFException,\n  isDataScheme,\n  isPdfFile,\n  loadScript,\n  MissingPDFException,\n  noContextMenu,\n  normalizeUnicode,\n  OPS,\n  PasswordResponses,\n  PDFDataRangeTransport,\n  PDFDateString,\n  PDFWorker,\n  PermissionFlag,\n  PixelsPerInch,\n  PromiseCapability,\n  RenderingCancelledException,\n  renderTextLayer,\n  setLayerDimensions,\n  shadow,\n  SVGGraphics,\n  UnexpectedResponseException,\n  updateTextLayer,\n  Util,\n  VerbosityLevel,\n  version,\n  XfaLayer,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
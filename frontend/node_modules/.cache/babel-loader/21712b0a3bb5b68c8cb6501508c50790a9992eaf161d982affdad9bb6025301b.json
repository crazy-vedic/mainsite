{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.innerText = exports.textContent = exports.getText = exports.getInnerHTML = exports.getOuterHTML = void 0;\nvar domhandler_1 = require(\"domhandler\");\nvar dom_serializer_1 = __importDefault(require(\"dom-serializer\"));\nvar domelementtype_1 = require(\"domelementtype\");\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the outer HTML of.\n * @param options Options for serialization.\n * @returns `node`'s outer HTML.\n */\nfunction getOuterHTML(node, options) {\n  return (0, dom_serializer_1.default)(node, options);\n}\nexports.getOuterHTML = getOuterHTML;\n/**\n * @category Stringify\n * @deprecated Use the `dom-serializer` module directly.\n * @param node Node to get the inner HTML of.\n * @param options Options for serialization.\n * @returns `node`'s inner HTML.\n */\nfunction getInnerHTML(node, options) {\n  return (0, domhandler_1.hasChildren)(node) ? node.children.map(function (node) {\n    return getOuterHTML(node, options);\n  }).join(\"\") : \"\";\n}\nexports.getInnerHTML = getInnerHTML;\n/**\n * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n *\n * @category Stringify\n * @deprecated Use `textContent` instead.\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n */\nfunction getText(node) {\n  if (Array.isArray(node)) return node.map(getText).join(\"\");\n  if ((0, domhandler_1.isTag)(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n  if ((0, domhandler_1.isCDATA)(node)) return getText(node.children);\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.getText = getText;\n/**\n * Get a node's text content. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the text content of.\n * @returns `node`'s text content.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n */\nfunction textContent(node) {\n  if (Array.isArray(node)) return node.map(textContent).join(\"\");\n  if ((0, domhandler_1.hasChildren)(node) && !(0, domhandler_1.isComment)(node)) {\n    return textContent(node.children);\n  }\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.textContent = textContent;\n/**\n * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n *\n * @category Stringify\n * @param node Node to get the inner text of.\n * @returns `node`'s inner text.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n */\nfunction innerText(node) {\n  if (Array.isArray(node)) return node.map(innerText).join(\"\");\n  if ((0, domhandler_1.hasChildren)(node) && (node.type === domelementtype_1.ElementType.Tag || (0, domhandler_1.isCDATA)(node))) {\n    return innerText(node.children);\n  }\n  if ((0, domhandler_1.isText)(node)) return node.data;\n  return \"\";\n}\nexports.innerText = innerText;","map":{"version":3,"names":["domhandler_1","require","dom_serializer_1","__importDefault","domelementtype_1","getOuterHTML","node","options","default","exports","getInnerHTML","hasChildren","children","map","join","getText","Array","isArray","isTag","name","isCDATA","isText","data","textContent","isComment","innerText","type","ElementType","Tag"],"sources":["https://raw.githubusercontent.com/fb55/domutils/96c989e159c98218958f375ea04210f2d1b43c0c/src/stringify.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,IAAAA,YAAA,GAAAC,OAAA;AAQA,IAAAC,gBAAA,GAAAC,eAAA,CAAAF,OAAA;AACA,IAAAG,gBAAA,GAAAH,OAAA;AAEA;;;;;;;AAOA,SAAgBI,YAAYA,CACxBC,IAAkC,EAClCC,OAA8B;EAE9B,OAAO,IAAAL,gBAAA,CAAAM,OAAU,EAACF,IAAI,EAAEC,OAAO,CAAC;AACpC;AALAE,OAAA,CAAAJ,YAAA,GAAAA,YAAA;AAOA;;;;;;;AAOA,SAAgBK,YAAYA,CACxBJ,IAAa,EACbC,OAA8B;EAE9B,OAAO,IAAAP,YAAA,CAAAW,WAAW,EAACL,IAAI,CAAC,GAClBA,IAAI,CAACM,QAAQ,CAACC,GAAG,CAAC,UAACP,IAAI;IAAK,OAAAD,YAAY,CAACC,IAAI,EAAEC,OAAO,CAAC;EAA3B,CAA2B,CAAC,CAACO,IAAI,CAAC,EAAE,CAAC,GACjE,EAAE;AACZ;AAPAL,OAAA,CAAAC,YAAA,GAAAA,YAAA;AASA;;;;;;;;AAQA,SAAgBK,OAAOA,CAACT,IAAyB;EAC7C,IAAIU,KAAK,CAACC,OAAO,CAACX,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACO,GAAG,CAACE,OAAO,CAAC,CAACD,IAAI,CAAC,EAAE,CAAC;EAC1D,IAAI,IAAAd,YAAA,CAAAkB,KAAK,EAACZ,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACa,IAAI,KAAK,IAAI,GAAG,IAAI,GAAGJ,OAAO,CAACT,IAAI,CAACM,QAAQ,CAAC;EAC1E,IAAI,IAAAZ,YAAA,CAAAoB,OAAO,EAACd,IAAI,CAAC,EAAE,OAAOS,OAAO,CAACT,IAAI,CAACM,QAAQ,CAAC;EAChD,IAAI,IAAAZ,YAAA,CAAAqB,MAAM,EAACf,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACgB,IAAI;EAClC,OAAO,EAAE;AACb;AANAb,OAAA,CAAAM,OAAA,GAAAA,OAAA;AAQA;;;;;;;;AAQA,SAAgBQ,WAAWA,CAACjB,IAAyB;EACjD,IAAIU,KAAK,CAACC,OAAO,CAACX,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACO,GAAG,CAACU,WAAW,CAAC,CAACT,IAAI,CAAC,EAAE,CAAC;EAC9D,IAAI,IAAAd,YAAA,CAAAW,WAAW,EAACL,IAAI,CAAC,IAAI,CAAC,IAAAN,YAAA,CAAAwB,SAAS,EAAClB,IAAI,CAAC,EAAE;IACvC,OAAOiB,WAAW,CAACjB,IAAI,CAACM,QAAQ,CAAC;;EAErC,IAAI,IAAAZ,YAAA,CAAAqB,MAAM,EAACf,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACgB,IAAI;EAClC,OAAO,EAAE;AACb;AAPAb,OAAA,CAAAc,WAAA,GAAAA,WAAA;AASA;;;;;;;;AAQA,SAAgBE,SAASA,CAACnB,IAAyB;EAC/C,IAAIU,KAAK,CAACC,OAAO,CAACX,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACO,GAAG,CAACY,SAAS,CAAC,CAACX,IAAI,CAAC,EAAE,CAAC;EAC5D,IAAI,IAAAd,YAAA,CAAAW,WAAW,EAACL,IAAI,CAAC,KAAKA,IAAI,CAACoB,IAAI,KAAKtB,gBAAA,CAAAuB,WAAW,CAACC,GAAG,IAAI,IAAA5B,YAAA,CAAAoB,OAAO,EAACd,IAAI,CAAC,CAAC,EAAE;IACvE,OAAOmB,SAAS,CAACnB,IAAI,CAACM,QAAQ,CAAC;;EAEnC,IAAI,IAAAZ,YAAA,CAAAqB,MAAM,EAACf,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACgB,IAAI;EAClC,OAAO,EAAE;AACb;AAPAb,OAAA,CAAAgB,SAAA,GAAAA,SAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}
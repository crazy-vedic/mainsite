{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.encodeNonAsciiHTML = exports.encodeHTML = void 0;\nvar encode_html_js_1 = __importDefault(require(\"./generated/encode-html.js\"));\nvar escape_js_1 = require(\"./escape.js\");\nvar htmlReplacer = /[\\t\\n!-,./:-@[-`\\f{-}$\\x80-\\uFFFF]/g;\n/**\n * Encodes all characters in the input using HTML entities. This includes\n * characters that are valid ASCII characters in HTML documents, such as `#`.\n *\n * To get a more compact output, consider using the `encodeNonAsciiHTML`\n * function, which will only encode characters that are not valid in HTML\n * documents, as well as non-ASCII characters.\n *\n * If a character has no equivalent entity, a numeric hexadecimal reference\n * (eg. `&#xfc;`) will be used.\n */\nfunction encodeHTML(data) {\n  return encodeHTMLTrieRe(htmlReplacer, data);\n}\nexports.encodeHTML = encodeHTML;\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities. This function will not encode characters that\n * are valid in HTML documents, such as `#`.\n *\n * If a character has no equivalent entity, a numeric hexadecimal reference\n * (eg. `&#xfc;`) will be used.\n */\nfunction encodeNonAsciiHTML(data) {\n  return encodeHTMLTrieRe(escape_js_1.xmlReplacer, data);\n}\nexports.encodeNonAsciiHTML = encodeNonAsciiHTML;\nfunction encodeHTMLTrieRe(regExp, str) {\n  var ret = \"\";\n  var lastIdx = 0;\n  var match;\n  while ((match = regExp.exec(str)) !== null) {\n    var i = match.index;\n    ret += str.substring(lastIdx, i);\n    var char = str.charCodeAt(i);\n    var next = encode_html_js_1.default.get(char);\n    if (typeof next === \"object\") {\n      // We are in a branch. Try to match the next char.\n      if (i + 1 < str.length) {\n        var nextChar = str.charCodeAt(i + 1);\n        var value = typeof next.n === \"number\" ? next.n === nextChar ? next.o : undefined : next.n.get(nextChar);\n        if (value !== undefined) {\n          ret += value;\n          lastIdx = regExp.lastIndex += 1;\n          continue;\n        }\n      }\n      next = next.v;\n    }\n    // We might have a tree node without a value; skip and use a numeric entity.\n    if (next !== undefined) {\n      ret += next;\n      lastIdx = i + 1;\n    } else {\n      var cp = (0, escape_js_1.getCodePoint)(str, i);\n      ret += \"&#x\".concat(cp.toString(16), \";\");\n      // Increase by 1 if we have a surrogate pair\n      lastIdx = regExp.lastIndex += Number(cp !== char);\n    }\n  }\n  return ret + str.substr(lastIdx);\n}","map":{"version":3,"names":["encode_html_js_1","__importDefault","require","escape_js_1","htmlReplacer","encodeHTML","data","encodeHTMLTrieRe","exports","encodeNonAsciiHTML","xmlReplacer","regExp","str","ret","lastIdx","match","exec","i","index","substring","char","charCodeAt","next","default","get","length","nextChar","value","n","o","undefined","lastIndex","v","cp","getCodePoint","concat","toString","Number","substr"],"sources":["https://raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/encode.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;AAAA,IAAAA,gBAAA,GAAAC,eAAA,CAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAEA,IAAME,YAAY,GAAG,qCAAqC;AAE1D;;;;;;;;;;;AAWA,SAAgBC,UAAUA,CAACC,IAAY;EACnC,OAAOC,gBAAgB,CAACH,YAAY,EAAEE,IAAI,CAAC;AAC/C;AAFAE,OAAA,CAAAH,UAAA,GAAAA,UAAA;AAGA;;;;;;;;AAQA,SAAgBI,kBAAkBA,CAACH,IAAY;EAC3C,OAAOC,gBAAgB,CAACJ,WAAA,CAAAO,WAAW,EAAEJ,IAAI,CAAC;AAC9C;AAFAE,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AAIA,SAASF,gBAAgBA,CAACI,MAAc,EAAEC,GAAW;EACjD,IAAIC,GAAG,GAAG,EAAE;EACZ,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,KAAK;EAET,OAAO,CAACA,KAAK,GAAGJ,MAAM,CAACK,IAAI,CAACJ,GAAG,CAAC,MAAM,IAAI,EAAE;IACxC,IAAMK,CAAC,GAAGF,KAAK,CAACG,KAAK;IACrBL,GAAG,IAAID,GAAG,CAACO,SAAS,CAACL,OAAO,EAAEG,CAAC,CAAC;IAChC,IAAMG,IAAI,GAAGR,GAAG,CAACS,UAAU,CAACJ,CAAC,CAAC;IAC9B,IAAIK,IAAI,GAAGtB,gBAAA,CAAAuB,OAAQ,CAACC,GAAG,CAACJ,IAAI,CAAC;IAE7B,IAAI,OAAOE,IAAI,KAAK,QAAQ,EAAE;MAC1B;MACA,IAAIL,CAAC,GAAG,CAAC,GAAGL,GAAG,CAACa,MAAM,EAAE;QACpB,IAAMC,QAAQ,GAAGd,GAAG,CAACS,UAAU,CAACJ,CAAC,GAAG,CAAC,CAAC;QACtC,IAAMU,KAAK,GACP,OAAOL,IAAI,CAACM,CAAC,KAAK,QAAQ,GACpBN,IAAI,CAACM,CAAC,KAAKF,QAAQ,GACfJ,IAAI,CAACO,CAAC,GACNC,SAAS,GACbR,IAAI,CAACM,CAAC,CAACJ,GAAG,CAACE,QAAQ,CAAC;QAE9B,IAAIC,KAAK,KAAKG,SAAS,EAAE;UACrBjB,GAAG,IAAIc,KAAK;UACZb,OAAO,GAAGH,MAAM,CAACoB,SAAS,IAAI,CAAC;UAC/B;;;MAIRT,IAAI,GAAGA,IAAI,CAACU,CAAC;;IAGjB;IACA,IAAIV,IAAI,KAAKQ,SAAS,EAAE;MACpBjB,GAAG,IAAIS,IAAI;MACXR,OAAO,GAAGG,CAAC,GAAG,CAAC;KAClB,MAAM;MACH,IAAMgB,EAAE,GAAG,IAAA9B,WAAA,CAAA+B,YAAY,EAACtB,GAAG,EAAEK,CAAC,CAAC;MAC/BJ,GAAG,IAAI,MAAAsB,MAAA,CAAMF,EAAE,CAACG,QAAQ,CAAC,EAAE,CAAC,MAAG;MAC/B;MACAtB,OAAO,GAAGH,MAAM,CAACoB,SAAS,IAAIM,MAAM,CAACJ,EAAE,KAAKb,IAAI,CAAC;;;EAIzD,OAAOP,GAAG,GAAGD,GAAG,CAAC0B,MAAM,CAACxB,OAAO,CAAC;AACpC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
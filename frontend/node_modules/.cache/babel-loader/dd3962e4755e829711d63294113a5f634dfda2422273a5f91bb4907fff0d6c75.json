{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequence = exports.generate = exports.compile = exports.parse = void 0;\nvar parse_js_1 = require(\"./parse.js\");\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return parse_js_1.parse;\n  }\n});\nvar compile_js_1 = require(\"./compile.js\");\nObject.defineProperty(exports, \"compile\", {\n  enumerable: true,\n  get: function () {\n    return compile_js_1.compile;\n  }\n});\nObject.defineProperty(exports, \"generate\", {\n  enumerable: true,\n  get: function () {\n    return compile_js_1.generate;\n  }\n});\n/**\n * Parses and compiles a formula to a highly optimized function.\n * Combination of {@link parse} and {@link compile}.\n *\n * If the formula doesn't match any elements,\n * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n * Otherwise, a function accepting an _index_ is returned, which returns\n * whether or not the passed _index_ matches the formula.\n *\n * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n *\n * @param formula The formula to compile.\n * @example\n * const check = nthCheck(\"2n+3\");\n *\n * check(0); // `false`\n * check(1); // `false`\n * check(2); // `true`\n * check(3); // `false`\n * check(4); // `true`\n * check(5); // `false`\n * check(6); // `true`\n */\nfunction nthCheck(formula) {\n  return (0, compile_js_1.compile)((0, parse_js_1.parse)(formula));\n}\nexports.default = nthCheck;\n/**\n * Parses and compiles a formula to a generator that produces a sequence of indices.\n * Combination of {@link parse} and {@link generate}.\n *\n * @param formula The formula to compile.\n * @returns A function that produces a sequence of indices.\n * @example <caption>Always increasing</caption>\n *\n * ```js\n * const gen = nthCheck.sequence('2n+3')\n *\n * gen() // `1`\n * gen() // `3`\n * gen() // `5`\n * gen() // `8`\n * gen() // `11`\n * ```\n *\n * @example <caption>With end value</caption>\n *\n * ```js\n *\n * const gen = nthCheck.sequence('-2n+5');\n *\n * gen() // 0\n * gen() // 2\n * gen() // 4\n * gen() // null\n * ```\n */\nfunction sequence(formula) {\n  return (0, compile_js_1.generate)((0, parse_js_1.parse)(formula));\n}\nexports.sequence = sequence;","map":{"version":3,"names":["parse_js_1","require","Object","defineProperty","exports","enumerable","get","parse","compile_js_1","compile","generate","nthCheck","formula","default","sequence"],"sources":["https://raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,IAAAA,UAAA,GAAAC,OAAA;AAGSC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAHAN,UAAA,CAAAO,KAAK;EAAA;AAAA;AACd,IAAAC,YAAA,GAAAP,OAAA;AAEgBC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAFPE,YAAA,CAAAC,OAAO;EAAA;AAAA;AAESP,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,UAAA;EAAAC,GAAA,WAAAA,CAAA;IAAA,OAFPE,YAAA,CAAAE,QAAQ;EAAA;AAAA;AAI1B;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAAwBC,QAAQA,CAACC,OAAe;EAC5C,OAAO,IAAAJ,YAAA,CAAAC,OAAO,EAAC,IAAAT,UAAA,CAAAO,KAAK,EAACK,OAAO,CAAC,CAAC;AAClC;AAFAR,OAAA,CAAAS,OAAA,GAAAF,QAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,SAAgBG,QAAQA,CAACF,OAAe;EACpC,OAAO,IAAAJ,YAAA,CAAAE,QAAQ,EAAC,IAAAV,UAAA,CAAAO,KAAK,EAACK,OAAO,CAAC,CAAC;AACnC;AAFAR,OAAA,CAAAU,QAAA,GAAAA,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}